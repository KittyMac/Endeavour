import Foundation

// swiftlint:disable all

public extension EndeavourPamphlet.Public.Endeavour {
    static func EditorBundleJs() -> String {
    #if DEBUG
        let fileOnDiskPath = "/Volumes/Development/Development/chimerasw3/Endeavour/Resources/public/endeavour/editor.bundle.js"
        if let contents = try? String(contentsOf:URL(fileURLWithPath: fileOnDiskPath)) {
            if contents.hasPrefix("#define PAMPHLET_PREPROCESSOR") {
                do {
                    let task = Process()
                    task.executableURL = URL(fileURLWithPath: "/usr/local/bin/pamphlet")
                    task.arguments = ["preprocess", fileOnDiskPath]
                    let outputPipe = Pipe()
                    task.standardOutput = outputPipe
                    try task.run()
                    let outputData = outputPipe.fileHandleForReading.readDataToEndOfFile()
                    let output = String(decoding: outputData, as: UTF8.self)
                    return output
                } catch {
                    return "Failed to use /usr/local/bin/pamphlet to preprocess the requested file"
                }
            }
            return contents
        }
        return String()
    #else
        return uncompressedEditorBundleJs
    #endif
    }
    static func EditorBundleJsGzip() -> Data {
        return compressedEditorBundleJs
    }
}

private let uncompressedEditorBundleJs = ###"""
!function(){"use strict";let t="lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((t=>t?parseInt(t,36):1));for(let e=1;e<t.length;e++)t[e]+=t[e-1];function e(e){for(let i=1;i<t.length;i+=2)if(t[i]>e)return t[i-1]<=e;return!1}function i(t){return t>=127462&&t<=127487}function n(t,e,i=!0,n=!0){return(i?s:r)(t,e,n)}function s(t,n,s){if(n==t.length)return n;n&&o(t.charCodeAt(n))&&a(t.charCodeAt(n-1))&&n--;let r=f(t,n);for(n+=h(r);n<t.length;){let o=f(t,n);if(8205==r||8205==o||s&&e(o))n+=h(o),r=o;else{if(!i(o))break;{let e=0,s=n-2;for(;s>=0&&i(f(t,s));)e++,s-=2;if(e%2==0)break;n+=2}}}return n}function r(t,e,i){for(;e>0;){let n=s(t,e-2,i);if(n<e)return n;e--}return 0}function o(t){return t>=56320&&t<57344}function a(t){return t>=55296&&t<56320}function f(t,e){let i=t.charCodeAt(e);if(!a(i)||e+1==t.length)return i;let n=t.charCodeAt(e+1);return o(n)?n-56320+(i-55296<<10)+65536:i}function l(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10),56320+(1023&t)))}function h(t){return t<65536?1:2}function c(t,e,i=t.length){let s=0;for(let r=0;r<i;)9==t.charCodeAt(r)?(s+=e-s%e,r++):(s++,r=n(t,r));return s}function O(t,e,i,s){for(let s=0,r=0;;){if(r>=e)return s;if(s==t.length)break;r+=9==t.charCodeAt(s)?i-r%i:1,s=n(t,s)}return!0===s?-1:t.length}class u{constructor(){}lineAt(t){if(t<0||t>this.length)throw new RangeError(`Invalid position ${t} in document of length ${this.length}`);return this.lineInner(t,!1,1,0)}line(t){if(t<1||t>this.lines)throw new RangeError(`Invalid line number ${t} in ${this.lines}-line document`);return this.lineInner(t,!0,1,0)}replace(t,e,i){let n=[];return this.decompose(0,t,n,2),i.length&&i.decompose(0,i.length,n,3),this.decompose(e,this.length,n,1),g.from(n,this.length-(e-t)+i.length)}append(t){return this.replace(this.length,this.length,t)}slice(t,e=this.length){let i=[];return this.decompose(t,e,i,0),g.from(i,e-t)}eq(t){if(t==this)return!0;if(t.length!=this.length||t.lines!=this.lines)return!1;let e=this.scanIdentical(t,1),i=this.length-this.scanIdentical(t,-1),n=new m(this),s=new m(t);for(let t=e,r=e;;){if(n.next(t),s.next(t),t=0,n.lineBreak!=s.lineBreak||n.done!=s.done||n.value!=s.value)return!1;if(r+=n.value.length,n.done||r>=i)return!0}}iter(t=1){return new m(this,t)}iterRange(t,e=this.length){return new Q(this,t,e)}iterLines(t,e){let i;if(null==t)i=this.iter();else{null==e&&(e=this.lines+1);let n=this.line(t).from;i=this.iterRange(n,Math.max(n,e==this.lines+1?this.length:e<=1?0:this.line(e-1).to))}return new S(i)}toString(){return this.sliceString(0)}toJSON(){let t=[];return this.flatten(t),t}static of(t){if(0==t.length)throw new RangeError("A document must have at least one line");return 1!=t.length||t[0]?t.length<=32?new d(t):g.from(d.split(t,[])):u.empty}}class d extends u{constructor(t,e=function(t){let e=-1;for(let i of t)e+=i.length+1;return e}(t)){super(),this.text=t,this.length=e}get lines(){return this.text.length}get children(){return null}lineInner(t,e,i,n){for(let s=0;;s++){let r=this.text[s],o=n+r.length;if((e?i:o)>=t)return new b(n,o,i,r);n=o+1,i++}}decompose(t,e,i,n){let s=t<=0&&e>=this.length?this:new d($(this.text,t,e),Math.min(e,this.length)-Math.max(0,t));if(1&n){let t=i.pop(),e=p(s.text,t.text.slice(),0,s.length);if(e.length<=32)i.push(new d(e,t.length+s.length));else{let t=e.length>>1;i.push(new d(e.slice(0,t)),new d(e.slice(t)))}}else i.push(s)}replace(t,e,i){if(!(i instanceof d))return super.replace(t,e,i);let n=p(this.text,p(i.text,$(this.text,0,t)),e),s=this.length+i.length-(e-t);return n.length<=32?new d(n,s):g.from(d.split(n,[]),s)}sliceString(t,e=this.length,i="\n"){let n="";for(let s=0,r=0;s<=e&&r<this.text.length;r++){let o=this.text[r],a=s+o.length;s>t&&r&&(n+=i),t<a&&e>s&&(n+=o.slice(Math.max(0,t-s),e-s)),s=a+1}return n}flatten(t){for(let e of this.text)t.push(e)}scanIdentical(){return 0}static split(t,e){let i=[],n=-1;for(let s of t)i.push(s),n+=s.length+1,32==i.length&&(e.push(new d(i,n)),i=[],n=-1);return n>-1&&e.push(new d(i,n)),e}}class g extends u{constructor(t,e){super(),this.children=t,this.length=e,this.lines=0;for(let e of t)this.lines+=e.lines}lineInner(t,e,i,n){for(let s=0;;s++){let r=this.children[s],o=n+r.length,a=i+r.lines-1;if((e?a:o)>=t)return r.lineInner(t,e,i,n);n=o+1,i=a+1}}decompose(t,e,i,n){for(let s=0,r=0;r<=e&&s<this.children.length;s++){let o=this.children[s],a=r+o.length;if(t<=a&&e>=r){let s=n&((r<=t?1:0)|(a>=e?2:0));r>=t&&a<=e&&!s?i.push(o):o.decompose(t-r,e-r,i,s)}r=a+1}}replace(t,e,i){if(i.lines<this.lines)for(let n=0,s=0;n<this.children.length;n++){let r=this.children[n],o=s+r.length;if(t>=s&&e<=o){let a=r.replace(t-s,e-s,i),f=this.lines-r.lines+a.lines;if(a.lines<f>>4&&a.lines>f>>6){let s=this.children.slice();return s[n]=a,new g(s,this.length-(e-t)+i.length)}return super.replace(s,o,a)}s=o+1}return super.replace(t,e,i)}sliceString(t,e=this.length,i="\n"){let n="";for(let s=0,r=0;s<this.children.length&&r<=e;s++){let o=this.children[s],a=r+o.length;r>t&&s&&(n+=i),t<a&&e>r&&(n+=o.sliceString(t-r,e-r,i)),r=a+1}return n}flatten(t){for(let e of this.children)e.flatten(t)}scanIdentical(t,e){if(!(t instanceof g))return 0;let i=0,[n,s,r,o]=e>0?[0,0,this.children.length,t.children.length]:[this.children.length-1,t.children.length-1,-1,-1];for(;;n+=e,s+=e){if(n==r||s==o)return i;let a=this.children[n],f=t.children[s];if(a!=f)return i+a.scanIdentical(f,e);i+=a.length+1}}static from(t,e=t.reduce(((t,e)=>t+e.length+1),-1)){let i=0;for(let e of t)i+=e.lines;if(i<32){let i=[];for(let e of t)e.flatten(i);return new d(i,e)}let n=Math.max(32,i>>5),s=n<<1,r=n>>1,o=[],a=0,f=-1,l=[];function h(t){let e;if(t.lines>s&&t instanceof g)for(let e of t.children)h(e);else t.lines>r&&(a>r||!a)?(c(),o.push(t)):t instanceof d&&a&&(e=l[l.length-1])instanceof d&&t.lines+e.lines<=32?(a+=t.lines,f+=t.length+1,l[l.length-1]=new d(e.text.concat(t.text),e.length+1+t.length)):(a+t.lines>n&&c(),a+=t.lines,f+=t.length+1,l.push(t))}function c(){0!=a&&(o.push(1==l.length?l[0]:g.from(l,f)),f=-1,a=l.length=0)}for(let e of t)h(e);return c(),1==o.length?o[0]:new g(o,e)}}function p(t,e,i=0,n=1e9){for(let s=0,r=0,o=!0;r<t.length&&s<=n;r++){let a=t[r],f=s+a.length;f>=i&&(f>n&&(a=a.slice(0,n-s)),s<i&&(a=a.slice(i-s)),o?(e[e.length-1]+=a,o=!1):e.push(a)),s=f+1}return e}function $(t,e,i){return p(t,[""],e,i)}u.empty=new d([""],0);class m{constructor(t,e=1){this.dir=e,this.done=!1,this.lineBreak=!1,this.value="",this.nodes=[t],this.offsets=[e>0?1:(t instanceof d?t.text.length:t.children.length)<<1]}nextInner(t,e){for(this.done=this.lineBreak=!1;;){let i=this.nodes.length-1,n=this.nodes[i],s=this.offsets[i],r=s>>1,o=n instanceof d?n.text.length:n.children.length;if(r==(e>0?o:0)){if(0==i)return this.done=!0,this.value="",this;e>0&&this.offsets[i-1]++,this.nodes.pop(),this.offsets.pop()}else if((1&s)==(e>0?0:1)){if(this.offsets[i]+=e,0==t)return this.lineBreak=!0,this.value="\n",this;t--}else if(n instanceof d){let s=n.text[r+(e<0?-1:0)];if(this.offsets[i]+=e,s.length>Math.max(0,t))return this.value=0==t?s:e>0?s.slice(t):s.slice(0,s.length-t),this;t-=s.length}else{let s=n.children[r+(e<0?-1:0)];t>s.length?(t-=s.length,this.offsets[i]+=e):(e<0&&this.offsets[i]--,this.nodes.push(s),this.offsets.push(e>0?1:(s instanceof d?s.text.length:s.children.length)<<1))}}}next(t=0){return t<0&&(this.nextInner(-t,-this.dir),t=this.value.length),this.nextInner(t,this.dir)}}class Q{constructor(t,e,i){this.value="",this.done=!1,this.cursor=new m(t,e>i?-1:1),this.pos=e>i?t.length:0,this.from=Math.min(e,i),this.to=Math.max(e,i)}nextInner(t,e){if(e<0?this.pos<=this.from:this.pos>=this.to)return this.value="",this.done=!0,this;t+=Math.max(0,e<0?this.pos-this.to:this.from-this.pos);let i=e<0?this.pos-this.from:this.to-this.pos;t>i&&(t=i),i-=t;let{value:n}=this.cursor.next(t);return this.pos+=(n.length+t)*e,this.value=n.length<=i?n:e<0?n.slice(n.length-i):n.slice(0,i),this.done=!this.value,this}next(t=0){return t<0?t=Math.max(t,this.from-this.pos):t>0&&(t=Math.min(t,this.to-this.pos)),this.nextInner(t,this.cursor.dir)}get lineBreak(){return this.cursor.lineBreak&&""!=this.value}}class S{constructor(t){this.inner=t,this.afterBreak=!0,this.value="",this.done=!1}next(t=0){let{done:e,lineBreak:i,value:n}=this.inner.next(t);return e?(this.done=!0,this.value=""):i?this.afterBreak?this.value="":(this.afterBreak=!0,this.next()):(this.value=n,this.afterBreak=!1),this}get lineBreak(){return!1}}"undefined"!=typeof Symbol&&(u.prototype[Symbol.iterator]=function(){return this.iter()},m.prototype[Symbol.iterator]=Q.prototype[Symbol.iterator]=S.prototype[Symbol.iterator]=function(){return this});class b{constructor(t,e,i,n){this.from=t,this.to=e,this.number=i,this.text=n}get length(){return this.to-this.from}}const v=/\r\n?|\n/;var x=function(t){return t[t.Simple=0]="Simple",t[t.TrackDel=1]="TrackDel",t[t.TrackBefore=2]="TrackBefore",t[t.TrackAfter=3]="TrackAfter",t}(x||(x={}));class w{constructor(t){this.sections=t}get length(){let t=0;for(let e=0;e<this.sections.length;e+=2)t+=this.sections[e];return t}get newLength(){let t=0;for(let e=0;e<this.sections.length;e+=2){let i=this.sections[e+1];t+=i<0?this.sections[e]:i}return t}get empty(){return 0==this.sections.length||2==this.sections.length&&this.sections[1]<0}iterGaps(t){for(let e=0,i=0,n=0;e<this.sections.length;){let s=this.sections[e++],r=this.sections[e++];r<0?(t(i,n,s),n+=s):n+=r,i+=s}}iterChangedRanges(t,e=!1){k(this,t,e)}get invertedDesc(){let t=[];for(let e=0;e<this.sections.length;){let i=this.sections[e++],n=this.sections[e++];n<0?t.push(i,n):t.push(n,i)}return new w(t)}composeDesc(t){return this.empty?t:t.empty?this:R(this,t)}mapDesc(t,e=!1){return t.empty?this:W(this,t,e)}mapPos(t,e=-1,i=x.Simple){let n=0,s=0;for(let r=0;r<this.sections.length;){let o=this.sections[r++],a=this.sections[r++],f=n+o;if(a<0){if(f>t)return s+(t-n);s+=o}else{if(i!=x.Simple&&f>=t&&(i==x.TrackDel&&n<t&&f>t||i==x.TrackBefore&&n<t||i==x.TrackAfter&&f>t))return null;if(f>t||f==t&&e<0&&!o)return t==n||e<0?s:s+a;s+=a}n=f}if(t>n)throw new RangeError(`Position ${t} is out of range for changeset of length ${n}`);return s}touchesRange(t,e=t){for(let i=0,n=0;i<this.sections.length&&n<=e;){let s=n+this.sections[i++];if(this.sections[i++]>=0&&n<=e&&s>=t)return!(n<t&&s>e)||"cover";n=s}return!1}toString(){let t="";for(let e=0;e<this.sections.length;){let i=this.sections[e++],n=this.sections[e++];t+=(t?" ":"")+i+(n>=0?":"+n:"")}return t}toJSON(){return this.sections}static fromJSON(t){if(!Array.isArray(t)||t.length%2||t.some((t=>"number"!=typeof t)))throw new RangeError("Invalid JSON representation of ChangeDesc");return new w(t)}}class y extends w{constructor(t,e){super(t),this.inserted=e}apply(t){if(this.length!=t.length)throw new RangeError("Applying change set to a document with the wrong length");return k(this,((e,i,n,s,r)=>t=t.replace(n,n+(i-e),r)),!1),t}mapDesc(t,e=!1){return W(this,t,e,!0)}invert(t){let e=this.sections.slice(),i=[];for(let n=0,s=0;n<e.length;n+=2){let r=e[n],o=e[n+1];if(o>=0){e[n]=o,e[n+1]=r;let a=n>>1;for(;i.length<a;)i.push(u.empty);i.push(r?t.slice(s,s+r):u.empty)}s+=r}return new y(e,i)}compose(t){return this.empty?t:t.empty?this:R(this,t,!0)}map(t,e=!1){return t.empty?this:W(this,t,e,!0)}iterChanges(t,e=!1){k(this,t,e)}get desc(){return new w(this.sections)}filter(t){let e=[],i=[],n=[],s=new X(this);t:for(let r=0,o=0;;){let a=r==t.length?1e9:t[r++];for(;o<a||o==a&&0==s.len;){if(s.done)break t;let t=Math.min(s.len,a-o);T(n,t,-1);let r=-1==s.ins?-1:0==s.off?s.ins:0;T(e,t,r),r>0&&P(i,e,s.text),s.forward(t),o+=t}let f=t[r++];for(;o<f;){if(s.done)break t;let t=Math.min(s.len,f-o);T(e,t,-1),T(n,t,-1==s.ins?-1:0==s.off?s.ins:0),s.forward(t),o+=t}}return{changes:new y(e,i),filtered:new w(n)}}toJSON(){let t=[];for(let e=0;e<this.sections.length;e+=2){let i=this.sections[e],n=this.sections[e+1];n<0?t.push(i):0==n?t.push([i]):t.push([i].concat(this.inserted[e>>1].toJSON()))}return t}static of(t,e,i){let n=[],s=[],r=0,o=null;function a(t=!1){if(!t&&!n.length)return;r<e&&T(n,e-r,-1);let i=new y(n,s);o=o?o.compose(i.map(o)):i,n=[],s=[],r=0}return function t(f){if(Array.isArray(f))for(let e of f)t(e);else if(f instanceof y){if(f.length!=e)throw new RangeError(`Mismatched change set length (got ${f.length}, expected ${e})`);a(),o=o?o.compose(f.map(o)):f}else{let{from:t,to:o=t,insert:l}=f;if(t>o||t<0||o>e)throw new RangeError(`Invalid change range ${t} to ${o} (in doc of length ${e})`);let h=l?"string"==typeof l?u.of(l.split(i||v)):l:u.empty,c=h.length;if(t==o&&0==c)return;t<r&&a(),t>r&&T(n,t-r,-1),T(n,o-t,c),P(s,n,h),r=o}}(t),a(!o),o}static empty(t){return new y(t?[t,-1]:[],[])}static fromJSON(t){if(!Array.isArray(t))throw new RangeError("Invalid JSON representation of ChangeSet");let e=[],i=[];for(let n=0;n<t.length;n++){let s=t[n];if("number"==typeof s)e.push(s,-1);else{if(!Array.isArray(s)||"number"!=typeof s[0]||s.some(((t,e)=>e&&"string"!=typeof t)))throw new RangeError("Invalid JSON representation of ChangeSet");if(1==s.length)e.push(s[0],0);else{for(;i.length<n;)i.push(u.empty);i[n]=u.of(s.slice(1)),e.push(s[0],i[n].length)}}}return new y(e,i)}}function T(t,e,i,n=!1){if(0==e&&i<=0)return;let s=t.length-2;s>=0&&i<=0&&i==t[s+1]?t[s]+=e:0==e&&0==t[s]?t[s+1]+=i:n?(t[s]+=e,t[s+1]+=i):t.push(e,i)}function P(t,e,i){if(0==i.length)return;let n=e.length-2>>1;if(n<t.length)t[t.length-1]=t[t.length-1].append(i);else{for(;t.length<n;)t.push(u.empty);t.push(i)}}function k(t,e,i){let n=t.inserted;for(let s=0,r=0,o=0;o<t.sections.length;){let a=t.sections[o++],f=t.sections[o++];if(f<0)s+=a,r+=a;else{let l=s,h=r,c=u.empty;for(;l+=a,h+=f,f&&n&&(c=c.append(n[o-2>>1])),!(i||o==t.sections.length||t.sections[o+1]<0);)a=t.sections[o++],f=t.sections[o++];e(s,l,r,h,c),s=l,r=h}}}function W(t,e,i,n=!1){let s=[],r=n?[]:null,o=new X(t),a=new X(e);for(let t=0,e=0;;)if(-1==o.ins)t+=o.len,o.next();else if(-1==a.ins&&e<t){let i=Math.min(a.len,t-e);a.forward(i),T(s,i,-1),e+=i}else if(a.ins>=0&&(o.done||e<t||e==t&&(a.len<o.len||a.len==o.len&&!i))){for(T(s,a.ins,-1);t>e&&!o.done&&t+o.len<e+a.len;)t+=o.len,o.next();e+=a.len,a.next()}else{if(!(o.ins>=0)){if(o.done&&a.done)return r?new y(s,r):new w(s);throw new Error("Mismatched change set lengths")}{let i=0,n=t+o.len;for(;;)if(a.ins>=0&&e>t&&e+a.len<n)i+=a.ins,e+=a.len,a.next();else{if(!(-1==a.ins&&e<n))break;{let t=Math.min(a.len,n-e);i+=t,a.forward(t),e+=t}}T(s,i,o.ins),r&&P(r,s,o.text),t=n,o.next()}}}function R(t,e,i=!1){let n=[],s=i?[]:null,r=new X(t),o=new X(e);for(let t=!1;;){if(r.done&&o.done)return s?new y(n,s):new w(n);if(0==r.ins)T(n,r.len,0,t),r.next();else if(0!=o.len||o.done){if(r.done||o.done)throw new Error("Mismatched change set lengths");{let e=Math.min(r.len2,o.len),i=n.length;if(-1==r.ins){let i=-1==o.ins?-1:o.off?0:o.ins;T(n,e,i,t),s&&i&&P(s,n,o.text)}else-1==o.ins?(T(n,r.off?0:r.len,e,t),s&&P(s,n,r.textBit(e))):(T(n,r.off?0:r.len,o.off?0:o.ins,t),s&&!o.off&&P(s,n,o.text));t=(r.ins>e||o.ins>=0&&o.len>e)&&(t||n.length>i),r.forward2(e),o.forward(e)}}else T(n,0,o.ins,t),s&&P(s,n,o.text),o.next()}}class X{constructor(t){this.set=t,this.i=0,this.next()}next(){let{sections:t}=this.set;this.i<t.length?(this.len=t[this.i++],this.ins=t[this.i++]):(this.len=0,this.ins=-2),this.off=0}get done(){return-2==this.ins}get len2(){return this.ins<0?this.len:this.ins}get text(){let{inserted:t}=this.set,e=this.i-2>>1;return e>=t.length?u.empty:t[e]}textBit(t){let{inserted:e}=this.set,i=this.i-2>>1;return i>=e.length&&!t?u.empty:e[i].slice(this.off,null==t?void 0:this.off+t)}forward(t){t==this.len?this.next():(this.len-=t,this.off+=t)}forward2(t){-1==this.ins?this.forward(t):t==this.ins?this.next():(this.ins-=t,this.off+=t)}}class Z{constructor(t,e,i){this.from=t,this.to=e,this.flags=i}get anchor(){return 16&this.flags?this.to:this.from}get head(){return 16&this.flags?this.from:this.to}get empty(){return this.from==this.to}get assoc(){return 4&this.flags?-1:8&this.flags?1:0}get bidiLevel(){let t=3&this.flags;return 3==t?null:t}get goalColumn(){let t=this.flags>>5;return 33554431==t?void 0:t}map(t,e=-1){let i,n;return this.empty?i=n=t.mapPos(this.from,e):(i=t.mapPos(this.from,1),n=t.mapPos(this.to,-1)),i==this.from&&n==this.to?this:new Z(i,n,this.flags)}extend(t,e=t){if(t<=this.anchor&&e>=this.anchor)return Y.range(t,e);let i=Math.abs(t-this.anchor)>Math.abs(e-this.anchor)?t:e;return Y.range(this.anchor,i)}eq(t){return this.anchor==t.anchor&&this.head==t.head}toJSON(){return{anchor:this.anchor,head:this.head}}static fromJSON(t){if(!t||"number"!=typeof t.anchor||"number"!=typeof t.head)throw new RangeError("Invalid JSON representation for SelectionRange");return Y.range(t.anchor,t.head)}}class Y{constructor(t,e=0){this.ranges=t,this.mainIndex=e}map(t,e=-1){return t.empty?this:Y.create(this.ranges.map((i=>i.map(t,e))),this.mainIndex)}eq(t){if(this.ranges.length!=t.ranges.length||this.mainIndex!=t.mainIndex)return!1;for(let e=0;e<this.ranges.length;e++)if(!this.ranges[e].eq(t.ranges[e]))return!1;return!0}get main(){return this.ranges[this.mainIndex]}asSingle(){return 1==this.ranges.length?this:new Y([this.main])}addRange(t,e=!0){return Y.create([t].concat(this.ranges),e?0:this.mainIndex+1)}replaceRange(t,e=this.mainIndex){let i=this.ranges.slice();return i[e]=t,Y.create(i,this.mainIndex)}toJSON(){return{ranges:this.ranges.map((t=>t.toJSON())),main:this.mainIndex}}static fromJSON(t){if(!t||!Array.isArray(t.ranges)||"number"!=typeof t.main||t.main>=t.ranges.length)throw new RangeError("Invalid JSON representation for EditorSelection");return new Y(t.ranges.map((t=>Z.fromJSON(t))),t.main)}static single(t,e=t){return new Y([Y.range(t,e)],0)}static create(t,e=0){if(0==t.length)throw new RangeError("A selection needs at least one range");for(let i=0,n=0;n<t.length;n++){let s=t[n];if(s.empty?s.from<=i:s.from<i)return C(t.slice(),e);i=s.to}return new Y(t,e)}static cursor(t,e=0,i,n){return new Z(t,t,(0==e?0:e<0?4:8)|(null==i?3:Math.min(2,i))|(null!=n?n:33554431)<<5)}static range(t,e,i){let n=(null!=i?i:33554431)<<5;return e<t?new Z(e,t,24|n):new Z(t,e,n|(e>t?4:0))}}function C(t,e=0){let i=t[e];t.sort(((t,e)=>t.from-e.from)),e=t.indexOf(i);for(let i=1;i<t.length;i++){let n=t[i],s=t[i-1];if(n.empty?n.from<=s.to:n.from<s.to){let r=s.from,o=Math.max(n.to,s.to);i<=e&&e--,t.splice(--i,2,n.anchor>n.head?Y.range(o,r):Y.range(r,o))}}return new Y(t,e)}function V(t,e){for(let i of t.ranges)if(i.to>e)throw new RangeError("Selection points outside of document")}let j=0;class U{constructor(t,e,i,n,s){this.combine=t,this.compareInput=e,this.compare=i,this.isStatic=n,this.extensions=s,this.id=j++,this.default=t([])}static define(t={}){return new U(t.combine||(t=>t),t.compareInput||((t,e)=>t===e),t.compare||(t.combine?(t,e)=>t===e:J),!!t.static,t.enables)}of(t){return new M([],this,0,t)}compute(t,e){if(this.isStatic)throw new Error("Can't compute a static facet");return new M(t,this,1,e)}computeN(t,e){if(this.isStatic)throw new Error("Can't compute a static facet");return new M(t,this,2,e)}from(t,e){return e||(e=t=>t),this.compute([t],(i=>e(i.field(t))))}}function J(t,e){return t==e||t.length==e.length&&t.every(((t,i)=>t===e[i]))}class M{constructor(t,e,i,n){this.dependencies=t,this.facet=e,this.type=i,this.value=n,this.id=j++}dynamicSlot(t){var e;let i=this.value,n=this.facet.compareInput,s=this.id,r=t[s]>>1,o=2==this.type,a=!1,f=!1,l=[];for(let i of this.dependencies)"doc"==i?a=!0:"selection"==i?f=!0:0==(1&(null!==(e=t[i.id])&&void 0!==e?e:1))&&l.push(t[i.id]);return{create:t=>(t.values[r]=i(t),1),update(t,e){if(a&&e.docChanged||f&&(e.docChanged||e.selection)||l.some((e=>(1&et(t,e))>0))){let e=i(t);if(o?!D(e,t.values[r],n):!n(e,t.values[r]))return t.values[r]=e,1}return 0},reconfigure(t,e){let a=i(t),f=e.config.address[s];if(null!=f){let i=it(e,f);if(o?D(a,i,n):n(a,i))return t.values[r]=i,0}return t.values[r]=a,1}}}}function D(t,e,i){if(t.length!=e.length)return!1;for(let n=0;n<t.length;n++)if(!i(t[n],e[n]))return!1;return!0}function G(t,e,i){let n=i.map((e=>t[e.id])),s=i.map((t=>t.type)),r=n.filter((t=>!(1&t))),o=t[e.id]>>1;function a(t){let i=[];for(let e=0;e<n.length;e++){let r=it(t,n[e]);if(2==s[e])for(let t of r)i.push(t);else i.push(r)}return e.combine(i)}return{create(t){for(let e of n)et(t,e);return t.values[o]=a(t),1},update(t,i){if(!r.some((e=>1&et(t,e))))return 0;let n=a(t);return e.compare(n,t.values[o])?0:(t.values[o]=n,1)},reconfigure(t,s){let r=n.some((e=>1&et(t,e))),f=s.config.facets[e.id],l=s.facet(e);if(f&&!r&&J(i,f))return t.values[o]=l,0;let h=a(t);return e.compare(h,l)?(t.values[o]=l,0):(t.values[o]=h,1)}}}const A=U.define({static:!0});class q{constructor(t,e,i,n,s){this.id=t,this.createF=e,this.updateF=i,this.compareF=n,this.spec=s,this.provides=void 0}static define(t){let e=new q(j++,t.create,t.update,t.compare||((t,e)=>t===e),t);return t.provide&&(e.provides=t.provide(e)),e}create(t){let e=t.facet(A).find((t=>t.field==this));return((null==e?void 0:e.create)||this.createF)(t)}slot(t){let e=t[this.id]>>1;return{create:t=>(t.values[e]=this.create(t),1),update:(t,i)=>{let n=t.values[e],s=this.updateF(n,i);return this.compareF(n,s)?0:(t.values[e]=s,1)},reconfigure:(t,i)=>null!=i.config.address[this.id]?(t.values[e]=i.field(this),0):(t.values[e]=this.create(t),1)}}init(t){return[this,A.of({field:this,create:t})]}get extension(){return this}}const I=4,z=3,_=2,B=1,F=0;function E(t){return e=>new L(e,t)}const N={lowest:E(I),low:E(z),default:E(_),high:E(B),highest:E(F),fallback:E(I),extend:E(B),override:E(F)};class L{constructor(t,e){this.inner=t,this.prec=e}}class K{of(t){return new H(this,t)}reconfigure(t){return K.reconfigure.of({compartment:this,extension:t})}get(t){return t.config.compartments.get(this)}}class H{constructor(t,e){this.compartment=t,this.inner=e}}class tt{constructor(t,e,i,n,s,r){for(this.base=t,this.compartments=e,this.dynamicSlots=i,this.address=n,this.staticValues=s,this.facets=r,this.statusTemplate=[];this.statusTemplate.length<i.length;)this.statusTemplate.push(0)}staticFacet(t){let e=this.address[t.id];return null==e?t.default:this.staticValues[e>>1]}static resolve(t,e,i){let n=[],s=Object.create(null),r=new Map;for(let i of function(t,e,i){let n=[[],[],[],[],[]],s=new Map;function r(t,o){let a=s.get(t);if(null!=a){if(a>=o)return;let e=n[a].indexOf(t);e>-1&&n[a].splice(e,1),t instanceof H&&i.delete(t.compartment)}if(s.set(t,o),Array.isArray(t))for(let e of t)r(e,o);else if(t instanceof H){if(i.has(t.compartment))throw new RangeError("Duplicate use of compartment in extensions");let n=e.get(t.compartment)||t.inner;i.set(t.compartment,n),r(n,o)}else if(t instanceof L)r(t.inner,t.prec);else if(t instanceof q)n[o].push(t),t.provides&&r(t.provides,o);else if(t instanceof M)n[o].push(t),t.facet.extensions&&r(t.facet.extensions,o);else{let e=t.extension;if(!e)throw new Error(`Unrecognized extension value in extension set (${t}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);r(e,o)}}return r(t,_),n.reduce(((t,e)=>t.concat(e)))}(t,e,r))i instanceof q?n.push(i):(s[i.facet.id]||(s[i.facet.id]=[])).push(i);let o=Object.create(null),a=[],f=[];for(let t of n)o[t.id]=f.length<<1,f.push((e=>t.slot(e)));let l=null==i?void 0:i.config.facets;for(let t in s){let e=s[t],n=e[0].facet,r=l&&l[t]||[];if(e.every((t=>0==t.type)))if(o[n.id]=a.length<<1|1,J(r,e))a.push(i.facet(n));else{let t=n.combine(e.map((t=>t.value)));a.push(i&&n.compare(t,i.facet(n))?i.facet(n):t)}else{for(let t of e)0==t.type?(o[t.id]=a.length<<1|1,a.push(t.value)):(o[t.id]=f.length<<1,f.push((e=>t.dynamicSlot(e))));o[n.id]=f.length<<1,f.push((t=>G(t,n,e)))}}let h=f.map((t=>t(o)));return new tt(t,r,h,o,a,s)}}function et(t,e){if(1&e)return 2;let i=e>>1,n=t.status[i];if(4==n)throw new Error("Cyclic dependency between fields and/or facets");if(2&n)return n;t.status[i]=4;let s=t.computeSlot(t,t.config.dynamicSlots[i]);return t.status[i]=2|s}function it(t,e){return 1&e?t.config.staticValues[e>>1]:t.values[e>>1]}const nt=U.define(),st=U.define({combine:t=>t.some((t=>t)),static:!0}),rt=U.define({combine:t=>t.length?t[0]:void 0,static:!0}),ot=U.define(),at=U.define(),ft=U.define(),lt=U.define({combine:t=>!!t.length&&t[0]});class ht{constructor(t,e){this.type=t,this.value=e}static define(){return new ct}}class ct{of(t){return new ht(this,t)}}class Ot{constructor(t){this.map=t}of(t){return new ut(this,t)}}class ut{constructor(t,e){this.type=t,this.value=e}map(t){let e=this.type.map(this.value,t);return void 0===e?void 0:e==this.value?this:new ut(this.type,e)}is(t){return this.type==t}static define(t={}){return new Ot(t.map||(t=>t))}static mapEffects(t,e){if(!t.length)return t;let i=[];for(let n of t){let t=n.map(e);t&&i.push(t)}return i}}ut.reconfigure=ut.define(),ut.appendConfig=ut.define();class dt{constructor(t,e,i,n,s,r){this.startState=t,this.changes=e,this.selection=i,this.effects=n,this.annotations=s,this.scrollIntoView=r,this._doc=null,this._state=null,i&&V(i,e.newLength),s.some((t=>t.type==dt.time))||(this.annotations=s.concat(dt.time.of(Date.now())))}get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc))}get newSelection(){return this.selection||this.startState.selection.map(this.changes)}get state(){return this._state||this.startState.applyTransaction(this),this._state}annotation(t){for(let e of this.annotations)if(e.type==t)return e.value}get docChanged(){return!this.changes.empty}get reconfigured(){return this.startState.config!=this.state.config}isUserEvent(t){let e=this.annotation(dt.userEvent);return!(!e||!(e==t||e.length>t.length&&e.slice(0,t.length)==t&&"."==e[t.length]))}}function gt(t,e){let i=[];for(let n=0,s=0;;){let r,o;if(n<t.length&&(s==e.length||e[s]>=t[n]))r=t[n++],o=t[n++];else{if(!(s<e.length))return i;r=e[s++],o=e[s++]}!i.length||i[i.length-1]<r?i.push(r,o):i[i.length-1]<o&&(i[i.length-1]=o)}}function pt(t,e,i){var n;let s,r,o;return i?(s=e.changes,r=y.empty(e.changes.length),o=t.changes.compose(e.changes)):(s=e.changes.map(t.changes),r=t.changes.mapDesc(e.changes,!0),o=t.changes.compose(s)),{changes:o,selection:e.selection?e.selection.map(r):null===(n=t.selection)||void 0===n?void 0:n.map(s),effects:ut.mapEffects(t.effects,s).concat(ut.mapEffects(e.effects,r)),annotations:t.annotations.length?t.annotations.concat(e.annotations):e.annotations,scrollIntoView:t.scrollIntoView||e.scrollIntoView}}function $t(t,e,i){let n=e.selection,s=St(e.annotations);return e.userEvent&&(s=s.concat(dt.userEvent.of(e.userEvent))),{changes:e.changes instanceof y?e.changes:y.of(e.changes||[],i,t.facet(rt)),selection:n&&(n instanceof Y?n:Y.single(n.anchor,n.head)),effects:St(e.effects),annotations:s,scrollIntoView:!!e.scrollIntoView}}function mt(t,e,i){let n=$t(t,e.length?e[0]:{},t.doc.length);e.length&&!1===e[0].filter&&(i=!1);for(let s=1;s<e.length;s++){!1===e[s].filter&&(i=!1);let r=!!e[s].sequential;n=pt(n,$t(t,e[s],r?n.changes.newLength:t.doc.length),r)}let s=new dt(t,n.changes,n.selection,n.effects,n.annotations,n.scrollIntoView);return function(t){let e=t.startState,i=e.facet(ft),n=t;for(let s=i.length-1;s>=0;s--){let r=i[s](t);r&&Object.keys(r).length&&(n=pt(t,$t(e,r,t.changes.newLength),!0))}return n==t?t:new dt(e,t.changes,t.selection,n.effects,n.annotations,n.scrollIntoView)}(i?function(t){let e=t.startState,i=!0;for(let n of e.facet(ot)){let e=n(t);if(!1===e){i=!1;break}Array.isArray(e)&&(i=!0===i?e:gt(i,e))}if(!0!==i){let n,s;if(!1===i)s=t.changes.invertedDesc,n=y.empty(e.doc.length);else{let e=t.changes.filter(i);n=e.changes,s=e.filtered.invertedDesc}t=new dt(e,n,t.selection&&t.selection.map(s),ut.mapEffects(t.effects,s),t.annotations,t.scrollIntoView)}let n=e.facet(at);for(let i=n.length-1;i>=0;i--){let s=n[i](t);t=s instanceof dt?s:Array.isArray(s)&&1==s.length&&s[0]instanceof dt?s[0]:mt(e,St(s),!1)}return t}(s):s)}dt.time=ht.define(),dt.userEvent=ht.define(),dt.addToHistory=ht.define(),dt.remote=ht.define();const Qt=[];function St(t){return null==t?Qt:Array.isArray(t)?t:[t]}var bt=function(t){return t[t.Word=0]="Word",t[t.Space=1]="Space",t[t.Other=2]="Other",t}(bt||(bt={}));const vt=/[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;let xt;try{xt=new RegExp("[\\p{Alphabetic}\\p{Number}_]","u")}catch(t){}function wt(t){return e=>{if(!/\S/.test(e))return bt.Space;if(function(t){if(xt)return xt.test(t);for(let e=0;e<t.length;e++){let i=t[e];if(/\w/.test(i)||i>"\x80"&&(i.toUpperCase()!=i.toLowerCase()||vt.test(i)))return!0}return!1}(e))return bt.Word;for(let i=0;i<t.length;i++)if(e.indexOf(t[i])>-1)return bt.Word;return bt.Other}}class yt{constructor(t,e,i,n,s,r){this.config=t,this.doc=e,this.selection=i,this.values=n,this.status=t.statusTemplate.slice(),this.computeSlot=s,r&&(r._state=this);for(let t=0;t<this.config.dynamicSlots.length;t++)et(this,t<<1);this.computeSlot=null}field(t,e=!0){let i=this.config.address[t.id];if(null!=i)return et(this,i),it(this,i);if(e)throw new RangeError("Field is not present in this state")}update(...t){return mt(this,t,!0)}applyTransaction(t){let e,i=this.config,{base:n,compartments:s}=i;for(let e of t.effects)e.is(K.reconfigure)?(i&&(s=new Map,i.compartments.forEach(((t,e)=>s.set(e,t))),i=null),s.set(e.value.compartment,e.value.extension)):e.is(ut.reconfigure)?(i=null,n=e.value):e.is(ut.appendConfig)&&(i=null,n=St(n).concat(e.value));if(i)e=t.startState.values.slice();else{i=tt.resolve(n,s,this),e=new yt(i,this.doc,this.selection,i.dynamicSlots.map((()=>null)),((t,e)=>e.reconfigure(t,this)),null).values}new yt(i,t.newDoc,t.newSelection,e,((e,i)=>i.update(e,t)),t)}replaceSelection(t){return"string"==typeof t&&(t=this.toText(t)),this.changeByRange((e=>({changes:{from:e.from,to:e.to,insert:t},range:Y.cursor(e.from+t.length)})))}changeByRange(t){let e=this.selection,i=t(e.ranges[0]),n=this.changes(i.changes),s=[i.range],r=St(i.effects);for(let i=1;i<e.ranges.length;i++){let o=t(e.ranges[i]),a=this.changes(o.changes),f=a.map(n);for(let t=0;t<i;t++)s[t]=s[t].map(f);let l=n.mapDesc(a,!0);s.push(o.range.map(l)),n=n.compose(f),r=ut.mapEffects(r,f).concat(ut.mapEffects(St(o.effects),l))}return{changes:n,selection:Y.create(s,e.mainIndex),effects:r}}changes(t=[]){return t instanceof y?t:y.of(t,this.doc.length,this.facet(yt.lineSeparator))}toText(t){return u.of(t.split(this.facet(yt.lineSeparator)||v))}sliceDoc(t=0,e=this.doc.length){return this.doc.sliceString(t,e,this.lineBreak)}facet(t){let e=this.config.address[t.id];return null==e?t.default:(et(this,e),it(this,e))}toJSON(t){let e={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(t)for(let i in t){let n=t[i];n instanceof q&&(e[i]=n.spec.toJSON(this.field(t[i]),this))}return e}static fromJSON(t,e={},i){if(!t||"string"!=typeof t.doc)throw new RangeError("Invalid JSON representation for EditorState");let n=[];if(i)for(let e in i){let s=i[e],r=t[e];n.push(s.init((t=>s.spec.fromJSON(r,t))))}return yt.create({doc:t.doc,selection:Y.fromJSON(t.selection),extensions:e.extensions?n.concat([e.extensions]):n})}static create(t={}){let e=tt.resolve(t.extensions||[],new Map),i=t.doc instanceof u?t.doc:u.of((t.doc||"").split(e.staticFacet(yt.lineSeparator)||v)),n=t.selection?t.selection instanceof Y?t.selection:Y.single(t.selection.anchor,t.selection.head):Y.single(0);return V(n,i.length),e.staticFacet(st)||(n=n.asSingle()),new yt(e,i,n,e.dynamicSlots.map((()=>null)),((t,e)=>e.create(t)),null)}get tabSize(){return this.facet(yt.tabSize)}get lineBreak(){return this.facet(yt.lineSeparator)||"\n"}get readOnly(){return this.facet(lt)}phrase(t){for(let e of this.facet(yt.phrases))if(Object.prototype.hasOwnProperty.call(e,t))return e[t];return t}languageDataAt(t,e,i=-1){let n=[];for(let s of this.facet(nt))for(let r of s(this,e,i))Object.prototype.hasOwnProperty.call(r,t)&&n.push(r[t]);return n}charCategorizer(t){return wt(this.languageDataAt("wordChars",t).join(""))}wordAt(t){let{text:e,from:i,length:s}=this.doc.lineAt(t),r=this.charCategorizer(t),o=t-i,a=t-i;for(;o>0;){let t=n(e,o,!1);if(r(e.slice(t,o))!=bt.Word)break;o=t}for(;a<s;){let t=n(e,a);if(r(e.slice(a,t))!=bt.Word)break;a=t}return o==a?null:Y.range(o+i,a+i)}}function Tt(t,e,i={}){let n={};for(let e of t)for(let t of Object.keys(e)){let s=e[t],r=n[t];if(void 0===r)n[t]=s;else if(r===s||void 0===s);else{if(!Object.hasOwnProperty.call(i,t))throw new Error("Config merge conflict for field "+t);n[t]=i[t](r,s)}}for(let t in e)void 0===n[t]&&(n[t]=e[t]);return n}yt.allowMultipleSelections=st,yt.tabSize=U.define({combine:t=>t.length?t[0]:4}),yt.lineSeparator=rt,yt.readOnly=lt,yt.phrases=U.define(),yt.languageData=nt,yt.changeFilter=ot,yt.transactionFilter=at,yt.transactionExtender=ft,K.reconfigure=ut.define();class Pt{constructor(t,e,i,n){this.origin=t,this.changes=e,this.effects=i,this.clientID=n}}class kt{constructor(t,e){this.version=t,this.unconfirmed=e}}const Wt=U.define({combine(t){let e=Tt(t,{startVersion:0,clientID:null,sharedEffects:()=>[]});return null==e.clientID&&(e.clientID=t.length&&t[0].generatedID||""),e}}),Rt=ht.define(),Xt=q.define({create:t=>new kt(t.facet(Wt).startVersion,[]),update(t,e){let i=e.annotation(Rt);if(i)return i;let{sharedEffects:n,clientID:s}=e.startState.facet(Wt),r=n(e);return r.length||!e.changes.empty?new kt(t.version,t.unconfirmed.concat(new Pt(e,e.changes,r,s))):t}});function Zt(t={}){return[Xt,Wt.of(Object.assign({generatedID:Math.floor(1e9*Math.random()).toString(36)},t))]}function Yt(t){return t.field(Xt).unconfirmed}const Ct="undefined"==typeof Symbol?"__\u037c":Symbol.for("\u037c"),Vt="undefined"==typeof Symbol?"__styleSet"+Math.floor(1e8*Math.random()):Symbol("styleSet"),jt="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:{};class Ut{constructor(t,e){this.rules=[];let{finish:i}=e||{};function n(t){return/^@/.test(t)?[t]:t.split(/,\s*/)}function s(t,e,r,o){let a=[],f=/^@(\w+)\b/.exec(t[0]),l=f&&"keyframes"==f[1];if(f&&null==e)return r.push(t[0]+";");for(let i in e){let o=e[i];if(/&/.test(i))s(i.split(/,\s*/).map((e=>t.map((t=>e.replace(/&/,t))))).reduce(((t,e)=>t.concat(e))),o,r);else if(o&&"object"==typeof o){if(!f)throw new RangeError("The value of a property ("+i+") should be a primitive value.");s(n(i),o,a,l)}else null!=o&&a.push(i.replace(/_.*/,"").replace(/[A-Z]/g,(t=>"-"+t.toLowerCase()))+": "+o+";")}(a.length||l)&&r.push((!i||f||o?t:t.map(i)).join(", ")+" {"+a.join(" ")+"}")}for(let e in t)s(n(e),t[e],this.rules)}getRules(){return this.rules.join("\n")}static newName(){let t=jt[Ct]||1;return jt[Ct]=t+1,"\u037c"+t.toString(36)}static mount(t,e){(t[Vt]||new Mt(t)).mount(Array.isArray(e)?e:[e])}}let Jt=null;class Mt{constructor(t){if(!t.head&&t.adoptedStyleSheets&&"undefined"!=typeof CSSStyleSheet){if(Jt)return t.adoptedStyleSheets=[Jt.sheet].concat(t.adoptedStyleSheets),t[Vt]=Jt;this.sheet=new CSSStyleSheet,t.adoptedStyleSheets=[this.sheet].concat(t.adoptedStyleSheets),Jt=this}else{this.styleTag=(t.ownerDocument||t).createElement("style");let e=t.head||t;e.insertBefore(this.styleTag,e.firstChild)}this.modules=[],t[Vt]=this}mount(t){let e=this.sheet,i=0,n=0;for(let s=0;s<t.length;s++){let r=t[s],o=this.modules.indexOf(r);if(o<n&&o>-1&&(this.modules.splice(o,1),n--,o=-1),-1==o){if(this.modules.splice(n++,0,r),e)for(let t=0;t<r.rules.length;t++)e.insertRule(r.rules[t],i++)}else{for(;n<o;)i+=this.modules[n++].rules.length;i+=r.rules.length,n++}}if(!e){let t="";for(let e=0;e<this.modules.length;e++)t+=this.modules[e].getRules()+"\n";this.styleTag.textContent=t}}}class Dt{eq(t){return this==t}range(t,e=t){return new Gt(t,e,this)}}Dt.prototype.startSide=Dt.prototype.endSide=0,Dt.prototype.point=!1,Dt.prototype.mapMode=x.TrackDel;class Gt{constructor(t,e,i){this.from=t,this.to=e,this.value=i}}function At(t,e){return t.from-e.from||t.value.startSide-e.value.startSide}class qt{constructor(t,e,i,n){this.from=t,this.to=e,this.value=i,this.maxPoint=n}get length(){return this.to[this.to.length-1]}findIndex(t,e,i,n=0){let s=i?this.to:this.from;for(let r=n,o=s.length;;){if(r==o)return r;let n=r+o>>1,a=s[n]-t||(i?this.value[n].endSide:this.value[n].startSide)-e;if(n==r)return a>=0?r:o;a>=0?o=n:r=n+1}}between(t,e,i,n){for(let s=this.findIndex(e,-1e9,!0),r=this.findIndex(i,1e9,!1,s);s<r;s++)if(!1===n(this.from[s]+t,this.to[s]+t,this.value[s]))return!1}map(t,e){let i=[],n=[],s=[],r=-1,o=-1;for(let a=0;a<this.value.length;a++){let f,l,h=this.value[a],c=this.from[a]+t,O=this.to[a]+t;if(c==O){let t=e.mapPos(c,h.startSide,h.mapMode);if(null==t)continue;if(f=l=t,h.startSide!=h.endSide&&(l=e.mapPos(c,h.endSide),l<f))continue}else if(f=e.mapPos(c,h.startSide),l=e.mapPos(O,h.endSide),f>l||f==l&&h.startSide>0&&h.endSide<=0)continue;(l-f||h.endSide-h.startSide)<0||(r<0&&(r=f),h.point&&(o=Math.max(o,l-f)),i.push(h),n.push(f-r),s.push(l-r))}return{mapped:i.length?new qt(n,s,i,o):null,pos:r}}}class It{constructor(t,e,i=It.empty,n){this.chunkPos=t,this.chunk=e,this.nextLayer=i,this.maxPoint=n}get length(){let t=this.chunk.length-1;return t<0?0:Math.max(this.chunkEnd(t),this.nextLayer.length)}get size(){if(this.isEmpty)return 0;let t=this.nextLayer.size;for(let e of this.chunk)t+=e.value.length;return t}chunkEnd(t){return this.chunkPos[t]+this.chunk[t].length}update(t){let{add:e=[],sort:i=!1,filterFrom:n=0,filterTo:s=this.length}=t,r=t.filter;if(0==e.length&&!r)return this;if(i&&(e=e.slice().sort(At)),this.isEmpty)return e.length?It.of(e):this;let o=new Bt(this,null,-1).goto(0),a=0,f=[],l=new zt;for(;o.value||a<e.length;)if(a<e.length&&(o.from-e[a].from||o.startSide-e[a].value.startSide)>=0){let t=e[a++];l.addInner(t.from,t.to,t.value)||f.push(t)}else 1==o.rangeIndex&&o.chunkIndex<this.chunk.length&&(a==e.length||this.chunkEnd(o.chunkIndex)<e[a].from)&&(!r||n>this.chunkEnd(o.chunkIndex)||s<this.chunkPos[o.chunkIndex])&&l.addChunk(this.chunkPos[o.chunkIndex],this.chunk[o.chunkIndex])?o.nextChunk():((!r||n>o.to||s<o.from||r(o.from,o.to,o.value))&&(l.addInner(o.from,o.to,o.value)||f.push(new Gt(o.from,o.to,o.value))),o.next());return l.finishInner(this.nextLayer.isEmpty&&!f.length?It.empty:this.nextLayer.update({add:f,filter:r,filterFrom:n,filterTo:s}))}map(t){if(t.empty||this.isEmpty)return this;let e=[],i=[],n=-1;for(let s=0;s<this.chunk.length;s++){let r=this.chunkPos[s],o=this.chunk[s],a=t.touchesRange(r,r+o.length);if(!1===a)n=Math.max(n,o.maxPoint),e.push(o),i.push(t.mapPos(r));else if(!0===a){let{mapped:s,pos:a}=o.map(r,t);s&&(n=Math.max(n,s.maxPoint),e.push(s),i.push(a))}}let s=this.nextLayer.map(t);return 0==e.length?s:new It(i,e,s,n)}between(t,e,i){if(!this.isEmpty){for(let n=0;n<this.chunk.length;n++){let s=this.chunkPos[n],r=this.chunk[n];if(e>=s&&t<=s+r.length&&!1===r.between(s,t-s,e-s,i))return}this.nextLayer.between(t,e,i)}}iter(t=0){return Ft.from([this]).goto(t)}get isEmpty(){return this.nextLayer==this}static iter(t,e=0){return Ft.from(t).goto(e)}static compare(t,e,i,n,s=-1){let r=t.filter((t=>t.maxPoint>0||!t.isEmpty&&t.maxPoint>=s)),o=e.filter((t=>t.maxPoint>0||!t.isEmpty&&t.maxPoint>=s)),a=_t(r,o,i),f=new Nt(r,a,s),l=new Nt(o,a,s);i.iterGaps(((t,e,i)=>Lt(f,t,l,e,i,n))),i.empty&&0==i.length&&Lt(f,0,l,0,0,n)}static eq(t,e,i=0,n){null==n&&(n=1e9);let s=t.filter((t=>!t.isEmpty&&e.indexOf(t)<0)),r=e.filter((e=>!e.isEmpty&&t.indexOf(e)<0));if(s.length!=r.length)return!1;if(!s.length)return!0;let o=_t(s,r),a=new Nt(s,o,0).goto(i),f=new Nt(r,o,0).goto(i);for(;;){if(a.to!=f.to||!Kt(a.active,f.active)||a.point&&(!f.point||!a.point.eq(f.point)))return!1;if(a.to>n)return!0;a.next(),f.next()}}static spans(t,e,i,n,s=-1){var r;let o=new Nt(t,null,s,null===(r=n.filterPoint)||void 0===r?void 0:r.bind(n)).goto(e),a=e,f=o.openStart;for(;;){let t=Math.min(o.to,i);if(o.point?(n.point(a,t,o.point,o.activeForPoint(o.to),f),f=o.openEnd(t)+(o.to>t?1:0)):t>a&&(n.span(a,t,o.active,f),f=o.openEnd(t)),o.to>i)break;a=o.to,o.next()}return f}static of(t,e=!1){let i=new zt;for(let n of t instanceof Gt?[t]:e?function(t){if(t.length>1)for(let e=t[0],i=1;i<t.length;i++){let n=t[i];if(At(e,n)>0)return t.slice().sort(At);e=n}return t}(t):t)i.add(n.from,n.to,n.value);return i.finish()}}It.empty=new It([],[],null,-1),It.empty.nextLayer=It.empty;class zt{constructor(){this.chunks=[],this.chunkPos=[],this.chunkStart=-1,this.last=null,this.lastFrom=-1e9,this.lastTo=-1e9,this.from=[],this.to=[],this.value=[],this.maxPoint=-1,this.setMaxPoint=-1,this.nextLayer=null}finishChunk(t){this.chunks.push(new qt(this.from,this.to,this.value,this.maxPoint)),this.chunkPos.push(this.chunkStart),this.chunkStart=-1,this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint),this.maxPoint=-1,t&&(this.from=[],this.to=[],this.value=[])}add(t,e,i){this.addInner(t,e,i)||(this.nextLayer||(this.nextLayer=new zt)).add(t,e,i)}addInner(t,e,i){let n=t-this.lastTo||i.startSide-this.last.endSide;if(n<=0&&(t-this.lastFrom||i.startSide-this.last.startSide)<0)throw new Error("Ranges must be added sorted by `from` position and `startSide`");return!(n<0)&&(250==this.from.length&&this.finishChunk(!0),this.chunkStart<0&&(this.chunkStart=t),this.from.push(t-this.chunkStart),this.to.push(e-this.chunkStart),this.last=i,this.lastFrom=t,this.lastTo=e,this.value.push(i),i.point&&(this.maxPoint=Math.max(this.maxPoint,e-t)),!0)}addChunk(t,e){if((t-this.lastTo||e.value[0].startSide-this.last.endSide)<0)return!1;this.from.length&&this.finishChunk(!0),this.setMaxPoint=Math.max(this.setMaxPoint,e.maxPoint),this.chunks.push(e),this.chunkPos.push(t);let i=e.value.length-1;return this.last=e.value[i],this.lastFrom=e.from[i]+t,this.lastTo=e.to[i]+t,!0}finish(){return this.finishInner(It.empty)}finishInner(t){if(this.from.length&&this.finishChunk(!1),0==this.chunks.length)return t;let e=new It(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(t):t,this.setMaxPoint);return this.from=null,e}}function _t(t,e,i){let n=new Map;for(let e of t)for(let t=0;t<e.chunk.length;t++)e.chunk[t].maxPoint<=0&&n.set(e.chunk[t],e.chunkPos[t]);let s=new Set;for(let t of e)for(let e=0;e<t.chunk.length;e++){let r=n.get(t.chunk[e]);null==r||(i?i.mapPos(r):r)!=t.chunkPos[e]||(null==i?void 0:i.touchesRange(r,r+t.chunk[e].length))||s.add(t.chunk[e])}return s}class Bt{constructor(t,e,i,n=0){this.layer=t,this.skip=e,this.minPoint=i,this.rank=n}get startSide(){return this.value?this.value.startSide:0}get endSide(){return this.value?this.value.endSide:0}goto(t,e=-1e9){return this.chunkIndex=this.rangeIndex=0,this.gotoInner(t,e,!1),this}gotoInner(t,e,i){for(;this.chunkIndex<this.layer.chunk.length;){let e=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(e)||this.layer.chunkEnd(this.chunkIndex)<t||e.maxPoint<this.minPoint))break;this.chunkIndex++,i=!1}if(this.chunkIndex<this.layer.chunk.length){let n=this.layer.chunk[this.chunkIndex].findIndex(t-this.layer.chunkPos[this.chunkIndex],e,!0);(!i||this.rangeIndex<n)&&this.setRangeIndex(n)}this.next()}forward(t,e){(this.to-t||this.endSide-e)<0&&this.gotoInner(t,e,!0)}next(){for(;;){if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1e9,this.value=null;break}{let t=this.layer.chunkPos[this.chunkIndex],e=this.layer.chunk[this.chunkIndex],i=t+e.from[this.rangeIndex];if(this.from=i,this.to=t+e.to[this.rangeIndex],this.value=e.value[this.rangeIndex],this.setRangeIndex(this.rangeIndex+1),this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break}}}setRangeIndex(t){if(t==this.layer.chunk[this.chunkIndex].value.length){if(this.chunkIndex++,this.skip)for(;this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]);)this.chunkIndex++;this.rangeIndex=0}else this.rangeIndex=t}nextChunk(){this.chunkIndex++,this.rangeIndex=0,this.next()}compare(t){return this.from-t.from||this.startSide-t.startSide||this.to-t.to||this.endSide-t.endSide}}class Ft{constructor(t){this.heap=t}static from(t,e=null,i=-1){let n=[];for(let s=0;s<t.length;s++)for(let r=t[s];!r.isEmpty;r=r.nextLayer)r.maxPoint>=i&&n.push(new Bt(r,e,i,s));return 1==n.length?n[0]:new Ft(n)}get startSide(){return this.value?this.value.startSide:0}goto(t,e=-1e9){for(let i of this.heap)i.goto(t,e);for(let t=this.heap.length>>1;t>=0;t--)Et(this.heap,t);return this.next(),this}forward(t,e){for(let i of this.heap)i.forward(t,e);for(let t=this.heap.length>>1;t>=0;t--)Et(this.heap,t);(this.to-t||this.value.endSide-e)<0&&this.next()}next(){if(0==this.heap.length)this.from=this.to=1e9,this.value=null,this.rank=-1;else{let t=this.heap[0];this.from=t.from,this.to=t.to,this.value=t.value,this.rank=t.rank,t.value&&t.next(),Et(this.heap,0)}}}function Et(t,e){for(let i=t[e];;){let n=1+(e<<1);if(n>=t.length)break;let s=t[n];if(n+1<t.length&&s.compare(t[n+1])>=0&&(s=t[n+1],n++),i.compare(s)<0)break;t[n]=i,t[e]=s,e=n}}class Nt{constructor(t,e,i,n=(()=>!0)){this.minPoint=i,this.filterPoint=n,this.active=[],this.activeTo=[],this.activeRank=[],this.minActive=-1,this.point=null,this.pointFrom=0,this.pointRank=0,this.to=-1e9,this.endSide=0,this.openStart=-1,this.cursor=Ft.from(t,e,i)}goto(t,e=-1e9){return this.cursor.goto(t,e),this.active.length=this.activeTo.length=this.activeRank.length=0,this.minActive=-1,this.to=t,this.endSide=e,this.openStart=-1,this.next(),this}forward(t,e){for(;this.minActive>-1&&(this.activeTo[this.minActive]-t||this.active[this.minActive].endSide-e)<0;)this.removeActive(this.minActive);this.cursor.forward(t,e)}removeActive(t){Ht(this.active,t),Ht(this.activeTo,t),Ht(this.activeRank,t),this.minActive=ee(this.active,this.activeTo)}addActive(t){let e=0,{value:i,to:n,rank:s}=this.cursor;for(;e<this.activeRank.length&&this.activeRank[e]<=s;)e++;te(this.active,e,i),te(this.activeTo,e,n),te(this.activeRank,e,s),t&&te(t,e,this.cursor.from),this.minActive=ee(this.active,this.activeTo)}next(){let t=this.to,e=this.point;this.point=null;let i=this.openStart<0?[]:null,n=0;for(;;){let s=this.minActive;if(s>-1&&(this.activeTo[s]-this.cursor.from||this.active[s].endSide-this.cursor.startSide)<0){if(this.activeTo[s]>t){this.to=this.activeTo[s],this.endSide=this.active[s].endSide;break}this.removeActive(s),i&&Ht(i,s)}else{if(!this.cursor.value){this.to=this.endSide=1e9;break}if(this.cursor.from>t){this.to=this.cursor.from,this.endSide=this.cursor.startSide;break}{let s=this.cursor.value;if(s.point)if(e&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to)this.cursor.next();else{if(this.filterPoint(this.cursor.from,this.cursor.to,this.cursor.value,this.cursor.rank)){this.point=s,this.pointFrom=this.cursor.from,this.pointRank=this.cursor.rank,this.to=this.cursor.to,this.endSide=s.endSide,this.cursor.from<t&&(n=1),this.cursor.next(),this.to>t&&this.forward(this.to,this.endSide);break}this.cursor.next()}else this.addActive(i),this.cursor.next()}}}if(i){let e=0;for(;e<i.length&&i[e]<t;)e++;this.openStart=e+n}}activeForPoint(t){if(!this.active.length)return this.active;let e=[];for(let i=this.active.length-1;i>=0&&!(this.activeRank[i]<this.pointRank);i--)(this.activeTo[i]>t||this.activeTo[i]==t&&this.active[i].endSide>=this.point.endSide)&&e.push(this.active[i]);return e.reverse()}openEnd(t){let e=0;for(let i=this.activeTo.length-1;i>=0&&this.activeTo[i]>t;i--)e++;return e}}function Lt(t,e,i,n,s,r){t.goto(e),i.goto(n);let o=n+s,a=n,f=n-e;for(;;){let e=t.to+f-i.to||t.endSide-i.endSide,n=e<0?t.to+f:i.to,s=Math.min(n,o);if(t.point||i.point?t.point&&i.point&&(t.point==i.point||t.point.eq(i.point))&&Kt(t.activeForPoint(t.to+f),i.activeForPoint(i.to))||r.comparePoint(a,s,t.point,i.point):s>a&&!Kt(t.active,i.active)&&r.compareRange(a,s,t.active,i.active),n>o)break;a=n,e<=0&&t.next(),e>=0&&i.next()}}function Kt(t,e){if(t.length!=e.length)return!1;for(let i=0;i<t.length;i++)if(t[i]!=e[i]&&!t[i].eq(e[i]))return!1;return!0}function Ht(t,e){for(let i=e,n=t.length-1;i<n;i++)t[i]=t[i+1];t.pop()}function te(t,e,i){for(let i=t.length-1;i>=e;i--)t[i+1]=t[i];t[e]=i}function ee(t,e){let i=-1,n=1e9;for(let s=0;s<e.length;s++)(e[s]-n||t[s].endSide-t[i].endSide)<0&&(i=s,n=e[s]);return i}for(var ie={8:"Backspace",9:"Tab",10:"Enter",12:"NumLock",13:"Enter",16:"Shift",17:"Control",18:"Alt",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",44:"PrintScreen",45:"Insert",46:"Delete",59:";",61:"=",91:"Meta",92:"Meta",106:"*",107:"+",108:",",109:"-",110:".",111:"/",144:"NumLock",145:"ScrollLock",160:"Shift",161:"Shift",162:"Control",163:"Control",164:"Alt",165:"Alt",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'",229:"q"},ne={48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",61:"+",173:"_",186:":",187:"+",188:"<",189:"_",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"',229:"Q"},se="undefined"!=typeof navigator&&/Chrome\/(\d+)/.exec(navigator.userAgent),re="undefined"!=typeof navigator&&/Apple Computer/.test(navigator.vendor),oe="undefined"!=typeof navigator&&/Gecko\/\d+/.test(navigator.userAgent),ae="undefined"!=typeof navigator&&/Mac/.test(navigator.platform),fe="undefined"!=typeof navigator&&/MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),le=se&&(ae||+se[1]<57)||oe&&ae,he=0;he<10;he++)ie[48+he]=ie[96+he]=String(he);for(he=1;he<=24;he++)ie[he+111]="F"+he;for(he=65;he<=90;he++)ie[he]=String.fromCharCode(he+32),ne[he]=String.fromCharCode(he);for(var ce in ie)ne.hasOwnProperty(ce)||(ne[ce]=ie[ce]);function Oe(t){let e;return e=11==t.nodeType?t.getSelection?t:t.ownerDocument:t,e.getSelection()}function ue(t,e){return!!e&&t.contains(1!=e.nodeType?e.parentNode:e)}function de(t,e){if(!e.anchorNode)return!1;try{return ue(t,e.anchorNode)}catch(t){return!1}}function ge(t){return 3==t.nodeType?Pe(t,0,t.nodeValue.length).getClientRects():1==t.nodeType?t.getClientRects():[]}function pe(t,e,i,n){return!!i&&(me(t,e,i,n,-1)||me(t,e,i,n,1))}function $e(t){for(var e=0;;e++)if(!(t=t.previousSibling))return e}function me(t,e,i,n,s){for(;;){if(t==i&&e==n)return!0;if(e==(s<0?0:Qe(t))){if("DIV"==t.nodeName)return!1;let i=t.parentNode;if(!i||1!=i.nodeType)return!1;e=$e(t)+(s<0?0:1),t=i}else{if(1!=t.nodeType)return!1;if(1==(t=t.childNodes[e+(s<0?-1:0)]).nodeType&&"false"==t.contentEditable)return!1;e=s<0?Qe(t):0}}}function Qe(t){return 3==t.nodeType?t.nodeValue.length:t.childNodes.length}const Se={left:0,right:0,top:0,bottom:0};function be(t,e){let i=e?t.left:t.right;return{left:i,right:i,top:t.top,bottom:t.bottom}}function ve(t){return{left:0,right:t.innerWidth,top:0,bottom:t.innerHeight}}class xe{constructor(){this.anchorNode=null,this.anchorOffset=0,this.focusNode=null,this.focusOffset=0}eq(t){return this.anchorNode==t.anchorNode&&this.anchorOffset==t.anchorOffset&&this.focusNode==t.focusNode&&this.focusOffset==t.focusOffset}setRange(t){this.set(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset)}set(t,e,i,n){this.anchorNode=t,this.anchorOffset=e,this.focusNode=i,this.focusOffset=n}}let we,ye=null;function Te(t){if(t.setActive)return t.setActive();if(ye)return t.focus(ye);let e=[];for(let i=t;i&&(e.push(i,i.scrollTop,i.scrollLeft),i!=i.ownerDocument);i=i.parentNode);if(t.focus(null==ye?{get preventScroll(){return ye={preventScroll:!0},!0}}:void 0),!ye){ye=!1;for(let t=0;t<e.length;){let i=e[t++],n=e[t++],s=e[t++];i.scrollTop!=n&&(i.scrollTop=n),i.scrollLeft!=s&&(i.scrollLeft=s)}}}function Pe(t,e,i=e){let n=we||(we=document.createRange());return n.setEnd(t,i),n.setStart(t,e),n}function ke(t,e,i){let n={key:e,code:e,keyCode:i,which:i,cancelable:!0},s=new KeyboardEvent("keydown",n);s.synthetic=!0,t.dispatchEvent(s);let r=new KeyboardEvent("keyup",n);return r.synthetic=!0,t.dispatchEvent(r),s.defaultPrevented||r.defaultPrevented}function We(t){for(;t.attributes.length;)t.removeAttributeNode(t.attributes[0])}class Re{constructor(t,e,i=!0){this.node=t,this.offset=e,this.precise=i}static before(t,e){return new Re(t.parentNode,$e(t),e)}static after(t,e){return new Re(t.parentNode,$e(t)+1,e)}}const Xe=[];class Ze{constructor(){this.parent=null,this.dom=null,this.dirty=2}get editorView(){if(!this.parent)throw new Error("Accessing view in orphan content view");return this.parent.editorView}get overrideDOMText(){return null}get posAtStart(){return this.parent?this.parent.posBefore(this):0}get posAtEnd(){return this.posAtStart+this.length}posBefore(t){let e=this.posAtStart;for(let i of this.children){if(i==t)return e;e+=i.length+i.breakAfter}throw new RangeError("Invalid child in posBefore")}posAfter(t){return this.posBefore(t)+t.length}coordsAt(t,e){return null}sync(t){if(2&this.dirty){let e=this.dom,i=e.firstChild;for(let n of this.children){if(n.dirty){if(!n.dom&&i){let t=Ze.get(i);t&&(t.parent||t.constructor!=n.constructor)||n.reuseDOM(i)}n.sync(t),n.dirty=0}if(t&&!t.written&&t.node==e&&i!=n.dom&&(t.written=!0),n.dom.parentNode==e){for(;i&&i!=n.dom;)i=Ye(i);i=n.dom.nextSibling}else e.insertBefore(n.dom,i)}for(i&&t&&t.node==e&&(t.written=!0);i;)i=Ye(i)}else if(1&this.dirty)for(let e of this.children)e.dirty&&(e.sync(t),e.dirty=0)}reuseDOM(t){}localPosFromDOM(t,e){let i;if(t==this.dom)i=this.dom.childNodes[e];else{let n=0==Qe(t)?0:0==e?-1:1;for(;;){let e=t.parentNode;if(e==this.dom)break;0==n&&e.firstChild!=e.lastChild&&(n=t==e.firstChild?-1:1),t=e}i=n<0?t:t.nextSibling}if(i==this.dom.firstChild)return 0;for(;i&&!Ze.get(i);)i=i.nextSibling;if(!i)return this.length;for(let t=0,e=0;;t++){let n=this.children[t];if(n.dom==i)return e;e+=n.length+n.breakAfter}}domBoundsAround(t,e,i=0){let n=-1,s=-1,r=-1,o=-1;for(let a=0,f=i,l=i;a<this.children.length;a++){let i=this.children[a],h=f+i.length;if(f<t&&h>e)return i.domBoundsAround(t,e,f);if(h>=t&&-1==n&&(n=a,s=f),f>e&&i.dom.parentNode==this.dom){r=a,o=l;break}l=h,f=h+i.breakAfter}return{from:s,to:o<0?i+this.length:o,startDOM:(n?this.children[n-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:r<this.children.length&&r>=0?this.children[r].dom:null}}markDirty(t=!1){this.dirty|=2,this.markParentsDirty(t)}markParentsDirty(t){for(let e=this.parent;e;e=e.parent){if(t&&(e.dirty|=2),1&e.dirty)return;e.dirty|=1,t=!1}}setParent(t){this.parent!=t&&(this.parent=t,this.dirty&&this.markParentsDirty(!0))}setDOM(t){this.dom&&(this.dom.cmView=null),this.dom=t,t.cmView=this}get rootView(){for(let t=this;;){let e=t.parent;if(!e)return t;t=e}}replaceChildren(t,e,i=Xe){this.markDirty();for(let i=t;i<e;i++){let t=this.children[i];t.parent==this&&t.destroy()}this.children.splice(t,e-t,...i);for(let t=0;t<i.length;t++)i[t].setParent(this)}ignoreMutation(t){return!1}ignoreEvent(t){return!1}childCursor(t=this.length){return new Ce(this.children,t,this.children.length)}childPos(t,e=1){return this.childCursor().findPos(t,e)}toString(){let t=this.constructor.name.replace("View","");return t+(this.children.length?"("+this.children.join()+")":this.length?"["+("Text"==t?this.text:this.length)+"]":"")+(this.breakAfter?"#":"")}static get(t){return t.cmView}get isEditable(){return!0}merge(t,e,i,n,s,r){return!1}become(t){return!1}getSide(){return 0}destroy(){this.parent=null}}function Ye(t){let e=t.nextSibling;return t.parentNode.removeChild(t),e}Ze.prototype.breakAfter=0;class Ce{constructor(t,e,i){this.children=t,this.pos=e,this.i=i,this.off=0}findPos(t,e=1){for(;;){if(t>this.pos||t==this.pos&&(e>0||0==this.i||this.children[this.i-1].breakAfter))return this.off=t-this.pos,this;let i=this.children[--this.i];this.pos-=i.length+i.breakAfter}}}function Ve(t,e,i,n,s,r,o,a,f){let{children:l}=t,h=l.length?l[e]:null,c=r.length?r[r.length-1]:null,O=c?c.breakAfter:o;if(!(e==n&&h&&!o&&!O&&r.length<2&&h.merge(i,s,r.length?c:null,0==i,a,f))){if(n<l.length){let t=l[n];t&&s<t.length?(e==n&&(t=t.split(s),s=0),!O&&c&&t.merge(0,s,c,!0,0,f)?r[r.length-1]=t:(s&&t.merge(0,s,null,!1,0,f),r.push(t))):(null==t?void 0:t.breakAfter)&&(c?c.breakAfter=1:o=1),n++}for(h&&(h.breakAfter=o,i>0&&(!o&&r.length&&h.merge(i,h.length,r[0],!1,a,0)?h.breakAfter=r.shift().breakAfter:(i<h.length||h.children.length&&0==h.children[h.children.length-1].length)&&h.merge(i,h.length,null,!1,a,0),e++));e<n&&r.length;)if(l[n-1].become(r[r.length-1]))n--,r.pop(),f=r.length?0:a;else{if(!l[e].become(r[0]))break;e++,r.shift(),a=r.length?0:f}!r.length&&e&&n<l.length&&!l[e-1].breakAfter&&l[n].merge(0,0,l[e-1],!1,a,f)&&e--,(e<n||r.length)&&t.replaceChildren(e,n,r)}}function je(t,e,i,n,s,r){let o=t.childCursor(),{i:a,off:f}=o.findPos(i,1),{i:l,off:h}=o.findPos(e,-1),c=e-i;for(let t of n)c+=t.length;t.length+=c,Ve(t,l,h,a,f,n,0,s,r)}let Ue="undefined"!=typeof navigator?navigator:{userAgent:"",vendor:"",platform:""},Je="undefined"!=typeof document?document:{documentElement:{style:{}}};const Me=/Edge\/(\d+)/.exec(Ue.userAgent),De=/MSIE \d/.test(Ue.userAgent),Ge=/Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Ue.userAgent),Ae=!!(De||Ge||Me),qe=!Ae&&/gecko\/(\d+)/i.test(Ue.userAgent),Ie=!Ae&&/Chrome\/(\d+)/.exec(Ue.userAgent),ze="webkitFontSmoothing"in Je.documentElement.style,_e=!Ae&&/Apple Computer/.test(Ue.vendor),Be=_e&&(/Mobile\/\w+/.test(Ue.userAgent)||Ue.maxTouchPoints>2);var Fe={mac:Be||/Mac/.test(Ue.platform),windows:/Win/.test(Ue.platform),linux:/Linux|X11/.test(Ue.platform),ie:Ae,ie_version:De?Je.documentMode||6:Ge?+Ge[1]:Me?+Me[1]:0,gecko:qe,gecko_version:qe?+(/Firefox\/(\d+)/.exec(Ue.userAgent)||[0,0])[1]:0,chrome:!!Ie,chrome_version:Ie?+Ie[1]:0,ios:Be,android:/Android\b/.test(Ue.userAgent),webkit:ze,safari:_e,webkit_version:ze?+(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:null!=Je.documentElement.style.tabSize?"tab-size":"-moz-tab-size"};class Ee extends Ze{constructor(t){super(),this.text=t}get length(){return this.text.length}createDOM(t){this.setDOM(t||document.createTextNode(this.text))}sync(t){this.dom||this.createDOM(),this.dom.nodeValue!=this.text&&(t&&t.node==this.dom&&(t.written=!0),this.dom.nodeValue=this.text)}reuseDOM(t){3==t.nodeType&&this.createDOM(t)}merge(t,e,i){return(!i||i instanceof Ee&&!(this.length-(e-t)+i.length>256))&&(this.text=this.text.slice(0,t)+(i?i.text:"")+this.text.slice(e),this.markDirty(),!0)}split(t){let e=new Ee(this.text.slice(t));return this.text=this.text.slice(0,t),this.markDirty(),e}localPosFromDOM(t,e){return t==this.dom?e:e?this.text.length:0}domAtPos(t){return new Re(this.dom,t)}domBoundsAround(t,e,i){return{from:i,to:i+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling}}coordsAt(t,e){return Le(this.dom,t,e)}}class Ne extends Ze{constructor(t,e=[],i=0){super(),this.mark=t,this.children=e,this.length=i;for(let t of e)t.setParent(this)}setAttrs(t){if(We(t),this.mark.class&&(t.className=this.mark.class),this.mark.attrs)for(let e in this.mark.attrs)t.setAttribute(e,this.mark.attrs[e]);return t}reuseDOM(t){t.nodeName==this.mark.tagName.toUpperCase()&&(this.setDOM(t),this.dirty|=6)}sync(t){this.dom?4&this.dirty&&this.setAttrs(this.dom):this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))),super.sync(t)}merge(t,e,i,n,s,r){return(!i||!(!(i instanceof Ne&&i.mark.eq(this.mark))||t&&s<=0||e<this.length&&r<=0))&&(je(this,t,e,i?i.children:[],s-1,r-1),this.markDirty(),!0)}split(t){let e=[],i=0,n=-1,s=0;for(let r of this.children){let o=i+r.length;o>t&&e.push(i<t?r.split(t-i):r),n<0&&i>=t&&(n=s),i=o,s++}let r=this.length-t;return this.length=t,n>-1&&(this.children.length=n,this.markDirty()),new Ne(this.mark,e,r)}domAtPos(t){return ei(this.dom,this.children,t)}coordsAt(t,e){return ni(this,t,e)}}function Le(t,e,i){let n=t.nodeValue.length;e>n&&(e=n);let s=e,r=e,o=0;0==e&&i<0||e==n&&i>=0?Fe.chrome||Fe.gecko||(e?(s--,o=1):(r++,o=-1)):i<0?s--:r++;let a=Pe(t,s,r).getClientRects();if(!a.length)return Se;let f=a[(o?o<0:i>=0)?0:a.length-1];return Fe.safari&&!o&&0==f.width&&(f=Array.prototype.find.call(a,(t=>t.width))||f),o?be(f,o<0):f||null}class Ke extends Ze{constructor(t,e,i){super(),this.widget=t,this.length=e,this.side=i}static create(t,e,i){return new(t.customView||Ke)(t,e,i)}split(t){let e=Ke.create(this.widget,this.length-t,this.side);return this.length-=t,e}sync(){this.dom&&this.widget.updateDOM(this.dom)||(this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}getSide(){return this.side}merge(t,e,i,n,s,r){return!(i&&(!(i instanceof Ke&&this.widget.compare(i.widget))||t>0&&s<=0||e<this.length&&r<=0))&&(this.length=t+(i?i.length:0)+(this.length-e),!0)}become(t){return t.length==this.length&&t instanceof Ke&&t.side==this.side&&this.widget.constructor==t.widget.constructor&&(this.widget.eq(t.widget)||this.markDirty(!0),this.widget=t.widget,!0)}ignoreMutation(){return!0}ignoreEvent(t){return this.widget.ignoreEvent(t)}get overrideDOMText(){if(0==this.length)return u.empty;let t=this;for(;t.parent;)t=t.parent;let e=t.editorView,i=e&&e.state.doc,n=this.posAtStart;return i?i.slice(n,n+this.length):u.empty}domAtPos(t){return 0==t?Re.before(this.dom):Re.after(this.dom,t==this.length)}domBoundsAround(){return null}coordsAt(t,e){let i=this.dom.getClientRects(),n=null;if(!i.length)return Se;for(let e=t>0?i.length-1:0;n=i[e],!(t>0?0==e:e==i.length-1||n.top<n.bottom);e+=t>0?-1:1);return 0==t&&e>0||t==this.length&&e<=0?n:be(n,0==t)}get isEditable(){return!1}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class He extends Ke{domAtPos(t){return new Re(this.widget.text,t)}sync(){this.setDOM(this.widget.toDOM())}localPosFromDOM(t,e){return e?3==t.nodeType?Math.min(e,this.length):this.length:0}ignoreMutation(){return!1}get overrideDOMText(){return null}coordsAt(t,e){return Le(this.widget.text,t,e)}get isEditable(){return!0}}class ti extends Ze{constructor(t){super(),this.side=t}get length(){return 0}merge(){return!1}become(t){return t instanceof ti&&t.side==this.side}split(){return new ti(this.side)}sync(){if(!this.dom){let t=document.createElement("img");t.className="cm-widgetBuffer",this.setDOM(t)}}getSide(){return this.side}domAtPos(t){return Re.before(this.dom)}localPosFromDOM(){return 0}domBoundsAround(){return null}coordsAt(t){return this.dom.getBoundingClientRect()}get overrideDOMText(){return u.empty}}function ei(t,e,i){let n=0;for(let s=0;n<e.length;n++){let r=e[n],o=s+r.length;if(!(o==s&&r.getSide()<=0)){if(i>s&&i<o&&r.dom.parentNode==t)return r.domAtPos(i-s);if(i<=s)break;s=o}}for(;n>0;n--){let i=e[n-1].dom;if(i.parentNode==t)return Re.after(i)}return new Re(t,0)}function ii(t,e,i){let n,{children:s}=t;i>0&&e instanceof Ne&&s.length&&(n=s[s.length-1])instanceof Ne&&n.mark.eq(e.mark)?ii(n,e.children[0],i-1):(s.push(e),e.setParent(t)),t.length+=e.length}function ni(t,e,i){for(let n=0,s=0;s<t.children.length;s++){let r,o=t.children[s],a=n+o.length;if((i<=0||a==t.length||o.getSide()>0?a>=e:a>e)&&(e<a||s+1==t.children.length||(r=t.children[s+1]).length||r.getSide()>0)){let t=0;if(a==n){if(o.getSide()<=0)continue;t=i=-o.getSide()}let s=o.coordsAt(Math.max(0,e-n),i);return t&&s?be(s,i<0):s}n=a}let n=t.dom.lastChild;if(!n)return t.dom.getBoundingClientRect();let s=ge(n);return s[s.length-1]||null}function si(t,e){for(let i in t)"class"==i&&e.class?e.class+=" "+t.class:"style"==i&&e.style?e.style+=";"+t.style:e[i]=t[i];return e}function ri(t,e){if(t==e)return!0;if(!t||!e)return!1;let i=Object.keys(t),n=Object.keys(e);if(i.length!=n.length)return!1;for(let s of i)if(-1==n.indexOf(s)||t[s]!==e[s])return!1;return!0}function oi(t,e,i){if(e)for(let n in e)i&&n in i||t.removeAttribute(n);if(i)for(let n in i)e&&e[n]==i[n]||t.setAttribute(n,i[n])}Ee.prototype.children=Ke.prototype.children=ti.prototype.children=Xe;class ai{eq(t){return!1}updateDOM(t){return!1}compare(t){return this==t||this.constructor==t.constructor&&this.eq(t)}get estimatedHeight(){return-1}ignoreEvent(t){return!0}get customView(){return null}destroy(t){}}var fi=function(t){return t[t.Text=0]="Text",t[t.WidgetBefore=1]="WidgetBefore",t[t.WidgetAfter=2]="WidgetAfter",t[t.WidgetRange=3]="WidgetRange",t}(fi||(fi={}));class li extends Dt{constructor(t,e,i,n){super(),this.startSide=t,this.endSide=e,this.widget=i,this.spec=n}get heightRelevant(){return!1}static mark(t){return new hi(t)}static widget(t){let e=t.side||0,i=!!t.block;return e+=i?e>0?3e8:-4e8:e>0?1e8:-1e8,new Oi(t,e,e,i,t.widget||null,!1)}static replace(t){let e=!!t.block,{start:i,end:n}=ui(t,e);return new Oi(t,(i?e?-3e8:-1:4e8)-1,1+(n?e?2e8:1:-5e8),e,t.widget||null,!0)}static line(t){return new ci(t)}static set(t,e=!1){return It.of(t,e)}hasHeight(){return!!this.widget&&this.widget.estimatedHeight>-1}}li.none=It.empty;class hi extends li{constructor(t){let{start:e,end:i}=ui(t);super(e?-1:4e8,i?1:-5e8,null,t),this.tagName=t.tagName||"span",this.class=t.class||"",this.attrs=t.attributes||null}eq(t){return this==t||t instanceof hi&&this.tagName==t.tagName&&this.class==t.class&&ri(this.attrs,t.attrs)}range(t,e=t){if(t>=e)throw new RangeError("Mark decorations may not be empty");return super.range(t,e)}}hi.prototype.point=!1;class ci extends li{constructor(t){super(-2e8,-2e8,null,t)}eq(t){return t instanceof ci&&ri(this.spec.attributes,t.spec.attributes)}range(t,e=t){if(e!=t)throw new RangeError("Line decoration ranges must be zero-length");return super.range(t,e)}}ci.prototype.mapMode=x.TrackBefore,ci.prototype.point=!0;class Oi extends li{constructor(t,e,i,n,s,r){super(e,i,s,t),this.block=n,this.isReplace=r,this.mapMode=n?e<=0?x.TrackBefore:x.TrackAfter:x.TrackDel}get type(){return this.startSide<this.endSide?fi.WidgetRange:this.startSide<=0?fi.WidgetBefore:fi.WidgetAfter}get heightRelevant(){return this.block||!!this.widget&&this.widget.estimatedHeight>=5}eq(t){return t instanceof Oi&&(e=this.widget,i=t.widget,e==i||!!(e&&i&&e.compare(i)))&&this.block==t.block&&this.startSide==t.startSide&&this.endSide==t.endSide;var e,i}range(t,e=t){if(this.isReplace&&(t>e||t==e&&this.startSide>0&&this.endSide<=0))throw new RangeError("Invalid range for replacement decoration");if(!this.isReplace&&e!=t)throw new RangeError("Widget decorations can only have zero-length ranges");return super.range(t,e)}}function ui(t,e=!1){let{inclusiveStart:i,inclusiveEnd:n}=t;return null==i&&(i=t.inclusive),null==n&&(n=t.inclusive),{start:null!=i?i:e,end:null!=n?n:e}}function di(t,e,i,n=0){let s=i.length-1;s>=0&&i[s]+n>=t?i[s]=Math.max(i[s],e):i.push(t,e)}Oi.prototype.point=!0;class gi extends Ze{constructor(){super(...arguments),this.children=[],this.length=0,this.prevAttrs=void 0,this.attrs=null,this.breakAfter=0}merge(t,e,i,n,s,r){if(i){if(!(i instanceof gi))return!1;this.dom||i.transferDOM(this)}return n&&this.setDeco(i?i.attrs:null),je(this,t,e,i?i.children:[],s,r),!0}split(t){let e=new gi;if(e.breakAfter=this.breakAfter,0==this.length)return e;let{i:i,off:n}=this.childPos(t);n&&(e.append(this.children[i].split(n),0),this.children[i].merge(n,this.children[i].length,null,!1,0,0),i++);for(let t=i;t<this.children.length;t++)e.append(this.children[t],0);for(;i>0&&0==this.children[i-1].length;)this.children[--i].destroy();return this.children.length=i,this.markDirty(),this.length=t,e}transferDOM(t){this.dom&&(t.setDOM(this.dom),t.prevAttrs=void 0===this.prevAttrs?this.attrs:this.prevAttrs,this.prevAttrs=void 0,this.dom=null)}setDeco(t){ri(this.attrs,t)||(this.dom&&(this.prevAttrs=this.attrs,this.markDirty()),this.attrs=t)}append(t,e){ii(this,t,e)}addLineDeco(t){let e=t.spec.attributes,i=t.spec.class;e&&(this.attrs=si(e,this.attrs||{})),i&&(this.attrs=si({class:i},this.attrs||{}))}domAtPos(t){return ei(this.dom,this.children,t)}reuseDOM(t){"DIV"==t.nodeName&&(this.setDOM(t),this.dirty|=6)}sync(t){var e;this.dom?4&this.dirty&&(We(this.dom),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0):(this.setDOM(document.createElement("div")),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0),void 0!==this.prevAttrs&&(oi(this.dom,this.prevAttrs,this.attrs),this.dom.classList.add("cm-line"),this.prevAttrs=void 0),super.sync(t);let i=this.dom.lastChild;for(;i&&Ze.get(i)instanceof Ne;)i=i.lastChild;if(!i||"BR"!=i.nodeName&&0==(null===(e=Ze.get(i))||void 0===e?void 0:e.isEditable)&&(!Fe.ios||!this.children.some((t=>t instanceof Ee)))){let t=document.createElement("BR");t.cmIgnore=!0,this.dom.appendChild(t)}}measureTextSize(){if(0==this.children.length||this.length>20)return null;let t=0;for(let e of this.children){if(!(e instanceof Ee))return null;let i=ge(e.dom);if(1!=i.length)return null;t+=i[0].width}return{lineHeight:this.dom.getBoundingClientRect().height,charWidth:t/this.length}}coordsAt(t,e){return ni(this,t,e)}become(t){return!1}get type(){return fi.Text}static find(t,e){for(let i=0,n=0;i<t.children.length;i++){let s=t.children[i],r=n+s.length;if(r>=e){if(s instanceof gi)return s;if(r>e)break}n=r+s.breakAfter}return null}}class pi extends Ze{constructor(t,e,i){super(),this.widget=t,this.length=e,this.type=i,this.breakAfter=0}merge(t,e,i,n,s,r){return!(i&&(!(i instanceof pi&&this.widget.compare(i.widget))||t>0&&s<=0||e<this.length&&r<=0))&&(this.length=t+(i?i.length:0)+(this.length-e),!0)}domAtPos(t){return 0==t?Re.before(this.dom):Re.after(this.dom,t==this.length)}split(t){let e=this.length-t;this.length=t;let i=new pi(this.widget,e,this.type);return i.breakAfter=this.breakAfter,i}get children(){return Xe}sync(){this.dom&&this.widget.updateDOM(this.dom)||(this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):u.empty}domBoundsAround(){return null}become(t){return t instanceof pi&&t.type==this.type&&t.widget.constructor==this.widget.constructor&&(t.widget.eq(this.widget)||this.markDirty(!0),this.widget=t.widget,this.length=t.length,this.breakAfter=t.breakAfter,!0)}ignoreMutation(){return!0}ignoreEvent(t){return this.widget.ignoreEvent(t)}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class $i{constructor(t,e,i,n){this.doc=t,this.pos=e,this.end=i,this.disallowBlockEffectsBelow=n,this.content=[],this.curLine=null,this.breakAtStart=0,this.pendingBuffer=0,this.atCursorPos=!0,this.openStart=-1,this.openEnd=-1,this.text="",this.textOff=0,this.cursor=t.iter(),this.skip=e}posCovered(){if(0==this.content.length)return!this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let t=this.content[this.content.length-1];return!(t.breakAfter||t instanceof pi&&t.type==fi.WidgetBefore)}getLine(){return this.curLine||(this.content.push(this.curLine=new gi),this.atCursorPos=!0),this.curLine}flushBuffer(t){this.pendingBuffer&&(this.curLine.append(mi(new ti(-1),t),t.length),this.pendingBuffer=0)}addBlockWidget(t){this.flushBuffer([]),this.curLine=null,this.content.push(t)}finish(t){t?this.pendingBuffer=0:this.flushBuffer([]),this.posCovered()||this.getLine()}buildText(t,e,i){for(;t>0;){if(this.textOff==this.text.length){let{value:e,lineBreak:i,done:n}=this.cursor.next(this.skip);if(this.skip=0,n)throw new Error("Ran out of text content when drawing inline views");if(i){this.posCovered()||this.getLine(),this.content.length?this.content[this.content.length-1].breakAfter=1:this.breakAtStart=1,this.flushBuffer([]),this.curLine=null,t--;continue}this.text=e,this.textOff=0}let n=Math.min(this.text.length-this.textOff,t,512);this.flushBuffer(e.slice(0,i)),this.getLine().append(mi(new Ee(this.text.slice(this.textOff,this.textOff+n)),e),i),this.atCursorPos=!0,this.textOff+=n,t-=n,i=0}}span(t,e,i,n){this.buildText(e-t,i,n),this.pos=e,this.openStart<0&&(this.openStart=n)}point(t,e,i,n,s){let r=e-t;if(i instanceof Oi)if(i.block){let{type:t}=i;t!=fi.WidgetAfter||this.posCovered()||this.getLine(),this.addBlockWidget(new pi(i.widget||new Qi("div"),r,t))}else{let o=Ke.create(i.widget||new Qi("span"),r,i.startSide),a=this.atCursorPos&&!o.isEditable&&s<=n.length&&(t<e||i.startSide>0),f=!o.isEditable&&(t<e||i.startSide<=0),l=this.getLine();2!=this.pendingBuffer||a||(this.pendingBuffer=0),this.flushBuffer(n),a&&(l.append(mi(new ti(1),n),s),s=n.length+Math.max(0,s-n.length)),l.append(mi(o,n),s),this.atCursorPos=f,this.pendingBuffer=f?t<e?1:2:0}else this.doc.lineAt(this.pos).from==this.pos&&this.getLine().addLineDeco(i);r&&(this.textOff+r<=this.text.length?this.textOff+=r:(this.skip+=r-(this.text.length-this.textOff),this.text="",this.textOff=0),this.pos=e),this.openStart<0&&(this.openStart=s)}filterPoint(t,e,i,n){if(n<this.disallowBlockEffectsBelow&&i instanceof Oi){if(i.block)throw new RangeError("Block decorations may not be specified via plugins");if(e>this.doc.lineAt(this.pos).to)throw new RangeError("Decorations that replace line breaks may not be specified via plugins")}return!0}static build(t,e,i,n,s){let r=new $i(t,e,i,s);return r.openEnd=It.spans(n,e,i,r),r.openStart<0&&(r.openStart=r.openEnd),r.finish(r.openEnd),r}}function mi(t,e){for(let i of e)t=new Ne(i,[t],t.length);return t}class Qi extends ai{constructor(t){super(),this.tag=t}eq(t){return t.tag==this.tag}toDOM(){return document.createElement(this.tag)}updateDOM(t){return t.nodeName.toLowerCase()==this.tag}}const Si=[],bi=U.define(),vi=U.define(),xi=U.define(),wi=U.define(),yi=U.define(),Ti=U.define(),Pi=ut.define({map:(t,e)=>t.map(e)}),ki=ut.define({map:(t,e)=>t.map(e)});class Wi{constructor(t,e="nearest",i="nearest",n=5,s=5){this.range=t,this.y=e,this.x=i,this.yMargin=n,this.xMargin=s}map(t){return t.empty?this:new Wi(this.range.map(t),this.y,this.x,this.yMargin,this.xMargin)}}const Ri=ut.define({map:(t,e)=>t.map(e)});function Xi(t,e,i){let n=t.facet(wi);n.length?n[0](e):window.onerror?window.onerror(String(e),i,void 0,void 0,e):i?console.error(i+":",e):console.error(e)}const Zi=U.define({combine:t=>!t.length||t[0]});class Yi{constructor(t,e){this.field=t,this.get=e}}class Ci{from(t){return new Yi(this,t)}static define(){return new Ci}}Ci.decorations=Ci.define(),Ci.atomicRanges=Ci.define(),Ci.scrollMargins=Ci.define();let Vi=0;const ji=U.define();class Ui{constructor(t,e,i){this.id=t,this.create=e,this.fields=i,this.extension=ji.of(this)}static define(t,e){let{eventHandlers:i,provide:n,decorations:s}=e||{},r=[];if(n)for(let t of Array.isArray(n)?n:[n])r.push(t);return i&&r.push(Ji.from((t=>({plugin:t,handlers:i})))),s&&r.push(Ci.decorations.from(s)),new Ui(Vi++,t,r)}static fromClass(t,e){return Ui.define((e=>new t(e)),e)}}const Ji=Ci.define();class Mi{constructor(t){this.spec=t,this.mustUpdate=null,this.value=null}takeField(t,e){if(this.spec)for(let{field:i,get:n}of this.spec.fields)i==t&&e.push(n(this.value))}update(t){if(this.value){if(this.mustUpdate){let t=this.mustUpdate;if(this.mustUpdate=null,this.value.update)try{this.value.update(t)}catch(e){if(Xi(t.state,e,"CodeMirror plugin crashed"),this.value.destroy)try{this.value.destroy()}catch(t){}this.deactivate()}}}else if(this.spec)try{this.value=this.spec.create(t)}catch(e){Xi(t.state,e,"CodeMirror plugin crashed"),this.deactivate()}return this}destroy(t){var e;if(null===(e=this.value)||void 0===e?void 0:e.destroy)try{this.value.destroy()}catch(e){Xi(t.state,e,"CodeMirror plugin crashed")}}deactivate(){this.spec=this.value=null}}const Di=U.define(),Gi=U.define(),Ai=U.define(),qi=U.define();class Ii{constructor(t,e,i,n){this.fromA=t,this.toA=e,this.fromB=i,this.toB=n}join(t){return new Ii(Math.min(this.fromA,t.fromA),Math.max(this.toA,t.toA),Math.min(this.fromB,t.fromB),Math.max(this.toB,t.toB))}addToSet(t){let e=t.length,i=this;for(;e>0;e--){let n=t[e-1];if(!(n.fromA>i.toA)){if(n.toA<i.fromA)break;i=i.join(n),t.splice(e-1,1)}}return t.splice(e,0,i),t}static extendWithRanges(t,e){if(0==e.length)return t;let i=[];for(let n=0,s=0,r=0,o=0;;n++){let a=n==t.length?null:t[n],f=r-o,l=a?a.fromB:1e9;for(;s<e.length&&e[s]<l;){let t=e[s],n=e[s+1],r=Math.max(o,t),a=Math.min(l,n);if(r<=a&&new Ii(r+f,a+f,r,a).addToSet(i),n>l)break;s+=2}if(!a)return i;new Ii(a.fromA,a.toA,a.fromB,a.toB).addToSet(i),r=a.toA,o=a.toB}}}class zi{constructor(t,e,i=Si){this.view=t,this.state=e,this.transactions=i,this.flags=0,this.startState=t.state,this.changes=y.empty(this.startState.doc.length);for(let t of i)this.changes=this.changes.compose(t.changes);let n=[];this.changes.iterChangedRanges(((t,e,i,s)=>n.push(new Ii(t,e,i,s)))),this.changedRanges=n;let s=t.hasFocus;s!=t.inputState.notifiedFocused&&(t.inputState.notifiedFocused=s,this.flags|=1)}get viewportChanged(){return(4&this.flags)>0}get heightChanged(){return(2&this.flags)>0}get geometryChanged(){return this.docChanged||(10&this.flags)>0}get focusChanged(){return(1&this.flags)>0}get docChanged(){return!this.changes.empty}get selectionSet(){return this.transactions.some((t=>t.selection))}get empty(){return 0==this.flags&&0==this.transactions.length}}var _i=function(t){return t[t.LTR=0]="LTR",t[t.RTL=1]="RTL",t}(_i||(_i={}));const Bi=_i.LTR,Fi=_i.RTL;function Ei(t){let e=[];for(let i=0;i<t.length;i++)e.push(1<<+t[i]);return e}const Ni=Ei("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),Li=Ei("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),Ki=Object.create(null),Hi=[];for(let t of["()","[]","{}"]){let e=t.charCodeAt(0),i=t.charCodeAt(1);Ki[e]=i,Ki[i]=-e}const tn=/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;class en{constructor(t,e,i){this.from=t,this.to=e,this.level=i}get dir(){return this.level%2?Fi:Bi}side(t,e){return this.dir==e==t?this.to:this.from}static find(t,e,i,n){let s=-1;for(let r=0;r<t.length;r++){let o=t[r];if(o.from<=e&&o.to>=e){if(o.level==i)return r;(s<0||(0!=n?n<0?o.from<e:o.to>e:t[s].level>o.level))&&(s=r)}}if(s<0)throw new RangeError("Index out of range");return s}}const nn=[];function sn(t){return[new en(0,t,0)]}let rn="";function on(t,e,i,s,r){var o;let a=s.head-t.from,f=-1;if(0==a){if(!r||!t.length)return null;e[0].level!=i&&(a=e[0].side(!1,i),f=0)}else if(a==t.length){if(r)return null;let t=e[e.length-1];t.level!=i&&(a=t.side(!0,i),f=e.length-1)}f<0&&(f=en.find(e,a,null!==(o=s.bidiLevel)&&void 0!==o?o:-1,s.assoc));let l=e[f];a==l.side(r,i)&&(l=e[f+=r?1:-1],a=l.side(!r,i));let h=r==(l.dir==i),c=n(t.text,a,h);if(rn=t.text.slice(Math.min(a,c),Math.max(a,c)),c!=l.side(r,i))return Y.cursor(c+t.from,h?-1:1,l.level);let O=f==(r?e.length-1:0)?null:e[f+(r?1:-1)];return O||l.level==i?O&&O.level<l.level?Y.cursor(O.side(!r,i)+t.from,r?1:-1,O.level):Y.cursor(c+t.from,r?-1:1,l.level):Y.cursor(r?t.to:t.from,r?-1:1,i)}const an="\uffff";class fn{constructor(t,e){this.points=t,this.text="",this.lineSeparator=e.facet(yt.lineSeparator)}append(t){this.text+=t}lineBreak(){this.text+=an}readRange(t,e){if(!t)return this;let i=t.parentNode;for(let n=t;;){this.findPointBefore(i,n),this.readNode(n);let t=n.nextSibling;if(t==e)break;let s=Ze.get(n),r=Ze.get(t);(s&&r?s.breakAfter:(s?s.breakAfter:ln(n))||ln(t)&&("BR"!=n.nodeName||n.cmIgnore))&&this.lineBreak(),n=t}return this.findPointBefore(i,e),this}readTextNode(t){let e=t.nodeValue;for(let i of this.points)i.node==t&&(i.pos=this.text.length+Math.min(i.offset,e.length));for(let i=0,n=this.lineSeparator?null:/\r\n?|\n/g;;){let s,r=-1,o=1;if(this.lineSeparator?(r=e.indexOf(this.lineSeparator,i),o=this.lineSeparator.length):(s=n.exec(e))&&(r=s.index,o=s[0].length),this.append(e.slice(i,r<0?e.length:r)),r<0)break;if(this.lineBreak(),o>1)for(let e of this.points)e.node==t&&e.pos>this.text.length&&(e.pos-=o-1);i=r+o}}readNode(t){if(t.cmIgnore)return;let e=Ze.get(t),i=e&&e.overrideDOMText;if(null!=i){this.findPointInside(t,i.length);for(let t=i.iter();!t.next().done;)t.lineBreak?this.lineBreak():this.append(t.value)}else 3==t.nodeType?this.readTextNode(t):"BR"==t.nodeName?t.nextSibling&&this.lineBreak():1==t.nodeType&&this.readRange(t.firstChild,null)}findPointBefore(t,e){for(let i of this.points)i.node==t&&t.childNodes[i.offset]==e&&(i.pos=this.text.length)}findPointInside(t,e){for(let i of this.points)(3==t.nodeType?i.node==t:t.contains(i.node))&&(i.pos=this.text.length+Math.min(e,i.offset))}}function ln(t){return 1==t.nodeType&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName)}class hn{constructor(t,e){this.node=t,this.offset=e,this.pos=-1}}class cn extends Ze{constructor(t){super(),this.view=t,this.compositionDeco=li.none,this.decorations=[],this.pluginDecorationLength=0,this.minWidth=0,this.minWidthFrom=0,this.minWidthTo=0,this.impreciseAnchor=null,this.impreciseHead=null,this.forceSelection=!1,this.lastUpdate=Date.now(),this.setDOM(t.contentDOM),this.children=[new gi],this.children[0].setParent(this),this.updateDeco(),this.updateInner([new Ii(0,0,0,t.state.doc.length)],0)}get root(){return this.view.root}get editorView(){return this.view}get length(){return this.view.state.doc.length}update(t){let e=t.changedRanges;this.minWidth>0&&e.length&&(e.every((({fromA:t,toA:e})=>e<this.minWidthFrom||t>this.minWidthTo))?(this.minWidthFrom=t.changes.mapPos(this.minWidthFrom,1),this.minWidthTo=t.changes.mapPos(this.minWidthTo,1)):this.minWidth=this.minWidthFrom=this.minWidthTo=0),this.view.inputState.composing<0?this.compositionDeco=li.none:(t.transactions.length||this.dirty)&&(this.compositionDeco=function(t,e){let i=un(t);if(!i)return li.none;let{from:n,to:s,node:r,text:o}=i,a=e.mapPos(n,1),f=Math.max(a,e.mapPos(s,-1)),{state:l}=t,h=3==r.nodeType?r.nodeValue:new fn([],l).readRange(r.firstChild,null).text;if(f-a<h.length)if(l.doc.sliceString(a,Math.min(l.doc.length,a+h.length),an)==h)f=a+h.length;else{if(l.doc.sliceString(Math.max(0,f-h.length),f,an)!=h)return li.none;a=f-h.length}else if(l.doc.sliceString(a,f,an)!=h)return li.none;return li.set(li.replace({widget:new dn(r,o)}).range(a,f))}(this.view,t.changes)),(Fe.ie||Fe.chrome)&&!this.compositionDeco.size&&t&&t.state.doc.lines!=t.startState.doc.lines&&(this.forceSelection=!0);let i=function(t,e,i){let n=new pn;return It.compare(t,e,i,n),n.changes}(this.decorations,this.updateDeco(),t.changes);return e=Ii.extendWithRanges(e,i),(0!=this.dirty||0!=e.length)&&(this.updateInner(e,t.startState.doc.length),t.transactions.length&&(this.lastUpdate=Date.now()),!0)}updateInner(t,e){this.view.viewState.mustMeasureContent=!0,this.updateChildren(t,e);let{observer:i}=this.view;i.ignore((()=>{this.dom.style.height=this.view.viewState.contentHeight+"px",this.dom.style.minWidth=this.minWidth?this.minWidth+"px":"";let t=Fe.chrome||Fe.ios?{node:i.selectionRange.focusNode,written:!1}:void 0;this.sync(t),this.dirty=0,t&&(t.written||i.selectionRange.focusNode!=t.node)&&(this.forceSelection=!0),this.dom.style.height=""}));let n=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let t of this.children)t instanceof pi&&t.widget instanceof On&&n.push(t.dom);i.updateGaps(n)}updateChildren(t,e){let i=this.childCursor(e);for(let e=t.length-1;;e--){let n=e>=0?t[e]:null;if(!n)break;let{fromA:s,toA:r,fromB:o,toB:a}=n,{content:f,breakAtStart:l,openStart:h,openEnd:c}=$i.build(this.view.state.doc,o,a,this.decorations,this.pluginDecorationLength),{i:O,off:u}=i.findPos(r,1),{i:d,off:g}=i.findPos(s,-1);Ve(this,d,g,O,u,f,l,h,c)}}updateSelection(t=!1,e=!1){if(t&&this.view.observer.readSelectionRange(),!e&&!this.mayControlSelection()||Fe.ios&&this.view.inputState.rapidCompositionStart)return;let i=this.forceSelection;this.forceSelection=!1;let n=this.view.state.selection.main,s=this.domAtPos(n.anchor),r=n.empty?s:this.domAtPos(n.head);if(Fe.gecko&&n.empty&&(1==(o=s).node.nodeType&&o.node.firstChild&&(0==o.offset||"false"==o.node.childNodes[o.offset-1].contentEditable)&&(o.offset==o.node.childNodes.length||"false"==o.node.childNodes[o.offset].contentEditable))){let t=document.createTextNode("");this.view.observer.ignore((()=>s.node.insertBefore(t,s.node.childNodes[s.offset]||null))),s=r=new Re(t,0),i=!0}var o;let a=this.view.observer.selectionRange;!i&&a.focusNode&&pe(s.node,s.offset,a.anchorNode,a.anchorOffset)&&pe(r.node,r.offset,a.focusNode,a.focusOffset)||(this.view.observer.ignore((()=>{Fe.android&&Fe.chrome&&this.dom.contains(a.focusNode)&&function(t,e){for(let i=t;i&&i!=e;i=i.assignedSlot||i.parentNode)if(1==i.nodeType&&"false"==i.contentEditable)return!0;return!1}(a.focusNode,this.dom)&&(this.dom.blur(),this.dom.focus({preventScroll:!0}));let t=Oe(this.root);if(n.empty){if(Fe.gecko){let t=(e=s.node,i=s.offset,1!=e.nodeType?0:(i&&"false"==e.childNodes[i-1].contentEditable?1:0)|(i<e.childNodes.length&&"false"==e.childNodes[i].contentEditable?2:0));if(t&&3!=t){let e=gn(s.node,s.offset,1==t?1:-1);e&&(s=new Re(e,1==t?0:e.nodeValue.length))}}t.collapse(s.node,s.offset),null!=n.bidiLevel&&null!=a.cursorBidiLevel&&(a.cursorBidiLevel=n.bidiLevel)}else if(t.extend)t.collapse(s.node,s.offset),t.extend(r.node,r.offset);else{let e=document.createRange();n.anchor>n.head&&([s,r]=[r,s]),e.setEnd(r.node,r.offset),e.setStart(s.node,s.offset),t.removeAllRanges(),t.addRange(e)}var e,i})),this.view.observer.setSelectionRange(s,r)),this.impreciseAnchor=s.precise?null:new Re(a.anchorNode,a.anchorOffset),this.impreciseHead=r.precise?null:new Re(a.focusNode,a.focusOffset)}enforceCursorAssoc(){if(this.compositionDeco.size)return;let t=this.view.state.selection.main,e=Oe(this.root);if(!t.empty||!t.assoc||!e.modify)return;let i=gi.find(this,t.head);if(!i)return;let n=i.posAtStart;if(t.head==n||t.head==n+i.length)return;let s=this.coordsAt(t.head,-1),r=this.coordsAt(t.head,1);if(!s||!r||s.bottom>r.top)return;let o=this.domAtPos(t.head+t.assoc);e.collapse(o.node,o.offset),e.modify("move",t.assoc<0?"forward":"backward","lineboundary")}mayControlSelection(){return this.view.state.facet(Zi)?this.root.activeElement==this.dom:de(this.dom,this.view.observer.selectionRange)}nearest(t){for(let e=t;e;){let t=Ze.get(e);if(t&&t.rootView==this)return t;e=e.parentNode}return null}posFromDOM(t,e){let i=this.nearest(t);if(!i)throw new RangeError("Trying to find position for a DOM position outside of the document");return i.localPosFromDOM(t,e)+i.posAtStart}domAtPos(t){let{i:e,off:i}=this.childCursor().findPos(t,-1);for(;e<this.children.length-1;){let t=this.children[e];if(i<t.length||t instanceof gi)break;e++,i=0}return this.children[e].domAtPos(i)}coordsAt(t,e){for(let i=this.length,n=this.children.length-1;;n--){let s=this.children[n],r=i-s.breakAfter-s.length;if(t>r||t==r&&s.type!=fi.WidgetBefore&&s.type!=fi.WidgetAfter&&(!n||2==e||this.children[n-1].breakAfter||this.children[n-1].type==fi.WidgetBefore&&e>-2))return s.coordsAt(t-r,e);i=r}}measureVisibleLineHeights(){let t=[],{from:e,to:i}=this.view.viewState.viewport,n=this.view.contentDOM.clientWidth,s=n>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1,r=-1;for(let o=0,a=0;a<this.children.length;a++){let f=this.children[a],l=o+f.length;if(l>i)break;if(o>=e){let e=f.dom.getBoundingClientRect();if(t.push(e.height),s){let t=f.dom.lastChild,i=t?ge(t):[];if(i.length){let t=i[i.length-1],s=this.view.textDirection==_i.LTR?t.right-e.left:e.right-t.left;s>r&&(r=s,this.minWidth=n,this.minWidthFrom=o,this.minWidthTo=l)}}}o=l+f.breakAfter}return t}measureTextSize(){for(let t of this.children)if(t instanceof gi){let e=t.measureTextSize();if(e)return e}let t,e,i=document.createElement("div");return i.className="cm-line",i.textContent="abc def ghi jkl mno pqr stu",this.view.observer.ignore((()=>{this.dom.appendChild(i);let n=ge(i.firstChild)[0];t=i.getBoundingClientRect().height,e=n?n.width/27:7,i.remove()})),{lineHeight:t,charWidth:e}}childCursor(t=this.length){let e=this.children.length;return e&&(t-=this.children[--e].length),new Ce(this.children,t,e)}computeBlockGapDeco(){let t=[],e=this.view.viewState;for(let i=0,n=0;;n++){let s=n==e.viewports.length?null:e.viewports[n],r=s?s.from-1:this.length;if(r>i){let n=e.lineBlockAt(r).bottom-e.lineBlockAt(i).top;t.push(li.replace({widget:new On(n),block:!0,inclusive:!0}).range(i,r))}if(!s)break;i=s.to+1}return li.set(t)}updateDeco(){let t=this.view.pluginField(Ci.decorations);return this.pluginDecorationLength=t.length,this.decorations=[...t,...this.view.state.facet(Ai),this.compositionDeco,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco]}scrollIntoView(t){let e,{range:i}=t,n=this.coordsAt(i.head,i.empty?i.assoc:i.head>i.anchor?-1:1);if(!n)return;!i.empty&&(e=this.coordsAt(i.anchor,i.anchor>i.head?-1:1))&&(n={left:Math.min(n.left,e.left),top:Math.min(n.top,e.top),right:Math.max(n.right,e.right),bottom:Math.max(n.bottom,e.bottom)});let s=0,r=0,o=0,a=0;for(let t of this.view.pluginField(Ci.scrollMargins))if(t){let{left:e,right:i,top:n,bottom:f}=t;null!=e&&(s=Math.max(s,e)),null!=i&&(r=Math.max(r,i)),null!=n&&(o=Math.max(o,n)),null!=f&&(a=Math.max(a,f))}let f={left:n.left-s,top:n.top-o,right:n.right+r,bottom:n.bottom+a};!function(t,e,i,n,s,r,o,a){let f=t.ownerDocument,l=f.defaultView;for(let h=t;h;)if(1==h.nodeType){let t,c=h==f.body;if(c)t=ve(l);else{if(h.scrollHeight<=h.clientHeight&&h.scrollWidth<=h.clientWidth){h=h.parentNode;continue}let e=h.getBoundingClientRect();t={left:e.left,right:e.left+h.clientWidth,top:e.top,bottom:e.top+h.clientHeight}}let O=0,u=0;if("nearest"==s)e.top<t.top?(u=-(t.top-e.top+o),i>0&&e.bottom>t.bottom+u&&(u=e.bottom-t.bottom+u+o)):e.bottom>t.bottom&&(u=e.bottom-t.bottom+o,i<0&&e.top-u<t.top&&(u=-(t.top+u-e.top+o)));else{let n=e.bottom-e.top,r=t.bottom-t.top;u=("center"==s&&n<=r?e.top+n/2-r/2:"start"==s||"center"==s&&i<0?e.top-o:e.bottom-r+o)-t.top}if("nearest"==n?e.left<t.left?(O=-(t.left-e.left+r),i>0&&e.right>t.right+O&&(O=e.right-t.right+O+r)):e.right>t.right&&(O=e.right-t.right+r,i<0&&e.left<t.left+O&&(O=-(t.left+O-e.left+r))):O=("center"==n?e.left+(e.right-e.left)/2-(t.right-t.left)/2:"start"==n==a?e.left-r:e.right-(t.right-t.left)+r)-t.left,O||u)if(c)l.scrollBy(O,u);else{if(u){let t=h.scrollTop;h.scrollTop+=u,u=h.scrollTop-t}if(O){let t=h.scrollLeft;h.scrollLeft+=O,O=h.scrollLeft-t}e={left:e.left-O,top:e.top-u,right:e.right-O,bottom:e.bottom-u}}if(c)break;h=h.assignedSlot||h.parentNode,n=s="nearest"}else{if(11!=h.nodeType)break;h=h.host}}(this.view.scrollDOM,f,i.head<i.anchor?-1:1,t.x,t.y,t.xMargin,t.yMargin,this.view.textDirection==_i.LTR)}}class On extends ai{constructor(t){super(),this.height=t}toDOM(){let t=document.createElement("div");return this.updateDOM(t),t}eq(t){return t.height==this.height}updateDOM(t){return t.style.height=this.height+"px",!0}get estimatedHeight(){return this.height}}function un(t){let e=t.observer.selectionRange,i=e.focusNode&&gn(e.focusNode,e.focusOffset,0);if(!i)return null;let n=t.docView.nearest(i);if(!n)return null;if(n instanceof gi){let t=i;for(;t.parentNode!=n.dom;)t=t.parentNode;let e=t.previousSibling;for(;e&&!Ze.get(e);)e=e.previousSibling;let s=e?Ze.get(e).posAtEnd:n.posAtStart;return{from:s,to:s,node:t,text:i}}{for(;;){let{parent:t}=n;if(!t)return null;if(t instanceof gi)break;n=t}let t=n.posAtStart;return{from:t,to:t+n.length,node:n.dom,text:i}}}class dn extends ai{constructor(t,e){super(),this.top=t,this.text=e}eq(t){return this.top==t.top&&this.text==t.text}toDOM(){return this.top}ignoreEvent(){return!1}get customView(){return He}}function gn(t,e,i){for(;;){if(3==t.nodeType)return t;if(1==t.nodeType&&e>0&&i<=0)e=Qe(t=t.childNodes[e-1]);else{if(!(1==t.nodeType&&e<t.childNodes.length&&i>=0))return null;t=t.childNodes[e],e=0}}}class pn{constructor(){this.changes=[]}compareRange(t,e){di(t,e,this.changes)}comparePoint(t,e){di(t,e,this.changes)}}function $n(t,e){return e.left>t?e.left-t:Math.max(0,t-e.right)}function mn(t,e){return e.top>t?e.top-t:Math.max(0,t-e.bottom)}function Qn(t,e){return t.top<e.bottom-1&&t.bottom>e.top+1}function Sn(t,e){return e<t.top?{top:e,left:t.left,right:t.right,bottom:t.bottom}:t}function bn(t,e){return e>t.bottom?{top:t.top,left:t.left,right:t.right,bottom:e}:t}function vn(t,e,i){let n,s,r,o,a,f,l,h;for(let c=t.firstChild;c;c=c.nextSibling){let t=ge(c);for(let O=0;O<t.length;O++){let u=t[O];s&&Qn(s,u)&&(u=Sn(bn(u,s.bottom),s.top));let d=$n(e,u),g=mn(i,u);if(0==d&&0==g)return 3==c.nodeType?xn(c,e,i):vn(c,e,i);(!n||o>g||o==g&&r>d)&&(n=c,s=u,r=d,o=g),0==d?i>u.bottom&&(!l||l.bottom<u.bottom)?(a=c,l=u):i<u.top&&(!h||h.top>u.top)&&(f=c,h=u):l&&Qn(l,u)?l=bn(l,u.bottom):h&&Qn(h,u)&&(h=Sn(h,u.top))}}if(l&&l.bottom>=i?(n=a,s=l):h&&h.top<=i&&(n=f,s=h),!n)return{node:t,offset:0};let c=Math.max(s.left,Math.min(s.right,e));return 3==n.nodeType?xn(n,c,i):r||"true"!=n.contentEditable?{node:t,offset:Array.prototype.indexOf.call(t.childNodes,n)+(e>=(s.left+s.right)/2?1:0)}:vn(n,c,i)}function xn(t,e,i){let n=t.nodeValue.length,s=-1,r=1e9,o=0;for(let a=0;a<n;a++){let n=Pe(t,a,a+1).getClientRects();for(let f=0;f<n.length;f++){let l=n[f];if(l.top==l.bottom)continue;o||(o=e-l.left);let h=(l.top>i?l.top-i:i-l.bottom)-1;if(l.left-1<=e&&l.right+1>=e&&h<r){let i=e>=(l.left+l.right)/2,n=i;if(Fe.chrome||Fe.gecko){Pe(t,a).getBoundingClientRect().left==l.right&&(n=!i)}if(h<=0)return{node:t,offset:a+(n?1:0)};s=a+(n?1:0),r=h}}}return{node:t,offset:s>-1?s:o>0?t.nodeValue.length:0}}function wn(t,{x:e,y:i},n,s=-1){var r;let o,a=t.contentDOM.getBoundingClientRect(),f=a.top+t.viewState.paddingTop,{docHeight:l}=t.viewState,h=i-f;if(h<0)return 0;if(h>l)return t.state.doc.length;for(let e=t.defaultLineHeight/2,i=!1;o=t.elementAtHeight(h),o.type!=fi.Text;)for(;h=s>0?o.bottom+e:o.top-e,!(h>=0&&h<=l);){if(i)return n?null:0;i=!0,s=-s}i=f+h;let c=o.from;if(c<t.viewport.from)return 0==t.viewport.from?0:n?null:yn(t,a,o,e,i);if(c>t.viewport.to)return t.viewport.to==t.state.doc.length?t.state.doc.length:n?null:yn(t,a,o,e,i);let O=t.dom.ownerDocument,u=t.root.elementFromPoint?t.root:O,d=u.elementFromPoint(e,i);d&&!t.contentDOM.contains(d)&&(d=null),d||(e=Math.max(a.left+1,Math.min(a.right-1,e)),d=u.elementFromPoint(e,i),d&&!t.contentDOM.contains(d)&&(d=null));let g,p=-1;if(d&&0!=(null===(r=t.docView.nearest(d))||void 0===r?void 0:r.isEditable))if(O.caretPositionFromPoint){let t=O.caretPositionFromPoint(e,i);t&&({offsetNode:g,offset:p}=t)}else if(O.caretRangeFromPoint){let t=O.caretRangeFromPoint(e,i);t&&(({startContainer:g,startOffset:p}=t),Fe.safari&&function(t,e,i){let n;if(3!=t.nodeType||e!=(n=t.nodeValue.length))return!1;for(let e=t.nextSibling;e;e=e.nextSibling)if(1!=e.nodeType||"BR"!=e.nodeName)return!1;return Pe(t,n-1,n).getBoundingClientRect().left>i}(g,p,e)&&(g=void 0))}if(!g||!t.docView.dom.contains(g)){let n=gi.find(t.docView,c);if(!n)return h>o.top+o.height/2?o.to:o.from;({node:g,offset:p}=vn(n.dom,e,i))}return t.docView.posFromDOM(g,p)}function yn(t,e,i,n,s){let r=Math.round((n-e.left)*t.defaultCharacterWidth);if(t.lineWrapping&&i.height>1.5*t.defaultLineHeight){r+=Math.floor((s-i.top)/t.defaultLineHeight)*t.viewState.heightOracle.lineLength}let o=t.state.sliceDoc(i.from,i.to);return i.from+O(o,r,t.state.tabSize)}function Tn(t,e,i,n){let s=t.state.doc.lineAt(e.head),r=t.bidiSpans(s);for(let o=e,a=null;;){let e=on(s,r,t.textDirection,o,i),f=rn;if(!e){if(s.number==(i?t.state.doc.lines:1))return o;f="\n",s=t.state.doc.line(s.number+(i?1:-1)),r=t.bidiSpans(s),e=Y.cursor(i?s.from:s.to)}if(a){if(!a(f))return o}else{if(!n)return e;a=n(f)}o=e}}function Pn(t,e,i){let n=t.pluginField(Ci.atomicRanges);for(;;){let t=!1;for(let s of n)s.between(i.from-1,i.from+1,((n,s,r)=>{i.from>n&&i.from<s&&(i=e.from>i.from?Y.cursor(n,1):Y.cursor(s,-1),t=!0)}));if(!t)return i}}class kn{constructor(t){this.lastKeyCode=0,this.lastKeyTime=0,this.pendingIOSKey=void 0,this.lastSelectionOrigin=null,this.lastSelectionTime=0,this.lastEscPress=0,this.lastContextMenu=0,this.scrollHandlers=[],this.registeredEvents=[],this.customHandlers=[],this.composing=-1,this.compositionFirstChange=null,this.compositionEndedAt=0,this.rapidCompositionStart=!1,this.mouseSelection=null;for(let e in Yn){let i=Yn[e];t.contentDOM.addEventListener(e,(n=>{"keydown"==e&&this.keydown(t,n)||Zn(t,n)&&!this.ignoreDuringComposition(n)&&(this.mustFlushObserver(n)&&t.observer.forceFlush(),this.runCustomHandlers(e,t,n)?n.preventDefault():i(t,n))})),this.registeredEvents.push(e)}this.notifiedFocused=t.hasFocus,this.ensureHandlers(t),Fe.safari&&t.contentDOM.addEventListener("input",(()=>null))}setSelectionOrigin(t){this.lastSelectionOrigin=t,this.lastSelectionTime=Date.now()}ensureHandlers(t){let e=this.customHandlers=t.pluginField(Ji);for(let i of e)for(let e in i.handlers)this.registeredEvents.indexOf(e)<0&&"scroll"!=e&&(this.registeredEvents.push(e),t.contentDOM.addEventListener(e,(i=>{Zn(t,i)&&this.runCustomHandlers(e,t,i)&&i.preventDefault()})))}runCustomHandlers(t,e,i){for(let n of this.customHandlers){let s=n.handlers[t];if(s)try{if(s.call(n.plugin,i,e)||i.defaultPrevented)return!0}catch(t){Xi(e.state,t)}}return!1}runScrollHandlers(t,e){for(let i of this.customHandlers){let n=i.handlers.scroll;if(n)try{n.call(i.plugin,e,t)}catch(e){Xi(t.state,e)}}}keydown(t,e){if(this.lastKeyCode=e.keyCode,this.lastKeyTime=Date.now(),this.screenKeyEvent(t,e))return!0;if(Fe.android&&Fe.chrome&&!e.synthetic&&(13==e.keyCode||8==e.keyCode))return t.observer.delayAndroidKey(e.key,e.keyCode),!0;let i;return!(!Fe.ios||!(i=Wn.find((t=>t.keyCode==e.keyCode)))||e.ctrlKey||e.altKey||e.metaKey||e.synthetic)&&(this.pendingIOSKey=i,setTimeout((()=>this.flushIOSKey(t)),250),!0)}flushIOSKey(t){let e=this.pendingIOSKey;return!!e&&(this.pendingIOSKey=void 0,ke(t.contentDOM,e.key,e.keyCode))}ignoreDuringComposition(t){return!!/^key/.test(t.type)&&(this.composing>0||!!(Fe.safari&&Date.now()-this.compositionEndedAt<500)&&(this.compositionEndedAt=0,!0))}screenKeyEvent(t,e){let i=9==e.keyCode&&Date.now()<this.lastEscPress+2e3;return 27==e.keyCode?this.lastEscPress=Date.now():Rn.indexOf(e.keyCode)<0&&(this.lastEscPress=0),i}mustFlushObserver(t){return"keydown"==t.type&&229!=t.keyCode||"compositionend"==t.type&&!Fe.ios}startMouseSelection(t){this.mouseSelection&&this.mouseSelection.destroy(),this.mouseSelection=t}update(t){this.mouseSelection&&this.mouseSelection.update(t),t.transactions.length&&(this.lastKeyCode=this.lastSelectionTime=0)}destroy(){this.mouseSelection&&this.mouseSelection.destroy()}}const Wn=[{key:"Backspace",keyCode:8,inputType:"deleteContentBackward"},{key:"Enter",keyCode:13,inputType:"insertParagraph"},{key:"Delete",keyCode:46,inputType:"deleteContentForward"}],Rn=[16,17,18,20,91,92,224,225];class Xn{constructor(t,e,i,n){this.view=t,this.style=i,this.mustSelect=n,this.lastEvent=e;let s=t.contentDOM.ownerDocument;s.addEventListener("mousemove",this.move=this.move.bind(this)),s.addEventListener("mouseup",this.up=this.up.bind(this)),this.extend=e.shiftKey,this.multiple=t.state.facet(yt.allowMultipleSelections)&&function(t,e){let i=t.state.facet(bi);return i.length?i[0](e):Fe.mac?e.metaKey:e.ctrlKey}(t,e),this.dragMove=function(t,e){let i=t.state.facet(vi);return i.length?i[0](e):Fe.mac?!e.altKey:!e.ctrlKey}(t,e),this.dragging=!(!function(t,e){let{main:i}=t.state.selection;if(i.empty)return!1;let n=Oe(t.root);if(0==n.rangeCount)return!0;let s=n.getRangeAt(0).getClientRects();for(let t=0;t<s.length;t++){let i=s[t];if(i.left<=e.clientX&&i.right>=e.clientX&&i.top<=e.clientY&&i.bottom>=e.clientY)return!0}return!1}(t,e)||1!=_n(e))&&null,!1===this.dragging&&(e.preventDefault(),this.select(e))}move(t){if(0==t.buttons)return this.destroy();!1===this.dragging&&this.select(this.lastEvent=t)}up(t){null==this.dragging&&this.select(this.lastEvent),this.dragging||t.preventDefault(),this.destroy()}destroy(){let t=this.view.contentDOM.ownerDocument;t.removeEventListener("mousemove",this.move),t.removeEventListener("mouseup",this.up),this.view.inputState.mouseSelection=null}select(t){let e=this.style.get(t,this.extend,this.multiple);!this.mustSelect&&e.eq(this.view.state.selection)&&e.main.assoc==this.view.state.selection.main.assoc||this.view.dispatch({selection:e,userEvent:"select.pointer",scrollIntoView:!0}),this.mustSelect=!1}update(t){t.docChanged&&this.dragging&&(this.dragging=this.dragging.map(t.changes)),this.style.update(t)&&setTimeout((()=>this.select(this.lastEvent)),20)}}function Zn(t,e){if(!e.bubbles)return!0;if(e.defaultPrevented)return!1;for(let i,n=e.target;n!=t.contentDOM;n=n.parentNode)if(!n||11==n.nodeType||(i=Ze.get(n))&&i.ignoreEvent(e))return!1;return!0}const Yn=Object.create(null),Cn=Fe.ie&&Fe.ie_version<15||Fe.ios&&Fe.webkit_version<604;function Vn(t,e){let i,{state:n}=t,s=1,r=n.toText(e),o=r.lines==n.selection.ranges.length;if(null!=Fn&&n.selection.ranges.every((t=>t.empty))&&Fn==r.toString()){let t=-1;i=n.changeByRange((i=>{let a=n.doc.lineAt(i.from);if(a.from==t)return{range:i};t=a.from;let f=n.toText((o?r.line(s++).text:e)+n.lineBreak);return{changes:{from:a.from,insert:f},range:Y.cursor(i.from+f.length)}}))}else i=o?n.changeByRange((t=>{let e=r.line(s++);return{changes:{from:t.from,to:t.to,insert:e.text},range:Y.cursor(t.from+e.length)}})):n.replaceSelection(r);t.dispatch(i,{userEvent:"input.paste",scrollIntoView:!0})}Yn.keydown=(t,e)=>{t.inputState.setSelectionOrigin("select")};let jn=0;function Un(t,e,i,s){if(1==s)return Y.cursor(e,i);if(2==s)return function(t,e,i=1){let s=t.charCategorizer(e),r=t.doc.lineAt(e),o=e-r.from;if(0==r.length)return Y.cursor(e);0==o?i=1:o==r.length&&(i=-1);let a=o,f=o;i<0?a=n(r.text,o,!1):f=n(r.text,o);let l=s(r.text.slice(a,f));for(;a>0;){let t=n(r.text,a,!1);if(s(r.text.slice(t,a))!=l)break;a=t}for(;f<r.length;){let t=n(r.text,f);if(s(r.text.slice(f,t))!=l)break;f=t}return Y.range(a+r.from,f+r.from)}(t.state,e,i);{let i=gi.find(t.docView,e),n=t.state.doc.lineAt(i?i.posAtEnd:e),s=i?i.posAtStart:n.from,r=i?i.posAtEnd:n.to;return r<t.state.doc.length&&r==n.to&&r++,Y.range(s,r)}}Yn.touchstart=(t,e)=>{jn=Date.now(),t.inputState.setSelectionOrigin("select.pointer")},Yn.touchmove=t=>{t.inputState.setSelectionOrigin("select.pointer")},Yn.mousedown=(t,e)=>{if(t.observer.flush(),jn>Date.now()-2e3&&1==_n(e))return;let i=null;for(let n of t.state.facet(xi))if(i=n(t,e),i)break;if(i||0!=e.button||(i=function(t,e){let i=Gn(t,e),n=_n(e),s=t.state.selection,r=i,o=e;return{update(t){t.docChanged&&(i&&(i.pos=t.changes.mapPos(i.pos)),s=s.map(t.changes),o=null)},get(e,a,f){let l;if(o&&e.clientX==o.clientX&&e.clientY==o.clientY?l=r:(l=r=Gn(t,e),o=e),!l||!i)return s;let h=Un(t,l.pos,l.bias,n);if(i.pos!=l.pos&&!a){let e=Un(t,i.pos,i.bias,n),s=Math.min(e.from,h.from),r=Math.max(e.to,h.to);h=s<h.from?Y.range(s,r):Y.range(r,s)}return a?s.replaceRange(s.main.extend(h.from,h.to)):f?s.addRange(h):Y.create([h])}}}(t,e)),i){let n=t.root.activeElement!=t.contentDOM;n&&t.observer.ignore((()=>Te(t.contentDOM))),t.inputState.startMouseSelection(new Xn(t,e,i,n))}};let Jn=(t,e)=>t>=e.top&&t<=e.bottom,Mn=(t,e,i)=>Jn(e,i)&&t>=i.left&&t<=i.right;function Dn(t,e,i,n){let s=gi.find(t.docView,e);if(!s)return 1;let r=e-s.posAtStart;if(0==r)return 1;if(r==s.length)return-1;let o=s.coordsAt(r,-1);if(o&&Mn(i,n,o))return-1;let a=s.coordsAt(r,1);return a&&Mn(i,n,a)?1:o&&Jn(n,o)?-1:1}function Gn(t,e){let i=t.posAtCoords({x:e.clientX,y:e.clientY},!1);return{pos:i,bias:Dn(t,i,e.clientX,e.clientY)}}const An=Fe.ie&&Fe.ie_version<=11;let qn=null,In=0,zn=0;function _n(t){if(!An)return t.detail;let e=qn,i=zn;return qn=t,zn=Date.now(),In=!e||i>Date.now()-400&&Math.abs(e.clientX-t.clientX)<2&&Math.abs(e.clientY-t.clientY)<2?(In+1)%3:1}function Bn(t,e,i,n){if(!i)return;let s=t.posAtCoords({x:e.clientX,y:e.clientY},!1);e.preventDefault();let{mouseSelection:r}=t.inputState,o=n&&r&&r.dragging&&r.dragMove?{from:r.dragging.from,to:r.dragging.to}:null,a={from:s,insert:i},f=t.state.changes(o?[o,a]:a);t.focus(),t.dispatch({changes:f,selection:{anchor:f.mapPos(s,-1),head:f.mapPos(s,1)},userEvent:o?"move.drop":"input.drop"})}Yn.dragstart=(t,e)=>{let{selection:{main:i}}=t.state,{mouseSelection:n}=t.inputState;n&&(n.dragging=i),e.dataTransfer&&(e.dataTransfer.setData("Text",t.state.sliceDoc(i.from,i.to)),e.dataTransfer.effectAllowed="copyMove")},Yn.drop=(t,e)=>{if(!e.dataTransfer)return;if(t.state.readOnly)return e.preventDefault();let i=e.dataTransfer.files;if(i&&i.length){e.preventDefault();let n=Array(i.length),s=0,r=()=>{++s==i.length&&Bn(t,e,n.filter((t=>null!=t)).join(t.state.lineBreak),!1)};for(let t=0;t<i.length;t++){let e=new FileReader;e.onerror=r,e.onload=()=>{/[\x00-\x08\x0e-\x1f]{2}/.test(e.result)||(n[t]=e.result),r()},e.readAsText(i[t])}}else Bn(t,e,e.dataTransfer.getData("Text"),!0)},Yn.paste=(t,e)=>{if(t.state.readOnly)return e.preventDefault();t.observer.flush();let i=Cn?null:e.clipboardData;i?(Vn(t,i.getData("text/plain")),e.preventDefault()):function(t){let e=t.dom.parentNode;if(!e)return;let i=e.appendChild(document.createElement("textarea"));i.style.cssText="position: fixed; left: -10000px; top: 10px",i.focus(),setTimeout((()=>{t.focus(),i.remove(),Vn(t,i.value)}),50)}(t)};let Fn=null;function En(t,e){if(t.docView.compositionDeco.size){t.inputState.rapidCompositionStart=e;try{t.update([])}finally{t.inputState.rapidCompositionStart=!1}}}Yn.copy=Yn.cut=(t,e)=>{let{text:i,ranges:n,linewise:s}=function(t){let e=[],i=[],n=!1;for(let n of t.selection.ranges)n.empty||(e.push(t.sliceDoc(n.from,n.to)),i.push(n));if(!e.length){let s=-1;for(let{from:n}of t.selection.ranges){let r=t.doc.lineAt(n);r.number>s&&(e.push(r.text),i.push({from:r.from,to:Math.min(t.doc.length,r.to+1)})),s=r.number}n=!0}return{text:e.join(t.lineBreak),ranges:i,linewise:n}}(t.state);if(!i&&!s)return;Fn=s?i:null;let r=Cn?null:e.clipboardData;r?(e.preventDefault(),r.clearData(),r.setData("text/plain",i)):function(t,e){let i=t.dom.parentNode;if(!i)return;let n=i.appendChild(document.createElement("textarea"));n.style.cssText="position: fixed; left: -10000px; top: 10px",n.value=e,n.focus(),n.selectionEnd=e.length,n.selectionStart=0,setTimeout((()=>{n.remove(),t.focus()}),50)}(t,i),"cut"!=e.type||t.state.readOnly||t.dispatch({changes:n,scrollIntoView:!0,userEvent:"delete.cut"})},Yn.focus=Yn.blur=t=>{setTimeout((()=>{t.hasFocus!=t.inputState.notifiedFocused&&t.update([])}),10)},Yn.beforeprint=t=>{t.viewState.printing=!0,t.requestMeasure(),setTimeout((()=>{t.viewState.printing=!1,t.requestMeasure()}),2e3)},Yn.compositionstart=Yn.compositionupdate=t=>{null==t.inputState.compositionFirstChange&&(t.inputState.compositionFirstChange=!0),t.inputState.composing<0&&(t.inputState.composing=0,t.docView.compositionDeco.size&&(t.observer.flush(),En(t,!0)))},Yn.compositionend=t=>{t.inputState.composing=-1,t.inputState.compositionEndedAt=Date.now(),t.inputState.compositionFirstChange=null,setTimeout((()=>{t.inputState.composing<0&&En(t,!1)}),50)},Yn.contextmenu=t=>{t.inputState.lastContextMenu=Date.now()},Yn.beforeinput=(t,e)=>{var i;let n;if(Fe.chrome&&Fe.android&&(n=Wn.find((t=>t.inputType==e.inputType)))&&(t.observer.delayAndroidKey(n.key,n.keyCode),"Backspace"==n.key||"Delete"==n.key)){let e=(null===(i=window.visualViewport)||void 0===i?void 0:i.height)||0;setTimeout((()=>{var i;((null===(i=window.visualViewport)||void 0===i?void 0:i.height)||0)>e+10&&t.hasFocus&&(t.contentDOM.blur(),t.focus())}),100)}};const Nn=["pre-wrap","normal","pre-line","break-spaces"];class Ln{constructor(){this.doc=u.empty,this.lineWrapping=!1,this.direction=_i.LTR,this.heightSamples={},this.lineHeight=14,this.charWidth=7,this.lineLength=30,this.heightChanged=!1}heightForGap(t,e){let i=this.doc.lineAt(e).number-this.doc.lineAt(t).number+1;return this.lineWrapping&&(i+=Math.ceil((e-t-i*this.lineLength*.5)/this.lineLength)),this.lineHeight*i}heightForLine(t){if(!this.lineWrapping)return this.lineHeight;return(1+Math.max(0,Math.ceil((t-this.lineLength)/(this.lineLength-5))))*this.lineHeight}setDoc(t){return this.doc=t,this}mustRefreshForStyle(t,e){return Nn.indexOf(t)>-1!=this.lineWrapping||this.direction!=e}mustRefreshForHeights(t){let e=!1;for(let i=0;i<t.length;i++){let n=t[i];n<0?i++:this.heightSamples[Math.floor(10*n)]||(e=!0,this.heightSamples[Math.floor(10*n)]=!0)}return e}refresh(t,e,i,n,s,r){let o=Nn.indexOf(t)>-1,a=Math.round(i)!=Math.round(this.lineHeight)||this.lineWrapping!=o||this.direction!=e;if(this.lineWrapping=o,this.direction=e,this.lineHeight=i,this.charWidth=n,this.lineLength=s,a){this.heightSamples={};for(let t=0;t<r.length;t++){let e=r[t];e<0?t++:this.heightSamples[Math.floor(10*e)]=!0}}return a}}class Kn{constructor(t,e){this.from=t,this.heights=e,this.index=0}get more(){return this.index<this.heights.length}}class Hn{constructor(t,e,i,n,s){this.from=t,this.length=e,this.top=i,this.height=n,this.type=s}get to(){return this.from+this.length}get bottom(){return this.top+this.height}join(t){let e=(Array.isArray(this.type)?this.type:[this]).concat(Array.isArray(t.type)?t.type:[t]);return new Hn(this.from,this.length+t.length,this.top,this.height+t.height,e)}moveY(t){return t?new Hn(this.from,this.length,this.top+t,this.height,Array.isArray(this.type)?this.type.map((e=>e.moveY(t))):this.type):this}}var ts=function(t){return t[t.ByPos=0]="ByPos",t[t.ByHeight=1]="ByHeight",t[t.ByPosNoHeight=2]="ByPosNoHeight",t}(ts||(ts={}));const es=.001;class is{constructor(t,e,i=2){this.length=t,this.height=e,this.flags=i}get outdated(){return(2&this.flags)>0}set outdated(t){this.flags=(t?2:0)|-3&this.flags}setHeight(t,e){this.height!=e&&(Math.abs(this.height-e)>es&&(t.heightChanged=!0),this.height=e)}replace(t,e,i){return is.of(i)}decomposeLeft(t,e){e.push(this)}decomposeRight(t,e){e.push(this)}applyChanges(t,e,i,n){let s=this;for(let r=n.length-1;r>=0;r--){let{fromA:o,toA:a,fromB:f,toB:l}=n[r],h=s.lineAt(o,ts.ByPosNoHeight,e,0,0),c=h.to>=a?h:s.lineAt(a,ts.ByPosNoHeight,e,0,0);for(l+=c.to-a,a=c.to;r>0&&h.from<=n[r-1].toA;)o=n[r-1].fromA,f=n[r-1].fromB,r--,o<h.from&&(h=s.lineAt(o,ts.ByPosNoHeight,e,0,0));f+=h.from-o,o=h.from;let O=fs.build(i,t,f,l);s=s.replace(o,a,O)}return s.updateHeight(i,0)}static empty(){return new ss(0,0)}static of(t){if(1==t.length)return t[0];let e=0,i=t.length,n=0,s=0;for(;;)if(e==i)if(n>2*s){let s=t[e-1];s.break?t.splice(--e,1,s.left,null,s.right):t.splice(--e,1,s.left,s.right),i+=1+s.break,n-=s.size}else{if(!(s>2*n))break;{let e=t[i];e.break?t.splice(i,1,e.left,null,e.right):t.splice(i,1,e.left,e.right),i+=2+e.break,s-=e.size}}else if(n<s){let i=t[e++];i&&(n+=i.size)}else{let e=t[--i];e&&(s+=e.size)}let r=0;return null==t[e-1]?(r=1,e--):null==t[e]&&(r=1,i++),new os(is.of(t.slice(0,e)),r,is.of(t.slice(i)))}}is.prototype.size=1;class ns extends is{constructor(t,e,i){super(t,e),this.type=i}blockAt(t,e,i,n){return new Hn(n,this.length,i,this.height,this.type)}lineAt(t,e,i,n,s){return this.blockAt(0,i,n,s)}forEachLine(t,e,i,n,s,r){r(this.blockAt(0,i,n,s))}updateHeight(t,e=0,i=!1,n){return n&&n.from<=e&&n.more&&this.setHeight(t,n.heights[n.index++]),this.outdated=!1,this}toString(){return`block(${this.length})`}}class ss extends ns{constructor(t,e){super(t,e,fi.Text),this.collapsed=0,this.widgetHeight=0}replace(t,e,i){let n=i[0];return 1==i.length&&(n instanceof ss||n instanceof rs&&4&n.flags)&&Math.abs(this.length-n.length)<10?(n instanceof rs?n=new ss(n.length,this.height):n.height=this.height,this.outdated||(n.outdated=!1),n):is.of(i)}updateHeight(t,e=0,i=!1,n){return n&&n.from<=e&&n.more?this.setHeight(t,n.heights[n.index++]):(i||this.outdated)&&this.setHeight(t,Math.max(this.widgetHeight,t.heightForLine(this.length-this.collapsed))),this.outdated=!1,this}toString(){return`line(${this.length}${this.collapsed?-this.collapsed:""}${this.widgetHeight?":"+this.widgetHeight:""})`}}class rs extends is{constructor(t){super(t,0)}lines(t,e){let i=t.lineAt(e).number,n=t.lineAt(e+this.length).number;return{firstLine:i,lastLine:n,lineHeight:this.height/(n-i+1)}}blockAt(t,e,i,n){let{firstLine:s,lastLine:r,lineHeight:o}=this.lines(e,n),a=Math.max(0,Math.min(r-s,Math.floor((t-i)/o))),{from:f,length:l}=e.line(s+a);return new Hn(f,l,i+o*a,o,fi.Text)}lineAt(t,e,i,n,s){if(e==ts.ByHeight)return this.blockAt(t,i,n,s);if(e==ts.ByPosNoHeight){let{from:e,to:n}=i.lineAt(t);return new Hn(e,n-e,0,0,fi.Text)}let{firstLine:r,lineHeight:o}=this.lines(i,s),{from:a,length:f,number:l}=i.lineAt(t);return new Hn(a,f,n+o*(l-r),o,fi.Text)}forEachLine(t,e,i,n,s,r){let{firstLine:o,lineHeight:a}=this.lines(i,s);for(let f=Math.max(t,s),l=Math.min(s+this.length,e);f<=l;){let e=i.lineAt(f);f==t&&(n+=a*(e.number-o)),r(new Hn(e.from,e.length,n,a,fi.Text)),n+=a,f=e.to+1}}replace(t,e,i){let n=this.length-e;if(n>0){let t=i[i.length-1];t instanceof rs?i[i.length-1]=new rs(t.length+n):i.push(null,new rs(n-1))}if(t>0){let e=i[0];e instanceof rs?i[0]=new rs(t+e.length):i.unshift(new rs(t-1),null)}return is.of(i)}decomposeLeft(t,e){e.push(new rs(t-1),null)}decomposeRight(t,e){e.push(null,new rs(this.length-t-1))}updateHeight(t,e=0,i=!1,n){let s=e+this.length;if(n&&n.from<=e+this.length&&n.more){let i=[],r=Math.max(e,n.from),o=-1,a=t.heightChanged;for(n.from>e&&i.push(new rs(n.from-e-1).updateHeight(t,e));r<=s&&n.more;){let e=t.doc.lineAt(r).length;i.length&&i.push(null);let s=n.heights[n.index++];-1==o?o=s:Math.abs(s-o)>=es&&(o=-2);let a=new ss(e,s);a.outdated=!1,i.push(a),r+=e+1}r<=s&&i.push(null,new rs(s-r).updateHeight(t,r));let f=is.of(i);return t.heightChanged=a||o<0||Math.abs(f.height-this.height)>=es||Math.abs(o-this.lines(t.doc,e).lineHeight)>=es,f}return(i||this.outdated)&&(this.setHeight(t,t.heightForGap(e,e+this.length)),this.outdated=!1),this}toString(){return`gap(${this.length})`}}class os extends is{constructor(t,e,i){super(t.length+e+i.length,t.height+i.height,e|(t.outdated||i.outdated?2:0)),this.left=t,this.right=i,this.size=t.size+i.size}get break(){return 1&this.flags}blockAt(t,e,i,n){let s=i+this.left.height;return t<s?this.left.blockAt(t,e,i,n):this.right.blockAt(t,e,s,n+this.left.length+this.break)}lineAt(t,e,i,n,s){let r=n+this.left.height,o=s+this.left.length+this.break,a=e==ts.ByHeight?t<r:t<o,f=a?this.left.lineAt(t,e,i,n,s):this.right.lineAt(t,e,i,r,o);if(this.break||(a?f.to<o:f.from>o))return f;let l=e==ts.ByPosNoHeight?ts.ByPosNoHeight:ts.ByPos;return a?f.join(this.right.lineAt(o,l,i,r,o)):this.left.lineAt(o,l,i,n,s).join(f)}forEachLine(t,e,i,n,s,r){let o=n+this.left.height,a=s+this.left.length+this.break;if(this.break)t<a&&this.left.forEachLine(t,e,i,n,s,r),e>=a&&this.right.forEachLine(t,e,i,o,a,r);else{let f=this.lineAt(a,ts.ByPos,i,n,s);t<f.from&&this.left.forEachLine(t,f.from-1,i,n,s,r),f.to>=t&&f.from<=e&&r(f),e>f.to&&this.right.forEachLine(f.to+1,e,i,o,a,r)}}replace(t,e,i){let n=this.left.length+this.break;if(e<n)return this.balanced(this.left.replace(t,e,i),this.right);if(t>this.left.length)return this.balanced(this.left,this.right.replace(t-n,e-n,i));let s=[];t>0&&this.decomposeLeft(t,s);let r=s.length;for(let t of i)s.push(t);if(t>0&&as(s,r-1),e<this.length){let t=s.length;this.decomposeRight(e,s),as(s,t)}return is.of(s)}decomposeLeft(t,e){let i=this.left.length;if(t<=i)return this.left.decomposeLeft(t,e);e.push(this.left),this.break&&(i++,t>=i&&e.push(null)),t>i&&this.right.decomposeLeft(t-i,e)}decomposeRight(t,e){let i=this.left.length,n=i+this.break;if(t>=n)return this.right.decomposeRight(t-n,e);t<i&&this.left.decomposeRight(t,e),this.break&&t<n&&e.push(null),e.push(this.right)}balanced(t,e){return t.size>2*e.size||e.size>2*t.size?is.of(this.break?[t,null,e]:[t,e]):(this.left=t,this.right=e,this.height=t.height+e.height,this.outdated=t.outdated||e.outdated,this.size=t.size+e.size,this.length=t.length+this.break+e.length,this)}updateHeight(t,e=0,i=!1,n){let{left:s,right:r}=this,o=e+s.length+this.break,a=null;return n&&n.from<=e+s.length&&n.more?a=s=s.updateHeight(t,e,i,n):s.updateHeight(t,e,i),n&&n.from<=o+r.length&&n.more?a=r=r.updateHeight(t,o,i,n):r.updateHeight(t,o,i),a?this.balanced(s,r):(this.height=this.left.height+this.right.height,this.outdated=!1,this)}toString(){return this.left+(this.break?" ":"-")+this.right}}function as(t,e){let i,n;null==t[e]&&(i=t[e-1])instanceof rs&&(n=t[e+1])instanceof rs&&t.splice(e-1,3,new rs(i.length+1+n.length))}class fs{constructor(t,e){this.pos=t,this.oracle=e,this.nodes=[],this.lineStart=-1,this.lineEnd=-1,this.covering=null,this.writtenTo=t}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering}span(t,e){if(this.lineStart>-1){let t=Math.min(e,this.lineEnd),i=this.nodes[this.nodes.length-1];i instanceof ss?i.length+=t-this.pos:(t>this.pos||!this.isCovered)&&this.nodes.push(new ss(t-this.pos,-1)),this.writtenTo=t,e>t&&(this.nodes.push(null),this.writtenTo++,this.lineStart=-1)}this.pos=e}point(t,e,i){if(t<e||i.heightRelevant){let n=i.widget?i.widget.estimatedHeight:0;n<0&&(n=this.oracle.lineHeight);let s=e-t;i.block?this.addBlock(new ns(s,n,i.type)):(s||n>=5)&&this.addLineDeco(n,s)}else e>t&&this.span(t,e);this.lineEnd>-1&&this.lineEnd<this.pos&&(this.lineEnd=this.oracle.doc.lineAt(this.pos).to)}enterLine(){if(this.lineStart>-1)return;let{from:t,to:e}=this.oracle.doc.lineAt(this.pos);this.lineStart=t,this.lineEnd=e,this.writtenTo<t&&((this.writtenTo<t-1||null==this.nodes[this.nodes.length-1])&&this.nodes.push(this.blankContent(this.writtenTo,t-1)),this.nodes.push(null)),this.pos>t&&this.nodes.push(new ss(this.pos-t,-1)),this.writtenTo=this.pos}blankContent(t,e){let i=new rs(e-t);return this.oracle.doc.lineAt(t).to==e&&(i.flags|=4),i}ensureLine(){this.enterLine();let t=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(t instanceof ss)return t;let e=new ss(0,-1);return this.nodes.push(e),e}addBlock(t){this.enterLine(),t.type!=fi.WidgetAfter||this.isCovered||this.ensureLine(),this.nodes.push(t),this.writtenTo=this.pos=this.pos+t.length,t.type!=fi.WidgetBefore&&(this.covering=t)}addLineDeco(t,e){let i=this.ensureLine();i.length+=e,i.collapsed+=e,i.widgetHeight=Math.max(i.widgetHeight,t),this.writtenTo=this.pos=this.pos+e}finish(t){let e=0==this.nodes.length?null:this.nodes[this.nodes.length-1];!(this.lineStart>-1)||e instanceof ss||this.isCovered?(this.writtenTo<this.pos||null==e)&&this.nodes.push(this.blankContent(this.writtenTo,this.pos)):this.nodes.push(new ss(0,-1));let i=t;for(let t of this.nodes)t instanceof ss&&t.updateHeight(this.oracle,i),i+=t?t.length:1;return this.nodes}static build(t,e,i,n){let s=new fs(i,t);return It.spans(e,i,n,s,0),s.finish(i)}}class ls{constructor(){this.changes=[]}compareRange(){}comparePoint(t,e,i,n){(t<e||i&&i.heightRelevant||n&&n.heightRelevant)&&di(t,e,this.changes,5)}}class hs{constructor(t,e,i){this.from=t,this.to=e,this.size=i}static same(t,e){if(t.length!=e.length)return!1;for(let i=0;i<t.length;i++){let n=t[i],s=e[i];if(n.from!=s.from||n.to!=s.to||n.size!=s.size)return!1}return!0}draw(t){return li.replace({widget:new cs(this.size,t)}).range(this.from,this.to)}}class cs extends ai{constructor(t,e){super(),this.size=t,this.vertical=e}eq(t){return t.size==this.size&&t.vertical==this.vertical}toDOM(){let t=document.createElement("div");return this.vertical?t.style.height=this.size+"px":(t.style.width=this.size+"px",t.style.height="2px",t.style.display="inline-block"),t}get estimatedHeight(){return this.vertical?this.size:-1}}class Os{constructor(t){this.state=t,this.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0},this.inView=!0,this.paddingTop=0,this.paddingBottom=0,this.contentDOMWidth=0,this.contentDOMHeight=0,this.editorHeight=0,this.editorWidth=0,this.heightOracle=new Ln,this.scaler=Qs,this.scrollTarget=null,this.printing=!1,this.mustMeasureContent=!0,this.visibleRanges=[],this.mustEnforceCursorAssoc=!1,this.heightMap=is.empty().applyChanges(t.facet(Ai),u.empty,this.heightOracle.setDoc(t.doc),[new Ii(0,0,0,t.doc.length)]),this.viewport=this.getViewport(0,null),this.updateViewportLines(),this.updateForViewport(),this.lineGaps=this.ensureLineGaps([]),this.lineGapDeco=li.set(this.lineGaps.map((t=>t.draw(!1)))),this.computeVisibleRanges()}updateForViewport(){let t=[this.viewport],{main:e}=this.state.selection;for(let i=0;i<=1;i++){let n=i?e.head:e.anchor;if(!t.some((({from:t,to:e})=>n>=t&&n<=e))){let{from:e,to:i}=this.lineBlockAt(n);t.push(new us(e,i))}}this.viewports=t.sort(((t,e)=>t.from-e.from)),this.scaler=this.heightMap.height<=7e6?Qs:new Ss(this.heightOracle.doc,this.heightMap,this.viewports)}updateViewportLines(){this.viewportLines=[],this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.state.doc,0,0,(t=>{this.viewportLines.push(1==this.scaler.scale?t:bs(t,this.scaler))}))}update(t,e=null){let i=this.state;this.state=t.state;let n=this.state.facet(Ai),s=t.changedRanges,r=Ii.extendWithRanges(s,function(t,e,i){let n=new ls;return It.compare(t,e,i,n,0),n.changes}(t.startState.facet(Ai),n,t?t.changes:y.empty(this.state.doc.length))),o=this.heightMap.height;this.heightMap=this.heightMap.applyChanges(n,i.doc,this.heightOracle.setDoc(this.state.doc),r),this.heightMap.height!=o&&(t.flags|=2);let a=r.length?this.mapViewport(this.viewport,t.changes):this.viewport;(e&&(e.range.head<a.from||e.range.head>a.to)||!this.viewportIsAppropriate(a))&&(a=this.getViewport(0,e));let f=!t.changes.empty||2&t.flags||a.from!=this.viewport.from||a.to!=this.viewport.to;this.viewport=a,this.updateForViewport(),f&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,t.changes))),t.flags|=this.computeVisibleRanges(),e&&(this.scrollTarget=e),!this.mustEnforceCursorAssoc&&t.selectionSet&&t.view.lineWrapping&&t.state.selection.main.empty&&t.state.selection.main.assoc&&(this.mustEnforceCursorAssoc=!0)}measure(t){let e=t.contentDOM,i=window.getComputedStyle(e),n=this.heightOracle,s=i.whiteSpace,r="rtl"==i.direction?_i.RTL:_i.LTR,o=this.heightOracle.mustRefreshForStyle(s,r),a=o||this.mustMeasureContent||this.contentDOMHeight!=e.clientHeight,f=0,l=0;if(this.editorWidth!=t.scrollDOM.clientWidth&&(n.lineWrapping&&(a=!0),this.editorWidth=t.scrollDOM.clientWidth,f|=8),a){this.mustMeasureContent=!1,this.contentDOMHeight=e.clientHeight;let t=parseInt(i.paddingTop)||0,n=parseInt(i.paddingBottom)||0;this.paddingTop==t&&this.paddingBottom==n||(f|=8,this.paddingTop=t,this.paddingBottom=n)}let h=this.printing?{top:-1e8,bottom:1e8,left:-1e8,right:1e8}:function(t,e){let i=t.getBoundingClientRect(),n=Math.max(0,i.left),s=Math.min(innerWidth,i.right),r=Math.max(0,i.top),o=Math.min(innerHeight,i.bottom),a=t.ownerDocument.body;for(let e=t.parentNode;e&&e!=a;)if(1==e.nodeType){let t=e,i=window.getComputedStyle(t);if((t.scrollHeight>t.clientHeight||t.scrollWidth>t.clientWidth)&&"visible"!=i.overflow){let e=t.getBoundingClientRect();n=Math.max(n,e.left),s=Math.min(s,e.right),r=Math.max(r,e.top),o=Math.min(o,e.bottom)}e="absolute"==i.position||"fixed"==i.position?t.offsetParent:t.parentNode}else{if(11!=e.nodeType)break;e=e.host}return{left:n-i.left,right:Math.max(n,s)-i.left,top:r-(i.top+e),bottom:Math.max(r,o)-(i.top+e)}}(e,this.paddingTop),c=h.top-this.pixelViewport.top,O=h.bottom-this.pixelViewport.bottom;this.pixelViewport=h;let u=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(u!=this.inView&&(this.inView=u,u&&(a=!0)),!this.inView)return 0;let d=e.clientWidth;if(this.contentDOMWidth==d&&this.editorHeight==t.scrollDOM.clientHeight||(this.contentDOMWidth=d,this.editorHeight=t.scrollDOM.clientHeight,f|=8),a){let e=t.docView.measureVisibleLineHeights();if(n.mustRefreshForHeights(e)&&(o=!0),o||n.lineWrapping&&Math.abs(d-this.contentDOMWidth)>n.charWidth){let{lineHeight:i,charWidth:a}=t.docView.measureTextSize();o=n.refresh(s,r,i,a,d/a,e),o&&(t.docView.minWidth=0,f|=8)}c>0&&O>0?l=Math.max(c,O):c<0&&O<0&&(l=Math.min(c,O)),n.heightChanged=!1,this.heightMap=this.heightMap.updateHeight(n,0,o,new Kn(this.viewport.from,e)),n.heightChanged&&(f|=2)}let g=!this.viewportIsAppropriate(this.viewport,l)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);return g&&(this.viewport=this.getViewport(l,this.scrollTarget)),this.updateForViewport(),(2&f||g)&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(o?[]:this.lineGaps)),f|=this.computeVisibleRanges(),this.mustEnforceCursorAssoc&&(this.mustEnforceCursorAssoc=!1,t.docView.enforceCursorAssoc()),f}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top)}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom)}getViewport(t,e){let i=.5-Math.max(-.5,Math.min(.5,t/1e3/2)),n=this.heightMap,s=this.state.doc,{visibleTop:r,visibleBottom:o}=this,a=new us(n.lineAt(r-1e3*i,ts.ByHeight,s,0,0).from,n.lineAt(o+1e3*(1-i),ts.ByHeight,s,0,0).to);if(e){let{head:t}=e.range;if(t<a.from||t>a.to){let i,r=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top),o=n.lineAt(t,ts.ByPos,s,0,0);i="center"==e.y?(o.top+o.bottom)/2-r/2:"start"==e.y||"nearest"==e.y&&t<a.from?o.top:o.bottom-r,a=new us(n.lineAt(i-500,ts.ByHeight,s,0,0).from,n.lineAt(i+r+500,ts.ByHeight,s,0,0).to)}}return a}mapViewport(t,e){let i=e.mapPos(t.from,-1),n=e.mapPos(t.to,1);return new us(this.heightMap.lineAt(i,ts.ByPos,this.state.doc,0,0).from,this.heightMap.lineAt(n,ts.ByPos,this.state.doc,0,0).to)}viewportIsAppropriate({from:t,to:e},i=0){if(!this.inView)return!0;let{top:n}=this.heightMap.lineAt(t,ts.ByPos,this.state.doc,0,0),{bottom:s}=this.heightMap.lineAt(e,ts.ByPos,this.state.doc,0,0),{visibleTop:r,visibleBottom:o}=this;return(0==t||n<=r-Math.max(10,Math.min(-i,250)))&&(e==this.state.doc.length||s>=o+Math.max(10,Math.min(i,250)))&&n>r-2e3&&s<o+2e3}mapLineGaps(t,e){if(!t.length||e.empty)return t;let i=[];for(let n of t)e.touchesRange(n.from,n.to)||i.push(new hs(e.mapPos(n.from),e.mapPos(n.to),n.size));return i}ensureLineGaps(t){let e=[];if(this.heightOracle.direction!=_i.LTR)return e;for(let i of this.viewportLines){if(i.length<4e3)continue;let n,s,r=ds(i.from,i.to,this.state);if(r.total<4e3)continue;if(this.heightOracle.lineWrapping){let t=2e3/this.heightOracle.lineLength*this.heightOracle.lineHeight;n=gs(r,(this.visibleTop-i.top-t)/i.height),s=gs(r,(this.visibleBottom-i.top+t)/i.height)}else{let t=r.total*this.heightOracle.charWidth,e=2e3*this.heightOracle.charWidth;n=gs(r,(this.pixelViewport.left-e)/t),s=gs(r,(this.pixelViewport.right+e)/t)}let o=[];n>i.from&&o.push({from:i.from,to:n}),s<i.to&&o.push({from:s,to:i.to});let a=this.state.selection.main;a.from>=i.from&&a.from<=i.to&&$s(o,a.from-10,a.from+10),!a.empty&&a.to>=i.from&&a.to<=i.to&&$s(o,a.to-10,a.to+10);for(let{from:n,to:s}of o)s-n>1e3&&e.push(ms(t,(t=>t.from>=i.from&&t.to<=i.to&&Math.abs(t.from-n)<1e3&&Math.abs(t.to-s)<1e3))||new hs(n,s,this.gapSize(i,n,s,r)))}return e}gapSize(t,e,i,n){let s=ps(n,i)-ps(n,e);return this.heightOracle.lineWrapping?t.height*s:n.total*this.heightOracle.charWidth*s}updateLineGaps(t){hs.same(t,this.lineGaps)||(this.lineGaps=t,this.lineGapDeco=li.set(t.map((t=>t.draw(this.heightOracle.lineWrapping)))))}computeVisibleRanges(){let t=this.state.facet(Ai);this.lineGaps.length&&(t=t.concat(this.lineGapDeco));let e=[];It.spans(t,this.viewport.from,this.viewport.to,{span(t,i){e.push({from:t,to:i})},point(){}},20);let i=e.length!=this.visibleRanges.length||this.visibleRanges.some(((t,i)=>t.from!=e[i].from||t.to!=e[i].to));return this.visibleRanges=e,i?4:0}lineBlockAt(t){return t>=this.viewport.from&&t<=this.viewport.to&&this.viewportLines.find((e=>e.from<=t&&e.to>=t))||bs(this.heightMap.lineAt(t,ts.ByPos,this.state.doc,0,0),this.scaler)}lineBlockAtHeight(t){return bs(this.heightMap.lineAt(this.scaler.fromDOM(t),ts.ByHeight,this.state.doc,0,0),this.scaler)}elementAtHeight(t){return bs(this.heightMap.blockAt(this.scaler.fromDOM(t),this.state.doc,0,0),this.scaler)}get docHeight(){return this.scaler.toDOM(this.heightMap.height)}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom}}class us{constructor(t,e){this.from=t,this.to=e}}function ds(t,e,i){let n=[],s=t,r=0;return It.spans(i.facet(Ai),t,e,{span(){},point(t,e){t>s&&(n.push({from:s,to:t}),r+=t-s),s=e}},20),s<e&&(n.push({from:s,to:e}),r+=e-s),{total:r,ranges:n}}function gs({total:t,ranges:e},i){if(i<=0)return e[0].from;if(i>=1)return e[e.length-1].to;let n=Math.floor(t*i);for(let t=0;;t++){let{from:i,to:s}=e[t],r=s-i;if(n<=r)return i+n;n-=r}}function ps(t,e){let i=0;for(let{from:n,to:s}of t.ranges){if(e<=s){i+=e-n;break}i+=s-n}return i/t.total}function $s(t,e,i){for(let n=0;n<t.length;n++){let s=t[n];if(s.from<i&&s.to>e){let r=[];s.from<e&&r.push({from:s.from,to:e}),s.to>i&&r.push({from:i,to:s.to}),t.splice(n,1,...r),n+=r.length-1}}}function ms(t,e){for(let i of t)if(e(i))return i}const Qs={toDOM:t=>t,fromDOM:t=>t,scale:1};class Ss{constructor(t,e,i){let n=0,s=0,r=0;this.viewports=i.map((({from:i,to:s})=>{let r=e.lineAt(i,ts.ByPos,t,0,0).top,o=e.lineAt(s,ts.ByPos,t,0,0).bottom;return n+=o-r,{from:i,to:s,top:r,bottom:o,domTop:0,domBottom:0}})),this.scale=(7e6-n)/(e.height-n);for(let t of this.viewports)t.domTop=r+(t.top-s)*this.scale,r=t.domBottom=t.domTop+(t.bottom-t.top),s=t.bottom}toDOM(t){for(let e=0,i=0,n=0;;e++){let s=e<this.viewports.length?this.viewports[e]:null;if(!s||t<s.top)return n+(t-i)*this.scale;if(t<=s.bottom)return s.domTop+(t-s.top);i=s.bottom,n=s.domBottom}}fromDOM(t){for(let e=0,i=0,n=0;;e++){let s=e<this.viewports.length?this.viewports[e]:null;if(!s||t<s.domTop)return i+(t-n)/this.scale;if(t<=s.domBottom)return s.top+(t-s.domTop);i=s.bottom,n=s.domBottom}}}function bs(t,e){if(1==e.scale)return t;let i=e.toDOM(t.top),n=e.toDOM(t.bottom);return new Hn(t.from,t.length,i,n-i,Array.isArray(t.type)?t.type.map((t=>bs(t,e))):t.type)}const vs=U.define({combine:t=>t.join(" ")}),xs=U.define({combine:t=>t.indexOf(!0)>-1}),ws=Ut.newName(),ys=Ut.newName(),Ts=Ut.newName(),Ps={"&light":"."+ys,"&dark":"."+Ts};function ks(t,e,i){return new Ut(e,{finish:e=>/&/.test(e)?e.replace(/&\w*/,(e=>{if("&"==e)return t;if(!i||!i[e])throw new RangeError(`Unsupported selector: ${e}`);return i[e]})):t+" "+e})}const Ws=ks("."+ws,{"&.cm-editor":{position:"relative !important",boxSizing:"border-box","&.cm-focused":{outline:"1px dotted #212121"},display:"flex !important",flexDirection:"column"},".cm-scroller":{display:"flex !important",alignItems:"flex-start !important",fontFamily:"monospace",lineHeight:1.4,height:"100%",overflowX:"auto",position:"relative",zIndex:0},".cm-content":{margin:0,flexGrow:2,minHeight:"100%",display:"block",whiteSpace:"pre",wordWrap:"normal",boxSizing:"border-box",padding:"4px 0",outline:"none","&[contenteditable=true]":{WebkitUserModify:"read-write-plaintext-only"}},".cm-lineWrapping":{whiteSpace_fallback:"pre-wrap",whiteSpace:"break-spaces",wordBreak:"break-word",overflowWrap:"anywhere"},"&light .cm-content":{caretColor:"black"},"&dark .cm-content":{caretColor:"white"},".cm-line":{display:"block",padding:"0 2px 0 4px"},".cm-selectionLayer":{zIndex:-1,contain:"size style"},".cm-selectionBackground":{position:"absolute"},"&light .cm-selectionBackground":{background:"#d9d9d9"},"&dark .cm-selectionBackground":{background:"#222"},"&light.cm-focused .cm-selectionBackground":{background:"#d7d4f0"},"&dark.cm-focused .cm-selectionBackground":{background:"#233"},".cm-cursorLayer":{zIndex:100,contain:"size style",pointerEvents:"none"},"&.cm-focused .cm-cursorLayer":{animation:"steps(1) cm-blink 1.2s infinite"},"@keyframes cm-blink":{"0%":{},"50%":{visibility:"hidden"},"100%":{}},"@keyframes cm-blink2":{"0%":{},"50%":{visibility:"hidden"},"100%":{}},".cm-cursor, .cm-dropCursor":{position:"absolute",borderLeft:"1.2px solid black",marginLeft:"-0.6px",pointerEvents:"none"},".cm-cursor":{display:"none"},"&dark .cm-cursor":{borderLeftColor:"#444"},"&.cm-focused .cm-cursor":{display:"block"},"&light .cm-activeLine":{backgroundColor:"#f3f9ff"},"&dark .cm-activeLine":{backgroundColor:"#223039"},"&light .cm-specialChar":{color:"red"},"&dark .cm-specialChar":{color:"#f78"},".cm-tab":{display:"inline-block",overflow:"hidden",verticalAlign:"bottom"},".cm-widgetBuffer":{verticalAlign:"text-bottom",height:"1em"},".cm-placeholder":{color:"#888",display:"inline-block",verticalAlign:"top"},".cm-button":{verticalAlign:"middle",color:"inherit",fontSize:"70%",padding:".2em 1em",borderRadius:"1px"},"&light .cm-button":{backgroundImage:"linear-gradient(#eff1f5, #d9d9df)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#b4b4b4, #d0d3d6)"}},"&dark .cm-button":{backgroundImage:"linear-gradient(#393939, #111)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#111, #333)"}},".cm-textfield":{verticalAlign:"middle",color:"inherit",fontSize:"70%",border:"1px solid silver",padding:".2em .5em"},"&light .cm-textfield":{backgroundColor:"white"},"&dark .cm-textfield":{border:"1px solid #555",backgroundColor:"inherit"}},Ps),Rs={childList:!0,characterData:!0,subtree:!0,attributes:!0,characterDataOldValue:!0},Xs=Fe.ie&&Fe.ie_version<=11;class Zs{constructor(t,e,i){this.view=t,this.onChange=e,this.onScrollChanged=i,this.active=!1,this.selectionRange=new xe,this.selectionChanged=!1,this.delayedFlush=-1,this.resizeTimeout=-1,this.queue=[],this.delayedAndroidKey=null,this.scrollTargets=[],this.intersection=null,this.resize=null,this.intersecting=!1,this.gapIntersection=null,this.gaps=[],this.parentCheck=-1,this.dom=t.contentDOM,this.observer=new MutationObserver((e=>{for(let t of e)this.queue.push(t);(Fe.ie&&Fe.ie_version<=11||Fe.ios&&t.composing)&&e.some((t=>"childList"==t.type&&t.removedNodes.length||"characterData"==t.type&&t.oldValue.length>t.target.nodeValue.length))?this.flushSoon():this.flush()})),Xs&&(this.onCharData=t=>{this.queue.push({target:t.target,type:"characterData",oldValue:t.prevValue}),this.flushSoon()}),this.onSelectionChange=this.onSelectionChange.bind(this),"function"==typeof ResizeObserver&&(this.resize=new ResizeObserver((()=>{this.view.docView.lastUpdate<Date.now()-75&&this.resizeTimeout<0&&(this.resizeTimeout=setTimeout((()=>{this.resizeTimeout=-1,this.view.requestMeasure()}),50))})),this.resize.observe(t.scrollDOM)),this.start(),this.onScroll=this.onScroll.bind(this),window.addEventListener("scroll",this.onScroll),"function"==typeof IntersectionObserver&&(this.intersection=new IntersectionObserver((t=>{this.parentCheck<0&&(this.parentCheck=setTimeout(this.listenForScroll.bind(this),1e3)),t.length>0&&t[t.length-1].intersectionRatio>0!=this.intersecting&&(this.intersecting=!this.intersecting,this.intersecting!=this.view.inView&&this.onScrollChanged(document.createEvent("Event")))}),{}),this.intersection.observe(this.dom),this.gapIntersection=new IntersectionObserver((t=>{t.length>0&&t[t.length-1].intersectionRatio>0&&this.onScrollChanged(document.createEvent("Event"))}),{})),this.listenForScroll(),this.readSelectionRange(),this.dom.ownerDocument.addEventListener("selectionchange",this.onSelectionChange)}onScroll(t){this.intersecting&&this.flush(!1),this.onScrollChanged(t)}updateGaps(t){if(this.gapIntersection&&(t.length!=this.gaps.length||this.gaps.some(((e,i)=>e!=t[i])))){this.gapIntersection.disconnect();for(let e of t)this.gapIntersection.observe(e);this.gaps=t}}onSelectionChange(t){if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view:e}=this,i=this.selectionRange;if(e.state.facet(Zi)?e.root.activeElement!=this.dom:!de(e.dom,i))return;let n=i.anchorNode&&e.docView.nearest(i.anchorNode);n&&n.ignoreEvent(t)||((Fe.ie&&Fe.ie_version<=11||Fe.android&&Fe.chrome)&&!e.state.selection.main.empty&&i.focusNode&&pe(i.focusNode,i.focusOffset,i.anchorNode,i.anchorOffset)?this.flushSoon():this.flush(!1))}readSelectionRange(){let{root:t}=this.view,e=Oe(t),i=Fe.safari&&11==t.nodeType&&function(){let t=document.activeElement;for(;t&&t.shadowRoot;)t=t.shadowRoot.activeElement;return t}()==this.view.contentDOM&&function(t){let e=null;function i(t){t.preventDefault(),t.stopImmediatePropagation(),e=t.getTargetRanges()[0]}if(t.contentDOM.addEventListener("beforeinput",i,!0),document.execCommand("indent"),t.contentDOM.removeEventListener("beforeinput",i,!0),!e)return null;let n=e.startContainer,s=e.startOffset,r=e.endContainer,o=e.endOffset,a=t.docView.domAtPos(t.state.selection.main.anchor);pe(a.node,a.offset,r,o)&&([n,s,r,o]=[r,o,n,s]);return{anchorNode:n,anchorOffset:s,focusNode:r,focusOffset:o}}(this.view)||e;return!this.selectionRange.eq(i)&&(this.selectionRange.setRange(i),this.selectionChanged=!0)}setSelectionRange(t,e){this.selectionRange.set(t.node,t.offset,e.node,e.offset),this.selectionChanged=!1}listenForScroll(){this.parentCheck=-1;let t=0,e=null;for(let i=this.dom;i;)if(1==i.nodeType)!e&&t<this.scrollTargets.length&&this.scrollTargets[t]==i?t++:e||(e=this.scrollTargets.slice(0,t)),e&&e.push(i),i=i.assignedSlot||i.parentNode;else{if(11!=i.nodeType)break;i=i.host}if(t<this.scrollTargets.length&&!e&&(e=this.scrollTargets.slice(0,t)),e){for(let t of this.scrollTargets)t.removeEventListener("scroll",this.onScroll);for(let t of this.scrollTargets=e)t.addEventListener("scroll",this.onScroll)}}ignore(t){if(!this.active)return t();try{return this.stop(),t()}finally{this.start(),this.clear()}}start(){this.active||(this.observer.observe(this.dom,Rs),Xs&&this.dom.addEventListener("DOMCharacterDataModified",this.onCharData),this.active=!0)}stop(){this.active&&(this.active=!1,this.observer.disconnect(),Xs&&this.dom.removeEventListener("DOMCharacterDataModified",this.onCharData))}clear(){this.processRecords(),this.queue.length=0,this.selectionChanged=!1}delayAndroidKey(t,e){this.delayedAndroidKey||requestAnimationFrame((()=>{let t=this.delayedAndroidKey;this.delayedAndroidKey=null;let e=this.view.state;ke(this.view.contentDOM,t.key,t.keyCode)?this.processRecords():this.flush(),this.view.state==e&&this.view.update([])})),this.delayedAndroidKey&&"Enter"!=t||(this.delayedAndroidKey={key:t,keyCode:e})}flushSoon(){this.delayedFlush<0&&(this.delayedFlush=window.setTimeout((()=>{this.delayedFlush=-1,this.flush()}),20))}forceFlush(){this.delayedFlush>=0&&(window.clearTimeout(this.delayedFlush),this.delayedFlush=-1,this.flush())}processRecords(){let t=this.queue;for(let e of this.observer.takeRecords())t.push(e);t.length&&(this.queue=[]);let e=-1,i=-1,n=!1;for(let s of t){let t=this.readMutation(s);t&&(t.typeOver&&(n=!0),-1==e?({from:e,to:i}=t):(e=Math.min(t.from,e),i=Math.max(t.to,i)))}return{from:e,to:i,typeOver:n}}flush(t=!0){if(this.delayedFlush>=0||this.delayedAndroidKey)return;t&&this.readSelectionRange();let{from:e,to:i,typeOver:n}=this.processRecords(),s=this.selectionChanged&&de(this.dom,this.selectionRange);if(e<0&&!s)return;this.selectionChanged=!1;let r=this.view.state;this.onChange(e,i,n),this.view.state==r&&this.view.update([])}readMutation(t){let e=this.view.docView.nearest(t.target);if(!e||e.ignoreMutation(t))return null;if(e.markDirty("attributes"==t.type),"attributes"==t.type&&(e.dirty|=4),"childList"==t.type){let i=Ys(e,t.previousSibling||t.target.previousSibling,-1),n=Ys(e,t.nextSibling||t.target.nextSibling,1);return{from:i?e.posAfter(i):e.posAtStart,to:n?e.posBefore(n):e.posAtEnd,typeOver:!1}}return"characterData"==t.type?{from:e.posAtStart,to:e.posAtEnd,typeOver:t.target.nodeValue==t.oldValue}:null}destroy(){var t,e,i;this.stop(),null===(t=this.intersection)||void 0===t||t.disconnect(),null===(e=this.gapIntersection)||void 0===e||e.disconnect(),null===(i=this.resize)||void 0===i||i.disconnect();for(let t of this.scrollTargets)t.removeEventListener("scroll",this.onScroll);window.removeEventListener("scroll",this.onScroll),this.dom.ownerDocument.removeEventListener("selectionchange",this.onSelectionChange),clearTimeout(this.parentCheck),clearTimeout(this.resizeTimeout)}}function Ys(t,e,i){for(;e;){let n=Ze.get(e);if(n&&n.parent==t)return n;let s=e.parentNode;e=s!=t.dom?s:i>0?e.nextSibling:e.previousSibling}return null}function Cs(t,e,i,n){let s,r,o=t.state.selection.main;if(e>-1){let n=t.docView.domBoundsAround(e,i,0);if(!n||t.state.readOnly)return;let{from:a,to:f}=n,l=t.docView.impreciseHead||t.docView.impreciseAnchor?[]:function(t){let e=[];if(t.root.activeElement!=t.contentDOM)return e;let{anchorNode:i,anchorOffset:n,focusNode:s,focusOffset:r}=t.observer.selectionRange;i&&(e.push(new hn(i,n)),s==i&&r==n||e.push(new hn(s,r)));return e}(t),h=new fn(l,t.state);h.readRange(n.startDOM,n.endDOM);let c=o.from,O=null;(8===t.inputState.lastKeyCode&&t.inputState.lastKeyTime>Date.now()-100||Fe.android&&h.text.length<f-a)&&(c=o.to,O="end");let d=function(t,e,i,n){let s=Math.min(t.length,e.length),r=0;for(;r<s&&t.charCodeAt(r)==e.charCodeAt(r);)r++;if(r==s&&t.length==e.length)return null;let o=t.length,a=e.length;for(;o>0&&a>0&&t.charCodeAt(o-1)==e.charCodeAt(a-1);)o--,a--;if("end"==n){i-=o+Math.max(0,r-Math.min(o,a))-r}if(o<r&&t.length<e.length){r-=i<=r&&i>=o?r-i:0,a=r+(a-o),o=r}else if(a<r){r-=i<=r&&i>=a?r-i:0,o=r+(o-a),a=r}return{from:r,toA:o,toB:a}}(t.state.doc.sliceString(a,f,an),h.text,c-a,O);d&&(Fe.chrome&&13==t.inputState.lastKeyCode&&d.toB==d.from+2&&"\uffff\uffff"==h.text.slice(d.from,d.toB)&&d.toB--,s={from:a+d.from,to:a+d.toA,insert:u.of(h.text.slice(d.from,d.toB).split(an))}),r=function(t,e){if(0==t.length)return null;let i=t[0].pos,n=2==t.length?t[1].pos:i;return i>-1&&n>-1?Y.single(i+e,n+e):null}(l,a)}else if(t.hasFocus||!t.state.facet(Zi)){let e=t.observer.selectionRange,{impreciseHead:i,impreciseAnchor:n}=t.docView,s=i&&i.node==e.focusNode&&i.offset==e.focusOffset||!ue(t.contentDOM,e.focusNode)?t.state.selection.main.head:t.docView.posFromDOM(e.focusNode,e.focusOffset),a=n&&n.node==e.anchorNode&&n.offset==e.anchorOffset||!ue(t.contentDOM,e.anchorNode)?t.state.selection.main.anchor:t.docView.posFromDOM(e.anchorNode,e.anchorOffset);s==o.head&&a==o.anchor||(r=Y.single(a,s))}if(s||r)if(!s&&n&&!o.empty&&r&&r.main.empty?s={from:o.from,to:o.to,insert:t.state.doc.slice(o.from,o.to)}:s&&s.from>=o.from&&s.to<=o.to&&(s.from!=o.from||s.to!=o.to)&&o.to-o.from-(s.to-s.from)<=4&&(s={from:o.from,to:o.to,insert:t.state.doc.slice(o.from,s.from).append(s.insert).append(t.state.doc.slice(s.to,o.to))}),s){let e=t.state;if(Fe.ios&&t.inputState.flushIOSKey(t))return;if(Fe.android&&(s.from==o.from&&s.to==o.to&&1==s.insert.length&&2==s.insert.lines&&ke(t.contentDOM,"Enter",13)||s.from==o.from-1&&s.to==o.to&&0==s.insert.length&&ke(t.contentDOM,"Backspace",8)||s.from==o.from&&s.to==o.to+1&&0==s.insert.length&&ke(t.contentDOM,"Delete",46)))return;let i,n=s.insert.toString();if(t.state.facet(Ti).some((e=>e(t,s.from,s.to,n))))return;if(t.inputState.composing>=0&&t.inputState.composing++,s.from>=o.from&&s.to<=o.to&&s.to-s.from>=(o.to-o.from)/3&&(!r||r.main.empty&&r.main.from==s.from+s.insert.length)&&t.inputState.composing<0){let n=o.from<s.from?e.sliceDoc(o.from,s.from):"",r=o.to>s.to?e.sliceDoc(s.to,o.to):"";i=e.replaceSelection(t.state.toText(n+s.insert.sliceString(0,void 0,t.state.lineBreak)+r))}else{let n=e.changes(s),a=r&&!e.selection.main.eq(r.main)&&r.main.to<=n.newLength?r.main:void 0;if(e.selection.ranges.length>1&&t.inputState.composing>=0&&s.to<=o.to&&s.to>=o.to-10){let r=t.state.sliceDoc(s.from,s.to),f=un(t)||t.state.doc.lineAt(o.head),l=o.to-s.to,h=o.to-o.from;i=e.changeByRange((i=>{if(i.from==o.from&&i.to==o.to)return{changes:n,range:a||i.map(n)};let c=i.to-l,O=c-r.length;if(i.to-i.from!=h||t.state.sliceDoc(O,c)!=r||f&&i.to>=f.from&&i.from<=f.to)return{range:i};let u=e.changes({from:O,to:c,insert:s.insert}),d=i.to-o.to;return{changes:u,range:a?Y.range(Math.max(0,a.anchor+d),Math.max(0,a.head+d)):i.map(u)}}))}else i={changes:n,selection:a&&e.selection.replaceRange(a)}}let a="input.type";t.composing&&(a+=".compose",t.inputState.compositionFirstChange&&(a+=".start",t.inputState.compositionFirstChange=!1)),t.dispatch(i,{scrollIntoView:!0,userEvent:a})}else if(r&&!r.main.eq(o)){let e=!1,i="select";t.inputState.lastSelectionTime>Date.now()-50&&("select"==t.inputState.lastSelectionOrigin&&(e=!0),i=t.inputState.lastSelectionOrigin),t.dispatch({selection:r,scrollIntoView:e,userEvent:i})}}class Vs{constructor(t={}){this.plugins=[],this.pluginMap=new Map,this.editorAttrs={},this.contentAttrs={},this.bidiCache=[],this.destroyed=!1,this.updateState=2,this.measureScheduled=-1,this.measureRequests=[],this.contentDOM=document.createElement("div"),this.scrollDOM=document.createElement("div"),this.scrollDOM.tabIndex=-1,this.scrollDOM.className="cm-scroller",this.scrollDOM.appendChild(this.contentDOM),this.announceDOM=document.createElement("div"),this.announceDOM.style.cssText="position: absolute; top: -10000px",this.announceDOM.setAttribute("aria-live","polite"),this.dom=document.createElement("div"),this.dom.appendChild(this.announceDOM),this.dom.appendChild(this.scrollDOM),this._dispatch=t.dispatch||(t=>this.update([t])),this.dispatch=this.dispatch.bind(this),this.root=t.root||function(t){for(;t;){if(t&&(9==t.nodeType||11==t.nodeType&&t.host))return t;t=t.assignedSlot||t.parentNode}return null}(t.parent)||document,this.viewState=new Os(t.state||yt.create()),this.plugins=this.state.facet(ji).map((t=>new Mi(t)));for(let t of this.plugins)t.update(this);this.observer=new Zs(this,((t,e,i)=>{Cs(this,t,e,i)}),(t=>{this.inputState.runScrollHandlers(this,t),this.observer.intersecting&&this.measure()})),this.inputState=new kn(this),this.docView=new cn(this),this.mountStyles(),this.updateAttrs(),this.updateState=0,window.addEventListener("resize",(()=>{-1==Js&&(Js=setTimeout(Ms,50))})),this.requestMeasure(),t.parent&&t.parent.appendChild(this.dom)}get state(){return this.viewState.state}get viewport(){return this.viewState.viewport}get visibleRanges(){return this.viewState.visibleRanges}get inView(){return this.viewState.inView}get composing(){return this.inputState.composing>0}get compositionStarted(){return this.inputState.composing>=0}dispatch(...t){this._dispatch(1==t.length&&t[0]instanceof dt?t[0]:this.state.update(...t))}update(t){if(0!=this.updateState)throw new Error("Calls to EditorView.update are not allowed while an update is in progress");let e,i=!1,n=this.state;for(let e of t){if(e.startState!=n)throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");n=e.state}if(this.destroyed)return void(this.viewState.state=n);if(n.facet(yt.phrases)!=this.state.facet(yt.phrases))return this.setState(n);e=new zi(this,n,t);let s=this.viewState.scrollTarget;try{this.updateState=2;for(let e of t){if(s&&(s=s.map(e.changes)),e.scrollIntoView){let{main:t}=e.state.selection;s=new Wi(t.empty?t:Y.cursor(t.head,t.head>t.anchor?-1:1))}for(let t of e.effects)t.is(Pi)?s=new Wi(t.value):t.is(ki)?s=new Wi(t.value,"center"):t.is(Ri)&&(s=t.value)}this.viewState.update(e,s),this.bidiCache=Gs.update(this.bidiCache,e.changes),e.empty||(this.updatePlugins(e),this.inputState.update(e)),i=this.docView.update(e),this.state.facet(qi)!=this.styleModules&&this.mountStyles(),this.updateAttrs(),this.showAnnouncements(t),this.docView.updateSelection(i,t.some((t=>t.isUserEvent("select.pointer"))))}finally{this.updateState=0}if(e.startState.facet(vs)!=e.state.facet(vs)&&(this.viewState.mustMeasureContent=!0),(i||s||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)&&this.requestMeasure(),!e.empty)for(let t of this.state.facet(yi))t(e)}setState(t){if(0!=this.updateState)throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");if(this.destroyed)return void(this.viewState.state=t);this.updateState=2;let e=this.hasFocus;try{for(let t of this.plugins)t.destroy(this);this.viewState=new Os(t),this.plugins=t.facet(ji).map((t=>new Mi(t))),this.pluginMap.clear();for(let t of this.plugins)t.update(this);this.docView=new cn(this),this.inputState.ensureHandlers(this),this.mountStyles(),this.updateAttrs(),this.bidiCache=[]}finally{this.updateState=0}e&&this.focus(),this.requestMeasure()}updatePlugins(t){let e=t.startState.facet(ji),i=t.state.facet(ji);if(e!=i){let n=[];for(let s of i){let i=e.indexOf(s);if(i<0)n.push(new Mi(s));else{let e=this.plugins[i];e.mustUpdate=t,n.push(e)}}for(let e of this.plugins)e.mustUpdate!=t&&e.destroy(this);this.plugins=n,this.pluginMap.clear(),this.inputState.ensureHandlers(this)}else for(let e of this.plugins)e.mustUpdate=t;for(let t=0;t<this.plugins.length;t++)this.plugins[t].update(this)}measure(t=!0){if(this.destroyed)return;this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.measureScheduled=0,t&&this.observer.flush();let e=null;try{for(let t=0;;t++){this.updateState=1;let i=this.viewport,n=this.viewState.measure(this);if(!n&&!this.measureRequests.length&&null==this.viewState.scrollTarget)break;if(t>5){console.warn(this.measureRequests.length?"Measure loop restarted more than 5 times":"Viewport failed to stabilize");break}let s=[];4&n||([this.measureRequests,s]=[s,this.measureRequests]);let r=s.map((t=>{try{return t.read(this)}catch(t){return Xi(this.state,t),Ds}})),o=new zi(this,this.state),a=!1,f=!1;o.flags|=n,e?e.flags|=n:e=o,this.updateState=2,o.empty||(this.updatePlugins(o),this.inputState.update(o),this.updateAttrs(),a=this.docView.update(o));for(let t=0;t<s.length;t++)if(r[t]!=Ds)try{let e=s[t];e.write&&e.write(r[t],this)}catch(t){Xi(this.state,t)}if(this.viewState.scrollTarget&&(this.docView.scrollIntoView(this.viewState.scrollTarget),this.viewState.scrollTarget=null,f=!0),a&&this.docView.updateSelection(!0),this.viewport.from==i.from&&this.viewport.to==i.to&&!f&&0==this.measureRequests.length)break}}finally{this.updateState=0,this.measureScheduled=-1}if(e&&!e.empty)for(let t of this.state.facet(yi))t(e)}get themeClasses(){return ws+" "+(this.state.facet(xs)?Ts:ys)+" "+this.state.facet(vs)}updateAttrs(){let t=As(this,Di,{class:"cm-editor"+(this.hasFocus?" cm-focused ":" ")+this.themeClasses}),e={spellcheck:"false",autocorrect:"off",autocapitalize:"off",translate:"no",contenteditable:this.state.facet(Zi)?"true":"false",class:"cm-content",style:`${Fe.tabSize}: ${this.state.tabSize}`,role:"textbox","aria-multiline":"true"};this.state.readOnly&&(e["aria-readonly"]="true"),As(this,Gi,e),this.observer.ignore((()=>{oi(this.contentDOM,this.contentAttrs,e),oi(this.dom,this.editorAttrs,t)})),this.editorAttrs=t,this.contentAttrs=e}showAnnouncements(t){let e=!0;for(let i of t)for(let t of i.effects)if(t.is(Vs.announce)){e&&(this.announceDOM.textContent=""),e=!1,this.announceDOM.appendChild(document.createElement("div")).textContent=t.value}}mountStyles(){this.styleModules=this.state.facet(qi),Ut.mount(this.root,this.styleModules.concat(Ws).reverse())}readMeasured(){if(2==this.updateState)throw new Error("Reading the editor layout isn't allowed during an update");0==this.updateState&&this.measureScheduled>-1&&this.measure(!1)}requestMeasure(t){if(this.measureScheduled<0&&(this.measureScheduled=requestAnimationFrame((()=>this.measure()))),t){if(null!=t.key)for(let e=0;e<this.measureRequests.length;e++)if(this.measureRequests[e].key===t.key)return void(this.measureRequests[e]=t);this.measureRequests.push(t)}}pluginField(t){let e=[];for(let i of this.plugins)i.update(this).takeField(t,e);return e}plugin(t){let e=this.pluginMap.get(t);return(void 0===e||e&&e.spec!=t)&&this.pluginMap.set(t,e=this.plugins.find((e=>e.spec==t))||null),e&&e.update(this).value}get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop}get documentPadding(){return{top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom}}blockAtHeight(t,e){let i=Us(e,this);return this.elementAtHeight(t-i).moveY(i)}elementAtHeight(t){return this.readMeasured(),this.viewState.elementAtHeight(t)}visualLineAtHeight(t,e){let i=Us(e,this);return this.lineBlockAtHeight(t-i).moveY(i)}lineBlockAtHeight(t){return this.readMeasured(),this.viewState.lineBlockAtHeight(t)}viewportLines(t,e){let i=Us(e,this);for(let e of this.viewportLineBlocks)t(e.moveY(i))}get viewportLineBlocks(){return this.viewState.viewportLines}visualLineAt(t,e=0){return this.lineBlockAt(t).moveY(e+this.viewState.paddingTop)}lineBlockAt(t){return this.viewState.lineBlockAt(t)}get contentHeight(){return this.viewState.contentHeight}moveByChar(t,e,i){return Pn(this,t,Tn(this,t,e,i))}moveByGroup(t,e){return Pn(this,t,Tn(this,t,e,(e=>function(t,e,i){let n=t.state.charCategorizer(e),s=n(i);return t=>{let e=n(t);return s==bt.Space&&(s=e),s==e}}(this,t.head,e))))}moveToLineBoundary(t,e,i=!0){return function(t,e,i,n){let s=t.state.doc.lineAt(e.head),r=n&&t.lineWrapping?t.coordsAtPos(e.assoc<0&&e.head>s.from?e.head-1:e.head):null;if(r){let e=t.dom.getBoundingClientRect(),n=t.posAtCoords({x:i==(t.textDirection==_i.LTR)?e.right-1:e.left+1,y:(r.top+r.bottom)/2});if(null!=n)return Y.cursor(n,i?-1:1)}let o=gi.find(t.docView,e.head),a=o?i?o.posAtEnd:o.posAtStart:i?s.to:s.from;return Y.cursor(a,i?-1:1)}(this,t,e,i)}moveVertically(t,e,i){return Pn(this,t,function(t,e,i,n){let s=e.head,r=i?1:-1;if(s==(i?t.state.doc.length:0))return Y.cursor(s,e.assoc);let o,a=e.goalColumn,f=t.contentDOM.getBoundingClientRect(),l=t.coordsAtPos(s),h=t.documentTop;if(l)null==a&&(a=l.left-f.left),o=r<0?l.top:l.bottom;else{let e=t.viewState.lineBlockAt(s-h);null==a&&(a=Math.min(f.right-f.left,t.defaultCharacterWidth*(s-e.from))),o=(r<0?e.top:e.bottom)+h}let c=f.left+a,O=null!=n?n:t.defaultLineHeight>>1;for(let i=0;;i+=10){let n=o+(O+i)*r,l=wn(t,{x:c,y:n},!1,r);if(n<f.top||n>f.bottom||(r<0?l<s:l>s))return Y.cursor(l,e.assoc,void 0,a)}}(this,t,e,i))}scrollPosIntoView(t){this.dispatch({effects:Pi.of(Y.cursor(t))})}domAtPos(t){return this.docView.domAtPos(t)}posAtDOM(t,e=0){return this.docView.posFromDOM(t,e)}posAtCoords(t,e=!0){return this.readMeasured(),wn(this,t,e)}coordsAtPos(t,e=1){this.readMeasured();let i=this.docView.coordsAt(t,e);if(!i||i.left==i.right)return i;let n=this.state.doc.lineAt(t),s=this.bidiSpans(n);return be(i,s[en.find(s,t-n.from,-1,e)].dir==_i.LTR==e>0)}get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth}get defaultLineHeight(){return this.viewState.heightOracle.lineHeight}get textDirection(){return this.viewState.heightOracle.direction}get lineWrapping(){return this.viewState.heightOracle.lineWrapping}bidiSpans(t){if(t.length>js)return sn(t.length);let e=this.textDirection;for(let i of this.bidiCache)if(i.from==t.from&&i.dir==e)return i.order;let i=function(t,e){let i=t.length,n=e==Bi?1:2,s=e==Bi?2:1;if(!t||1==n&&!tn.test(t))return sn(i);for(let e=0,s=n,o=n;e<i;e++){let i=(r=t.charCodeAt(e))<=247?Ni[r]:1424<=r&&r<=1524?2:1536<=r&&r<=1785?Li[r-1536]:1774<=r&&r<=2220?4:8192<=r&&r<=8203||8204==r?256:1;512==i?i=s:8==i&&4==o&&(i=16),nn[e]=4==i?2:i,7&i&&(o=i),s=i}var r;for(let t=0,e=n,s=n;t<i;t++){let n=nn[t];if(128==n)t<i-1&&e==nn[t+1]&&24&e?n=nn[t]=e:nn[t]=256;else if(64==n){let n=t+1;for(;n<i&&64==nn[n];)n++;let r=t&&8==e||n<i&&8==nn[n]?1==s?1:8:256;for(let e=t;e<n;e++)nn[e]=r;t=n-1}else 8==n&&1==s&&(nn[t]=1);e=n,7&n&&(s=n)}for(let e,r,o,a=0,f=0,l=0;a<i;a++)if(r=Ki[e=t.charCodeAt(a)])if(r<0){for(let t=f-3;t>=0;t-=3)if(Hi[t+1]==-r){let e=Hi[t+2],i=2&e?n:4&e?1&e?s:n:0;i&&(nn[a]=nn[Hi[t]]=i),f=t;break}}else{if(189==Hi.length)break;Hi[f++]=a,Hi[f++]=e,Hi[f++]=l}else if(2==(o=nn[a])||1==o){let t=o==n;l=t?0:1;for(let e=f-3;e>=0;e-=3){let i=Hi[e+2];if(2&i)break;if(t)Hi[e+2]|=2;else{if(4&i)break;Hi[e+2]|=4}}}for(let t=0;t<i;t++)if(256==nn[t]){let e=t+1;for(;e<i&&256==nn[e];)e++;let s=1==(t?nn[t-1]:n),r=s==(1==(e<i?nn[e]:n))?s?1:2:n;for(let i=t;i<e;i++)nn[i]=r;t=e-1}let o=[];if(1==n)for(let t=0;t<i;){let e=t,n=1!=nn[t++];for(;t<i&&n==(1!=nn[t]);)t++;if(n)for(let i=t;i>e;){let t=i,n=2!=nn[--i];for(;i>e&&n==(2!=nn[i-1]);)i--;o.push(new en(i,t,n?2:1))}else o.push(new en(e,t,0))}else for(let t=0;t<i;){let e=t,n=2==nn[t++];for(;t<i&&n==(2==nn[t]);)t++;o.push(new en(e,t,n?1:2))}return o}(t.text,this.textDirection);return this.bidiCache.push(new Gs(t.from,t.to,e,i)),i}get hasFocus(){var t;return(document.hasFocus()||Fe.safari&&(null===(t=this.inputState)||void 0===t?void 0:t.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM}focus(){this.observer.ignore((()=>{Te(this.contentDOM),this.docView.updateSelection()}))}destroy(){for(let t of this.plugins)t.destroy(this);this.plugins=[],this.inputState.destroy(),this.dom.remove(),this.observer.destroy(),this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.destroyed=!0}static scrollIntoView(t,e={}){return Ri.of(new Wi("number"==typeof t?Y.cursor(t):t,e.y,e.x,e.yMargin,e.xMargin))}static domEventHandlers(t){return Ui.define((()=>({})),{eventHandlers:t})}static theme(t,e){let i=Ut.newName(),n=[vs.of(i),qi.of(ks(`.${i}`,t))];return e&&e.dark&&n.push(xs.of(!0)),n}static baseTheme(t){return N.lowest(qi.of(ks("."+ws,t,Ps)))}}Vs.scrollTo=Pi,Vs.centerOn=ki,Vs.styleModule=qi,Vs.inputHandler=Ti,Vs.exceptionSink=wi,Vs.updateListener=yi,Vs.editable=Zi,Vs.mouseSelectionStyle=xi,Vs.dragMovesSelection=vi,Vs.clickAddsSelectionRange=bi,Vs.decorations=Ai,Vs.darkTheme=xs,Vs.contentAttributes=Gi,Vs.editorAttributes=Di,Vs.lineWrapping=Vs.contentAttributes.of({class:"cm-lineWrapping"}),Vs.announce=ut.define();const js=4096;function Us(t,e){return(null==t?e.contentDOM.getBoundingClientRect().top:t)+e.viewState.paddingTop}let Js=-1;function Ms(){Js=-1;let t=document.querySelectorAll(".cm-content");for(let e=0;e<t.length;e++){let i=Ze.get(t[e]);i&&i.editorView.requestMeasure()}}const Ds={};class Gs{constructor(t,e,i,n){this.from=t,this.to=e,this.dir=i,this.order=n}static update(t,e){if(e.empty)return t;let i=[],n=t.length?t[t.length-1].dir:_i.LTR;for(let s=Math.max(0,t.length-10);s<t.length;s++){let r=t[s];r.dir!=n||e.touchesRange(r.from,r.to)||i.push(new Gs(e.mapPos(r.from,1),e.mapPos(r.to,-1),r.dir,r.order))}return i}}function As(t,e,i){for(let n=t.state.facet(e),s=n.length-1;s>=0;s--){let e=n[s],r="function"==typeof e?e(t):e;r&&si(r,i)}return i}const qs=Fe.mac?"mac":Fe.windows?"win":Fe.linux?"linux":"key";function Is(t,e,i){return e.altKey&&(t="Alt-"+t),e.ctrlKey&&(t="Ctrl-"+t),e.metaKey&&(t="Meta-"+t),!1!==i&&e.shiftKey&&(t="Shift-"+t),t}const zs=Vs.domEventHandlers({keydown:(t,e)=>Ns(Fs(e.state),t,e,"editor")}),_s=U.define({enables:zs}),Bs=new WeakMap;function Fs(t){let e=t.facet(_s),i=Bs.get(e);return i||Bs.set(e,i=function(t,e=qs){let i=Object.create(null),n=Object.create(null),s=(t,e)=>{let i=n[t];if(null==i)n[t]=e;else if(i!=e)throw new Error("Key binding "+t+" is used both as a regular binding and as a multi-stroke prefix")},r=(t,n,r,o)=>{let a=i[t]||(i[t]=Object.create(null)),f=n.split(/ (?!$)/).map((t=>function(t,e){const i=t.split(/-(?!$)/);let n,s,r,o,a=i[i.length-1];"Space"==a&&(a=" ");for(let t=0;t<i.length-1;++t){const a=i[t];if(/^(cmd|meta|m)$/i.test(a))o=!0;else if(/^a(lt)?$/i.test(a))n=!0;else if(/^(c|ctrl|control)$/i.test(a))s=!0;else if(/^s(hift)?$/i.test(a))r=!0;else{if(!/^mod$/i.test(a))throw new Error("Unrecognized modifier name: "+a);"mac"==e?o=!0:s=!0}}return n&&(a="Alt-"+a),s&&(a="Ctrl-"+a),o&&(a="Meta-"+a),r&&(a="Shift-"+a),a}(t,e)));for(let e=1;e<f.length;e++){let i=f.slice(0,e).join(" ");s(i,!0),a[i]||(a[i]={preventDefault:!0,commands:[e=>{let n=Es={view:e,prefix:i,scope:t};return setTimeout((()=>{Es==n&&(Es=null)}),4e3),!0}]})}let l=f.join(" ");s(l,!1);let h=a[l]||(a[l]={preventDefault:!1,commands:[]});h.commands.push(r),o&&(h.preventDefault=!0)};for(let i of t){let t=i[e]||i.key;if(t)for(let e of i.scope?i.scope.split(" "):["editor"])r(e,t,i.run,i.preventDefault),i.shift&&r(e,"Shift-"+t,i.shift,i.preventDefault)}return i}(e.reduce(((t,e)=>t.concat(e)),[]))),i}let Es=null;function Ns(t,e,i,n){let s=function(t){var e=!(le&&(t.ctrlKey||t.altKey||t.metaKey)||(re||fe)&&t.shiftKey&&t.key&&1==t.key.length)&&t.key||(t.shiftKey?ne:ie)[t.keyCode]||t.key||"Unidentified";return"Esc"==e&&(e="Escape"),"Del"==e&&(e="Delete"),"Left"==e&&(e="ArrowLeft"),"Up"==e&&(e="ArrowUp"),"Right"==e&&(e="ArrowRight"),"Down"==e&&(e="ArrowDown"),e}(e),r=1==s.length&&" "!=s,o="",a=!1;Es&&Es.view==i&&Es.scope==n&&(o=Es.prefix+" ",(a=Rn.indexOf(e.keyCode)<0)&&(Es=null));let f,l=t=>{if(t){for(let e of t.commands)if(e(i))return!0;t.preventDefault&&(a=!0)}return!1},h=t[n];if(h){if(l(h[o+Is(s,e,!r)]))return!0;if(r&&(e.shiftKey||e.altKey||e.metaKey)&&(f=ie[e.keyCode])&&f!=s){if(l(h[o+Is(f,e,!0)]))return!0}else if(r&&e.shiftKey&&l(h[o+Is(s,e,!0)]))return!0}return a}const Ls=!Fe.ios,Ks=U.define({combine:t=>Tt(t,{cursorBlinkRate:1200,drawRangeCursor:!0},{cursorBlinkRate:(t,e)=>Math.min(t,e),drawRangeCursor:(t,e)=>t||e})});function Hs(t={}){return[Ks.of(t),er,nr]}class tr{constructor(t,e,i,n,s){this.left=t,this.top=e,this.width=i,this.height=n,this.className=s}draw(){let t=document.createElement("div");return t.className=this.className,this.adjust(t),t}adjust(t){t.style.left=this.left+"px",t.style.top=this.top+"px",this.width>=0&&(t.style.width=this.width+"px"),t.style.height=this.height+"px"}eq(t){return this.left==t.left&&this.top==t.top&&this.width==t.width&&this.height==t.height&&this.className==t.className}}const er=Ui.fromClass(class{constructor(t){this.view=t,this.rangePieces=[],this.cursors=[],this.measureReq={read:this.readPos.bind(this),write:this.drawSel.bind(this)},this.selectionLayer=t.scrollDOM.appendChild(document.createElement("div")),this.selectionLayer.className="cm-selectionLayer",this.selectionLayer.setAttribute("aria-hidden","true"),this.cursorLayer=t.scrollDOM.appendChild(document.createElement("div")),this.cursorLayer.className="cm-cursorLayer",this.cursorLayer.setAttribute("aria-hidden","true"),t.requestMeasure(this.measureReq),this.setBlinkRate()}setBlinkRate(){this.cursorLayer.style.animationDuration=this.view.state.facet(Ks).cursorBlinkRate+"ms"}update(t){let e=t.startState.facet(Ks)!=t.state.facet(Ks);(e||t.selectionSet||t.geometryChanged||t.viewportChanged)&&this.view.requestMeasure(this.measureReq),t.transactions.some((t=>t.scrollIntoView))&&(this.cursorLayer.style.animationName="cm-blink"==this.cursorLayer.style.animationName?"cm-blink2":"cm-blink"),e&&this.setBlinkRate()}readPos(){let{state:t}=this.view,e=t.facet(Ks),i=t.selection.ranges.map((t=>t.empty?[]:function(t,e){if(e.to<=t.viewport.from||e.from>=t.viewport.to)return[];let i=Math.max(e.from,t.viewport.from),n=Math.min(e.to,t.viewport.to),s=t.textDirection==_i.LTR,r=t.contentDOM,o=r.getBoundingClientRect(),a=sr(t),f=window.getComputedStyle(r.firstChild),l=o.left+parseInt(f.paddingLeft)+Math.min(0,parseInt(f.textIndent)),h=o.right-parseInt(f.paddingRight),c=or(t,i),O=or(t,n),u=c.type==fi.Text?c:null,d=O.type==fi.Text?O:null;t.lineWrapping&&(u&&(u=rr(t,i,u)),d&&(d=rr(t,n,d)));if(u&&d&&u.from==d.from)return p($(e.from,e.to,u));{let i=u?$(e.from,null,u):m(c,!1),n=d?$(null,e.to,d):m(O,!0),s=[];return(u||c).to<(d||O).from-1?s.push(g(l,i.bottom,h,n.top)):i.bottom<n.top&&t.elementAtHeight((i.bottom+n.top)/2).type==fi.Text&&(i.bottom=n.top=(i.bottom+n.top)/2),p(i).concat(s).concat(p(n))}function g(t,e,i,n){return new tr(t-a.left,e-a.top-.01,i-t,n-e+.01,"cm-selectionBackground")}function p({top:t,bottom:e,horizontal:i}){let n=[];for(let s=0;s<i.length;s+=2)n.push(g(i[s],t,i[s+1],e));return n}function $(e,i,n){let r=1e9,o=-1e9,a=[];function f(e,i,f,c,O){let u=t.coordsAtPos(e,e==n.to?-2:2),d=t.coordsAtPos(f,f==n.from?2:-2);r=Math.min(u.top,d.top,r),o=Math.max(u.bottom,d.bottom,o),O==_i.LTR?a.push(s&&i?l:u.left,s&&c?h:d.right):a.push(!s&&c?l:d.left,!s&&i?h:u.right)}let c=null!=e?e:n.from,O=null!=i?i:n.to;for(let n of t.visibleRanges)if(n.to>c&&n.from<O)for(let s=Math.max(n.from,c),r=Math.min(n.to,O);;){let n=t.state.doc.lineAt(s);for(let o of t.bidiSpans(n)){let t=o.from+n.from,a=o.to+n.from;if(t>=r)break;a>s&&f(Math.max(t,s),null==e&&t<=c,Math.min(a,r),null==i&&a>=O,o.dir)}if(s=n.to+1,s>=r)break}return 0==a.length&&f(c,null==e,O,null==i,t.textDirection),{top:r,bottom:o,horizontal:a}}function m(t,e){let i=o.top+(e?t.top:t.bottom);return{top:i,bottom:i,horizontal:[]}}}(this.view,t))).reduce(((t,e)=>t.concat(e))),n=[];for(let i of t.selection.ranges){let s=i==t.selection.main;if(i.empty?!s||Ls:e.drawRangeCursor){let t=ar(this.view,i,s);t&&n.push(t)}}return{rangePieces:i,cursors:n}}drawSel({rangePieces:t,cursors:e}){if(t.length!=this.rangePieces.length||t.some(((t,e)=>!t.eq(this.rangePieces[e])))){this.selectionLayer.textContent="";for(let e of t)this.selectionLayer.appendChild(e.draw());this.rangePieces=t}if(e.length!=this.cursors.length||e.some(((t,e)=>!t.eq(this.cursors[e])))){let t=this.cursorLayer.children;if(t.length!==e.length){this.cursorLayer.textContent="";for(const t of e)this.cursorLayer.appendChild(t.draw())}else e.forEach(((e,i)=>e.adjust(t[i])));this.cursors=e}}destroy(){this.selectionLayer.remove(),this.cursorLayer.remove()}}),ir={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"}}};Ls&&(ir[".cm-line"].caretColor="transparent !important");const nr=N.highest(Vs.theme(ir));function sr(t){let e=t.scrollDOM.getBoundingClientRect();return{left:(t.textDirection==_i.LTR?e.left:e.right-t.scrollDOM.clientWidth)-t.scrollDOM.scrollLeft,top:e.top-t.scrollDOM.scrollTop}}function rr(t,e,i){let n=Y.cursor(e);return{from:Math.max(i.from,t.moveToLineBoundary(n,!1,!0).from),to:Math.min(i.to,t.moveToLineBoundary(n,!0,!0).from),type:fi.Text}}function or(t,e){let i=t.lineBlockAt(e);if(Array.isArray(i.type))for(let t of i.type)if(t.to>e||t.to==e&&(t.to==i.to||t.type==fi.Text))return t;return i}function ar(t,e,i){let n=t.coordsAtPos(e.head,e.assoc||1);if(!n)return null;let s=sr(t);return new tr(n.left-s.left,n.top-s.top,-1,n.bottom-n.top,i?"cm-cursor cm-cursor-primary":"cm-cursor cm-cursor-secondary")}const fr=ut.define({map:(t,e)=>null==t?null:e.mapPos(t)}),lr=q.define({create:()=>null,update:(t,e)=>(null!=t&&(t=e.changes.mapPos(t)),e.effects.reduce(((t,e)=>e.is(fr)?e.value:t),t))}),hr=Ui.fromClass(class{constructor(t){this.view=t,this.cursor=null,this.measureReq={read:this.readPos.bind(this),write:this.drawCursor.bind(this)}}update(t){var e;let i=t.state.field(lr);null==i?null!=this.cursor&&(null===(e=this.cursor)||void 0===e||e.remove(),this.cursor=null):(this.cursor||(this.cursor=this.view.scrollDOM.appendChild(document.createElement("div")),this.cursor.className="cm-dropCursor"),(t.startState.field(lr)!=i||t.docChanged||t.geometryChanged)&&this.view.requestMeasure(this.measureReq))}readPos(){let t=this.view.state.field(lr),e=null!=t&&this.view.coordsAtPos(t);if(!e)return null;let i=this.view.scrollDOM.getBoundingClientRect();return{left:e.left-i.left+this.view.scrollDOM.scrollLeft,top:e.top-i.top+this.view.scrollDOM.scrollTop,height:e.bottom-e.top}}drawCursor(t){this.cursor&&(t?(this.cursor.style.left=t.left+"px",this.cursor.style.top=t.top+"px",this.cursor.style.height=t.height+"px"):this.cursor.style.left="-100000px")}destroy(){this.cursor&&this.cursor.remove()}setDropPos(t){this.view.state.field(lr)!=t&&this.view.dispatch({effects:fr.of(t)})}},{eventHandlers:{dragover(t){this.setDropPos(this.view.posAtCoords({x:t.clientX,y:t.clientY}))},dragleave(t){t.target!=this.view.contentDOM&&this.view.contentDOM.contains(t.relatedTarget)||this.setDropPos(null)},dragend(){this.setDropPos(null)},drop(){this.setDropPos(null)}}});function cr(){return[lr,hr]}function Or(t,e,i,n,s){e.lastIndex=0;for(let r,o=t.iterRange(i,n),a=i;!o.next().done;a+=o.value.length)if(!o.lineBreak)for(;r=e.exec(o.value);)s(a+r.index,a+r.index+r[0].length,r)}class ur{constructor(t){let{regexp:e,decoration:i,boundary:n,maxLength:s=1e3}=t;if(!e.global)throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");this.regexp=e,this.getDeco="function"==typeof i?i:()=>i,this.boundary=n,this.maxLength=s}createDeco(t){let e=new zt;for(let{from:i,to:n}of function(t,e){let i=t.visibleRanges;if(1==i.length&&i[0].from==t.viewport.from&&i[0].to==t.viewport.to)return i;let n=[];for(let{from:s,to:r}of i)s=Math.max(t.state.doc.lineAt(s).from,s-e),r=Math.min(t.state.doc.lineAt(r).to,r+e),n.length&&n[n.length-1].to>=s?n[n.length-1].to=r:n.push({from:s,to:r});return n}(t,this.maxLength))Or(t.state.doc,this.regexp,i,n,((i,n,s)=>e.add(i,n,this.getDeco(s,t,i))));return e.finish()}updateDeco(t,e){let i=1e9,n=-1;return t.docChanged&&t.changes.iterChanges(((e,s,r,o)=>{o>t.view.viewport.from&&r<t.view.viewport.to&&(i=Math.min(r,i),n=Math.max(o,n))})),t.viewportChanged||n-i>1e3?this.createDeco(t.view):n>-1?this.updateRange(t.view,e.map(t.changes),i,n):e}updateRange(t,e,i,n){for(let s of t.visibleRanges){let r=Math.max(s.from,i),o=Math.min(s.to,n);if(o>r){let i=t.state.doc.lineAt(r),n=i.to<o?t.state.doc.lineAt(o):i,a=Math.max(s.from,i.from),f=Math.min(s.to,n.to);if(this.boundary){for(;r>i.from;r--)if(this.boundary.test(i.text[r-1-i.from])){a=r;break}for(;o<n.to;o++)if(this.boundary.test(n.text[o-n.from])){f=o;break}}let l,h=[];if(i==n)for(this.regexp.lastIndex=a-i.from;(l=this.regexp.exec(i.text))&&l.index<f-i.from;){let e=l.index+i.from;h.push(this.getDeco(l,t,e).range(e,e+l[0].length))}else Or(t.state.doc,this.regexp,a,f,((e,i,n)=>h.push(this.getDeco(n,t,e).range(e,i))));e=e.update({filterFrom:a,filterTo:f,filter:(t,e)=>t<a||e>f,add:h})}}return e}}const dr=null!=/x/.unicode?"gu":"g",gr=new RegExp("[\0-\b\n-\x1f\x7f-\x9f\xad\u061c\u200b\u200e\u200f\u2028\u2029\u202d\u202e\ufeff\ufff9-\ufffc]",dr),pr={0:"null",7:"bell",8:"backspace",10:"newline",11:"vertical tab",13:"carriage return",27:"escape",8203:"zero width space",8204:"zero width non-joiner",8205:"zero width joiner",8206:"left-to-right mark",8207:"right-to-left mark",8232:"line separator",8237:"left-to-right override",8238:"right-to-left override",8233:"paragraph separator",65279:"zero width no-break space",65532:"object replacement"};let $r=null;const mr=U.define({combine(t){let e=Tt(t,{render:null,specialChars:gr,addSpecialChars:null});return(e.replaceTabs=!function(){var t;if(null==$r&&"undefined"!=typeof document&&document.body){let e=document.body.style;$r=null!=(null!==(t=e.tabSize)&&void 0!==t?t:e.MozTabSize)}return $r||!1}())&&(e.specialChars=new RegExp("\t|"+e.specialChars.source,dr)),e.addSpecialChars&&(e.specialChars=new RegExp(e.specialChars.source+"|"+e.addSpecialChars.source,dr)),e}});function Qr(t={}){return[mr.of(t),Sr||(Sr=Ui.fromClass(class{constructor(t){this.view=t,this.decorations=li.none,this.decorationCache=Object.create(null),this.decorator=this.makeDecorator(t.state.facet(mr)),this.decorations=this.decorator.createDeco(t)}makeDecorator(t){return new ur({regexp:t.specialChars,decoration:(e,i,n)=>{let{doc:s}=i.state,r=f(e[0],0);if(9==r){let t=s.lineAt(n),e=i.state.tabSize,r=c(t.text,e,n-t.from);return li.replace({widget:new vr((e-r%e)*this.view.defaultCharacterWidth)})}return this.decorationCache[r]||(this.decorationCache[r]=li.replace({widget:new br(t,r)}))},boundary:t.replaceTabs?void 0:/[^]/})}update(t){let e=t.state.facet(mr);t.startState.facet(mr)!=e?(this.decorator=this.makeDecorator(e),this.decorations=this.decorator.createDeco(t.view)):this.decorations=this.decorator.updateDeco(t,this.decorations)}},{decorations:t=>t.decorations}))]}let Sr=null;class br extends ai{constructor(t,e){super(),this.options=t,this.code=e}eq(t){return t.code==this.code}toDOM(t){let e=function(t){return t>=32?"\u2022":10==t?"\u2424":String.fromCharCode(9216+t)}(this.code),i=t.state.phrase("Control character")+" "+(pr[this.code]||"0x"+this.code.toString(16)),n=this.options.render&&this.options.render(this.code,i,e);if(n)return n;let s=document.createElement("span");return s.textContent=e,s.title=i,s.setAttribute("aria-label",i),s.className="cm-specialChar",s}ignoreEvent(){return!1}}class vr extends ai{constructor(t){super(),this.width=t}eq(t){return t.width==this.width}toDOM(){let t=document.createElement("span");return t.textContent="\t",t.className="cm-tab",t.style.width=this.width+"px",t}ignoreEvent(){return!1}}const xr=li.line({class:"cm-activeLine"}),wr=Ui.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.docChanged||t.selectionSet)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=-1,i=[];for(let n of t.state.selection.ranges){if(!n.empty)return li.none;let s=t.lineBlockAt(n.head);s.from>e&&(i.push(xr.range(s.from)),e=s.from)}return li.set(i)}},{decorations:t=>t.decorations}),yr=ht.define(),Tr=ht.define(),Pr=U.define(),kr=U.define({combine:t=>Tt(t,{minDepth:100,newGroupDelay:500},{minDepth:Math.max,newGroupDelay:Math.min})});const Wr=q.define({create:()=>zr.empty,update(t,e){let i=e.state.facet(kr),n=e.annotation(yr);if(n){let s=e.docChanged?Y.single(function(t){let e=0;return t.iterChangedRanges(((t,i)=>e=i)),e}(e.changes)):void 0,r=jr.fromTransaction(e,s),o=n.side,a=0==o?t.undone:t.done;return a=r?Ur(a,a.length,i.minDepth,r):Dr(a,e.startState.selection),new zr(0==o?n.rest:a,0==o?a:n.rest)}let s=e.annotation(Tr);if("full"!=s&&"before"!=s||(t=t.isolate()),!1===e.annotation(dt.addToHistory))return e.changes.empty?t:t.addMapping(e.changes.desc);let r=jr.fromTransaction(e),o=e.annotation(dt.time),a=e.annotation(dt.userEvent);return r?t=t.addChanges(r,o,a,i.newGroupDelay,i.minDepth):e.selection&&(t=t.addSelection(e.startState.selection,o,a,i.newGroupDelay)),"full"!=s&&"after"!=s||(t=t.isolate()),t},toJSON:t=>({done:t.done.map((t=>t.toJSON())),undone:t.undone.map((t=>t.toJSON()))}),fromJSON:t=>new zr(t.done.map(jr.fromJSON),t.undone.map(jr.fromJSON))});function Rr(t={}){return[Wr,kr.of(t),Vs.domEventHandlers({beforeinput(t,e){let i="historyUndo"==t.inputType?Zr:"historyRedo"==t.inputType?Yr:null;return!!i&&(t.preventDefault(),i(e))}})]}function Xr(t,e){return function({state:i,dispatch:n}){if(!e&&i.readOnly)return!1;let s=i.field(Wr,!1);if(!s)return!1;let r=s.pop(t,i,e);return!!r&&(n(r),!0)}}const Zr=Xr(0,!1),Yr=Xr(1,!1),Cr=Xr(0,!0),Vr=Xr(1,!0);class jr{constructor(t,e,i,n,s){this.changes=t,this.effects=e,this.mapped=i,this.startSelection=n,this.selectionsAfter=s}setSelAfter(t){return new jr(this.changes,this.effects,this.mapped,this.startSelection,t)}toJSON(){var t,e,i;return{changes:null===(t=this.changes)||void 0===t?void 0:t.toJSON(),mapped:null===(e=this.mapped)||void 0===e?void 0:e.toJSON(),startSelection:null===(i=this.startSelection)||void 0===i?void 0:i.toJSON(),selectionsAfter:this.selectionsAfter.map((t=>t.toJSON()))}}static fromJSON(t){return new jr(t.changes&&y.fromJSON(t.changes),[],t.mapped&&w.fromJSON(t.mapped),t.startSelection&&Y.fromJSON(t.startSelection),t.selectionsAfter.map(Y.fromJSON))}static fromTransaction(t,e){let i=Mr;for(let e of t.startState.facet(Pr)){let n=e(t);n.length&&(i=i.concat(n))}return!i.length&&t.changes.empty?null:new jr(t.changes.invert(t.startState.doc),i,void 0,e||t.startState.selection,Mr)}static selection(t){return new jr(void 0,Mr,void 0,void 0,t)}}function Ur(t,e,i,n){let s=e+1>i+20?e-i-1:0,r=t.slice(s,e);return r.push(n),r}function Jr(t,e){return t.length?e.length?t.concat(e):t:e}const Mr=[];function Dr(t,e){if(t.length){let i=t[t.length-1],n=i.selectionsAfter.slice(Math.max(0,i.selectionsAfter.length-200));return n.length&&n[n.length-1].eq(e)?t:(n.push(e),Ur(t,t.length-1,1e9,i.setSelAfter(n)))}return[jr.selection([e])]}function Gr(t){let e=t[t.length-1],i=t.slice();return i[t.length-1]=e.setSelAfter(e.selectionsAfter.slice(0,e.selectionsAfter.length-1)),i}function Ar(t,e){if(!t.length)return t;let i=t.length,n=Mr;for(;i;){let s=qr(t[i-1],e,n);if(s.changes&&!s.changes.empty||s.effects.length){let e=t.slice(0,i);return e[i-1]=s,e}e=s.mapped,i--,n=s.selectionsAfter}return n.length?[jr.selection(n)]:Mr}function qr(t,e,i){let n=Jr(t.selectionsAfter.length?t.selectionsAfter.map((t=>t.map(e))):Mr,i);if(!t.changes)return jr.selection(n);let s=t.changes.map(e),r=e.mapDesc(t.changes,!0),o=t.mapped?t.mapped.composeDesc(r):r;return new jr(s,ut.mapEffects(t.effects,e),o,t.startSelection.map(r),n)}const Ir=/^(input\.type|delete)($|\.)/;class zr{constructor(t,e,i=0,n){this.done=t,this.undone=e,this.prevTime=i,this.prevUserEvent=n}isolate(){return this.prevTime?new zr(this.done,this.undone):this}addChanges(t,e,i,n,s){let r=this.done,o=r[r.length-1];return r=o&&o.changes&&!o.changes.empty&&t.changes&&(!i||Ir.test(i))&&(!o.selectionsAfter.length&&e-this.prevTime<n&&function(t,e){let i=[],n=!1;return t.iterChangedRanges(((t,e)=>i.push(t,e))),e.iterChangedRanges(((t,e,s,r)=>{for(let t=0;t<i.length;){let e=i[t++],o=i[t++];r>=e&&s<=o&&(n=!0)}})),n}(o.changes,t.changes)||"input.type.compose"==i)?Ur(r,r.length-1,s,new jr(t.changes.compose(o.changes),Jr(t.effects,o.effects),o.mapped,o.startSelection,Mr)):Ur(r,r.length,s,t),new zr(r,Mr,e,i)}addSelection(t,e,i,n){let s=this.done.length?this.done[this.done.length-1].selectionsAfter:Mr;return s.length>0&&e-this.prevTime<n&&i==this.prevUserEvent&&i&&/^select($|\.)/.test(i)&&(r=s[s.length-1],o=t,r.ranges.length==o.ranges.length&&0===r.ranges.filter(((t,e)=>t.empty!=o.ranges[e].empty)).length)?this:new zr(Dr(this.done,t),this.undone,e,i);var r,o}addMapping(t){return new zr(Ar(this.done,t),Ar(this.undone,t),this.prevTime,this.prevUserEvent)}pop(t,e,i){let n=0==t?this.done:this.undone;if(0==n.length)return null;let s=n[n.length-1];if(i&&s.selectionsAfter.length)return e.update({selection:s.selectionsAfter[s.selectionsAfter.length-1],annotations:yr.of({side:t,rest:Gr(n)}),userEvent:0==t?"select.undo":"select.redo",scrollIntoView:!0});if(s.changes){let i=1==n.length?Mr:n.slice(0,n.length-1);return s.mapped&&(i=Ar(i,s.mapped)),e.update({changes:s.changes,selection:s.startSelection,effects:s.effects,annotations:yr.of({side:t,rest:i}),filter:!1,userEvent:0==t?"undo":"redo",scrollIntoView:!0})}return null}}zr.empty=new zr(Mr,Mr);const _r=[{key:"Mod-z",run:Zr,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:Yr,preventDefault:!0},{key:"Mod-u",run:Cr,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:Vr,preventDefault:!0}],Br=1024;let Fr=0;class Er{constructor(t,e){this.from=t,this.to=e}}class Nr{constructor(t={}){this.id=Fr++,this.perNode=!!t.perNode,this.deserialize=t.deserialize||(()=>{throw new Error("This node type doesn't define a deserialize function")})}add(t){if(this.perNode)throw new RangeError("Can't add per-node props to node types");return"function"!=typeof t&&(t=Kr.match(t)),e=>{let i=t(e);return void 0===i?null:[this,i]}}}Nr.closedBy=new Nr({deserialize:t=>t.split(" ")}),Nr.openedBy=new Nr({deserialize:t=>t.split(" ")}),Nr.group=new Nr({deserialize:t=>t.split(" ")}),Nr.contextHash=new Nr({perNode:!0}),Nr.lookAhead=new Nr({perNode:!0}),Nr.mounted=new Nr({perNode:!0});const Lr=Object.create(null);class Kr{constructor(t,e,i,n=0){this.name=t,this.props=e,this.id=i,this.flags=n}static define(t){let e=t.props&&t.props.length?Object.create(null):Lr,i=(t.top?1:0)|(t.skipped?2:0)|(t.error?4:0)|(null==t.name?8:0),n=new Kr(t.name||"",e,t.id,i);if(t.props)for(let i of t.props)if(Array.isArray(i)||(i=i(n)),i){if(i[0].perNode)throw new RangeError("Can't store a per-node prop on a node type");e[i[0].id]=i[1]}return n}prop(t){return this.props[t.id]}get isTop(){return(1&this.flags)>0}get isSkipped(){return(2&this.flags)>0}get isError(){return(4&this.flags)>0}get isAnonymous(){return(8&this.flags)>0}is(t){if("string"==typeof t){if(this.name==t)return!0;let e=this.prop(Nr.group);return!!e&&e.indexOf(t)>-1}return this.id==t}static match(t){let e=Object.create(null);for(let i in t)for(let n of i.split(" "))e[n]=t[i];return t=>{for(let i=t.prop(Nr.group),n=-1;n<(i?i.length:0);n++){let s=e[n<0?t.name:i[n]];if(s)return s}}}}Kr.none=new Kr("",Object.create(null),0,8);class Hr{constructor(t){this.types=t;for(let e=0;e<t.length;e++)if(t[e].id!=e)throw new RangeError("Node type ids should correspond to array positions when creating a node set")}extend(...t){let e=[];for(let i of this.types){let n=null;for(let e of t){let t=e(i);t&&(n||(n=Object.assign({},i.props)),n[t[0].id]=t[1])}e.push(n?new Kr(i.name,n,i.id,i.flags):i)}return new Hr(e)}}const to=new WeakMap,eo=new WeakMap;class io{constructor(t,e,i,n,s){if(this.type=t,this.children=e,this.positions=i,this.length=n,this.props=null,s&&s.length){this.props=Object.create(null);for(let[t,e]of s)this.props["number"==typeof t?t:t.id]=e}}toString(){let t=this.prop(Nr.mounted);if(t&&!t.overlay)return t.tree.toString();let e="";for(let t of this.children){let i=t.toString();i&&(e&&(e+=","),e+=i)}return this.type.name?(/\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(e.length?"("+e+")":""):e}cursor(t,e=0){let i=null!=t&&to.get(this)||this.topNode,n=new Oo(i);return null!=t&&(n.moveTo(t,e),to.set(this,n._tree)),n}fullCursor(){return new Oo(this.topNode,1)}get topNode(){return new fo(this,0,0,null)}resolve(t,e=0){let i=ao(to.get(this)||this.topNode,t,e,!1);return to.set(this,i),i}resolveInner(t,e=0){let i=ao(eo.get(this)||this.topNode,t,e,!0);return eo.set(this,i),i}iterate(t){let{enter:e,leave:i,from:n=0,to:s=this.length}=t;for(let t=this.cursor(),r=()=>t.node;;){let o=!1;if(t.from<=s&&t.to>=n&&(t.type.isAnonymous||!1!==e(t.type,t.from,t.to,r))){if(t.firstChild())continue;t.type.isAnonymous||(o=!0)}for(;o&&i&&i(t.type,t.from,t.to,r),o=t.type.isAnonymous,!t.nextSibling();){if(!t.parent())return;o=!0}}}prop(t){return t.perNode?this.props?this.props[t.id]:void 0:this.type.prop(t)}get propValues(){let t=[];if(this.props)for(let e in this.props)t.push([+e,this.props[e]]);return t}balance(t={}){return this.children.length<=8?this:$o(Kr.none,this.children,this.positions,0,this.children.length,0,this.length,((t,e,i)=>new io(this.type,t,e,i,this.propValues)),t.makeTree||((t,e,i)=>new io(Kr.none,t,e,i)))}static build(t){return function(t){var e;let{buffer:i,nodeSet:n,maxBufferLength:s=Br,reused:r=[],minRepeatType:o=n.types.length}=t,a=Array.isArray(i)?new no(i,i.length):i,f=n.types,l=0,h=0;function c(t,e,i,$,m){let{id:Q,start:S,end:b,size:v}=a,x=h;for(;v<0;){if(a.next(),-1==v){let e=r[Q];return i.push(e),void $.push(S-t)}if(-3==v)return void(l=Q);if(-4==v)return void(h=Q);throw new RangeError(`Unrecognized record size: ${v}`)}let w,y,T=f[Q],P=S-t;if(b-S<=s&&(y=g(a.pos-e,m))){let e=new Uint16Array(y.size-y.skip),i=a.pos-y.size,s=e.length;for(;a.pos>i;)s=p(y.start,e,s);w=new so(e,b-y.start,n),P=y.start-t}else{let t=a.pos-v;a.next();let e=[],i=[],n=Q>=o?Q:-1,r=0,f=b;for(;a.pos>t;)n>=0&&a.id==n&&a.size>=0?(a.end<=f-s&&(u(e,i,S,r,a.end,f,n,x),r=e.length,f=a.end),a.next()):c(S,t,e,i,n);if(n>=0&&r>0&&r<e.length&&u(e,i,S,r,S,f,n,x),e.reverse(),i.reverse(),n>-1&&r>0){let t=O(T);w=$o(T,e,i,0,e.length,0,b-S,t,t)}else w=d(T,e,i,b-S,x-b)}i.push(w),$.push(P)}function O(t){return(e,i,n)=>{let s,r,o=0,a=e.length-1;if(a>=0&&(s=e[a])instanceof io){if(!a&&s.type==t&&s.length==n)return s;(r=s.prop(Nr.lookAhead))&&(o=i[a]+s.length+r)}return d(t,e,i,n,o)}}function u(t,e,i,s,r,o,a,f){let l=[],h=[];for(;t.length>s;)l.push(t.pop()),h.push(e.pop()+i-r);t.push(d(n.types[a],l,h,o-r,f-o)),e.push(r-i)}function d(t,e,i,n,s=0,r){if(l){let t=[Nr.contextHash,l];r=r?[t].concat(r):[t]}if(s>25){let t=[Nr.lookAhead,s];r=r?[t].concat(r):[t]}return new io(t,e,i,n,r)}function g(t,e){let i=a.fork(),n=0,r=0,f=0,l=i.end-s,h={size:0,start:0,skip:0};t:for(let s=i.pos-t;i.pos>s;){let t=i.size;if(i.id==e&&t>=0){h.size=n,h.start=r,h.skip=f,f+=4,n+=4,i.next();continue}let a=i.pos-t;if(t<0||a<s||i.start<l)break;let c=i.id>=o?4:0,O=i.start;for(i.next();i.pos>a;){if(i.size<0){if(-3!=i.size)break t;c+=4}else i.id>=o&&(c+=4);i.next()}r=O,n+=t,f+=c}return(e<0||n==t)&&(h.size=n,h.start=r,h.skip=f),h.size>4?h:void 0}function p(t,e,i){let{id:n,start:s,end:r,size:f}=a;if(a.next(),f>=0&&n<o){let o=i;if(f>4){let n=a.pos-(f-4);for(;a.pos>n;)i=p(t,e,i)}e[--i]=o,e[--i]=r-t,e[--i]=s-t,e[--i]=n}else-3==f?l=n:-4==f&&(h=n);return i}let $=[],m=[];for(;a.pos>0;)c(t.start||0,t.bufferStart||0,$,m,-1);let Q=null!==(e=t.length)&&void 0!==e?e:$.length?m[0]+$[0].length:0;return new io(f[t.topID],$.reverse(),m.reverse(),Q)}(t)}}io.empty=new io(Kr.none,[],[],0);class no{constructor(t,e){this.buffer=t,this.index=e}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}get pos(){return this.index}next(){this.index-=4}fork(){return new no(this.buffer,this.index)}}class so{constructor(t,e,i){this.buffer=t,this.length=e,this.set=i}get type(){return Kr.none}toString(){let t=[];for(let e=0;e<this.buffer.length;)t.push(this.childString(e)),e=this.buffer[e+3];return t.join(",")}childString(t){let e=this.buffer[t],i=this.buffer[t+3],n=this.set.types[e],s=n.name;if(/\W/.test(s)&&!n.isError&&(s=JSON.stringify(s)),i==(t+=4))return s;let r=[];for(;t<i;)r.push(this.childString(t)),t=this.buffer[t+3];return s+"("+r.join(",")+")"}findChild(t,e,i,n,s){let{buffer:r}=this,o=-1;for(let a=t;a!=e&&!(ro(s,n,r[a+1],r[a+2])&&(o=a,i>0));a=r[a+3]);return o}slice(t,e,i,n){let s=this.buffer,r=new Uint16Array(e-t);for(let n=t,o=0;n<e;)r[o++]=s[n++],r[o++]=s[n++]-i,r[o++]=s[n++]-i,r[o++]=s[n++]-t;return new so(r,n-i,this.set)}}function ro(t,e,i,n){switch(t){case-2:return i<e;case-1:return n>=e&&i<e;case 0:return i<e&&n>e;case 1:return i<=e&&n>e;case 2:return n>e;case 4:return!0}}function oo(t,e){let i=t.childBefore(e);for(;i;){let e=i.lastChild;if(!e||e.to!=i.to)break;e.type.isError&&e.from==e.to?(t=i,i=e.prevSibling):i=e}return t}function ao(t,e,i,n){for(var s;t.from==t.to||(i<1?t.from>=e:t.from>e)||(i>-1?t.to<=e:t.to<e);){let e=!n&&t instanceof fo&&t.index<0?null:t.parent;if(!e)return t;t=e}if(n)for(let n=t,r=n.parent;r;n=r,r=n.parent)n instanceof fo&&n.index<0&&(null===(s=r.enter(e,i,!0))||void 0===s?void 0:s.from)!=n.from&&(t=r);for(;;){let s=t.enter(e,i,n);if(!s)return t;t=s}}class fo{constructor(t,e,i,n){this.node=t,this._from=e,this.index=i,this._parent=n}get type(){return this.node.type}get name(){return this.node.type.name}get from(){return this._from}get to(){return this._from+this.node.length}nextChild(t,e,i,n,s=0){for(let r=this;;){for(let{children:o,positions:a}=r.node,f=e>0?o.length:-1;t!=f;t+=e){let f=o[t],l=a[t]+r._from;if(ro(n,i,l,l+f.length))if(f instanceof so){if(2&s)continue;let o=f.findChild(0,f.buffer.length,e,i-l,n);if(o>-1)return new co(new ho(r,f,t,l),null,o)}else if(1&s||!f.type.isAnonymous||uo(f)){let o;if(!(1&s)&&f.props&&(o=f.prop(Nr.mounted))&&!o.overlay)return new fo(o.tree,l,t,r);let a=new fo(f,l,t,r);return 1&s||!a.type.isAnonymous?a:a.nextChild(e<0?f.children.length-1:0,e,i,n)}}if(1&s||!r.type.isAnonymous)return null;if(t=r.index>=0?r.index+e:e<0?-1:r._parent.node.children.length,r=r._parent,!r)return null}}get firstChild(){return this.nextChild(0,1,0,4)}get lastChild(){return this.nextChild(this.node.children.length-1,-1,0,4)}childAfter(t){return this.nextChild(0,1,t,2)}childBefore(t){return this.nextChild(this.node.children.length-1,-1,t,-2)}enter(t,e,i=!0,n=!0){let s;if(i&&(s=this.node.prop(Nr.mounted))&&s.overlay){let i=t-this.from;for(let{from:t,to:n}of s.overlay)if((e>0?t<=i:t<i)&&(e<0?n>=i:n>i))return new fo(s.tree,s.overlay[0].from+this.from,-1,this)}return this.nextChild(0,1,t,e,n?0:2)}nextSignificantParent(){let t=this;for(;t.type.isAnonymous&&t._parent;)t=t._parent;return t}get parent(){return this._parent?this._parent.nextSignificantParent():null}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4):null}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4):null}get cursor(){return new Oo(this)}get tree(){return this.node}toTree(){return this.node}resolve(t,e=0){return ao(this,t,e,!1)}resolveInner(t,e=0){return ao(this,t,e,!0)}enterUnfinishedNodesBefore(t){return oo(this,t)}getChild(t,e=null,i=null){let n=lo(this,t,e,i);return n.length?n[0]:null}getChildren(t,e=null,i=null){return lo(this,t,e,i)}toString(){return this.node.toString()}}function lo(t,e,i,n){let s=t.cursor,r=[];if(!s.firstChild())return r;if(null!=i)for(;!s.type.is(i);)if(!s.nextSibling())return r;for(;;){if(null!=n&&s.type.is(n))return r;if(s.type.is(e)&&r.push(s.node),!s.nextSibling())return null==n?r:[]}}class ho{constructor(t,e,i,n){this.parent=t,this.buffer=e,this.index=i,this.start=n}}class co{constructor(t,e,i){this.context=t,this._parent=e,this.index=i,this.type=t.buffer.set.types[t.buffer.buffer[i]]}get name(){return this.type.name}get from(){return this.context.start+this.context.buffer.buffer[this.index+1]}get to(){return this.context.start+this.context.buffer.buffer[this.index+2]}child(t,e,i){let{buffer:n}=this.context,s=n.findChild(this.index+4,n.buffer[this.index+3],t,e-this.context.start,i);return s<0?null:new co(this.context,this,s)}get firstChild(){return this.child(1,0,4)}get lastChild(){return this.child(-1,0,4)}childAfter(t){return this.child(1,t,2)}childBefore(t){return this.child(-1,t,-2)}enter(t,e,i,n=!0){if(!n)return null;let{buffer:s}=this.context,r=s.findChild(this.index+4,s.buffer[this.index+3],e>0?1:-1,t-this.context.start,e);return r<0?null:new co(this.context,this,r)}get parent(){return this._parent||this.context.parent.nextSignificantParent()}externalSibling(t){return this._parent?null:this.context.parent.nextChild(this.context.index+t,t,0,4)}get nextSibling(){let{buffer:t}=this.context,e=t.buffer[this.index+3];return e<(this._parent?t.buffer[this._parent.index+3]:t.buffer.length)?new co(this.context,this._parent,e):this.externalSibling(1)}get prevSibling(){let{buffer:t}=this.context,e=this._parent?this._parent.index+4:0;return this.index==e?this.externalSibling(-1):new co(this.context,this._parent,t.findChild(e,this.index,-1,0,4))}get cursor(){return new Oo(this)}get tree(){return null}toTree(){let t=[],e=[],{buffer:i}=this.context,n=this.index+4,s=i.buffer[this.index+3];if(s>n){let r=i.buffer[this.index+1],o=i.buffer[this.index+2];t.push(i.slice(n,s,r,o)),e.push(0)}return new io(this.type,t,e,this.to-this.from)}resolve(t,e=0){return ao(this,t,e,!1)}resolveInner(t,e=0){return ao(this,t,e,!0)}enterUnfinishedNodesBefore(t){return oo(this,t)}toString(){return this.context.buffer.childString(this.index)}getChild(t,e=null,i=null){let n=lo(this,t,e,i);return n.length?n[0]:null}getChildren(t,e=null,i=null){return lo(this,t,e,i)}}class Oo{constructor(t,e=0){if(this.mode=e,this.buffer=null,this.stack=[],this.index=0,this.bufferNode=null,t instanceof fo)this.yieldNode(t);else{this._tree=t.context.parent,this.buffer=t.context;for(let e=t._parent;e;e=e._parent)this.stack.unshift(e.index);this.bufferNode=t,this.yieldBuf(t.index)}}get name(){return this.type.name}yieldNode(t){return!!t&&(this._tree=t,this.type=t.type,this.from=t.from,this.to=t.to,!0)}yieldBuf(t,e){this.index=t;let{start:i,buffer:n}=this.buffer;return this.type=e||n.set.types[n.buffer[t]],this.from=i+n.buffer[t+1],this.to=i+n.buffer[t+2],!0}yield(t){return!!t&&(t instanceof fo?(this.buffer=null,this.yieldNode(t)):(this.buffer=t.context,this.yieldBuf(t.index,t.type)))}toString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString()}enterChild(t,e,i){if(!this.buffer)return this.yield(this._tree.nextChild(t<0?this._tree.node.children.length-1:0,t,e,i,this.mode));let{buffer:n}=this.buffer,s=n.findChild(this.index+4,n.buffer[this.index+3],t,e-this.buffer.start,i);return!(s<0)&&(this.stack.push(this.index),this.yieldBuf(s))}firstChild(){return this.enterChild(1,0,4)}lastChild(){return this.enterChild(-1,0,4)}childAfter(t){return this.enterChild(1,t,2)}childBefore(t){return this.enterChild(-1,t,-2)}enter(t,e,i=!0,n=!0){return this.buffer?!!n&&this.enterChild(1,t,e):this.yield(this._tree.enter(t,e,i&&!(1&this.mode),n))}parent(){if(!this.buffer)return this.yieldNode(1&this.mode?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let t=1&this.mode?this.buffer.parent:this.buffer.parent.nextSignificantParent();return this.buffer=null,this.yieldNode(t)}sibling(t){if(!this.buffer)return!!this._tree._parent&&this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+t,t,0,4,this.mode));let{buffer:e}=this.buffer,i=this.stack.length-1;if(t<0){let t=i<0?0:this.stack[i]+4;if(this.index!=t)return this.yieldBuf(e.findChild(t,this.index,-1,0,4))}else{let t=e.buffer[this.index+3];if(t<(i<0?e.buffer.length:e.buffer[this.stack[i]+3]))return this.yieldBuf(t)}return i<0&&this.yield(this.buffer.parent.nextChild(this.buffer.index+t,t,0,4,this.mode))}nextSibling(){return this.sibling(1)}prevSibling(){return this.sibling(-1)}atLastNode(t){let e,i,{buffer:n}=this;if(n){if(t>0){if(this.index<n.buffer.buffer.length)return!1}else for(let t=0;t<this.index;t++)if(n.buffer.buffer[t+3]<this.index)return!1;({index:e,parent:i}=n)}else({index:e,_parent:i}=this._tree);for(;i;({index:e,_parent:i}=i))if(e>-1)for(let n=e+t,s=t<0?-1:i.node.children.length;n!=s;n+=t){let t=i.node.children[n];if(1&this.mode||t instanceof so||!t.type.isAnonymous||uo(t))return!1}return!0}move(t,e){if(e&&this.enterChild(t,0,4))return!0;for(;;){if(this.sibling(t))return!0;if(this.atLastNode(t)||!this.parent())return!1}}next(t=!0){return this.move(1,t)}prev(t=!0){return this.move(-1,t)}moveTo(t,e=0){for(;(this.from==this.to||(e<1?this.from>=t:this.from>t)||(e>-1?this.to<=t:this.to<t))&&this.parent(););for(;this.enterChild(1,t,e););return this}get node(){if(!this.buffer)return this._tree;let t=this.bufferNode,e=null,i=0;if(t&&t.context==this.buffer)t:for(let n=this.index,s=this.stack.length;s>=0;){for(let r=t;r;r=r._parent)if(r.index==n){if(n==this.index)return r;e=r,i=s+1;break t}n=this.stack[--s]}for(let t=i;t<this.stack.length;t++)e=new co(this.buffer,e,this.stack[t]);return this.bufferNode=new co(this.buffer,e,this.index)}get tree(){return this.buffer?null:this._tree.node}}function uo(t){return t.children.some((t=>t instanceof so||!t.type.isAnonymous||uo(t)))}const go=new WeakMap;function po(t,e){if(!t.isAnonymous||e instanceof so||e.type!=t)return 1;let i=go.get(e);if(null==i){i=1;for(let n of e.children){if(n.type!=t||!(n instanceof io)){i=1;break}i+=po(t,n)}go.set(e,i)}return i}function $o(t,e,i,n,s,r,o,a,f){let l=0;for(let i=n;i<s;i++)l+=po(t,e[i]);let h=Math.ceil(1.5*l/8),c=[],O=[];return function e(i,n,s,o,a){for(let l=s;l<o;){let s=l,u=n[l],d=po(t,i[l]);for(l++;l<o;l++){let e=po(t,i[l]);if(d+e>=h)break;d+=e}if(l==s+1){if(d>h){let t=i[s];e(t.children,t.positions,0,t.children.length,n[s]+a);continue}c.push(i[s])}else{let e=n[l-1]+i[l-1].length-u;c.push($o(t,i,n,s,l,u,e,null,f))}O.push(u+a-r)}}(e,i,n,s,0),(a||f)(c,O,o)}class mo{constructor(t,e,i,n,s=!1,r=!1){this.from=t,this.to=e,this.tree=i,this.offset=n,this.open=(s?1:0)|(r?2:0)}get openStart(){return(1&this.open)>0}get openEnd(){return(2&this.open)>0}static addTree(t,e=[],i=!1){let n=[new mo(0,t.length,t,0,!1,i)];for(let i of e)i.to>t.length&&n.push(i);return n}static applyChanges(t,e,i=128){if(!e.length)return t;let n=[],s=1,r=t.length?t[0]:null;for(let o=0,a=0,f=0;;o++){let l=o<e.length?e[o]:null,h=l?l.fromA:1e9;if(h-a>=i)for(;r&&r.from<h;){let e=r;if(a>=e.from||h<=e.to||f){let t=Math.max(e.from,a)-f,i=Math.min(e.to,h)-f;e=t>=i?null:new mo(t,i,e.tree,e.offset+f,o>0,!!l)}if(e&&n.push(e),r.to>h)break;r=s<t.length?t[s++]:null}if(!l)break;a=l.toA,f=l.toA-l.toB}return n}}class Qo{startParse(t,e,i){return"string"==typeof t&&(t=new So(t)),i=i?i.length?i.map((t=>new Er(t.from,t.to))):[new Er(0,0)]:[new Er(0,t.length)],this.createParse(t,e||[],i)}parse(t,e,i){let n=this.startParse(t,e,i);for(;;){let t=n.advance();if(t)return t}}}class So{constructor(t){this.string=t}get length(){return this.string.length}chunk(t){return this.string.slice(t)}get lineChunks(){return!1}read(t,e){return this.string.slice(t,e)}}new Nr({perNode:!0});const bo=new Nr;class vo{constructor(t,e,i,n=[]){this.data=t,this.topNode=i,yt.prototype.hasOwnProperty("tree")||Object.defineProperty(yt.prototype,"tree",{get(){return yo(this)}}),this.parser=e,this.extension=[Yo.of(this),yt.languageData.of(((t,e,i)=>t.facet(xo(t,e,i))))].concat(n)}isActiveAt(t,e,i=-1){return xo(t,e,i)==this.data}findRegions(t){let e=t.facet(Yo);if((null==e?void 0:e.data)==this.data)return[{from:0,to:t.doc.length}];if(!e||!e.allowsNesting)return[];let i=[],n=(t,e)=>{if(t.prop(bo)==this.data)return void i.push({from:e,to:e+t.length});let s=t.prop(Nr.mounted);if(s){if(s.tree.prop(bo)==this.data){if(s.overlay)for(let t of s.overlay)i.push({from:t.from+e,to:t.to+e});else i.push({from:e,to:e+t.length});return}if(s.overlay){let t=i.length;if(n(s.tree,s.overlay[0].from+e),i.length>t)return}}for(let i=0;i<t.children.length;i++){let s=t.children[i];s instanceof io&&n(s,t.positions[i]+e)}};return n(yo(t),0),i}get allowsNesting(){return!0}}function xo(t,e,i){let n=t.facet(Yo);if(!n)return null;let s=n.data;if(n.allowsNesting)for(let n=yo(t).topNode;n;n=n.enter(e,i,!0,!1))s=n.type.prop(bo)||s;return s}vo.setState=ut.define();class wo extends vo{constructor(t,e){super(t,e,e.topNode),this.parser=e}static define(t){let e=(i=t.languageData,U.define({combine:i?t=>t.concat(i):void 0}));var i;return new wo(e,t.parser.configure({props:[bo.add((t=>t.isTop?e:void 0))]}))}configure(t){return new wo(this.data,this.parser.configure(t))}get allowsNesting(){return this.parser.wrappers.length>0}}function yo(t){let e=t.field(vo.state,!1);return e?e.tree:io.empty}class To{constructor(t,e=t.length){this.doc=t,this.length=e,this.cursorPos=0,this.string="",this.cursor=t.iter()}syncTo(t){return this.string=this.cursor.next(t-this.cursorPos).value,this.cursorPos=t+this.string.length,this.cursorPos-this.string.length}chunk(t){return this.syncTo(t),this.string}get lineChunks(){return!0}read(t,e){let i=this.cursorPos-this.string.length;return t<i||e>=this.cursorPos?this.doc.sliceString(t,e):this.string.slice(t-i,e-i)}}let Po=null;class ko{constructor(t,e,i=[],n,s,r,o,a){this.parser=t,this.state=e,this.fragments=i,this.tree=n,this.treeLen=s,this.viewport=r,this.skipped=o,this.scheduleOn=a,this.parse=null,this.tempSkipped=[]}startParse(){return this.parser.startParse(new To(this.state.doc),this.fragments)}work(t,e){return null!=e&&e>=this.state.doc.length&&(e=void 0),this.tree!=io.empty&&this.isDone(null!=e?e:this.state.doc.length)?(this.takeTree(),!0):this.withContext((()=>{var i;let n=Date.now()+t;for(this.parse||(this.parse=this.startParse()),null!=e&&(null==this.parse.stoppedAt||this.parse.stoppedAt>e)&&e<this.state.doc.length&&this.parse.stopAt(e);;){let t=this.parse.advance();if(t){if(this.fragments=this.withoutTempSkipped(mo.addTree(t,this.fragments,null!=this.parse.stoppedAt)),this.treeLen=null!==(i=this.parse.stoppedAt)&&void 0!==i?i:this.state.doc.length,this.tree=t,this.parse=null,!(this.treeLen<(null!=e?e:this.state.doc.length)))return!0;this.parse=this.startParse()}if(Date.now()>n)return!1}}))}takeTree(){let t,e;this.parse&&(t=this.parse.parsedPos)>=this.treeLen&&((null==this.parse.stoppedAt||this.parse.stoppedAt>t)&&this.parse.stopAt(t),this.withContext((()=>{for(;!(e=this.parse.advance()););})),this.treeLen=t,this.tree=e,this.fragments=this.withoutTempSkipped(mo.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(t){let e=Po;Po=this;try{return t()}finally{Po=e}}withoutTempSkipped(t){for(let e;e=this.tempSkipped.pop();)t=Wo(t,e.from,e.to);return t}changes(t,e){let{fragments:i,tree:n,treeLen:s,viewport:r,skipped:o}=this;if(this.takeTree(),!t.empty){let e=[];if(t.iterChangedRanges(((t,i,n,s)=>e.push({fromA:t,toA:i,fromB:n,toB:s}))),i=mo.applyChanges(i,e),n=io.empty,s=0,r={from:t.mapPos(r.from,-1),to:t.mapPos(r.to,1)},this.skipped.length){o=[];for(let e of this.skipped){let i=t.mapPos(e.from,1),n=t.mapPos(e.to,-1);i<n&&o.push({from:i,to:n})}}}return new ko(this.parser,e,i,n,s,r,o,this.scheduleOn)}updateViewport(t){if(this.viewport.from==t.from&&this.viewport.to==t.to)return!1;this.viewport=t;let e=this.skipped.length;for(let e=0;e<this.skipped.length;e++){let{from:i,to:n}=this.skipped[e];i<t.to&&n>t.from&&(this.fragments=Wo(this.fragments,i,n),this.skipped.splice(e--,1))}return!(this.skipped.length>=e)&&(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(t,e){this.skipped.push({from:t,to:e})}static getSkippingParser(t){return new class extends Qo{createParse(e,i,n){let s=n[0].from,r=n[n.length-1].to;return{parsedPos:s,advance(){let e=Po;if(e){for(let t of n)e.tempSkipped.push(t);t&&(e.scheduleOn=e.scheduleOn?Promise.all([e.scheduleOn,t]):t)}return this.parsedPos=r,new io(Kr.none,[],[],r-s)},stoppedAt:null,stopAt(){}}}}}isDone(t){t=Math.min(t,this.state.doc.length);let e=this.fragments;return this.treeLen>=t&&e.length&&0==e[0].from&&e[0].to>=t}static get(){return Po}}function Wo(t,e,i){return mo.applyChanges(t,[{fromA:e,toA:i,fromB:e,toB:i}])}class Ro{constructor(t){this.context=t,this.tree=t.tree}apply(t){if(!t.docChanged)return this;let e=this.context.changes(t.changes,t.state),i=this.context.treeLen==t.startState.doc.length?void 0:Math.max(t.changes.mapPos(this.context.treeLen),e.viewport.to);return e.work(20,i)||e.takeTree(),new Ro(e)}static init(t){let e=Math.min(3e3,t.doc.length),i=new ko(t.facet(Yo).parser,t,[],io.empty,0,{from:0,to:e},[],null);return i.work(20,e)||i.takeTree(),new Ro(i)}}vo.state=q.define({create:Ro.init,update(t,e){for(let t of e.effects)if(t.is(vo.setState))return t.value;return e.startState.facet(Yo)!=e.state.facet(Yo)?Ro.init(e.state):t.apply(e)}});let Xo=t=>{let e=setTimeout((()=>t()),500);return()=>clearTimeout(e)};"undefined"!=typeof requestIdleCallback&&(Xo=t=>{let e=-1,i=setTimeout((()=>{e=requestIdleCallback(t,{timeout:400})}),100);return()=>e<0?clearTimeout(i):cancelIdleCallback(e)});const Zo=Ui.fromClass(class{constructor(t){this.view=t,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(t){let e=this.view.state.field(vo.state).context;(e.updateViewport(t.view.viewport)||this.view.viewport.to>e.treeLen)&&this.scheduleWork(),t.docChanged&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(e)}scheduleWork(){if(this.working)return;let{state:t}=this.view,e=t.field(vo.state);e.tree==e.context.tree&&e.context.isDone(t.doc.length)||(this.working=Xo(this.work))}work(t){this.working=null;let e=Date.now();if(this.chunkEnd<e&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=e+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:i,viewport:{to:n}}=this.view,s=i.field(vo.state);if(s.tree==s.context.tree&&s.context.isDone(n+1e5))return;let r=Math.min(this.chunkBudget,100,t?Math.max(25,t.timeRemaining()-5):1e9),o=s.context.treeLen<n&&i.doc.length>n+1e3,a=s.context.work(r,n+(o?0:1e5));this.chunkBudget-=Date.now()-e,(a||this.chunkBudget<=0)&&(s.context.takeTree(),this.view.dispatch({effects:vo.setState.of(new Ro(s.context))})),this.chunkBudget>0&&(!a||o)&&this.scheduleWork(),this.checkAsyncSchedule(s.context)}checkAsyncSchedule(t){t.scheduleOn&&(this.workScheduled++,t.scheduleOn.then((()=>this.scheduleWork())).catch((t=>Xi(this.view.state,t))).then((()=>this.workScheduled--)),t.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return this.working||this.workScheduled>0}},{eventHandlers:{focus(){this.scheduleWork()}}}),Yo=U.define({combine:t=>t.length?t[0]:null,enables:[vo.state,Zo]});class Co{constructor(t,e=[]){this.language=t,this.support=e,this.extension=[t,e]}}const Vo=U.define(),jo=U.define({combine:t=>{if(!t.length)return"  ";if(!/^(?: +|\t+)$/.test(t[0]))throw new Error("Invalid indent unit: "+JSON.stringify(t[0]));return t[0]}});function Uo(t){let e=t.facet(jo);return 9==e.charCodeAt(0)?t.tabSize*e.length:e.length}function Jo(t,e){let i="",n=t.tabSize;if(9==t.facet(jo).charCodeAt(0))for(;e>=n;)i+="\t",e-=n;for(let t=0;t<e;t++)i+=" ";return i}function Mo(t,e){t instanceof yt&&(t=new Do(t));for(let i of t.state.facet(Vo)){let n=i(t,e);if(null!=n)return n}let i=yo(t.state);return i?function(t,e,i){return qo(e.resolveInner(i).enterUnfinishedNodesBefore(i),i,t)}(t,i,e):null}class Do{constructor(t,e={}){this.state=t,this.options=e,this.unit=Uo(t)}lineAt(t,e=1){let i=this.state.doc.lineAt(t),{simulateBreak:n}=this.options;return null!=n&&n>=i.from&&n<=i.to?(e<0?n<t:n<=t)?{text:i.text.slice(n-i.from),from:n}:{text:i.text.slice(0,n-i.from),from:i.from}:i}textAfterPos(t,e=1){if(this.options.simulateDoubleBreak&&t==this.options.simulateBreak)return"";let{text:i,from:n}=this.lineAt(t,e);return i.slice(t-n,Math.min(i.length,t+100-n))}column(t,e=1){let{text:i,from:n}=this.lineAt(t,e),s=this.countColumn(i,t-n),r=this.options.overrideIndentation?this.options.overrideIndentation(n):-1;return r>-1&&(s+=r-this.countColumn(i,i.search(/\S|$/))),s}countColumn(t,e=t.length){return c(t,this.state.tabSize,e)}lineIndent(t,e=1){let{text:i,from:n}=this.lineAt(t,e),s=this.options.overrideIndentation;if(s){let t=s(n);if(t>-1)return t}return this.countColumn(i,i.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const Go=new Nr;function Ao(t){let e=t.type.prop(Go);if(e)return e;let i,n=t.firstChild;if(n&&(i=n.type.prop(Nr.closedBy))){let e=t.lastChild,n=e&&i.indexOf(e.name)>-1;return t=>Fo(t,!0,1,void 0,n&&!function(t){return t.pos==t.options.simulateBreak&&t.options.simulateDoubleBreak}(t)?e.from:void 0)}return null==t.parent?Io:null}function qo(t,e,i){for(;t;t=t.parent){let n=Ao(t);if(n)return n(new zo(i,e,t))}return null}function Io(){return 0}class zo extends Do{constructor(t,e,i){super(t.state,t.options),this.base=t,this.pos=e,this.node=i}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){let t=this.state.doc.lineAt(this.node.from);for(;;){let e=this.node.resolve(t.from);for(;e.parent&&e.parent.from==e.from;)e=e.parent;if(_o(e,this.node))break;t=this.state.doc.lineAt(e.from)}return this.lineIndent(t.from)}continue(){let t=this.node.parent;return t?qo(t,this.pos,this.base):0}}function _o(t,e){for(let i=e;i;i=i.parent)if(t==i)return!0;return!1}function Bo({closing:t,align:e=!0,units:i=1}){return n=>Fo(n,e,i,t)}function Fo(t,e,i,n,s){let r=t.textAfter,o=r.match(/^\s*/)[0].length,a=n&&r.slice(o,o+n.length)==n||s==t.pos+o,f=e?function(t){let e=t.node,i=e.childAfter(e.from),n=e.lastChild;if(!i)return null;let s=t.options.simulateBreak,r=t.state.doc.lineAt(i.from),o=null==s||s<=r.from?r.to:Math.min(r.to,s);for(let t=i.to;;){let s=e.childAfter(t);if(!s||s==n)return null;if(!s.type.isSkipped)return s.from<o?i:null;t=s.to}}(t):null;return f?a?t.column(f.from):t.column(f.to):t.baseIndent+(a?0:t.unit*i)}function Eo({except:t,units:e=1}={}){return i=>{let n=t&&t.test(i.textAfter);return i.baseIndent+(n?0:e*i.unit)}}function No(){return yt.transactionFilter.of((t=>{if(!t.docChanged||!t.isUserEvent("input.type"))return t;let e=t.startState.languageDataAt("indentOnInput",t.startState.selection.main.head);if(!e.length)return t;let i=t.newDoc,{head:n}=t.newSelection.main,s=i.lineAt(n);if(n>s.from+200)return t;let r=i.sliceString(s.from,n);if(!e.some((t=>t.test(r))))return t;let{state:o}=t,a=-1,f=[];for(let{head:t}of o.selection.ranges){let e=o.doc.lineAt(t);if(e.from==a)continue;a=e.from;let i=Mo(o,e.from);if(null==i)continue;let n=/^\s*/.exec(e.text)[0],s=Jo(o,i);n!=s&&f.push({from:e.from,to:e.from+n.length,insert:s})}return f.length?[t,{changes:f,sequential:!0}]:t}))}const Lo=U.define(),Ko=new Nr;function Ho(t){let e=t.firstChild,i=t.lastChild;return e&&e.to<i.from?{from:e.to,to:i.type.isError?t.to:i.from}:null}function ta(t,e,i){for(let n of t.facet(Lo)){let s=n(t,e,i);if(s)return s}return function(t,e,i){let n=yo(t);if(0==n.length)return null;let s=null;for(let r=n.resolveInner(i);r;r=r.parent){if(r.to<=i||r.from>i)continue;if(s&&r.from<e)break;let n=r.type.prop(Ko);if(n){let o=n(r,t);o&&o.from<=i&&o.from>=e&&o.to>i&&(s=o)}}return s}(t,e,i)}class ea extends Dt{compare(t){return this==t||this.constructor==t.constructor&&this.eq(t)}eq(t){return!1}destroy(t){}}ea.prototype.elementClass="",ea.prototype.toDOM=void 0,ea.prototype.mapMode=x.TrackBefore,ea.prototype.startSide=ea.prototype.endSide=-1,ea.prototype.point=!0;const ia=U.define(),na={class:"",renderEmptyElements:!1,elementStyle:"",markers:()=>It.empty,lineMarker:()=>null,lineMarkerChange:null,initialSpacer:null,updateSpacer:null,domEventHandlers:{}},sa=U.define();function ra(t){return[fa(),sa.of(Object.assign(Object.assign({},na),t))]}const oa=Vs.baseTheme({".cm-gutters":{display:"flex",height:"100%",boxSizing:"border-box",left:0,zIndex:200},"&light .cm-gutters":{backgroundColor:"#f5f5f5",color:"#999",borderRight:"1px solid #ddd"},"&dark .cm-gutters":{backgroundColor:"#333338",color:"#ccc"},".cm-gutter":{display:"flex !important",flexDirection:"column",flexShrink:0,boxSizing:"border-box",minHeight:"100%",overflow:"hidden"},".cm-gutterElement":{boxSizing:"border-box"},".cm-lineNumbers .cm-gutterElement":{padding:"0 3px 0 5px",minWidth:"20px",textAlign:"right",whiteSpace:"nowrap"},"&light .cm-activeLineGutter":{backgroundColor:"#e2f2ff"},"&dark .cm-activeLineGutter":{backgroundColor:"#222227"}}),aa=U.define({combine:t=>t.some((t=>t))});function fa(t){let e=[la,oa];return t&&!1===t.fixed&&e.push(aa.of(!0)),e}const la=Ui.fromClass(class{constructor(t){this.view=t,this.prevViewport=t.viewport,this.dom=document.createElement("div"),this.dom.className="cm-gutters",this.dom.setAttribute("aria-hidden","true"),this.dom.style.minHeight=this.view.contentHeight+"px",this.gutters=t.state.facet(sa).map((e=>new ua(t,e)));for(let t of this.gutters)this.dom.appendChild(t.dom);this.fixed=!t.state.facet(aa),this.fixed&&(this.dom.style.position="sticky"),this.syncGutters(!1),t.scrollDOM.insertBefore(this.dom,t.contentDOM)}update(t){if(this.updateGutters(t)){let e=this.prevViewport,i=t.view.viewport,n=Math.min(e.to,i.to)-Math.max(e.from,i.from);this.syncGutters(n<.8*(i.to-i.from))}t.geometryChanged&&(this.dom.style.minHeight=this.view.contentHeight+"px"),this.view.state.facet(aa)!=!this.fixed&&(this.fixed=!this.fixed,this.dom.style.position=this.fixed?"sticky":""),this.prevViewport=t.view.viewport}syncGutters(t){let e=this.dom.nextSibling;t&&this.dom.remove();let i=It.iter(this.view.state.facet(ia),this.view.viewport.from),n=[],s=this.gutters.map((t=>new Oa(t,this.view.viewport,-this.view.documentPadding.top)));for(let t of this.view.viewportLineBlocks){let e;if(Array.isArray(t.type)){for(let i of t.type)if(i.type==fi.Text){e=i;break}}else e=t.type==fi.Text?t:void 0;if(e){n.length&&(n=[]),ca(i,n,t.from);for(let t of s)t.line(this.view,e,n)}}for(let t of s)t.finish();t&&this.view.scrollDOM.insertBefore(this.dom,e)}updateGutters(t){let e=t.startState.facet(sa),i=t.state.facet(sa),n=t.docChanged||t.heightChanged||t.viewportChanged||!It.eq(t.startState.facet(ia),t.state.facet(ia),t.view.viewport.from,t.view.viewport.to);if(e==i)for(let e of this.gutters)e.update(t)&&(n=!0);else{n=!0;let s=[];for(let n of i){let i=e.indexOf(n);i<0?s.push(new ua(this.view,n)):(this.gutters[i].update(t),s.push(this.gutters[i]))}for(let t of this.gutters)t.dom.remove(),s.indexOf(t)<0&&t.destroy();for(let t of s)this.dom.appendChild(t.dom);this.gutters=s}return n}destroy(){for(let t of this.gutters)t.destroy();this.dom.remove()}},{provide:Ci.scrollMargins.from((t=>0!=t.gutters.length&&t.fixed?t.view.textDirection==_i.LTR?{left:t.dom.offsetWidth}:{right:t.dom.offsetWidth}:null))});function ha(t){return Array.isArray(t)?t:[t]}function ca(t,e,i){for(;t.value&&t.from<=i;)t.from==i&&e.push(t.value),t.next()}class Oa{constructor(t,e,i){this.gutter=t,this.height=i,this.localMarkers=[],this.i=0,this.cursor=It.iter(t.markers,e.from)}line(t,e,i){this.localMarkers.length&&(this.localMarkers=[]),ca(this.cursor,this.localMarkers,e.from);let n=i.length?this.localMarkers.concat(i):this.localMarkers,s=this.gutter.config.lineMarker(t,e,n);s&&n.unshift(s);let r=this.gutter;if(0==n.length&&!r.config.renderEmptyElements)return;let o=e.top-this.height;if(this.i==r.elements.length){let i=new da(t,e.height,o,n);r.elements.push(i),r.dom.appendChild(i.dom)}else r.elements[this.i].update(t,e.height,o,n);this.height=e.bottom,this.i++}finish(){let t=this.gutter;for(;t.elements.length>this.i;){let e=t.elements.pop();t.dom.removeChild(e.dom),e.destroy()}}}class ua{constructor(t,e){this.view=t,this.config=e,this.elements=[],this.spacer=null,this.dom=document.createElement("div"),this.dom.className="cm-gutter"+(this.config.class?" "+this.config.class:"");for(let i in e.domEventHandlers)this.dom.addEventListener(i,(n=>{let s=t.lineBlockAtHeight(n.clientY-t.documentTop);e.domEventHandlers[i](t,s,n)&&n.preventDefault()}));this.markers=ha(e.markers(t)),e.initialSpacer&&(this.spacer=new da(t,0,0,[e.initialSpacer(t)]),this.dom.appendChild(this.spacer.dom),this.spacer.dom.style.cssText+="visibility: hidden; pointer-events: none")}update(t){let e=this.markers;if(this.markers=ha(this.config.markers(t.view)),this.spacer&&this.config.updateSpacer){let e=this.config.updateSpacer(this.spacer.markers[0],t);e!=this.spacer.markers[0]&&this.spacer.update(t.view,0,0,[e])}let i=t.view.viewport;return!It.eq(this.markers,e,i.from,i.to)||!!this.config.lineMarkerChange&&this.config.lineMarkerChange(t)}destroy(){for(let t of this.elements)t.destroy()}}class da{constructor(t,e,i,n){this.height=-1,this.above=0,this.markers=[],this.dom=document.createElement("div"),this.update(t,e,i,n)}update(t,e,i,n){this.height!=e&&(this.dom.style.height=(this.height=e)+"px"),this.above!=i&&(this.dom.style.marginTop=(this.above=i)?i+"px":""),function(t,e){if(t.length!=e.length)return!1;for(let i=0;i<t.length;i++)if(!t[i].compare(e[i]))return!1;return!0}(this.markers,n)||this.setMarkers(t,n)}setMarkers(t,e){let i="cm-gutterElement",n=this.dom.firstChild;for(let s=0,r=0;;){let o=r,a=s<e.length?e[s++]:null,f=!1;if(a){let t=a.elementClass;t&&(i+=" "+t);for(let t=r;t<this.markers.length;t++)if(this.markers[t].compare(a)){o=t,f=!0;break}}else o=this.markers.length;for(;r<o;){let t=this.markers[r++];if(t.toDOM){t.destroy(n);let e=n.nextSibling;n.remove(),n=e}}if(!a)break;a.toDOM&&(f?n=n.nextSibling:this.dom.insertBefore(a.toDOM(t),n)),f&&r++}this.dom.className=i,this.markers=e}destroy(){this.setMarkers(null,[])}}const ga=U.define(),pa=U.define({combine:t=>Tt(t,{formatNumber:String,domEventHandlers:{}},{domEventHandlers(t,e){let i=Object.assign({},t);for(let t in e){let n=i[t],s=e[t];i[t]=n?(t,e,i)=>n(t,e,i)||s(t,e,i):s}return i}})});class $a extends ea{constructor(t){super(),this.number=t}eq(t){return this.number==t.number}toDOM(){return document.createTextNode(this.number)}}function ma(t,e){return t.state.facet(pa).formatNumber(e,t.state)}const Qa=sa.compute([pa],(t=>({class:"cm-lineNumbers",renderEmptyElements:!1,markers:t=>t.state.facet(ga),lineMarker:(t,e,i)=>i.some((t=>t.toDOM))?null:new $a(ma(t,t.state.doc.lineAt(e.from).number)),lineMarkerChange:t=>t.startState.facet(pa)!=t.state.facet(pa),initialSpacer:t=>new $a(ma(t,Sa(t.state.doc.lines))),updateSpacer(t,e){let i=ma(e.view,Sa(e.view.state.doc.lines));return i==t.number?t:new $a(i)},domEventHandlers:t.facet(pa).domEventHandlers})));function Sa(t){let e=9;for(;e<t;)e=10*e+9;return e}const ba=new class extends ea{constructor(){super(...arguments),this.elementClass="cm-activeLineGutter"}},va=ia.compute(["selection"],(t=>{let e=[],i=-1;for(let n of t.selection.ranges)if(n.empty){let s=t.doc.lineAt(n.head).from;s>i&&(i=s,e.push(ba.range(s)))}return It.of(e)}));function xa(t,e){let i=e.mapPos(t.from,1),n=e.mapPos(t.to,-1);return i>=n?void 0:{from:i,to:n}}const wa=ut.define({map:xa}),ya=ut.define({map:xa});function Ta(t){let e=[];for(let{head:i}of t.state.selection.ranges)e.some((t=>t.from<=i&&t.to>=i))||e.push(t.lineBlockAt(i));return e}const Pa=q.define({create:()=>li.none,update(t,e){t=t.map(e.changes);for(let i of e.effects)i.is(wa)&&!Wa(t,i.value.from,i.value.to)?t=t.update({add:[ja.range(i.value.from,i.value.to)]}):i.is(ya)&&(t=t.update({filter:(t,e)=>i.value.from!=t||i.value.to!=e,filterFrom:i.value.from,filterTo:i.value.to}));if(e.selection){let i=!1,{head:n}=e.selection.main;t.between(n,n,((t,e)=>{t<n&&e>n&&(i=!0)})),i&&(t=t.update({filterFrom:n,filterTo:n,filter:(t,e)=>e<=n||t>=n}))}return t},provide:t=>Vs.decorations.from(t)});function ka(t,e,i){var n;let s=null;return null===(n=t.field(Pa,!1))||void 0===n||n.between(e,i,((t,e)=>{(!s||s.from>t)&&(s={from:t,to:e})})),s}function Wa(t,e,i){let n=!1;return t.between(e,e,((t,s)=>{t==e&&s==i&&(n=!0)})),n}function Ra(t,e){return t.field(Pa,!1)?e:e.concat(ut.appendConfig.of(Va()))}function Xa(t,e,i=!0){let n=t.state.doc.lineAt(e.from).number,s=t.state.doc.lineAt(e.to).number;return Vs.announce.of(`${t.state.phrase(i?"Folded lines":"Unfolded lines")} ${n} ${t.state.phrase("to")} ${s}.`)}const Za=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:t=>{for(let e of Ta(t)){let i=ta(t.state,e.from,e.to);if(i)return t.dispatch({effects:Ra(t.state,[wa.of(i),Xa(t,i)])}),!0}return!1}},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:t=>{if(!t.state.field(Pa,!1))return!1;let e=[];for(let i of Ta(t)){let n=ka(t.state,i.from,i.to);n&&e.push(ya.of(n),Xa(t,n,!1))}return e.length&&t.dispatch({effects:e}),e.length>0}},{key:"Ctrl-Alt-[",run:t=>{let{state:e}=t,i=[];for(let n=0;n<e.doc.length;){let s=t.lineBlockAt(n),r=ta(e,s.from,s.to);r&&i.push(wa.of(r)),n=(r?t.lineBlockAt(r.to):s).to+1}return i.length&&t.dispatch({effects:Ra(t.state,i)}),!!i.length}},{key:"Ctrl-Alt-]",run:t=>{let e=t.state.field(Pa,!1);if(!e||!e.size)return!1;let i=[];return e.between(0,t.state.doc.length,((t,e)=>{i.push(ya.of({from:t,to:e}))})),t.dispatch({effects:i}),!0}}],Ya={placeholderDOM:null,placeholderText:"\u2026"},Ca=U.define({combine:t=>Tt(t,Ya)});function Va(t){let e=[Pa,Ma];return t&&e.push(Ca.of(t)),e}const ja=li.replace({widget:new class extends ai{toDOM(t){let{state:e}=t,i=e.facet(Ca),n=e=>{let i=t.lineBlockAt(t.posAtDOM(e.target)),n=ka(t.state,i.from,i.to);n&&t.dispatch({effects:ya.of(n)}),e.preventDefault()};if(i.placeholderDOM)return i.placeholderDOM(t,n);let s=document.createElement("span");return s.textContent=i.placeholderText,s.setAttribute("aria-label",e.phrase("folded code")),s.title=e.phrase("unfold"),s.className="cm-foldPlaceholder",s.onclick=n,s}}}),Ua={openText:"\u2304",closedText:"\u203a",markerDOM:null,domEventHandlers:{}};class Ja extends ea{constructor(t,e){super(),this.config=t,this.open=e}eq(t){return this.config==t.config&&this.open==t.open}toDOM(t){if(this.config.markerDOM)return this.config.markerDOM(this.open);let e=document.createElement("span");return e.textContent=this.open?this.config.openText:this.config.closedText,e.title=t.state.phrase(this.open?"Fold line":"Unfold line"),e}}const Ma=Vs.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}}),Da=Vs.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),Ga="()[]{}",Aa=U.define({combine:t=>Tt(t,{afterCursor:!0,brackets:Ga,maxScanDistance:1e4})}),qa=li.mark({class:"cm-matchingBracket"}),Ia=li.mark({class:"cm-nonmatchingBracket"}),za=q.define({create:()=>li.none,update(t,e){if(!e.docChanged&&!e.selection)return t;let i=[],n=e.state.facet(Aa);for(let t of e.state.selection.ranges){if(!t.empty)continue;let s=Ea(e.state,t.head,-1,n)||t.head>0&&Ea(e.state,t.head-1,1,n)||n.afterCursor&&(Ea(e.state,t.head,1,n)||t.head<e.state.doc.length&&Ea(e.state,t.head+1,-1,n));if(!s)continue;let r=s.matched?qa:Ia;i.push(r.range(s.start.from,s.start.to)),s.end&&i.push(r.range(s.end.from,s.end.to))}return li.set(i,!0)},provide:t=>Vs.decorations.from(t)}),_a=[za,Da];function Ba(t={}){return[Aa.of(t),_a]}function Fa(t,e,i){let n=t.prop(e<0?Nr.openedBy:Nr.closedBy);if(n)return n;if(1==t.name.length){let n=i.indexOf(t.name);if(n>-1&&n%2==(e<0?1:0))return[i[n+e]]}return null}function Ea(t,e,i,n={}){let s=n.maxScanDistance||1e4,r=n.brackets||Ga,o=yo(t),a=o.resolveInner(e,i);for(let n=a;n;n=n.parent){let s=Fa(n.type,i,r);if(s&&n.from<n.to)return Na(t,e,i,n,s,r)}return function(t,e,i,n,s,r,o){let a=i<0?t.sliceDoc(e-1,e):t.sliceDoc(e,e+1),f=o.indexOf(a);if(f<0||f%2==0!=i>0)return null;let l={from:i<0?e-1:e,to:i>0?e+1:e},h=t.doc.iterRange(e,i>0?t.doc.length:0),c=0;for(let t=0;!h.next().done&&t<=r;){let r=h.value;i<0&&(t+=r.length);let a=e+t*i;for(let t=i>0?0:r.length-1,e=i>0?r.length:-1;t!=e;t+=i){let e=o.indexOf(r[t]);if(!(e<0||n.resolve(a+t,1).type!=s))if(e%2==0==i>0)c++;else{if(1==c)return{start:l,end:{from:a+t,to:a+t+1},matched:e>>1==f>>1};c--}}i>0&&(t+=r.length)}return h.done?{start:l,matched:!1}:null}(t,e,i,o,a.type,s,r)}function Na(t,e,i,n,s,r){let o=n.parent,a={from:n.from,to:n.to},f=0,l=null==o?void 0:o.cursor;if(l&&(i<0?l.childBefore(n.from):l.childAfter(n.to)))do{if(i<0?l.to<=n.from:l.from>=n.to){if(0==f&&s.indexOf(l.type.name)>-1&&l.from<l.to)return{start:a,end:{from:l.from,to:l.to},matched:!0};if(Fa(l.type,i,r))f++;else if(Fa(l.type,-i,r)&&(f--,0==f))return{start:a,end:l.from==l.to?void 0:{from:l.from,to:l.to},matched:!1}}}while(i<0?l.prevSibling():l.nextSibling());return{start:a,matched:!1}}function La(t,e){return Y.create(t.ranges.map(e),t.mainIndex)}function Ka(t,e){return t.update({selection:e,scrollIntoView:!0,userEvent:"select"})}function Ha({state:t,dispatch:e},i){let n=La(t.selection,i);return!n.eq(t.selection)&&(e(Ka(t,n)),!0)}function tf(t,e){return Y.cursor(e?t.to:t.from)}function ef(t,e){return Ha(t,(i=>i.empty?t.moveByChar(i,e):tf(i,e)))}const nf=t=>ef(t,t.textDirection!=_i.LTR),sf=t=>ef(t,t.textDirection==_i.LTR);function rf(t,e){return Ha(t,(i=>i.empty?t.moveByGroup(i,e):tf(i,e)))}function of(t,e,i){if(e.type.prop(i))return!0;let n=e.to-e.from;return n&&(n>2||/[^\s,.;:]/.test(t.sliceDoc(e.from,e.to)))||e.firstChild}function af(t,e,i){let n,s,r=yo(t).resolveInner(e.head),o=i?Nr.closedBy:Nr.openedBy;for(let n=e.head;;){let e=i?r.childAfter(n):r.childBefore(n);if(!e)break;of(t,e,o)?r=e:n=i?e.to:e.from}return s=r.type.prop(o)&&(n=i?Ea(t,r.from,1):Ea(t,r.to,-1))&&n.matched?i?n.end.to:n.end.from:i?r.to:r.from,Y.cursor(s,i?-1:1)}function ff(t,e){return Ha(t,(i=>{if(!i.empty)return tf(i,e);let n=t.moveVertically(i,e);return n.head!=i.head?n:t.moveToLineBoundary(i,e)}))}const lf=t=>ff(t,!1),hf=t=>ff(t,!0);function cf(t,e){let{state:i}=t,n=La(i.selection,(i=>i.empty?t.moveVertically(i,e,t.dom.clientHeight):tf(i,e)));if(n.eq(i.selection))return!1;let s=t.coordsAtPos(i.selection.main.head),r=t.scrollDOM.getBoundingClientRect();return t.dispatch(Ka(i,n),{effects:s&&s.top>r.top&&s.bottom<r.bottom?Vs.scrollIntoView(n.main.head,{y:"start",yMargin:s.top-r.top}):void 0}),!0}const Of=t=>cf(t,!1),uf=t=>cf(t,!0);function df(t,e,i){let n=t.lineBlockAt(e.head),s=t.moveToLineBoundary(e,i);if(s.head==e.head&&s.head!=(i?n.to:n.from)&&(s=t.moveToLineBoundary(e,i,!1)),!i&&s.head==n.from&&n.length){let i=/^\s*/.exec(t.state.sliceDoc(n.from,Math.min(n.from+100,n.to)))[0].length;i&&e.head!=n.from+i&&(s=Y.cursor(n.from+i))}return s}const gf=t=>Ha(t,(e=>df(t,e,!0))),pf=t=>Ha(t,(e=>df(t,e,!1)));function $f(t,e){let i=La(t.state.selection,(t=>{let i=e(t);return Y.range(t.anchor,i.head,i.goalColumn)}));return!i.eq(t.state.selection)&&(t.dispatch(Ka(t.state,i)),!0)}function mf(t,e){return $f(t,(i=>t.moveByChar(i,e)))}const Qf=t=>mf(t,t.textDirection!=_i.LTR),Sf=t=>mf(t,t.textDirection==_i.LTR);function bf(t,e){return $f(t,(i=>t.moveByGroup(i,e)))}function vf(t,e){return $f(t,(i=>t.moveVertically(i,e)))}const xf=t=>vf(t,!1),wf=t=>vf(t,!0);function yf(t,e){return $f(t,(i=>t.moveVertically(i,e,t.dom.clientHeight)))}const Tf=t=>yf(t,!1),Pf=t=>yf(t,!0),kf=t=>$f(t,(e=>df(t,e,!0))),Wf=t=>$f(t,(e=>df(t,e,!1))),Rf=({state:t,dispatch:e})=>(e(Ka(t,{anchor:0})),!0),Xf=({state:t,dispatch:e})=>(e(Ka(t,{anchor:t.doc.length})),!0),Zf=({state:t,dispatch:e})=>(e(Ka(t,{anchor:t.selection.main.anchor,head:0})),!0),Yf=({state:t,dispatch:e})=>(e(Ka(t,{anchor:t.selection.main.anchor,head:t.doc.length})),!0);function Cf({state:t,dispatch:e},i){if(t.readOnly)return!1;let n="delete.selection",s=t.changeByRange((t=>{let{from:e,to:s}=t;if(e==s){let t=i(e);t<e?n="delete.backward":t>e&&(n="delete.forward"),e=Math.min(e,t),s=Math.max(s,t)}return e==s?{range:t}:{changes:{from:e,to:s},range:Y.cursor(e)}}));return!s.changes.empty&&(e(t.update(s,{scrollIntoView:!0,userEvent:n})),!0)}function Vf(t,e,i){if(t instanceof Vs)for(let n of t.pluginField(Ci.atomicRanges))n.between(e,e,((t,n)=>{t<e&&n>e&&(e=i?n:t)}));return e}const jf=(t,e)=>Cf(t,(i=>{let s,r,{state:o}=t,a=o.doc.lineAt(i);if(!e&&i>a.from&&i<a.from+200&&!/[^ \t]/.test(s=a.text.slice(0,i-a.from))){if("\t"==s[s.length-1])return i-1;let t=c(s,o.tabSize)%Uo(o)||Uo(o);for(let e=0;e<t&&" "==s[s.length-1-e];e++)i--;r=i}else r=n(a.text,i-a.from,e,e)+a.from,r==i&&a.number!=(e?o.doc.lines:1)&&(r+=e?1:-1);return Vf(t,r,e)})),Uf=t=>jf(t,!1),Jf=t=>jf(t,!0),Mf=(t,e)=>Cf(t,(i=>{let s=i,{state:r}=t,o=r.doc.lineAt(s),a=r.charCategorizer(s);for(let t=null;;){if(s==(e?o.to:o.from)){s==i&&o.number!=(e?r.doc.lines:1)&&(s+=e?1:-1);break}let f=n(o.text,s-o.from,e)+o.from,l=o.text.slice(Math.min(s,f)-o.from,Math.max(s,f)-o.from),h=a(l);if(null!=t&&h!=t)break;" "==l&&s==i||(t=h),s=f}return Vf(t,s,e)})),Df=t=>Mf(t,!1),Gf=t=>Cf(t,(e=>{let i=t.lineBlockAt(e).to;return Vf(t,e<i?i:Math.min(t.state.doc.length,e+1),!0)}));function Af(t){let e=[],i=-1;for(let n of t.selection.ranges){let s=t.doc.lineAt(n.from),r=t.doc.lineAt(n.to);if(n.empty||n.to!=r.from||(r=t.doc.lineAt(n.to-1)),i>=s.number){let t=e[e.length-1];t.to=r.to,t.ranges.push(n)}else e.push({from:s.from,to:r.to,ranges:[n]});i=r.number+1}return e}function qf(t,e,i){if(t.readOnly)return!1;let n=[],s=[];for(let e of Af(t)){if(i?e.to==t.doc.length:0==e.from)continue;let r=t.doc.lineAt(i?e.to+1:e.from-1),o=r.length+1;if(i){n.push({from:e.to,to:r.to},{from:e.from,insert:r.text+t.lineBreak});for(let i of e.ranges)s.push(Y.range(Math.min(t.doc.length,i.anchor+o),Math.min(t.doc.length,i.head+o)))}else{n.push({from:r.from,to:e.from},{from:e.to,insert:t.lineBreak+r.text});for(let t of e.ranges)s.push(Y.range(t.anchor-o,t.head-o))}}return!!n.length&&(e(t.update({changes:n,scrollIntoView:!0,selection:Y.create(s,t.selection.mainIndex),userEvent:"move.line"})),!0)}function If(t,e,i){if(t.readOnly)return!1;let n=[];for(let e of Af(t))i?n.push({from:e.from,insert:t.doc.slice(e.from,e.to)+t.lineBreak}):n.push({from:e.to,insert:t.lineBreak+t.doc.slice(e.from,e.to)});return e(t.update({changes:n,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const zf=_f(!1);function _f(t){return({state:e,dispatch:i})=>{if(e.readOnly)return!1;let n=e.changeByRange((i=>{let{from:n,to:s}=i,r=e.doc.lineAt(n),o=!t&&n==s&&function(t,e){if(/\(\)|\[\]|\{\}/.test(t.sliceDoc(e-1,e+1)))return{from:e,to:e};let i,n=yo(t).resolveInner(e),s=n.childBefore(e),r=n.childAfter(e);return s&&r&&s.to<=e&&r.from>=e&&(i=s.type.prop(Nr.closedBy))&&i.indexOf(r.name)>-1&&t.doc.lineAt(s.to).from==t.doc.lineAt(r.from).from?{from:s.to,to:r.from}:null}(e,n);t&&(n=s=(s<=r.to?r:e.doc.lineAt(s)).to);let a=new Do(e,{simulateBreak:n,simulateDoubleBreak:!!o}),f=Mo(a,n);for(null==f&&(f=/^\s*/.exec(e.doc.lineAt(n).text)[0].length);s<r.to&&/\s/.test(r.text[s-r.from]);)s++;o?({from:n,to:s}=o):n>r.from&&n<r.from+100&&!/\S/.test(r.text.slice(0,n))&&(n=r.from);let l=["",Jo(e,f)];return o&&l.push(Jo(e,a.lineIndent(r.from,-1))),{changes:{from:n,to:s,insert:u.of(l)},range:Y.cursor(n+1+l[1].length)}}));return i(e.update(n,{scrollIntoView:!0,userEvent:"input"})),!0}}function Bf(t,e){let i=-1;return t.changeByRange((n=>{let s=[];for(let r=n.from;r<=n.to;){let o=t.doc.lineAt(r);o.number>i&&(n.empty||n.to>o.from)&&(e(o,s,n),i=o.number),r=o.to+1}let r=t.changes(s);return{changes:s,range:Y.range(r.mapPos(n.anchor,1),r.mapPos(n.head,1))}}))}const Ff=({state:t,dispatch:e})=>!t.readOnly&&(e(t.update(Bf(t,((e,i)=>{i.push({from:e.from,insert:t.facet(jo)})})),{userEvent:"input.indent"})),!0),Ef=({state:t,dispatch:e})=>!t.readOnly&&(e(t.update(Bf(t,((e,i)=>{let n=/^\s*/.exec(e.text)[0];if(!n)return;let s=c(n,t.tabSize),r=0,o=Jo(t,Math.max(0,s-Uo(t)));for(;r<n.length&&r<o.length&&n.charCodeAt(r)==o.charCodeAt(r);)r++;i.push({from:e.from+r,to:e.from+n.length,insert:o.slice(r)})})),{userEvent:"delete.dedent"})),!0),Nf=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:t=>Ha(t,(e=>af(t.state,e,t.textDirection!=_i.LTR))),shift:t=>$f(t,(e=>af(t.state,e,t.textDirection!=_i.LTR)))},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:t=>Ha(t,(e=>af(t.state,e,t.textDirection==_i.LTR))),shift:t=>$f(t,(e=>af(t.state,e,t.textDirection==_i.LTR)))},{key:"Alt-ArrowUp",run:({state:t,dispatch:e})=>qf(t,e,!1)},{key:"Shift-Alt-ArrowUp",run:({state:t,dispatch:e})=>If(t,e,!1)},{key:"Alt-ArrowDown",run:({state:t,dispatch:e})=>qf(t,e,!0)},{key:"Shift-Alt-ArrowDown",run:({state:t,dispatch:e})=>If(t,e,!0)},{key:"Escape",run:({state:t,dispatch:e})=>{let i=t.selection,n=null;return i.ranges.length>1?n=Y.create([i.main]):i.main.empty||(n=Y.create([Y.cursor(i.main.head)])),!!n&&(e(Ka(t,n)),!0)}},{key:"Mod-Enter",run:_f(!0)},{key:"Alt-l",mac:"Ctrl-l",run:({state:t,dispatch:e})=>{let i=Af(t).map((({from:e,to:i})=>Y.range(e,Math.min(i+1,t.doc.length))));return e(t.update({selection:Y.create(i),userEvent:"select"})),!0}},{key:"Mod-i",run:({state:t,dispatch:e})=>{let i=La(t.selection,(e=>{var i;let n=yo(t).resolveInner(e.head,1);for(;!(n.from<e.from&&n.to>=e.to||n.to>e.to&&n.from<=e.from)&&(null===(i=n.parent)||void 0===i?void 0:i.parent);)n=n.parent;return Y.range(n.to,n.from)}));return e(Ka(t,i)),!0},preventDefault:!0},{key:"Mod-[",run:Ef},{key:"Mod-]",run:Ff},{key:"Mod-Alt-\\",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=Object.create(null),n=new Do(t,{overrideIndentation:t=>{let e=i[t];return null==e?-1:e}}),s=Bf(t,((e,s,r)=>{let o=Mo(n,e.from);if(null==o)return;/\S/.test(e.text)||(o=0);let a=/^\s*/.exec(e.text)[0],f=Jo(t,o);(a!=f||r.from<e.from+a.length)&&(i[e.from]=o,s.push({from:e.from,to:e.from+a.length,insert:f}))}));return s.changes.empty||e(t.update(s,{userEvent:"indent"})),!0}},{key:"Shift-Mod-k",run:t=>{if(t.state.readOnly)return!1;let{state:e}=t,i=e.changes(Af(e).map((({from:t,to:i})=>(t>0?t--:i<e.doc.length&&i++,{from:t,to:i})))),n=La(e.selection,(e=>t.moveVertically(e,!0))).map(i);return t.dispatch({changes:i,selection:n,scrollIntoView:!0,userEvent:"delete.line"}),!0}},{key:"Shift-Mod-\\",run:({state:t,dispatch:e})=>function(t,e,i){let n=!1,s=La(t.selection,(e=>{let s=Ea(t,e.head,-1)||Ea(t,e.head,1)||e.head>0&&Ea(t,e.head-1,1)||e.head<t.doc.length&&Ea(t,e.head+1,-1);if(!s||!s.end)return e;n=!0;let r=s.start.from==e.head?s.end.to:s.end.from;return i?Y.range(e.anchor,r):Y.cursor(r)}));return!!n&&(e(Ka(t,s)),!0)}(t,e,!1)}].concat([{key:"ArrowLeft",run:nf,shift:Qf,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:t=>rf(t,t.textDirection!=_i.LTR),shift:t=>bf(t,t.textDirection!=_i.LTR)},{mac:"Cmd-ArrowLeft",run:pf,shift:Wf},{key:"ArrowRight",run:sf,shift:Sf,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:t=>rf(t,t.textDirection==_i.LTR),shift:t=>bf(t,t.textDirection==_i.LTR)},{mac:"Cmd-ArrowRight",run:gf,shift:kf},{key:"ArrowUp",run:lf,shift:xf,preventDefault:!0},{mac:"Cmd-ArrowUp",run:Rf,shift:Zf},{mac:"Ctrl-ArrowUp",run:Of,shift:Tf},{key:"ArrowDown",run:hf,shift:wf,preventDefault:!0},{mac:"Cmd-ArrowDown",run:Xf,shift:Yf},{mac:"Ctrl-ArrowDown",run:uf,shift:Pf},{key:"PageUp",run:Of,shift:Tf},{key:"PageDown",run:uf,shift:Pf},{key:"Home",run:pf,shift:Wf},{key:"Mod-Home",run:Rf,shift:Zf},{key:"End",run:gf,shift:kf},{key:"Mod-End",run:Xf,shift:Yf},{key:"Enter",run:zf},{key:"Mod-a",run:({state:t,dispatch:e})=>(e(t.update({selection:{anchor:0,head:t.doc.length},userEvent:"select"})),!0)},{key:"Backspace",run:Uf,shift:Uf},{key:"Delete",run:Jf},{key:"Mod-Backspace",mac:"Alt-Backspace",run:Df},{key:"Mod-Delete",mac:"Alt-Delete",run:t=>Mf(t,!0)},{mac:"Mod-Backspace",run:t=>Cf(t,(e=>{let i=t.lineBlockAt(e).from;return Vf(t,e>i?i:Math.max(0,e-1),!1)}))},{mac:"Mod-Delete",run:Gf}].concat([{key:"Ctrl-b",run:nf,shift:Qf,preventDefault:!0},{key:"Ctrl-f",run:sf,shift:Sf},{key:"Ctrl-p",run:lf,shift:xf},{key:"Ctrl-n",run:hf,shift:wf},{key:"Ctrl-a",run:t=>Ha(t,(e=>Y.cursor(t.lineBlockAt(e.head).from,1))),shift:t=>$f(t,(e=>Y.cursor(t.lineBlockAt(e.head).from)))},{key:"Ctrl-e",run:t=>Ha(t,(e=>Y.cursor(t.lineBlockAt(e.head).to,-1))),shift:t=>$f(t,(e=>Y.cursor(t.lineBlockAt(e.head).to)))},{key:"Ctrl-d",run:Jf},{key:"Ctrl-h",run:Uf},{key:"Ctrl-k",run:Gf},{key:"Ctrl-Alt-h",run:Df},{key:"Ctrl-o",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=t.changeByRange((t=>({changes:{from:t.from,to:t.to,insert:u.of(["",""])},range:Y.cursor(t.from)})));return e(t.update(i,{scrollIntoView:!0,userEvent:"input"})),!0}},{key:"Ctrl-t",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=t.changeByRange((e=>{if(!e.empty||0==e.from||e.from==t.doc.length)return{range:e};let i=e.from,s=t.doc.lineAt(i),r=i==s.from?i-1:n(s.text,i-s.from,!1)+s.from,o=i==s.to?i+1:n(s.text,i-s.from,!0)+s.from;return{changes:{from:r,to:o,insert:t.doc.slice(i,o).append(t.doc.slice(r,i))},range:Y.cursor(o)}}));return!i.changes.empty&&(e(t.update(i,{scrollIntoView:!0,userEvent:"move.character"})),!0)}},{key:"Ctrl-v",run:uf}].map((t=>({mac:t.key,run:t.run,shift:t.shift}))))),Lf={key:"Tab",run:Ff,shift:Ef},Kf={brackets:["(","[","{","'",'"'],before:")]}'\":;>"},Hf=ut.define({map(t,e){let i=e.mapPos(t,-1,x.TrackAfter);return null==i?void 0:i}}),tl=ut.define({map:(t,e)=>e.mapPos(t)}),el=new class extends Dt{};el.startSide=1,el.endSide=-1;const il=q.define({create:()=>It.empty,update(t,e){if(e.selection){let i=e.state.doc.lineAt(e.selection.main.head).from,n=e.startState.doc.lineAt(e.startState.selection.main.head).from;i!=e.changes.mapPos(n,-1)&&(t=It.empty)}t=t.map(e.changes);for(let i of e.effects)i.is(Hf)?t=t.update({add:[el.range(i.value,i.value+1)]}):i.is(tl)&&(t=t.update({filter:t=>t!=i.value}));return t}});function nl(){return[fl,il]}const sl="()[]{}<>";function rl(t){for(let e=0;e<sl.length;e+=2)if(sl.charCodeAt(e)==t)return sl.charAt(e+1);return l(t<128?t:t+1)}function ol(t,e){return t.languageDataAt("closeBrackets",e)[0]||Kf}const al="object"==typeof navigator&&/Android\b/.test(navigator.userAgent),fl=Vs.inputHandler.of(((t,e,i,n)=>{if((al?t.composing:t.compositionStarted)||t.state.readOnly)return!1;let s=t.state.selection.main;if(n.length>2||2==n.length&&1==h(f(n,0))||e!=s.from||i!=s.to)return!1;let r=function(t,e){let i=ol(t,t.selection.main.head),n=i.brackets||Kf.brackets;for(let s of n){let r=rl(f(s,0));if(e==s)return r==s?dl(t,s,n.indexOf(s+s+s)>-1):Ol(t,s,r,i.before||Kf.before);if(e==r&&hl(t,t.selection.main.from))return ul(t,s,r)}return null}(t.state,n);return!!r&&(t.dispatch(r),!0)})),ll=[{key:"Backspace",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=ol(t,t.selection.main.head).brackets||Kf.brackets,n=null,s=t.changeByRange((e=>{if(e.empty){let n=function(t,e){let i=t.sliceString(e-2,e);return h(f(i,0))==i.length?i:i.slice(1)}(t.doc,e.head);for(let s of i)if(s==n&&cl(t.doc,e.head)==rl(f(s,0)))return{changes:{from:e.head-s.length,to:e.head+s.length},range:Y.cursor(e.head-s.length),userEvent:"delete.backward"}}return{range:n=e}}));return n||e(t.update(s,{scrollIntoView:!0})),!n}}];function hl(t,e){let i=!1;return t.field(il).between(0,t.doc.length,(t=>{t==e&&(i=!0)})),i}function cl(t,e){let i=t.sliceString(e,e+2);return i.slice(0,h(f(i,0)))}function Ol(t,e,i,n){let s=null,r=t.changeByRange((r=>{if(!r.empty)return{changes:[{insert:e,from:r.from},{insert:i,from:r.to}],effects:Hf.of(r.to+e.length),range:Y.range(r.anchor+e.length,r.head+e.length)};let o=cl(t.doc,r.head);return!o||/\s/.test(o)||n.indexOf(o)>-1?{changes:{insert:e+i,from:r.head},effects:Hf.of(r.head+e.length),range:Y.cursor(r.head+e.length)}:{range:s=r}}));return s?null:t.update(r,{scrollIntoView:!0,userEvent:"input.type"})}function ul(t,e,i){let n=null,s=t.selection.ranges.map((e=>e.empty&&cl(t.doc,e.head)==i?Y.cursor(e.head+i.length):n=e));return n?null:t.update({selection:Y.create(s,t.selection.mainIndex),scrollIntoView:!0,effects:t.selection.ranges.map((({from:t})=>tl.of(t)))})}function dl(t,e,i){let n=null,s=t.changeByRange((s=>{if(!s.empty)return{changes:[{insert:e,from:s.from},{insert:e,from:s.to}],effects:Hf.of(s.to+e.length),range:Y.range(s.anchor+e.length,s.head+e.length)};let r=s.head,o=cl(t.doc,r);if(o==e){if(gl(t,r))return{changes:{insert:e+e,from:r},effects:Hf.of(r+e.length),range:Y.cursor(r+e.length)};if(hl(t,r)){let n=i&&t.sliceDoc(r,r+3*e.length)==e+e+e;return{range:Y.cursor(r+e.length*(n?3:1)),effects:tl.of(r)}}}else{if(i&&t.sliceDoc(r-2*e.length,r)==e+e&&gl(t,r-2*e.length))return{changes:{insert:e+e+e+e,from:r},effects:Hf.of(r+e.length),range:Y.cursor(r+e.length)};if(t.charCategorizer(r)(o)!=bt.Word){let i=t.sliceDoc(r-1,r);if(i!=e&&t.charCategorizer(r)(i)!=bt.Word&&!function(t,e,i){let n=yo(t).resolveInner(e,-1);for(let s=0;s<5;s++){if(t.sliceDoc(n.from,n.from+i.length)==i)return!0;let s=n.to==e&&n.parent;if(!s)break;n=s}return!1}(t,r,e))return{changes:{insert:e+e,from:r},effects:Hf.of(r+e.length),range:Y.cursor(r+e.length)}}}return{range:n=s}}));return n?null:t.update(s,{scrollIntoView:!0,userEvent:"input.type"})}function gl(t,e){let i=yo(t).resolveInner(e+1);return i.parent&&i.from==e}const pl=U.define({combine(t){let e,i;for(let n of t)e=e||n.topContainer,i=i||n.bottomContainer;return{topContainer:e,bottomContainer:i}}});function $l(t,e){let i=t.plugin(ml),n=i?i.specs.indexOf(e):-1;return n>-1?i.panels[n]:null}const ml=Ui.fromClass(class{constructor(t){this.input=t.state.facet(vl),this.specs=this.input.filter((t=>t)),this.panels=this.specs.map((e=>e(t)));let e=t.state.facet(pl);this.top=new Ql(t,!0,e.topContainer),this.bottom=new Ql(t,!1,e.bottomContainer),this.top.sync(this.panels.filter((t=>t.top))),this.bottom.sync(this.panels.filter((t=>!t.top)));for(let t of this.panels)t.dom.classList.add("cm-panel"),t.mount&&t.mount()}update(t){let e=t.state.facet(pl);this.top.container!=e.topContainer&&(this.top.sync([]),this.top=new Ql(t.view,!0,e.topContainer)),this.bottom.container!=e.bottomContainer&&(this.bottom.sync([]),this.bottom=new Ql(t.view,!1,e.bottomContainer)),this.top.syncClasses(),this.bottom.syncClasses();let i=t.state.facet(vl);if(i!=this.input){let e=i.filter((t=>t)),n=[],s=[],r=[],o=[];for(let i of e){let e,a=this.specs.indexOf(i);a<0?(e=i(t.view),o.push(e)):(e=this.panels[a],e.update&&e.update(t)),n.push(e),(e.top?s:r).push(e)}this.specs=e,this.panels=n,this.top.sync(s),this.bottom.sync(r);for(let t of o)t.dom.classList.add("cm-panel"),t.mount&&t.mount()}else for(let e of this.panels)e.update&&e.update(t)}destroy(){this.top.sync([]),this.bottom.sync([])}},{provide:Ci.scrollMargins.from((t=>({top:t.top.scrollMargin(),bottom:t.bottom.scrollMargin()})))});class Ql{constructor(t,e,i){this.view=t,this.top=e,this.container=i,this.dom=void 0,this.classes="",this.panels=[],this.syncClasses()}sync(t){for(let e of this.panels)e.destroy&&t.indexOf(e)<0&&e.destroy();this.panels=t,this.syncDOM()}syncDOM(){if(0==this.panels.length)return void(this.dom&&(this.dom.remove(),this.dom=void 0));if(!this.dom){this.dom=document.createElement("div"),this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom",this.dom.style[this.top?"top":"bottom"]="0";let t=this.container||this.view.dom;t.insertBefore(this.dom,this.top?t.firstChild:null)}let t=this.dom.firstChild;for(let e of this.panels)if(e.dom.parentNode==this.dom){for(;t!=e.dom;)t=Sl(t);t=t.nextSibling}else this.dom.insertBefore(e.dom,t);for(;t;)t=Sl(t)}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(this.container&&this.classes!=this.view.themeClasses){for(let t of this.classes.split(" "))t&&this.container.classList.remove(t);for(let t of(this.classes=this.view.themeClasses).split(" "))t&&this.container.classList.add(t)}}}function Sl(t){let e=t.nextSibling;return t.remove(),e}const bl=Vs.baseTheme({".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"&light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"&light .cm-panels-top":{borderBottom:"1px solid #ddd"},"&light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"&dark .cm-panels":{backgroundColor:"#333338",color:"white"}}),vl=U.define({enables:[ml,bl]});function xl(){var t=arguments[0];"string"==typeof t&&(t=document.createElement(t));var e=1,i=arguments[1];if(i&&"object"==typeof i&&null==i.nodeType&&!Array.isArray(i)){for(var n in i)if(Object.prototype.hasOwnProperty.call(i,n)){var s=i[n];"string"==typeof s?t.setAttribute(n,s):null!=s&&(t[n]=s)}e++}for(;e<arguments.length;e++)wl(t,arguments[e]);return t}function wl(t,e){if("string"==typeof e)t.appendChild(document.createTextNode(e));else if(null==e);else if(null!=e.nodeType)t.appendChild(e);else{if(!Array.isArray(e))throw new RangeError("Unsupported child node: "+e);for(var i=0;i<e.length;i++)wl(t,e[i])}}const yl="function"==typeof String.prototype.normalize?t=>t.normalize("NFKD"):t=>t;class Tl{constructor(t,e,i=0,n=t.length,s){this.value={from:0,to:0},this.done=!1,this.matches=[],this.buffer="",this.bufferPos=0,this.iter=t.iterRange(i,n),this.bufferStart=i,this.normalize=s?t=>s(yl(t)):yl,this.query=this.normalize(e)}peek(){if(this.bufferPos==this.buffer.length){if(this.bufferStart+=this.buffer.length,this.iter.next(),this.iter.done)return-1;this.bufferPos=0,this.buffer=this.iter.value}return f(this.buffer,this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){let t=this.peek();if(t<0)return this.done=!0,this;let e=l(t),i=this.bufferStart+this.bufferPos;this.bufferPos+=h(t);let n=this.normalize(e);for(let t=0,s=i;;t++){let r=n.charCodeAt(t),o=this.match(r,s);if(o)return this.value=o,this;if(t==n.length-1)break;s==i&&t<e.length&&e.charCodeAt(t)==r&&s++}}}match(t,e){let i=null;for(let n=0;n<this.matches.length;n+=2){let s=this.matches[n],r=!1;this.query.charCodeAt(s)==t&&(s==this.query.length-1?i={from:this.matches[n+1],to:e+1}:(this.matches[n]++,r=!0)),r||(this.matches.splice(n,2),n-=2)}return this.query.charCodeAt(0)==t&&(1==this.query.length?i={from:e,to:e+1}:this.matches.push(1,e)),i}}"undefined"!=typeof Symbol&&(Tl.prototype[Symbol.iterator]=function(){return this});const Pl={from:-1,to:-1,match:/.*/.exec("")},kl="gm"+(null==/x/.unicode?"":"u");class Wl{constructor(t,e,i,n=0,s=t.length){if(this.to=s,this.curLine="",this.done=!1,this.value=Pl,/\\[sWDnr]|\n|\r|\[\^/.test(e))return new Zl(t,e,i,n,s);this.re=new RegExp(e,kl+((null==i?void 0:i.ignoreCase)?"i":"")),this.iter=t.iter();let r=t.lineAt(n);this.curLineStart=r.from,this.matchPos=n,this.getLine(this.curLineStart)}getLine(t){this.iter.next(t),this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1,this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(let t=this.matchPos-this.curLineStart;;){this.re.lastIndex=t;let e=this.matchPos<=this.to&&this.re.exec(this.curLine);if(e){let i=this.curLineStart+e.index,n=i+e[0].length;if(this.matchPos=n+(i==n?1:0),i==this.curLine.length&&this.nextLine(),i<n||i>this.value.to)return this.value={from:i,to:n,match:e},this;t=this.matchPos-this.curLineStart}else{if(!(this.curLineStart+this.curLine.length<this.to))return this.done=!0,this;this.nextLine(),t=0}}}}const Rl=new WeakMap;class Xl{constructor(t,e){this.from=t,this.text=e}get to(){return this.from+this.text.length}static get(t,e,i){let n=Rl.get(t);if(!n||n.from>=i||n.to<=e){let n=new Xl(e,t.sliceString(e,i));return Rl.set(t,n),n}if(n.from==e&&n.to==i)return n;let{text:s,from:r}=n;return r>e&&(s=t.sliceString(e,r)+s,r=e),n.to<i&&(s+=t.sliceString(n.to,i)),Rl.set(t,new Xl(r,s)),new Xl(e,s.slice(e-r,i-r))}}class Zl{constructor(t,e,i,n,s){this.text=t,this.to=s,this.done=!1,this.value=Pl,this.matchPos=n,this.re=new RegExp(e,kl+((null==i?void 0:i.ignoreCase)?"i":"")),this.flat=Xl.get(t,n,this.chunkEnd(n+5e3))}chunkEnd(t){return t>=this.to?this.to:this.text.lineAt(t).to}next(){for(;;){let t=this.re.lastIndex=this.matchPos-this.flat.from,e=this.re.exec(this.flat.text);if(e&&!e[0]&&e.index==t&&(this.re.lastIndex=t+1,e=this.re.exec(this.flat.text)),e&&this.flat.to<this.to&&e.index+e[0].length>this.flat.text.length-10&&(e=null),e){let t=this.flat.from+e.index,i=t+e[0].length;return this.value={from:t,to:i,match:e},this.matchPos=i+(t==i?1:0),this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=Xl.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+2*this.flat.text.length))}}}function Yl(t){let e=xl("input",{class:"cm-textfield",name:"line"});function i(){let i=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(e.value);if(!i)return;let{state:n}=t,s=n.doc.lineAt(n.selection.main.head),[,r,o,a,f]=i,l=a?+a.slice(1):0,h=o?+o:s.number;if(o&&f){let t=h/100;r&&(t=t*("-"==r?-1:1)+s.number/n.doc.lines),h=Math.round(n.doc.lines*t)}else o&&r&&(h=h*("-"==r?-1:1)+s.number);let c=n.doc.line(Math.max(1,Math.min(n.doc.lines,h)));t.dispatch({effects:Cl.of(!1),selection:Y.cursor(c.from+Math.max(0,Math.min(l,c.length))),scrollIntoView:!0}),t.focus()}return{dom:xl("form",{class:"cm-gotoLine",onkeydown:e=>{27==e.keyCode?(e.preventDefault(),t.dispatch({effects:Cl.of(!1)}),t.focus()):13==e.keyCode&&(e.preventDefault(),i())},onsubmit:t=>{t.preventDefault(),i()}},xl("label",t.state.phrase("Go to line"),": ",e)," ",xl("button",{class:"cm-button",type:"submit"},t.state.phrase("go"))),pos:-10}}"undefined"!=typeof Symbol&&(Wl.prototype[Symbol.iterator]=Zl.prototype[Symbol.iterator]=function(){return this});const Cl=ut.define(),Vl=q.define({create:()=>!0,update(t,e){for(let i of e.effects)i.is(Cl)&&(t=i.value);return t},provide:t=>vl.from(t,(t=>t?Yl:null))}),jl=Vs.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","& label":{fontSize:"80%"}}}),Ul={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100},Jl=U.define({combine:t=>Tt(t,Ul,{highlightWordAroundCursor:(t,e)=>t||e,minSelectionLength:Math.min,maxMatches:Math.min})});function Ml(t){let e=[ql,Al];return t&&e.push(Jl.of(t)),e}const Dl=li.mark({class:"cm-selectionMatch"}),Gl=li.mark({class:"cm-selectionMatch cm-selectionMatch-main"}),Al=Ui.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.selectionSet||t.docChanged||t.viewportChanged)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=t.state.facet(Jl),{state:i}=t,n=i.selection;if(n.ranges.length>1)return li.none;let s,r=n.main,o=null;if(r.empty){if(!e.highlightWordAroundCursor)return li.none;let t=i.wordAt(r.head);if(!t)return li.none;o=i.charCategorizer(r.head),s=i.sliceDoc(t.from,t.to)}else{let t=r.to-r.from;if(t<e.minSelectionLength||t>200)return li.none;if(s=i.sliceDoc(r.from,r.to).trim(),!s)return li.none}let a=[];for(let n of t.visibleRanges){let t=new Tl(i.doc,s,n.from,n.to);for(;!t.next().done;){let{from:n,to:s}=t.value;if((!o||(0==n||o(i.sliceDoc(n-1,n))!=bt.Word)&&(s==i.doc.length||o(i.sliceDoc(s,s+1))!=bt.Word))&&(o&&n<=r.from&&s>=r.to?a.push(Gl.range(n,s)):(n>=r.to||s<=r.from)&&a.push(Dl.range(n,s)),a.length>e.maxMatches))return li.none}}return li.set(a)}},{decorations:t=>t.decorations}),ql=Vs.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}});const Il=U.define({combine(t){var e;return{top:t.reduce(((t,e)=>null!=t?t:e.top),void 0)||!1,caseSensitive:t.reduce(((t,e)=>null!=t?t:e.caseSensitive||e.matchCase),void 0)||!1,createPanel:(null===(e=t.find((t=>t.createPanel)))||void 0===e?void 0:e.createPanel)||(t=>new uh(t))}}});class zl{constructor(t){this.search=t.search,this.caseSensitive=!!t.caseSensitive,this.regexp=!!t.regexp,this.replace=t.replace||"",this.valid=!!this.search&&(!this.regexp||function(t){try{return new RegExp(t,kl),!0}catch(t){return!1}}(this.search))}eq(t){return this.search==t.search&&this.replace==t.replace&&this.caseSensitive==t.caseSensitive&&this.regexp==t.regexp}create(){return this.regexp?new Fl(this):new Bl(this)}}class _l{constructor(t){this.spec=t}}class Bl extends _l{constructor(t){super(t),this.unquoted=t.search.replace(/\\([nrt\\])/g,((t,e)=>"n"==e?"\n":"r"==e?"\r":"t"==e?"\t":"\\"))}cursor(t,e=0,i=t.length){return new Tl(t,this.unquoted,e,i,this.spec.caseSensitive?void 0:t=>t.toLowerCase())}nextMatch(t,e,i){let n=this.cursor(t,i).nextOverlapping();return n.done&&(n=this.cursor(t,0,e).nextOverlapping()),n.done?null:n.value}prevMatchInRange(t,e,i){for(let n=i;;){let i=Math.max(e,n-1e4-this.unquoted.length),s=this.cursor(t,i,n),r=null;for(;!s.nextOverlapping().done;)r=s.value;if(r)return r;if(i==e)return null;n-=1e4}}prevMatch(t,e,i){return this.prevMatchInRange(t,0,e)||this.prevMatchInRange(t,i,t.length)}getReplacement(t){return this.spec.replace}matchAll(t,e){let i=this.cursor(t),n=[];for(;!i.next().done;){if(n.length>=e)return null;n.push(i.value)}return n}highlight(t,e,i,n){let s=this.cursor(t,Math.max(0,e-this.unquoted.length),Math.min(i+this.unquoted.length,t.length));for(;!s.next().done;)n(s.value.from,s.value.to)}}class Fl extends _l{cursor(t,e=0,i=t.length){return new Wl(t,this.spec.search,this.spec.caseSensitive?void 0:{ignoreCase:!0},e,i)}nextMatch(t,e,i){let n=this.cursor(t,i).next();return n.done&&(n=this.cursor(t,0,e).next()),n.done?null:n.value}prevMatchInRange(t,e,i){for(let n=1;;n++){let s=Math.max(e,i-1e4*n),r=this.cursor(t,s,i),o=null;for(;!r.next().done;)o=r.value;if(o&&(s==e||o.from>s+10))return o;if(s==e)return null}}prevMatch(t,e,i){return this.prevMatchInRange(t,0,e)||this.prevMatchInRange(t,i,t.length)}getReplacement(t){return this.spec.replace.replace(/\$([$&\d+])/g,((e,i)=>"$"==i?"$":"&"==i?t.match[0]:"0"!=i&&+i<t.match.length?t.match[i]:e))}matchAll(t,e){let i=this.cursor(t),n=[];for(;!i.next().done;){if(n.length>=e)return null;n.push(i.value)}return n}highlight(t,e,i,n){let s=this.cursor(t,Math.max(0,e-250),Math.min(i+250,t.length));for(;!s.next().done;)n(s.value.from,s.value.to)}}const El=ut.define(),Nl=ut.define(),Ll=q.define({create:t=>new Kl(lh(t).create(),null),update(t,e){for(let i of e.effects)i.is(El)?t=new Kl(i.value.create(),t.panel):i.is(Nl)&&(t=new Kl(t.query,i.value?fh:null));return t},provide:t=>vl.from(t,(t=>t.panel))});class Kl{constructor(t,e){this.query=t,this.panel=e}}const Hl=li.mark({class:"cm-searchMatch"}),th=li.mark({class:"cm-searchMatch cm-searchMatch-selected"}),eh=Ui.fromClass(class{constructor(t){this.view=t,this.decorations=this.highlight(t.state.field(Ll))}update(t){let e=t.state.field(Ll);(e!=t.startState.field(Ll)||t.docChanged||t.selectionSet)&&(this.decorations=this.highlight(e))}highlight({query:t,panel:e}){if(!e||!t.spec.valid)return li.none;let{view:i}=this,n=new zt;for(let e=0,s=i.visibleRanges,r=s.length;e<r;e++){let{from:o,to:a}=s[e];for(;e<r-1&&a>s[e+1].from-500;)a=s[++e].to;t.highlight(i.state.doc,o,a,((t,e)=>{let s=i.state.selection.ranges.some((i=>i.from==t&&i.to==e));n.add(t,e,s?th:Hl)}))}return n.finish()}},{decorations:t=>t.decorations});function ih(t){return e=>{let i=e.state.field(Ll,!1);return i&&i.query.spec.valid?t(e,i):hh(e)}}const nh=ih(((t,{query:e})=>{let{from:i,to:n}=t.state.selection.main,s=e.nextMatch(t.state.doc,i,n);return!(!s||s.from==i&&s.to==n)&&(t.dispatch({selection:{anchor:s.from,head:s.to},scrollIntoView:!0,effects:ph(t,s),userEvent:"select.search"}),!0)})),sh=ih(((t,{query:e})=>{let{state:i}=t,{from:n,to:s}=i.selection.main,r=e.prevMatch(i.doc,n,s);return!!r&&(t.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0,effects:ph(t,r),userEvent:"select.search"}),!0)})),rh=ih(((t,{query:e})=>{let i=e.matchAll(t.state.doc,1e3);return!(!i||!i.length)&&(t.dispatch({selection:Y.create(i.map((t=>Y.range(t.from,t.to)))),userEvent:"select.search.matches"}),!0)})),oh=ih(((t,{query:e})=>{let{state:i}=t,{from:n,to:s}=i.selection.main;if(i.readOnly)return!1;let r=e.nextMatch(i.doc,n,n);if(!r)return!1;let o,a,f=[];if(r.from==n&&r.to==s&&(a=i.toText(e.getReplacement(r)),f.push({from:r.from,to:r.to,insert:a}),r=e.nextMatch(i.doc,r.from,r.to)),r){let t=0==f.length||f[0].from>=r.to?0:r.to-r.from-a.length;o={anchor:r.from-t,head:r.to-t}}return t.dispatch({changes:f,selection:o,scrollIntoView:!!o,effects:r?ph(t,r):void 0,userEvent:"input.replace"}),!0})),ah=ih(((t,{query:e})=>{if(t.state.readOnly)return!1;let i=e.matchAll(t.state.doc,1e9).map((t=>{let{from:i,to:n}=t;return{from:i,to:n,insert:e.getReplacement(t)}}));return!!i.length&&(t.dispatch({changes:i,userEvent:"input.replace.all"}),!0)}));function fh(t){return t.state.facet(Il).createPanel(t)}function lh(t,e){var i;let n=t.selection.main,s=n.empty||n.to>n.from+100?"":t.sliceDoc(n.from,n.to),r=null!==(i=null==e?void 0:e.caseSensitive)&&void 0!==i?i:t.facet(Il).caseSensitive;return e&&!s?e:new zl({search:s.replace(/\n/g,"\\n"),caseSensitive:r})}const hh=t=>{let e=t.state.field(Ll,!1);if(e&&e.panel){let i=$l(t,fh);if(!i)return!1;let n=i.dom.querySelector("[name=search]");if(n!=t.root.activeElement){let i=lh(t.state,e.query.spec);i.valid&&t.dispatch({effects:El.of(i)}),n.focus(),n.select()}}else t.dispatch({effects:[Nl.of(!0),e?El.of(lh(t.state,e.query.spec)):ut.appendConfig.of(mh)]});return!0},ch=t=>{let e=t.state.field(Ll,!1);if(!e||!e.panel)return!1;let i=$l(t,fh);return i&&i.dom.contains(t.root.activeElement)&&t.focus(),t.dispatch({effects:Nl.of(!1)}),!0},Oh=[{key:"Mod-f",run:hh,scope:"editor search-panel"},{key:"F3",run:nh,shift:sh,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:nh,shift:sh,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:ch,scope:"editor search-panel"},{key:"Mod-Shift-l",run:({state:t,dispatch:e})=>{let i=t.selection;if(i.ranges.length>1||i.main.empty)return!1;let{from:n,to:s}=i.main,r=[],o=0;for(let e=new Tl(t.doc,t.sliceDoc(n,s));!e.next().done;){if(r.length>1e3)return!1;e.value.from==n&&(o=r.length),r.push(Y.range(e.value.from,e.value.to))}return e(t.update({selection:Y.create(r,o),userEvent:"select.search.matches"})),!0}},{key:"Alt-g",run:t=>{let e=$l(t,Yl);if(!e){let i=[Cl.of(!0)];null==t.state.field(Vl,!1)&&i.push(ut.appendConfig.of([Vl,jl])),t.dispatch({effects:i}),e=$l(t,Yl)}return e&&e.dom.querySelector("input").focus(),!0}},{key:"Mod-d",run:({state:t,dispatch:e})=>{let{ranges:i}=t.selection;if(i.some((t=>t.from===t.to)))return(({state:t,dispatch:e})=>{let{selection:i}=t,n=Y.create(i.ranges.map((e=>t.wordAt(e.head)||Y.cursor(e.head))),i.mainIndex);return!n.eq(i)&&(e(t.update({selection:n})),!0)})({state:t,dispatch:e});let n=t.sliceDoc(i[0].from,i[0].to);if(t.selection.ranges.some((e=>t.sliceDoc(e.from,e.to)!=n)))return!1;let s=function(t,e){let{main:i,ranges:n}=t.selection,s=t.wordAt(i.head),r=s&&s.from==i.from&&s.to==i.to;for(let i=!1,s=new Tl(t.doc,e,n[n.length-1].to);;){if(s.next(),!s.done){if(i&&n.some((t=>t.from==s.value.from)))continue;if(r){let e=t.wordAt(s.value.from);if(!e||e.from!=s.value.from||e.to!=s.value.to)continue}return s.value}if(i)return null;s=new Tl(t.doc,e,0,Math.max(0,n[n.length-1].from-1)),i=!0}}(t,n);return!!s&&(e(t.update({selection:t.selection.addRange(Y.range(s.from,s.to),!1),effects:Vs.scrollIntoView(s.to)})),!0)},preventDefault:!0}];class uh{constructor(t){this.view=t;let e=this.query=t.state.field(Ll).query.spec;function i(t,e,i){return xl("button",{class:"cm-button",name:t,onclick:e,type:"button"},i)}this.commit=this.commit.bind(this),this.searchField=xl("input",{value:e.search,placeholder:dh(t,"Find"),"aria-label":dh(t,"Find"),class:"cm-textfield",name:"search",onchange:this.commit,onkeyup:this.commit}),this.replaceField=xl("input",{value:e.replace,placeholder:dh(t,"Replace"),"aria-label":dh(t,"Replace"),class:"cm-textfield",name:"replace",onchange:this.commit,onkeyup:this.commit}),this.caseField=xl("input",{type:"checkbox",name:"case",checked:e.caseSensitive,onchange:this.commit}),this.reField=xl("input",{type:"checkbox",name:"re",checked:e.regexp,onchange:this.commit}),this.dom=xl("div",{onkeydown:t=>this.keydown(t),class:"cm-search"},[this.searchField,i("next",(()=>nh(t)),[dh(t,"next")]),i("prev",(()=>sh(t)),[dh(t,"previous")]),i("select",(()=>rh(t)),[dh(t,"all")]),xl("label",null,[this.caseField,dh(t,"match case")]),xl("label",null,[this.reField,dh(t,"regexp")]),...t.state.readOnly?[]:[xl("br"),this.replaceField,i("replace",(()=>oh(t)),[dh(t,"replace")]),i("replaceAll",(()=>ah(t)),[dh(t,"replace all")]),xl("button",{name:"close",onclick:()=>ch(t),"aria-label":dh(t,"close"),type:"button"},["\xd7"])]])}commit(){let t=new zl({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,replace:this.replaceField.value});t.eq(this.query)||(this.query=t,this.view.dispatch({effects:El.of(t)}))}keydown(t){var e,i,n;e=this.view,i=t,n="search-panel",Ns(Fs(e.state),i,e,n)?t.preventDefault():13==t.keyCode&&t.target==this.searchField?(t.preventDefault(),(t.shiftKey?sh:nh)(this.view)):13==t.keyCode&&t.target==this.replaceField&&(t.preventDefault(),oh(this.view))}update(t){for(let e of t.transactions)for(let t of e.effects)t.is(El)&&!t.value.eq(this.query)&&this.setQuery(t.value)}setQuery(t){this.query=t,this.searchField.value=t.search,this.replaceField.value=t.replace,this.caseField.checked=t.caseSensitive,this.reField.checked=t.regexp}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(Il).top}}function dh(t,e){return t.state.phrase(e)}const gh=/[\s\.,:;?!]/;function ph(t,{from:e,to:i}){let n=t.state.doc.lineAt(e).from,s=t.state.doc.lineAt(i).to,r=Math.max(n,e-30),o=Math.min(s,i+30),a=t.state.sliceDoc(r,o);if(r!=n)for(let t=0;t<30;t++)if(!gh.test(a[t+1])&&gh.test(a[t])){a=a.slice(t);break}if(o!=s)for(let t=a.length-1;t>a.length-30;t--)if(!gh.test(a[t-1])&&gh.test(a[t])){a=a.slice(0,t);break}return Vs.announce.of(`${t.state.phrase("current match")}. ${a} ${t.state.phrase("on line")} ${t.state.doc.lineAt(e).number}`)}const $h=Vs.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","& [name=close]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"& input, & button, & label":{margin:".2em .6em .2em 0"},"& input[type=checkbox]":{marginRight:".2em"},"& label":{fontSize:"80%",whiteSpace:"pre"}},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},"&light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"&dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),mh=[Ll,N.lowest(eh),$h],Qh="undefined"!=typeof navigator&&!/Edge\/(\d+)/.exec(navigator.userAgent)&&/Apple Computer/.test(navigator.vendor)&&(/Mobile\/\w+/.test(navigator.userAgent)||navigator.maxTouchPoints>2),Sh="-10000px";class bh{constructor(t,e,i){this.facet=e,this.createTooltipView=i,this.input=t.state.facet(e),this.tooltips=this.input.filter((t=>t)),this.tooltipViews=this.tooltips.map(i)}update(t){let e=t.state.facet(this.facet),i=e.filter((t=>t));if(e===this.input){for(let e of this.tooltipViews)e.update&&e.update(t);return!1}let n=[];for(let e=0;e<i.length;e++){let s=i[e],r=-1;if(s){for(let t=0;t<this.tooltips.length;t++){let e=this.tooltips[t];e&&e.create==s.create&&(r=t)}if(r<0)n[e]=this.createTooltipView(s);else{let i=n[e]=this.tooltipViews[r];i.update&&i.update(t)}}}for(let t of this.tooltipViews)n.indexOf(t)<0&&t.dom.remove();return this.input=e,this.tooltips=i,this.tooltipViews=n,!0}}function vh(){return{top:0,left:0,bottom:innerHeight,right:innerWidth}}const xh=U.define({combine:t=>{var e,i,n;return{position:Qh?"absolute":(null===(e=t.find((t=>t.position)))||void 0===e?void 0:e.position)||"fixed",parent:(null===(i=t.find((t=>t.parent)))||void 0===i?void 0:i.parent)||null,tooltipSpace:(null===(n=t.find((t=>t.tooltipSpace)))||void 0===n?void 0:n.tooltipSpace)||vh}}}),wh=Ui.fromClass(class{constructor(t){var e;this.view=t,this.inView=!0,this.lastTransaction=0,this.measureTimeout=-1;let i=t.state.facet(xh);this.position=i.position,this.parent=i.parent,this.classes=t.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.manager=new bh(t,Ph,(t=>this.createTooltip(t))),this.intersectionObserver="function"==typeof IntersectionObserver?new IntersectionObserver((t=>{Date.now()>this.lastTransaction-50&&t.length>0&&t[t.length-1].intersectionRatio<1&&this.measureSoon()}),{threshold:[1]}):null,this.observeIntersection(),null===(e=t.dom.ownerDocument.defaultView)||void 0===e||e.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let t of this.manager.tooltipViews)this.intersectionObserver.observe(t.dom)}}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout((()=>{this.measureTimeout=-1,this.maybeMeasure()}),50))}update(t){t.transactions.length&&(this.lastTransaction=Date.now());let e=this.manager.update(t);e&&this.observeIntersection();let i=e||t.geometryChanged,n=t.state.facet(xh);if(n.position!=this.position){this.position=n.position;for(let t of this.manager.tooltipViews)t.dom.style.position=this.position;i=!0}if(n.parent!=this.parent){this.parent&&this.container.remove(),this.parent=n.parent,this.createContainer();for(let t of this.manager.tooltipViews)this.container.appendChild(t.dom);i=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);i&&this.maybeMeasure()}createTooltip(t){let e=t.create(this.view);if(e.dom.classList.add("cm-tooltip"),t.arrow&&!e.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")){let t=document.createElement("div");t.className="cm-tooltip-arrow",e.dom.appendChild(t)}return e.dom.style.position=this.position,e.dom.style.top=Sh,this.container.appendChild(e.dom),e.mount&&e.mount(this.view),e}destroy(){var t,e;null===(t=this.view.dom.ownerDocument.defaultView)||void 0===t||t.removeEventListener("resize",this.measureSoon);for(let{dom:t}of this.manager.tooltipViews)t.remove();null===(e=this.intersectionObserver)||void 0===e||e.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let t=this.view.dom.getBoundingClientRect();return{editor:t,parent:this.parent?this.container.getBoundingClientRect():t,pos:this.manager.tooltips.map((t=>this.view.coordsAtPos(t.pos))),size:this.manager.tooltipViews.map((({dom:t})=>t.getBoundingClientRect())),space:this.view.state.facet(xh).tooltipSpace(this.view)}}writeMeasure(t){let{editor:e,space:i}=t,n=[];for(let s=0;s<this.manager.tooltips.length;s++){let r=this.manager.tooltips[s],o=this.manager.tooltipViews[s],{dom:a}=o,f=t.pos[s],l=t.size[s];if(!f||f.bottom<=Math.max(e.top,i.top)||f.top>=Math.min(e.bottom,i.bottom)||f.right<Math.max(e.left,i.left)-.1||f.left>Math.min(e.right,i.right)+.1){a.style.top=Sh;continue}let h=r.arrow?o.dom.querySelector(".cm-tooltip-arrow"):null,c=h?7:0,O=l.right-l.left,u=l.bottom-l.top,d=o.offset||Th,g=this.view.textDirection==_i.LTR,p=l.width>i.right-i.left?g?i.left:i.right-l.width:g?Math.min(f.left-(h?14:0)+d.x,i.right-O):Math.max(i.left,f.left-O+(h?14:0)-d.x),$=!!r.above;!r.strictSide&&($?f.top-(l.bottom-l.top)-d.y<i.top:f.bottom+(l.bottom-l.top)+d.y>i.bottom)&&$==i.bottom-f.bottom>f.top-i.top&&($=!$);let m=$?f.top-u-c-d.y:f.bottom+c+d.y,Q=p+O;if(!0!==o.overlap)for(let t of n)t.left<Q&&t.right>p&&t.top<m+u&&t.bottom>m&&(m=$?t.top-u-2-c:t.bottom+c+2);"absolute"==this.position?(a.style.top=m-t.parent.top+"px",a.style.left=p-t.parent.left+"px"):(a.style.top=m+"px",a.style.left=p+"px"),h&&(h.style.left=f.left+(g?d.x:-d.x)-(p+14-7)+"px"),!0!==o.overlap&&n.push({left:p,top:m,right:Q,bottom:m+u}),a.classList.toggle("cm-tooltip-above",$),a.classList.toggle("cm-tooltip-below",!$),o.positioned&&o.positioned()}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let t of this.manager.tooltipViews)t.dom.style.top=Sh}},{eventHandlers:{scroll(){this.maybeMeasure()}}}),yh=Vs.baseTheme({".cm-tooltip":{zIndex:100},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:"7px",width:"14px",position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:"7px solid transparent",borderRight:"7px solid transparent"},".cm-tooltip-above &":{bottom:"-7px","&:before":{borderTop:"7px solid #bbb"},"&:after":{borderTop:"7px solid #f5f5f5",bottom:"1px"}},".cm-tooltip-below &":{top:"-7px","&:before":{borderBottom:"7px solid #bbb"},"&:after":{borderBottom:"7px solid #f5f5f5",top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),Th={x:0,y:0},Ph=U.define({enables:[wh,yh]}),kh=U.define();class Wh{constructor(t){this.view=t,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new bh(t,kh,(t=>this.createHostedView(t)))}static create(t){return new Wh(t)}createHostedView(t){let e=t.create(this.view);return e.dom.classList.add("cm-tooltip-section"),this.dom.appendChild(e.dom),this.mounted&&e.mount&&e.mount(this.view),e}mount(t){for(let e of this.manager.tooltipViews)e.mount&&e.mount(t);this.mounted=!0}positioned(){for(let t of this.manager.tooltipViews)t.positioned&&t.positioned()}update(t){this.manager.update(t)}}const Rh=Ph.compute([kh],(t=>{let e=t.facet(kh).filter((t=>t));return 0===e.length?null:{pos:Math.min(...e.map((t=>t.pos))),end:Math.max(...e.filter((t=>null!=t.end)).map((t=>t.end))),create:Wh.create,above:e[0].above,arrow:e.some((t=>t.arrow))}}));class Xh{constructor(t,e,i,n,s){this.view=t,this.source=e,this.field=i,this.setHover=n,this.hoverTime=s,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:t.dom,time:0},this.checkHover=this.checkHover.bind(this),t.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),t.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout((()=>this.startHover()),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active)return;let t=Date.now()-this.lastMove.time;t<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-t):this.startHover()}startHover(){var t;clearTimeout(this.restartTimeout);let{lastMove:e}=this,i=this.view.contentDOM.contains(e.target)?this.view.posAtCoords(e):null;if(null==i)return;let n=this.view.coordsAtPos(i);if(null==n||e.y<n.top||e.y>n.bottom||e.x<n.left-this.view.defaultCharacterWidth||e.x>n.right+this.view.defaultCharacterWidth)return;let s=this.view.bidiSpans(this.view.state.doc.lineAt(i)).find((t=>t.from<=i&&t.to>=i)),r=s&&s.dir==_i.RTL?-1:1,o=this.source(this.view,i,e.x<n.left?-r:r);if(null===(t=o)||void 0===t?void 0:t.then){let t=this.pending={pos:i};o.then((e=>{this.pending==t&&(this.pending=null,e&&this.view.dispatch({effects:this.setHover.of(e)}))}),(t=>Xi(this.view.state,t,"hover tooltip")))}else o&&this.view.dispatch({effects:this.setHover.of(o)})}mousemove(t){var e;this.lastMove={x:t.clientX,y:t.clientY,target:t.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let i=this.active;if(i&&!function(t){for(let e=t;e;e=e.parentNode)if(1==e.nodeType&&e.classList.contains("cm-tooltip"))return!0;return!1}(this.lastMove.target)||this.pending){let{pos:n}=i||this.pending,s=null!==(e=null==i?void 0:i.end)&&void 0!==e?e:n;(n==s?this.view.posAtCoords(this.lastMove)==n:function(t,e,i,n,s,r){let o=document.createRange(),a=t.domAtPos(e),f=t.domAtPos(i);o.setEnd(f.node,f.offset),o.setStart(a.node,a.offset);let l=o.getClientRects();o.detach();for(let t=0;t<l.length;t++){let e=l[t];if(Math.max(e.top-s,s-e.bottom,e.left-n,n-e.right)<=r)return!0}return!1}(this.view,n,s,t.clientX,t.clientY,6))||(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1,this.active&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}function Zh(t,e={}){let i=ut.define(),n=q.define({create:()=>null,update(t,n){if(t&&e.hideOnChange&&(n.docChanged||n.selection))return null;for(let t of n.effects){if(t.is(i))return t.value;if(t.is(Yh))return null}if(t&&n.docChanged){let e=n.changes.mapPos(t.pos,-1,x.TrackDel);if(null==e)return null;let i=Object.assign(Object.create(null),t);return i.pos=e,null!=t.end&&(i.end=n.changes.mapPos(t.end)),i}return t},provide:t=>kh.from(t)});return[n,Ui.define((s=>new Xh(s,t,n,i,e.hoverTime||300))),Rh]}const Yh=ut.define();class Ch{constructor(t,e,i){this.state=t,this.pos=e,this.explicit=i,this.abortListeners=[]}tokenBefore(t){let e=yo(this.state).resolveInner(this.pos,-1);for(;e&&t.indexOf(e.name)<0;)e=e.parent;return e?{from:e.from,to:this.pos,text:this.state.sliceDoc(e.from,this.pos),type:e.type}:null}matchBefore(t){let e=this.state.doc.lineAt(this.pos),i=Math.max(e.from,this.pos-250),n=e.text.slice(i-e.from,this.pos-e.from),s=n.search(Mh(t,!1));return s<0?null:{from:i+s,to:this.pos,text:n.slice(s)}}get aborted(){return null==this.abortListeners}addEventListener(t,e){"abort"==t&&this.abortListeners&&this.abortListeners.push(e)}}function Vh(t){let e=Object.keys(t).join(""),i=/\w/.test(e);return i&&(e=e.replace(/\w/g,"")),`[${i?"\\w":""}${e.replace(/[^\w\s]/g,"\\$&")}]`}function jh(t){let e=t.map((t=>"string"==typeof t?{label:t}:t)),[i,n]=e.every((t=>/^\w+$/.test(t.label)))?[/\w*$/,/\w+$/]:function(t){let e=Object.create(null),i=Object.create(null);for(let{label:n}of t){e[n[0]]=!0;for(let t=1;t<n.length;t++)i[n[t]]=!0}let n=Vh(e)+Vh(i)+"*$";return[new RegExp("^"+n),new RegExp(n)]}(e);return t=>{let s=t.matchBefore(n);return s||t.explicit?{from:s?s.from:t.pos,options:e,span:i}:null}}class Uh{constructor(t,e,i){this.completion=t,this.source=e,this.match=i}}function Jh(t){return t.selection.main.head}function Mh(t,e){var i;let{source:n}=t,s=e&&"^"!=n[0],r="$"!=n[n.length-1];return s||r?new RegExp(`${s?"^":""}(?:${n})${r?"$":""}`,null!==(i=t.flags)&&void 0!==i?i:t.ignoreCase?"i":""):t}const Dh=ht.define();function Gh(t,e){let i=e.completion.apply||e.completion.label,n=e.source;"string"==typeof i?t.dispatch({changes:{from:n.from,to:n.to,insert:i},selection:{anchor:n.from+i.length},userEvent:"input.complete",annotations:Dh.of(e.completion)}):i(t,e.completion,n.from,n.to)}const Ah=new WeakMap;function qh(t){if(!Array.isArray(t))return t;let e=Ah.get(t);return e||Ah.set(t,e=jh(t)),e}class Ih{constructor(t){this.pattern=t,this.chars=[],this.folded=[],this.any=[],this.precise=[],this.byWord=[];for(let e=0;e<t.length;){let i=f(t,e),n=h(i);this.chars.push(i);let s=t.slice(e,e+n),r=s.toUpperCase();this.folded.push(f(r==s?s.toLowerCase():r,0)),e+=n}this.astral=t.length!=this.chars.length}match(t){if(0==this.pattern.length)return[0];if(t.length<this.pattern.length)return null;let{chars:e,folded:i,any:n,precise:s,byWord:r}=this;if(1==e.length){let n=f(t,0);return n==e[0]?[0,0,h(n)]:n==i[0]?[-200,0,h(n)]:null}let o=t.indexOf(this.pattern);if(0==o)return[0,0,this.pattern.length];let a=e.length,c=0;if(o<0){for(let s=0,r=Math.min(t.length,200);s<r&&c<a;){let r=f(t,s);r!=e[c]&&r!=i[c]||(n[c++]=s),s+=h(r)}if(c<a)return null}let O=0,u=0,d=!1,g=0,p=-1,$=-1,m=/[a-z]/.test(t),Q=!0;for(let n=0,c=Math.min(t.length,200),S=0;n<c&&u<a;){let c=f(t,n);o<0&&(O<a&&c==e[O]&&(s[O++]=n),g<a&&(c==e[g]||c==i[g]?(0==g&&(p=n),$=n+1,g++):g=0));let b,v=c<255?c>=48&&c<=57||c>=97&&c<=122?2:c>=65&&c<=90?1:0:(b=l(c))!=b.toLowerCase()?1:b!=b.toUpperCase()?2:0;(!n||1==v&&m||0==S&&0!=v)&&(e[u]==c||i[u]==c&&(d=!0)?r[u++]=n:r.length&&(Q=!1)),S=v,n+=h(c)}return u==a&&0==r[0]&&Q?this.result((d?-200:0)-100,r,t):g==a&&0==p?[-200-t.length,0,$]:o>-1?[-700-t.length,o,o+this.pattern.length]:g==a?[-900-t.length,p,$]:u==a?this.result((d?-200:0)-100-700+(Q?0:-1100),r,t):2==e.length?null:this.result((n[0]?-700:0)-200-1100,n,t)}result(t,e,i){let n=[t-i.length],s=1;for(let t of e){let e=t+(this.astral?h(f(i,t)):1);s>1&&n[s-1]==t?n[s-1]=e:(n[s++]=t,n[s++]=e)}return n}}const zh=U.define({combine:t=>Tt(t,{activateOnTyping:!0,override:null,maxRenderedOptions:100,defaultKeymap:!0,optionClass:()=>"",aboveCursor:!1,icons:!0,addToOptions:[]},{defaultKeymap:(t,e)=>t&&e,icons:(t,e)=>t&&e,optionClass:(t,e)=>i=>function(t,e){return t?e?t+" "+e:t:e}(t(i),e(i)),addToOptions:(t,e)=>t.concat(e)})});function _h(t,e,i){if(t<=i)return{from:0,to:t};if(e<=t>>1){let t=Math.floor(e/i);return{from:t*i,to:(t+1)*i}}let n=Math.floor((t-e)/i);return{from:t-(n+1)*i,to:t-n*i}}class Bh{constructor(t,e){this.view=t,this.stateField=e,this.info=null,this.placeInfo={read:()=>this.measureInfo(),write:t=>this.positionInfo(t),key:this};let i=t.state.field(e),{options:n,selected:s}=i.open,r=t.state.facet(zh);this.optionContent=function(t){let e=t.addToOptions.slice();return t.icons&&e.push({render(t){let e=document.createElement("div");return e.classList.add("cm-completionIcon"),t.type&&e.classList.add(...t.type.split(/\s+/g).map((t=>"cm-completionIcon-"+t))),e.setAttribute("aria-hidden","true"),e},position:20}),e.push({render(t,e,i){let n=document.createElement("span");n.className="cm-completionLabel";let{label:s}=t,r=0;for(let t=1;t<i.length;){let e=i[t++],o=i[t++];e>r&&n.appendChild(document.createTextNode(s.slice(r,e)));let a=n.appendChild(document.createElement("span"));a.appendChild(document.createTextNode(s.slice(e,o))),a.className="cm-completionMatchedText",r=o}return r<s.length&&n.appendChild(document.createTextNode(s.slice(r))),n},position:50},{render(t){if(!t.detail)return null;let e=document.createElement("span");return e.className="cm-completionDetail",e.textContent=t.detail,e},position:80}),e.sort(((t,e)=>t.position-e.position)).map((t=>t.render))}(r),this.optionClass=r.optionClass,this.range=_h(n.length,s,r.maxRenderedOptions),this.dom=document.createElement("div"),this.dom.className="cm-tooltip-autocomplete",this.dom.addEventListener("mousedown",(e=>{for(let i,s=e.target;s&&s!=this.dom;s=s.parentNode)if("LI"==s.nodeName&&(i=/-(\d+)$/.exec(s.id))&&+i[1]<n.length)return Gh(t,n[+i[1]]),void e.preventDefault()})),this.list=this.dom.appendChild(this.createListBox(n,i.id,this.range)),this.list.addEventListener("scroll",(()=>{this.info&&this.view.requestMeasure(this.placeInfo)}))}mount(){this.updateSel()}update(t){t.state.field(this.stateField)!=t.startState.field(this.stateField)&&this.updateSel()}positioned(){this.info&&this.view.requestMeasure(this.placeInfo)}updateSel(){let t=this.view.state.field(this.stateField),e=t.open;if((e.selected<this.range.from||e.selected>=this.range.to)&&(this.range=_h(e.options.length,e.selected,this.view.state.facet(zh).maxRenderedOptions),this.list.remove(),this.list=this.dom.appendChild(this.createListBox(e.options,t.id,this.range)),this.list.addEventListener("scroll",(()=>{this.info&&this.view.requestMeasure(this.placeInfo)}))),this.updateSelectedOption(e.selected)){this.info&&(this.info.remove(),this.info=null);let t=e.options[e.selected];t.completion.info&&(this.info=this.dom.appendChild(function(t,e){let i=document.createElement("div");i.className="cm-tooltip cm-completionInfo";let{info:n}=t.completion;if("string"==typeof n)i.textContent=n;else{let s=n(t.completion);s.then?s.then((t=>i.appendChild(t)),(t=>Xi(e.state,t,"completion info"))):i.appendChild(s)}return i}(t,this.view)),this.view.requestMeasure(this.placeInfo))}}updateSelectedOption(t){let e=null;for(let i=this.list.firstChild,n=this.range.from;i;i=i.nextSibling,n++)n==t?i.hasAttribute("aria-selected")||(i.setAttribute("aria-selected","true"),e=i):i.hasAttribute("aria-selected")&&i.removeAttribute("aria-selected");return e&&function(t,e){let i=t.getBoundingClientRect(),n=e.getBoundingClientRect();n.top<i.top?t.scrollTop-=i.top-n.top:n.bottom>i.bottom&&(t.scrollTop+=n.bottom-i.bottom)}(this.list,e),e}measureInfo(){let t=this.dom.querySelector("[aria-selected]");if(!t||!this.info)return null;let e=this.dom.getBoundingClientRect(),i=this.info.getBoundingClientRect(),n=t.getBoundingClientRect();if(n.top>Math.min(innerHeight,e.bottom)-10||n.bottom<Math.max(0,e.top)+10)return null;let s=Math.max(0,Math.min(n.top,innerHeight-i.height))-e.top,r=this.view.textDirection==_i.RTL,o=e.left,a=innerWidth-e.right;return r&&o<Math.min(i.width,a)?r=!1:!r&&a<Math.min(i.width,o)&&(r=!0),{top:s,left:r}}positionInfo(t){this.info&&(this.info.style.top=(t?t.top:-1e6)+"px",t&&(this.info.classList.toggle("cm-completionInfo-left",t.left),this.info.classList.toggle("cm-completionInfo-right",!t.left)))}createListBox(t,e,i){const n=document.createElement("ul");n.id=e,n.setAttribute("role","listbox");for(let s=i.from;s<i.to;s++){let{completion:i,match:r}=t[s];const o=n.appendChild(document.createElement("li"));o.id=e+"-"+s,o.setAttribute("role","option");let a=this.optionClass(i);a&&(o.className=a);for(let t of this.optionContent){let e=t(i,this.view.state,r);e&&o.appendChild(e)}}return i.from&&n.classList.add("cm-completionListIncompleteTop"),i.to<t.length&&n.classList.add("cm-completionListIncompleteBottom"),n}}function Fh(t){return 100*(t.boost||0)+(t.apply?10:0)+(t.info?5:0)+(t.type?1:0)}class Eh{constructor(t,e,i,n,s){this.options=t,this.attrs=e,this.tooltip=i,this.timestamp=n,this.selected=s}setSelected(t,e){return t==this.selected||t>=this.options.length?this:new Eh(this.options,Kh(e,t),this.tooltip,this.timestamp,t)}static build(t,e,i,n,s){let r=function(t,e){let i=[],n=0;for(let s of t)if(s.hasResult())if(!1===s.result.filter)for(let t of s.result.options)i.push(new Uh(t,s,[1e9-n++]));else{let t,n=new Ih(e.sliceDoc(s.from,s.to));for(let e of s.result.options)(t=n.match(e.label))&&(null!=e.boost&&(t[0]+=e.boost),i.push(new Uh(e,s,t)))}i.sort(tc);let s=[],r=null;for(let t of i.sort(tc)){if(300==s.length)break;r&&r.label==t.completion.label&&r.detail==t.completion.detail&&r.type==t.completion.type&&r.apply==t.completion.apply?Fh(t.completion)>Fh(r)&&(s[s.length-1]=t):s.push(t),r=t.completion}return s}(t,e);if(!r.length)return null;let o=0;if(n&&n.selected){let t=n.options[n.selected].completion;for(let e=0;e<r.length&&!o;e++)r[e].completion==t&&(o=e)}return new Eh(r,Kh(i,o),{pos:t.reduce(((t,e)=>e.hasResult()?Math.min(t,e.from):t),1e8),create:(a=fc,t=>new Bh(t,a)),above:s.aboveCursor},n?n.timestamp:Date.now(),o);var a}map(t){return new Eh(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:t.mapPos(this.tooltip.pos)}),this.timestamp,this.selected)}}class Nh{constructor(t,e,i){this.active=t,this.id=e,this.open=i}static start(){return new Nh(Hh,"cm-ac-"+Math.floor(2e6*Math.random()).toString(36),null)}update(t){let{state:e}=t,i=e.facet(zh),n=(i.override||e.languageDataAt("autocomplete",Jh(e)).map(qh)).map((e=>(this.active.find((t=>t.source==e))||new ic(e,this.active.some((t=>0!=t.state))?1:0)).update(t,i)));n.length==this.active.length&&n.every(((t,e)=>t==this.active[e]))&&(n=this.active);let s=t.selection||n.some((e=>e.hasResult()&&t.changes.touchesRange(e.from,e.to)))||!function(t,e){if(t==e)return!0;for(let i=0,n=0;;){for(;i<t.length&&!t[i].hasResult;)i++;for(;n<e.length&&!e[n].hasResult;)n++;let s=i==t.length,r=n==e.length;if(s||r)return s==r;if(t[i++].result!=e[n++].result)return!1}}(n,this.active)?Eh.build(n,e,this.id,this.open,i):this.open&&t.docChanged?this.open.map(t.changes):this.open;!s&&n.every((t=>1!=t.state))&&n.some((t=>t.hasResult()))&&(n=n.map((t=>t.hasResult()?new ic(t.source,0):t)));for(let e of t.effects)e.is(ac)&&(s=s&&s.setSelected(e.value,this.id));return n==this.active&&s==this.open?this:new Nh(n,this.id,s)}get tooltip(){return this.open?this.open.tooltip:null}get attrs(){return this.open?this.open.attrs:Lh}}const Lh={"aria-autocomplete":"list","aria-expanded":"false"};function Kh(t,e){return{"aria-autocomplete":"list","aria-expanded":"true","aria-activedescendant":t+"-"+e,"aria-controls":t}}const Hh=[];function tc(t,e){let i=e.match[0]-t.match[0];return i||t.completion.label.localeCompare(e.completion.label)}function ec(t){return t.isUserEvent("input.type")?"input":t.isUserEvent("delete.backward")?"delete":null}class ic{constructor(t,e,i=-1){this.source=t,this.state=e,this.explicitPos=i}hasResult(){return!1}update(t,e){let i=ec(t),n=this;i?n=n.handleUserEvent(t,i,e):t.docChanged?n=n.handleChange(t):t.selection&&0!=n.state&&(n=new ic(n.source,0));for(let e of t.effects)if(e.is(sc))n=new ic(n.source,1,e.value?Jh(t.state):-1);else if(e.is(rc))n=new ic(n.source,0);else if(e.is(oc))for(let t of e.value)t.source==n.source&&(n=t);return n}handleUserEvent(t,e,i){return"delete"!=e&&i.activateOnTyping?new ic(this.source,1):this.map(t.changes)}handleChange(t){return t.changes.touchesRange(Jh(t.startState))?new ic(this.source,0):this.map(t.changes)}map(t){return t.empty||this.explicitPos<0?this:new ic(this.source,this.state,t.mapPos(this.explicitPos))}}class nc extends ic{constructor(t,e,i,n,s,r){super(t,2,e),this.result=i,this.from=n,this.to=s,this.span=r}hasResult(){return!0}handleUserEvent(t,e,i){let n=t.changes.mapPos(this.from),s=t.changes.mapPos(this.to,1),r=Jh(t.state);if((this.explicitPos<0?r<=n:r<this.from)||r>s||"delete"==e&&Jh(t.startState)==this.from)return new ic(this.source,"input"==e&&i.activateOnTyping?1:0);let o=this.explicitPos<0?-1:t.changes.mapPos(this.explicitPos);return this.span&&(n==s||this.span.test(t.state.sliceDoc(n,s)))?new nc(this.source,o,this.result,n,s,this.span):new ic(this.source,1,o)}handleChange(t){return t.changes.touchesRange(this.from,this.to)?new ic(this.source,0):this.map(t.changes)}map(t){return t.empty?this:new nc(this.source,this.explicitPos<0?-1:t.mapPos(this.explicitPos),this.result,t.mapPos(this.from),t.mapPos(this.to,1),this.span)}}const sc=ut.define(),rc=ut.define(),oc=ut.define({map:(t,e)=>t.map((t=>t.map(e)))}),ac=ut.define(),fc=q.define({create:()=>Nh.start(),update:(t,e)=>t.update(e),provide:t=>[Ph.from(t,(t=>t.tooltip)),Vs.contentAttributes.from(t,(t=>t.attrs))]});function lc(t,e="option"){return i=>{let n=i.state.field(fc,!1);if(!n||!n.open||Date.now()-n.open.timestamp<75)return!1;let s,r=1;"page"==e&&(s=function(t,e){let i=t.plugin(wh);if(!i)return null;let n=i.manager.tooltips.indexOf(e);return n<0?null:i.manager.tooltipViews[n]}(i,n.open.tooltip))&&(r=Math.max(2,Math.floor(s.dom.offsetHeight/s.dom.querySelector("li").offsetHeight)-1));let o=n.open.selected+r*(t?1:-1),{length:a}=n.open.options;return o<0?o="page"==e?0:a-1:o>=a&&(o="page"==e?a-1:0),i.dispatch({effects:ac.of(o)}),!0}}class hc{constructor(t,e){this.active=t,this.context=e,this.time=Date.now(),this.updates=[],this.done=void 0}}const cc=Ui.fromClass(class{constructor(t){this.view=t,this.debounceUpdate=-1,this.running=[],this.debounceAccept=-1,this.composing=0;for(let e of t.state.field(fc).active)1==e.state&&this.startQuery(e)}update(t){let e=t.state.field(fc);if(!t.selectionSet&&!t.docChanged&&t.startState.field(fc)==e)return;let i=t.transactions.some((t=>(t.selection||t.docChanged)&&!ec(t)));for(let e=0;e<this.running.length;e++){let n=this.running[e];if(i||n.updates.length+t.transactions.length>50&&n.time-Date.now()>1e3){for(let t of n.context.abortListeners)try{t()}catch(t){Xi(this.view.state,t)}n.context.abortListeners=null,this.running.splice(e--,1)}else n.updates.push(...t.transactions)}if(this.debounceUpdate>-1&&clearTimeout(this.debounceUpdate),this.debounceUpdate=e.active.some((t=>1==t.state&&!this.running.some((e=>e.active.source==t.source))))?setTimeout((()=>this.startUpdate()),50):-1,0!=this.composing)for(let e of t.transactions)"input"==ec(e)?this.composing=2:2==this.composing&&e.selection&&(this.composing=3)}startUpdate(){this.debounceUpdate=-1;let{state:t}=this.view,e=t.field(fc);for(let t of e.active)1!=t.state||this.running.some((e=>e.active.source==t.source))||this.startQuery(t)}startQuery(t){let{state:e}=this.view,i=Jh(e),n=new Ch(e,i,t.explicitPos==i),s=new hc(t,n);this.running.push(s),Promise.resolve(t.source(n)).then((t=>{s.context.aborted||(s.done=t||null,this.scheduleAccept())}),(t=>{this.view.dispatch({effects:rc.of(null)}),Xi(this.view.state,t)}))}scheduleAccept(){this.running.every((t=>void 0!==t.done))?this.accept():this.debounceAccept<0&&(this.debounceAccept=setTimeout((()=>this.accept()),50))}accept(){var t;this.debounceAccept>-1&&clearTimeout(this.debounceAccept),this.debounceAccept=-1;let e=[],i=this.view.state.facet(zh);for(let n=0;n<this.running.length;n++){let s=this.running[n];if(void 0===s.done)continue;if(this.running.splice(n--,1),s.done){let n=new nc(s.active.source,s.active.explicitPos,s.done,s.done.from,null!==(t=s.done.to)&&void 0!==t?t:Jh(s.updates.length?s.updates[0].startState:this.view.state),s.done.span&&!1!==s.done.filter?Mh(s.done.span,!0):null);for(let t of s.updates)n=n.update(t,i);if(n.hasResult()){e.push(n);continue}}let r=this.view.state.field(fc).active.find((t=>t.source==s.active.source));if(r&&1==r.state)if(null==s.done){let t=new ic(s.active.source,0);for(let e of s.updates)t=t.update(e,i);1!=t.state&&e.push(t)}else this.startQuery(r)}e.length&&this.view.dispatch({effects:oc.of(e)})}},{eventHandlers:{compositionstart(){this.composing=1},compositionend(){3==this.composing&&setTimeout((()=>this.view.dispatch({effects:sc.of(!1)})),20),this.composing=0}}}),Oc=Vs.baseTheme({".cm-tooltip.cm-tooltip-autocomplete":{"& > ul":{fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden auto",maxWidth_fallback:"700px",maxWidth:"min(700px, 95vw)",minWidth:"250px",maxHeight:"10em",listStyle:"none",margin:0,padding:0,"& > li":{overflowX:"hidden",textOverflow:"ellipsis",cursor:"pointer",padding:"1px 3px",lineHeight:1.2}}},"&light .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#17c",color:"white"},"&dark .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#347",color:"white"},".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after":{content:'"\xb7\xb7\xb7"',opacity:.5,display:"block",textAlign:"center"},".cm-tooltip.cm-completionInfo":{position:"absolute",padding:"3px 9px",width:"max-content",maxWidth:"300px"},".cm-completionInfo.cm-completionInfo-left":{right:"100%"},".cm-completionInfo.cm-completionInfo-right":{left:"100%"},"&light .cm-snippetField":{backgroundColor:"#00000022"},"&dark .cm-snippetField":{backgroundColor:"#ffffff22"},".cm-snippetFieldPosition":{verticalAlign:"text-top",width:0,height:"1.15em",margin:"0 -0.7px -.7em",borderLeft:"1.4px dotted #888"},".cm-completionMatchedText":{textDecoration:"underline"},".cm-completionDetail":{marginLeft:"0.5em",fontStyle:"italic"},".cm-completionIcon":{fontSize:"90%",width:".8em",display:"inline-block",textAlign:"center",paddingRight:".6em",opacity:"0.6"},".cm-completionIcon-function, .cm-completionIcon-method":{"&:after":{content:"'\u0192'"}},".cm-completionIcon-class":{"&:after":{content:"'\u25cb'"}},".cm-completionIcon-interface":{"&:after":{content:"'\u25cc'"}},".cm-completionIcon-variable":{"&:after":{content:"'\ud835\udc65'"}},".cm-completionIcon-constant":{"&:after":{content:"'\ud835\udc36'"}},".cm-completionIcon-type":{"&:after":{content:"'\ud835\udc61'"}},".cm-completionIcon-enum":{"&:after":{content:"'\u222a'"}},".cm-completionIcon-property":{"&:after":{content:"'\u25a1'"}},".cm-completionIcon-keyword":{"&:after":{content:"'\ud83d\udd11\ufe0e'"}},".cm-completionIcon-namespace":{"&:after":{content:"'\u25a2'"}},".cm-completionIcon-text":{"&:after":{content:"'abc'",fontSize:"50%",verticalAlign:"middle"}}});class uc{constructor(t,e,i,n){this.field=t,this.line=e,this.from=i,this.to=n}}class dc{constructor(t,e,i){this.field=t,this.from=e,this.to=i}map(t){let e=t.mapPos(this.from,-1,x.TrackDel),i=t.mapPos(this.to,1,x.TrackDel);return null==e||null==i?null:new dc(this.field,e,i)}}class gc{constructor(t,e){this.lines=t,this.fieldPositions=e}instantiate(t,e){let i=[],n=[e],s=t.doc.lineAt(e),r=/^\s*/.exec(s.text)[0];for(let s of this.lines){if(i.length){let i=r,o=/^\t*/.exec(s)[0].length;for(let e=0;e<o;e++)i+=t.facet(jo);n.push(e+i.length-o),s=i+s.slice(o)}i.push(s),e+=s.length+1}let o=this.fieldPositions.map((t=>new dc(t.field,n[t.line]+t.from,n[t.line]+t.to)));return{text:i,ranges:o}}static parse(t){let e,i=[],n=[],s=[];for(let r of t.split(/\r\n?|\n/)){for(;e=/[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(r);){let t=e[1]?+e[1]:null,o=e[2]||e[3]||"",a=-1;for(let e=0;e<i.length;e++)(null!=t?i[e].seq==t:o&&i[e].name==o)&&(a=e);if(a<0){let e=0;for(;e<i.length&&(null==t||null!=i[e].seq&&i[e].seq<t);)e++;i.splice(e,0,{seq:t,name:o}),a=e;for(let t of s)t.field>=a&&t.field++}s.push(new uc(a,n.length,e.index,e.index+o.length)),r=r.slice(0,e.index)+o+r.slice(e.index+e[0].length)}n.push(r)}return new gc(n,s)}}let pc=li.widget({widget:new class extends ai{toDOM(){let t=document.createElement("span");return t.className="cm-snippetFieldPosition",t}ignoreEvent(){return!1}}}),$c=li.mark({class:"cm-snippetField"});class mc{constructor(t,e){this.ranges=t,this.active=e,this.deco=li.set(t.map((t=>(t.from==t.to?pc:$c).range(t.from,t.to))))}map(t){let e=[];for(let i of this.ranges){let n=i.map(t);if(!n)return null;e.push(n)}return new mc(e,this.active)}selectionInsideField(t){return t.ranges.every((t=>this.ranges.some((e=>e.field==this.active&&e.from<=t.from&&e.to>=t.to))))}}const Qc=ut.define({map:(t,e)=>t&&t.map(e)}),Sc=ut.define(),bc=q.define({create:()=>null,update(t,e){for(let i of e.effects){if(i.is(Qc))return i.value;if(i.is(Sc)&&t)return new mc(t.ranges,i.value)}return t&&e.docChanged&&(t=t.map(e.changes)),t&&e.selection&&!t.selectionInsideField(e.selection)&&(t=null),t},provide:t=>Vs.decorations.from(t,(t=>t?t.deco:li.none))});function vc(t,e){return Y.create(t.filter((t=>t.field==e)).map((t=>Y.range(t.from,t.to))))}function xc(t){let e=gc.parse(t);return(t,i,n,s)=>{let{text:r,ranges:o}=e.instantiate(t.state,n),a={changes:{from:n,to:s,insert:u.of(r)}};if(o.length&&(a.selection=vc(o,0)),o.length>1){let e=new mc(o,0),i=a.effects=[Qc.of(e)];void 0===t.state.field(bc,!1)&&i.push(ut.appendConfig.of([bc,Pc,Wc,Oc]))}t.dispatch(t.state.update(a))}}function wc(t){return({state:e,dispatch:i})=>{let n=e.field(bc,!1);if(!n||t<0&&0==n.active)return!1;let s=n.active+t,r=t>0&&!n.ranges.some((e=>e.field==s+t));return i(e.update({selection:vc(n.ranges,s),effects:Qc.of(r?null:new mc(n.ranges,s))})),!0}}const yc=[{key:"Tab",run:wc(1),shift:wc(-1)},{key:"Escape",run:({state:t,dispatch:e})=>!!t.field(bc,!1)&&(e(t.update({effects:Qc.of(null)})),!0)}],Tc=U.define({combine:t=>t.length?t[0]:yc}),Pc=N.highest(_s.compute([Tc],(t=>t.facet(Tc))));function kc(t,e){return Object.assign(Object.assign({},e),{apply:xc(t)})}const Wc=Vs.domEventHandlers({mousedown(t,e){let i,n=e.state.field(bc,!1);if(!n||null==(i=e.posAtCoords({x:t.clientX,y:t.clientY})))return!1;let s=n.ranges.find((t=>t.from<=i&&t.to>=i));return!(!s||s.field==n.active)&&(e.dispatch({selection:vc(n.ranges,s.field),effects:Qc.of(n.ranges.some((t=>t.field>s.field))?new mc(n.ranges,s.field):null)}),!0)}});function Rc(t={}){return[fc,zh.of(t),cc,Zc,Oc]}const Xc=[{key:"Ctrl-Space",run:t=>!!t.state.field(fc,!1)&&(t.dispatch({effects:sc.of(!0)}),!0)},{key:"Escape",run:t=>{let e=t.state.field(fc,!1);return!(!e||!e.active.some((t=>0!=t.state)))&&(t.dispatch({effects:rc.of(null)}),!0)}},{key:"ArrowDown",run:lc(!0)},{key:"ArrowUp",run:lc(!1)},{key:"PageDown",run:lc(!0,"page")},{key:"PageUp",run:lc(!1,"page")},{key:"Enter",run:t=>{let e=t.state.field(fc,!1);return!(t.state.readOnly||!e||!e.open||Date.now()-e.open.timestamp<75)&&(Gh(t,e.open.options[e.open.selected]),!0)}}],Zc=N.highest(_s.computeN([zh],(t=>t.facet(zh).defaultKeymap?[Xc]:[])));function Yc(t,e){return({state:i,dispatch:n})=>{if(i.readOnly)return!1;let s=t(e,i);return!!s&&(n(i.update(s)),!0)}}const Cc=Yc(Dc,0),Vc=Yc(Mc,0),jc=Yc(((t,e)=>Mc(t,e,function(t){let e=[];for(let i of t.selection.ranges){let n=t.doc.lineAt(i.from),s=i.to<=n.to?n:t.doc.lineAt(i.to),r=e.length-1;r>=0&&e[r].to>n.from?e[r].to=s.to:e.push({from:n.from,to:s.to})}return e}(e))),0),Uc=[{key:"Mod-/",run:t=>{let e=Jc(t.state);return e.line?Cc(t):!!e.block&&jc(t)}},{key:"Alt-A",run:Vc}];function Jc(t,e=t.selection.main.head){let i=t.languageDataAt("commentTokens",e);return i.length?i[0]:{}}function Mc(t,e,i=e.selection.ranges){let n=i.map((t=>Jc(e,t.from).block));if(!n.every((t=>t)))return null;let s=i.map(((t,i)=>function(t,{open:e,close:i},n,s){let r,o,a=t.sliceDoc(n-50,n),f=t.sliceDoc(s,s+50),l=/\s*$/.exec(a)[0].length,h=/^\s*/.exec(f)[0].length,c=a.length-l;if(a.slice(c-e.length,c)==e&&f.slice(h,h+i.length)==i)return{open:{pos:n-l,margin:l&&1},close:{pos:s+h,margin:h&&1}};s-n<=100?r=o=t.sliceDoc(n,s):(r=t.sliceDoc(n,n+50),o=t.sliceDoc(s-50,s));let O=/^\s*/.exec(r)[0].length,u=/\s*$/.exec(o)[0].length,d=o.length-u-i.length;return r.slice(O,O+e.length)==e&&o.slice(d,d+i.length)==i?{open:{pos:n+O+e.length,margin:/\s/.test(r.charAt(O+e.length))?1:0},close:{pos:s-u-i.length,margin:/\s/.test(o.charAt(d-1))?1:0}}:null}(e,n[i],t.from,t.to)));if(2!=t&&!s.every((t=>t)))return{changes:e.changes(i.map(((t,e)=>s[e]?[]:[{from:t.from,insert:n[e].open+" "},{from:t.to,insert:" "+n[e].close}])))};if(1!=t&&s.some((t=>t))){let t=[];for(let e,i=0;i<s.length;i++)if(e=s[i]){let s=n[i],{open:r,close:o}=e;t.push({from:r.pos-s.open.length,to:r.pos+r.margin},{from:o.pos-o.margin,to:o.pos+s.close.length})}return{changes:t}}return null}function Dc(t,e,i=e.selection.ranges){let n=[],s=-1;for(let{from:t,to:r}of i){let i=n.length,o=1e9;for(let i=t;i<=r;){let a=e.doc.lineAt(i);if(a.from>s&&(t==r||r>a.from)){s=a.from;let t=Jc(e,i).line;if(!t)continue;let r=/^\s*/.exec(a.text)[0].length,f=r==a.length,l=a.text.slice(r,r+t.length)==t?r:-1;r<a.text.length&&r<o&&(o=r),n.push({line:a,comment:l,token:t,indent:r,empty:f,single:!1})}i=a.to+1}if(o<1e9)for(let t=i;t<n.length;t++)n[t].indent<n[t].line.text.length&&(n[t].indent=o);n.length==i+1&&(n[i].single=!0)}if(2!=t&&n.some((t=>t.comment<0&&(!t.empty||t.single)))){let t=[];for(let{line:e,token:i,indent:s,empty:r,single:o}of n)!o&&r||t.push({from:e.from+s,insert:i+" "});let i=e.changes(t);return{changes:i,selection:e.selection.map(i,1)}}if(1!=t&&n.some((t=>t.comment>=0))){let t=[];for(let{line:e,comment:i,token:s}of n)if(i>=0){let n=e.from+i,r=n+s.length;" "==e.text[r-e.from]&&r++,t.push({from:n,to:r})}return{changes:t}}return null}const Gc=2e3;function Ac(t,e){let i=t.posAtCoords({x:e.clientX,y:e.clientY},!1),n=t.state.doc.lineAt(i),s=i-n.from,r=s>Gc?-1:s==n.length?function(t,e){let i=t.coordsAtPos(t.viewport.from);return i?Math.round(Math.abs((i.left-e)/t.defaultCharacterWidth)):-1}(t,e.clientX):c(n.text,t.state.tabSize,i-n.from);return{line:n.number,col:r,off:s}}function qc(t,e){let i=Ac(t,e),n=t.state.selection;return i?{update(t){if(t.docChanged){let e=t.changes.mapPos(t.startState.doc.line(i.line).from),s=t.state.doc.lineAt(e);i={line:s.number,col:i.col,off:Math.min(i.off,s.length)},n=n.map(t.changes)}},get(e,s,r){let o=Ac(t,e);if(!o)return n;let a=function(t,e,i){let n=Math.min(e.line,i.line),s=Math.max(e.line,i.line),r=[];if(e.off>Gc||i.off>Gc||e.col<0||i.col<0){let o=Math.min(e.off,i.off),a=Math.max(e.off,i.off);for(let e=n;e<=s;e++){let i=t.doc.line(e);i.length<=a&&r.push(Y.range(i.from+o,i.to+a))}}else{let o=Math.min(e.col,i.col),a=Math.max(e.col,i.col);for(let e=n;e<=s;e++){let i=t.doc.line(e),n=O(i.text,o,t.tabSize,!0);if(n>-1){let e=O(i.text,a,t.tabSize);r.push(Y.range(i.from+n,i.from+e))}}}return r}(t.state,i,o);return a.length?r?Y.create(a.concat(n.ranges)):Y.create(a):n}}:null}function Ic(t){let e=(null==t?void 0:t.eventFilter)||(t=>t.altKey&&0==t.button);return Vs.mouseSelectionStyle.of(((t,i)=>e(i)?qc(t,i):null))}let zc=0;class _c{constructor(t,e,i){this.set=t,this.base=e,this.modified=i,this.id=zc++}static define(t){if(null==t?void 0:t.base)throw new Error("Can not derive from a modified tag");let e=new _c([],null,[]);if(e.set.push(e),t)for(let i of t.set)e.set.push(i);return e}static defineModifier(){let t=new Fc;return e=>e.modified.indexOf(t)>-1?e:Fc.get(e.base||e,e.modified.concat(t).sort(((t,e)=>t.id-e.id)))}}let Bc=0;class Fc{constructor(){this.instances=[],this.id=Bc++}static get(t,e){if(!e.length)return t;let i=e[0].instances.find((i=>{return i.base==t&&(n=e,s=i.modified,n.length==s.length&&n.every(((t,e)=>t==s[e])));var n,s}));if(i)return i;let n=[],s=new _c(n,t,e);for(let t of e)t.instances.push(s);let r=Ec(e);for(let e of t.set)for(let t of r)n.push(Fc.get(e,t));return s}}function Ec(t){let e=[t];for(let i=0;i<t.length;i++)for(let n of Ec(t.slice(0,i).concat(t.slice(i+1))))e.push(n);return e}function Nc(t){let e=Object.create(null);for(let i in t){let n=t[i];Array.isArray(n)||(n=[n]);for(let t of i.split(" "))if(t){let i=[],s=2,r=t;for(let e=0;;){if("..."==r&&e>0&&e+3==t.length){s=1;break}let n=/^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(r);if(!n)throw new RangeError("Invalid path: "+t);if(i.push("*"==n[0]?null:'"'==n[0][0]?JSON.parse(n[0]):n[0]),e+=n[0].length,e==t.length)break;let o=t[e++];if(e==t.length&&"!"==o){s=0;break}if("/"!=o)throw new RangeError("Invalid path: "+t);r=t.slice(e)}let o=i.length-1,a=i[o];if(!a)throw new RangeError("Invalid path: "+t);let f=new eO(n,s,o>0?i.slice(0,o):null);e[a]=f.sort(e[a])}}return Lc.add(e)}const Lc=new Nr,Kc=U.define({combine:t=>t.length?iO.combinedMatch(t):null}),Hc=U.define({combine:t=>t.length?t[0].match:null});function tO(t){return t.facet(Kc)||t.facet(Hc)}class eO{constructor(t,e,i,n){this.tags=t,this.mode=e,this.context=i,this.next=n}sort(t){return!t||t.depth<this.depth?(this.next=t,this):(t.next=this.sort(t.next),t)}get depth(){return this.context?this.context.length:0}}class iO{constructor(t,e){let i;function n(t){let e=Ut.newName();return(i||(i=Object.create(null)))["."+e]=t,e}this.map=Object.create(null),this.all="string"==typeof e.all?e.all:e.all?n(e.all):null;for(let e of t){let t=(e.class||n(Object.assign({},e,{tag:null})))+(this.all?" "+this.all:""),i=e.tag;if(Array.isArray(i))for(let e of i)this.map[e.id]=t;else this.map[i.id]=t}this.module=i?new Ut(i):null,this.scope=e.scope||null,this.match=this.match.bind(this);let s=[sO];this.module&&s.push(Vs.styleModule.of(this.module)),this.extension=s.concat(Kc.of(this)),this.fallback=s.concat(Hc.of(this))}match(t,e){if(this.scope&&e!=this.scope)return null;for(let e of t.set){let i=this.map[e.id];if(void 0!==i)return e!=t&&(this.map[t.id]=i),i}return this.map[t.id]=this.all}static combinedMatch(t){if(1==t.length)return t[0].match;let e=t.some((t=>t.scope))?void 0:Object.create(null);return(i,n)=>{let s=e&&e[i.id];if(void 0!==s)return s;let r=null;for(let e of t){let t=e.match(i,n);t&&(r=r?r+" "+t:t)}return e&&(e[i.id]=r),r}}static define(t,e){return new iO(t,e||{})}static get(t,e,i){let n=tO(t);return n&&n(e,i||Kr.none)}}class nO{constructor(t){this.markCache=Object.create(null),this.tree=yo(t.state),this.decorations=this.buildDeco(t,tO(t.state))}update(t){let e=yo(t.state),i=tO(t.state),n=i!=t.startState.facet(Kc);e.length<t.view.viewport.to&&!n&&e.type==this.tree.type?this.decorations=this.decorations.map(t.changes):(e!=this.tree||t.viewportChanged||n)&&(this.tree=e,this.decorations=this.buildDeco(t.view,i))}buildDeco(t,e){if(!e||!this.tree.length)return li.none;let i=new zt;for(let{from:n,to:s}of t.visibleRanges)aO(this.tree,n,s,e,((t,e,n)=>{i.add(t,e,this.markCache[n]||(this.markCache[n]=li.mark({class:n})))}));return i.finish()}}const sO=N.high(Ui.fromClass(nO,{decorations:t=>t.decorations})),rO=[""];class oO{constructor(t,e,i){this.at=t,this.style=e,this.span=i,this.class=""}startSpan(t,e){e!=this.class&&(this.flush(t),t>this.at&&(this.at=t),this.class=e)}flush(t){t>this.at&&this.class&&this.span(this.at,t,this.class)}highlightRange(t,e,i,n,s,r){let{type:o,from:a,to:f}=t;if(a>=i||f<=e)return;rO[s]=o.name,o.isTop&&(r=o);let l=n,h=o.prop(Lc),c=!1;for(;h;){if(!h.context||fO(h.context,rO,s)){for(let t of h.tags){let e=this.style(t,r);e&&(l&&(l+=" "),l+=e,1==h.mode?n+=(n?" ":"")+e:0==h.mode&&(c=!0))}break}h=h.next}if(this.startSpan(t.from,l),c)return;let O=t.tree&&t.tree.prop(Nr.mounted);if(O&&O.overlay){let o=t.node.enter(O.overlay[0].from+a,1),h=t.firstChild();for(let c=0,u=a;;c++){let d=c<O.overlay.length?O.overlay[c]:null,g=d?d.from+a:f,p=Math.max(e,u),$=Math.min(i,g);if(p<$&&h)for(;t.from<$&&(this.highlightRange(t,p,$,n,s+1,r),this.startSpan(Math.min(i,t.to),l),!(t.to>=g)&&t.nextSibling()););if(!d||g>i)break;u=d.to+a,u>e&&(this.highlightRange(o.cursor,Math.max(e,d.from+a),Math.min(i,u),n,s,O.tree.type),this.startSpan(u,l))}h&&t.parent()}else if(t.firstChild()){do{if(!(t.to<=e)){if(t.from>=i)break;this.highlightRange(t,e,i,n,s+1,r),this.startSpan(Math.min(i,t.to),l)}}while(t.nextSibling());t.parent()}}}function aO(t,e,i,n,s){let r=new oO(e,n,s);r.highlightRange(t.cursor(),e,i,"",0,t.type),r.flush(i)}function fO(t,e,i){if(t.length>i-1)return!1;for(let n=i-1,s=t.length-1;s>=0;s--,n--){let i=t[s];if(i&&i!=e[n])return!1}return!0}const lO=_c.define,hO=lO(),cO=lO(),OO=lO(cO),uO=lO(cO),dO=lO(),gO=lO(dO),pO=lO(dO),$O=lO(),mO=lO($O),QO=lO(),SO=lO(),bO=lO(),vO=lO(bO),xO=lO(),wO={comment:hO,lineComment:lO(hO),blockComment:lO(hO),docComment:lO(hO),name:cO,variableName:lO(cO),typeName:OO,tagName:lO(OO),propertyName:uO,attributeName:lO(uO),className:lO(cO),labelName:lO(cO),namespace:lO(cO),macroName:lO(cO),literal:dO,string:gO,docString:lO(gO),character:lO(gO),attributeValue:lO(gO),number:pO,integer:lO(pO),float:lO(pO),bool:lO(dO),regexp:lO(dO),escape:lO(dO),color:lO(dO),url:lO(dO),keyword:QO,self:lO(QO),null:lO(QO),atom:lO(QO),unit:lO(QO),modifier:lO(QO),operatorKeyword:lO(QO),controlKeyword:lO(QO),definitionKeyword:lO(QO),moduleKeyword:lO(QO),operator:SO,derefOperator:lO(SO),arithmeticOperator:lO(SO),logicOperator:lO(SO),bitwiseOperator:lO(SO),compareOperator:lO(SO),updateOperator:lO(SO),definitionOperator:lO(SO),typeOperator:lO(SO),controlOperator:lO(SO),punctuation:bO,separator:lO(bO),bracket:vO,angleBracket:lO(vO),squareBracket:lO(vO),paren:lO(vO),brace:lO(vO),content:$O,heading:mO,heading1:lO(mO),heading2:lO(mO),heading3:lO(mO),heading4:lO(mO),heading5:lO(mO),heading6:lO(mO),contentSeparator:lO($O),list:lO($O),quote:lO($O),emphasis:lO($O),strong:lO($O),link:lO($O),monospace:lO($O),strikethrough:lO($O),inserted:lO(),deleted:lO(),changed:lO(),invalid:lO(),meta:xO,documentMeta:lO(xO),annotation:lO(xO),processingInstruction:lO(xO),definition:_c.defineModifier(),constant:_c.defineModifier(),function:_c.defineModifier(),standard:_c.defineModifier(),local:_c.defineModifier(),special:_c.defineModifier()},yO=iO.define([{tag:wO.link,textDecoration:"underline"},{tag:wO.heading,textDecoration:"underline",fontWeight:"bold"},{tag:wO.emphasis,fontStyle:"italic"},{tag:wO.strong,fontWeight:"bold"},{tag:wO.strikethrough,textDecoration:"line-through"},{tag:wO.keyword,color:"#708"},{tag:[wO.atom,wO.bool,wO.url,wO.contentSeparator,wO.labelName],color:"#219"},{tag:[wO.literal,wO.inserted],color:"#164"},{tag:[wO.string,wO.deleted],color:"#a11"},{tag:[wO.regexp,wO.escape,wO.special(wO.string)],color:"#e40"},{tag:wO.definition(wO.variableName),color:"#00f"},{tag:wO.local(wO.variableName),color:"#30a"},{tag:[wO.typeName,wO.namespace],color:"#085"},{tag:wO.className,color:"#167"},{tag:[wO.special(wO.variableName),wO.macroName],color:"#256"},{tag:wO.definition(wO.propertyName),color:"#00c"},{tag:wO.comment,color:"#940"},{tag:wO.meta,color:"#7a757a"},{tag:wO.invalid,color:"#f00"}]);class TO{constructor(t,e,i){this.from=t,this.to=e,this.diagnostic=i}}class PO{constructor(t,e,i){this.diagnostics=t,this.panel=e,this.selected=i}static init(t,e,i){let n=li.set(t.map((t=>t.from==t.to||t.from==t.to-1&&i.doc.lineAt(t.from).to==t.from?li.widget({widget:new DO(t),diagnostic:t}).range(t.from):li.mark({attributes:{class:"cm-lintRange cm-lintRange-"+t.severity},diagnostic:t}).range(t.from,t.to))),!0);return new PO(n,e,kO(n))}}function kO(t,e=null,i=0){let n=null;return t.between(i,1e9,((t,i,{spec:s})=>{if(!e||s.diagnostic==e)return n=new TO(t,i,s.diagnostic),!1})),n}const WO=ut.define(),RO=ut.define(),XO=ut.define(),ZO=q.define({create:()=>new PO(li.none,null,null),update(t,e){if(e.docChanged){let i=t.diagnostics.map(e.changes),n=null;if(t.selected){let s=e.changes.mapPos(t.selected.from,1);n=kO(i,t.selected.diagnostic,s)||kO(i,null,s)}t=new PO(i,t.panel,n)}for(let i of e.effects)i.is(WO)?t=PO.init(i.value,t.panel,e.state):i.is(RO)?t=new PO(t.diagnostics,i.value?AO.open:null,t.selected):i.is(XO)&&(t=new PO(t.diagnostics,t.panel,i.value));return t},provide:t=>[vl.from(t,(t=>t.panel)),Vs.decorations.from(t,(t=>t.diagnostics))]}),YO=li.mark({class:"cm-lintRange cm-lintRange-active"});function CO(t,e,i){let{diagnostics:n}=t.state.field(ZO),s=[],r=2e8,o=0;return n.between(e-(i<0?1:0),e+(i>0?1:0),((t,n,{spec:a})=>{e>=t&&e<=n&&(t==n||(e>t||i>0)&&(e<n||i<0))&&(s.push(a.diagnostic),r=Math.min(t,r),o=Math.max(n,o))})),s.length?{pos:r,end:o,above:t.state.doc.lineAt(r).to<o,create:()=>({dom:VO(t,s)})}:null}function VO(t,e){return xl("ul",{class:"cm-tooltip-lint"},e.map((e=>MO(t,e,!1))))}const jO=t=>{let e=t.state.field(ZO,!1);return!(!e||!e.panel)&&(t.dispatch({effects:RO.of(!1)}),!0)},UO=[{key:"Mod-Shift-m",run:t=>{let e=t.state.field(ZO,!1);var i,n;e&&e.panel||t.dispatch({effects:(i=t.state,n=[RO.of(!0)],i.field(ZO,!1)?n:n.concat(ut.appendConfig.of([ZO,Vs.decorations.compute([ZO],(t=>{let{selected:e,panel:i}=t.field(ZO);return e&&i&&e.from!=e.to?li.set([YO.range(e.from,e.to)]):li.none})),Zh(CO),IO])))});let s=$l(t,AO.open);return s&&s.dom.querySelector(".cm-panel-lint ul").focus(),!0}},{key:"F8",run:t=>{let e=t.state.field(ZO,!1);if(!e)return!1;let i=t.state.selection.main,n=e.diagnostics.iter(i.to+1);return!(!n.value&&(n=e.diagnostics.iter(0),!n.value||n.from==i.from&&n.to==i.to))&&(t.dispatch({selection:{anchor:n.from,head:n.to},scrollIntoView:!0}),!0)}}];function JO(t){let e=[];if(t)t:for(let{name:i}of t){for(let t=0;t<i.length;t++){let n=i[t];if(/[a-zA-Z]/.test(n)&&!e.some((t=>t.toLowerCase()==n.toLowerCase()))){e.push(n);continue t}}e.push("")}return e}function MO(t,e,i){var n;let s=i?JO(e.actions):[];return xl("li",{class:"cm-diagnostic cm-diagnostic-"+e.severity},xl("span",{class:"cm-diagnosticText"},e.message),null===(n=e.actions)||void 0===n?void 0:n.map(((i,n)=>{let r=n=>{n.preventDefault();let s=kO(t.state.field(ZO).diagnostics,e);s&&i.apply(t,s.from,s.to)},{name:o}=i,a=s[n]?o.indexOf(s[n]):-1,f=a<0?o:[o.slice(0,a),xl("u",o.slice(a,a+1)),o.slice(a+1)];return xl("button",{type:"button",class:"cm-diagnosticAction",onclick:r,onmousedown:r,"aria-label":` Action: ${o}${a<0?"":` (access key "${s[n]})"`}.`},f)})),e.source&&xl("div",{class:"cm-diagnosticSource"},e.source))}class DO extends ai{constructor(t){super(),this.diagnostic=t}eq(t){return t.diagnostic==this.diagnostic}toDOM(){return xl("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class GO{constructor(t,e){this.diagnostic=e,this.id="item_"+Math.floor(4294967295*Math.random()).toString(16),this.dom=MO(t,e,!0),this.dom.id=this.id,this.dom.setAttribute("role","option")}}class AO{constructor(t){this.view=t,this.items=[];this.list=xl("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:e=>{if(27==e.keyCode)jO(this.view),this.view.focus();else if(38==e.keyCode||33==e.keyCode)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(40==e.keyCode||34==e.keyCode)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(36==e.keyCode)this.moveSelection(0);else if(35==e.keyCode)this.moveSelection(this.items.length-1);else if(13==e.keyCode)this.view.focus();else{if(!(e.keyCode>=65&&e.keyCode<=90&&this.selectedIndex>=0))return;{let{diagnostic:i}=this.items[this.selectedIndex],n=JO(i.actions);for(let s=0;s<n.length;s++)if(n[s].toUpperCase().charCodeAt(0)==e.keyCode){let e=kO(this.view.state.field(ZO).diagnostics,i);e&&i.actions[s].apply(t,e.from,e.to)}}}e.preventDefault()},onclick:t=>{for(let e=0;e<this.items.length;e++)this.items[e].dom.contains(t.target)&&this.moveSelection(e)}}),this.dom=xl("div",{class:"cm-panel-lint"},this.list,xl("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>jO(this.view)},"\xd7")),this.update()}get selectedIndex(){let t=this.view.state.field(ZO).selected;if(!t)return-1;for(let e=0;e<this.items.length;e++)if(this.items[e].diagnostic==t.diagnostic)return e;return-1}update(){let{diagnostics:t,selected:e}=this.view.state.field(ZO),i=0,n=!1,s=null;for(t.between(0,this.view.state.doc.length,((t,r,{spec:o})=>{let a,f=-1;for(let t=i;t<this.items.length;t++)if(this.items[t].diagnostic==o.diagnostic){f=t;break}f<0?(a=new GO(this.view,o.diagnostic),this.items.splice(i,0,a),n=!0):(a=this.items[f],f>i&&(this.items.splice(i,f-i),n=!0)),e&&a.diagnostic==e.diagnostic?a.dom.hasAttribute("aria-selected")||(a.dom.setAttribute("aria-selected","true"),s=a):a.dom.hasAttribute("aria-selected")&&a.dom.removeAttribute("aria-selected"),i++}));i<this.items.length&&!(1==this.items.length&&this.items[0].diagnostic.from<0);)n=!0,this.items.pop();0==this.items.length&&(this.items.push(new GO(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),n=!0),s?(this.list.setAttribute("aria-activedescendant",s.id),this.view.requestMeasure({key:this,read:()=>({sel:s.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel:t,panel:e})=>{t.top<e.top?this.list.scrollTop-=e.top-t.top:t.bottom>e.bottom&&(this.list.scrollTop+=t.bottom-e.bottom)}})):this.selectedIndex<0&&this.list.removeAttribute("aria-activedescendant"),n&&this.sync()}sync(){let t=this.list.firstChild;function e(){let e=t;t=e.nextSibling,e.remove()}for(let i of this.items)if(i.dom.parentNode==this.list){for(;t!=i.dom;)e();t=i.dom.nextSibling}else this.list.insertBefore(i.dom,t);for(;t;)e()}moveSelection(t){if(this.selectedIndex<0)return;let e=kO(this.view.state.field(ZO).diagnostics,this.items[t].diagnostic);e&&this.view.dispatch({selection:{anchor:e.from,head:e.to},scrollIntoView:!0,effects:XO.of(e)})}static open(t){return new AO(t)}}function qO(t){return function(t,e='viewBox="0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`}(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`,'width="6" height="3"')}const IO=Vs.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:qO("#d11")},".cm-lintRange-warning":{backgroundImage:qO("orange")},".cm-lintRange-info":{backgroundImage:qO("#999")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","&:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"&:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"&:after":{borderBottomColor:"#999"}},".cm-panel.cm-panel-lint":{position:"relative","& ul":{maxHeight:"100px",overflowY:"auto","& [aria-selected]":{backgroundColor:"#ddd","& u":{textDecoration:"underline"}},"&:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},"& u":{textDecoration:"none"},padding:0,margin:0},"& [name=close]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}});class zO{constructor(t,e,i,n,s,r,o,a,f,l=0,h){this.p=t,this.stack=e,this.state=i,this.reducePos=n,this.pos=s,this.score=r,this.buffer=o,this.bufferBase=a,this.curContext=f,this.lookAhead=l,this.parent=h}toString(){return`[${this.stack.filter(((t,e)=>e%3==0)).concat(this.state)}]@${this.pos}${this.score?"!"+this.score:""}`}static start(t,e,i=0){let n=t.parser.context;return new zO(t,[],e,i,i,0,[],0,n?new _O(n,n.start):null,0,null)}get context(){return this.curContext?this.curContext.context:null}pushState(t,e){this.stack.push(this.state,e,this.bufferBase+this.buffer.length),this.state=t}reduce(t){let e=t>>19,i=65535&t,{parser:n}=this.p,s=n.dynamicPrecedence(i);if(s&&(this.score+=s),0==e)return this.pushState(n.getGoto(this.state,i,!0),this.reducePos),i<n.minRepeatTerm&&this.storeNode(i,this.reducePos,this.reducePos,4,!0),void this.reduceContext(i,this.reducePos);let r=this.stack.length-3*(e-1)-(262144&t?6:0),o=this.stack[r-2],a=this.stack[r-1],f=this.bufferBase+this.buffer.length-a;if(i<n.minRepeatTerm||131072&t){let t=n.stateFlag(this.state,1)?this.pos:this.reducePos;this.storeNode(i,o,t,f+4,!0)}if(262144&t)this.state=this.stack[r];else{let t=this.stack[r-3];this.state=n.getGoto(t,i,!0)}for(;this.stack.length>r;)this.stack.pop();this.reduceContext(i,o)}storeNode(t,e,i,n=4,s=!1){if(0==t){let t=this,n=this.buffer.length;if(0==n&&t.parent&&(n=t.bufferBase-t.parent.bufferBase,t=t.parent),n>0&&0==t.buffer[n-4]&&t.buffer[n-1]>-1){if(e==i)return;if(t.buffer[n-2]>=e)return void(t.buffer[n-2]=i)}}if(s&&this.pos!=i){let s=this.buffer.length;if(s>0&&0!=this.buffer[s-4])for(;s>0&&this.buffer[s-2]>i;)this.buffer[s]=this.buffer[s-4],this.buffer[s+1]=this.buffer[s-3],this.buffer[s+2]=this.buffer[s-2],this.buffer[s+3]=this.buffer[s-1],s-=4,n>4&&(n-=4);this.buffer[s]=t,this.buffer[s+1]=e,this.buffer[s+2]=i,this.buffer[s+3]=n}else this.buffer.push(t,e,i,n)}shift(t,e,i){let n=this.pos;if(131072&t)this.pushState(65535&t,this.pos);else if(0==(262144&t)){let s=t,{parser:r}=this.p;(i>this.pos||e<=r.maxNode)&&(this.pos=i,r.stateFlag(s,1)||(this.reducePos=i)),this.pushState(s,n),this.shiftContext(e,n),e<=r.maxNode&&this.buffer.push(e,n,i,4)}else this.pos=i,this.shiftContext(e,n),e<=this.p.parser.maxNode&&this.buffer.push(e,n,i,4)}apply(t,e,i){65536&t?this.reduce(t):this.shift(t,e,i)}useNode(t,e){let i=this.p.reused.length-1;(i<0||this.p.reused[i]!=t)&&(this.p.reused.push(t),i++);let n=this.pos;this.reducePos=this.pos=n+t.length,this.pushState(e,n),this.buffer.push(i,n,this.reducePos,-1),this.curContext&&this.updateContext(this.curContext.tracker.reuse(this.curContext.context,t,this,this.p.stream.reset(this.pos-t.length)))}split(){let t=this,e=t.buffer.length;for(;e>0&&t.buffer[e-2]>t.reducePos;)e-=4;let i=t.buffer.slice(e),n=t.bufferBase+e;for(;t&&n==t.bufferBase;)t=t.parent;return new zO(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,i,n,this.curContext,this.lookAhead,t)}recoverByDelete(t,e){let i=t<=this.p.parser.maxNode;i&&this.storeNode(t,this.pos,e,4),this.storeNode(0,this.pos,e,i?8:4),this.pos=this.reducePos=e,this.score-=190}canShift(t){for(let e=new FO(this);;){let i=this.p.parser.stateSlot(e.state,4)||this.p.parser.hasAction(e.state,t);if(0==(65536&i))return!0;if(0==i)return!1;e.reduce(i)}}recoverByInsert(t){if(this.stack.length>=300)return[];let e=this.p.parser.nextStates(this.state);if(e.length>8||this.stack.length>=120){let i=[];for(let n,s=0;s<e.length;s+=2)(n=e[s+1])!=this.state&&this.p.parser.hasAction(n,t)&&i.push(e[s],n);if(this.stack.length<120)for(let t=0;i.length<8&&t<e.length;t+=2){let n=e[t+1];i.some(((t,e)=>1&e&&t==n))||i.push(e[t],n)}e=i}let i=[];for(let t=0;t<e.length&&i.length<4;t+=2){let n=e[t+1];if(n==this.state)continue;let s=this.split();s.storeNode(0,s.pos,s.pos,4,!0),s.pushState(n,this.pos),s.shiftContext(e[t],this.pos),s.score-=200,i.push(s)}return i}forceReduce(){let t=this.p.parser.stateSlot(this.state,5);if(0==(65536&t))return!1;let{parser:e}=this.p;if(!e.validAction(this.state,t)){let i=t>>19,n=65535&t,s=this.stack.length-3*i;if(s<0||e.getGoto(this.stack[s],n,!1)<0)return!1;this.storeNode(0,this.reducePos,this.reducePos,4,!0),this.score-=100}return this.reduce(t),!0}forceAll(){for(;!this.p.parser.stateFlag(this.state,2);)if(!this.forceReduce()){this.storeNode(0,this.pos,this.pos,4,!0);break}return this}get deadEnd(){if(3!=this.stack.length)return!1;let{parser:t}=this.p;return 65535==t.data[t.stateSlot(this.state,1)]&&!t.stateSlot(this.state,4)}restart(){this.state=this.stack[0],this.stack.length=0}sameState(t){if(this.state!=t.state||this.stack.length!=t.stack.length)return!1;for(let e=0;e<this.stack.length;e+=3)if(this.stack[e]!=t.stack[e])return!1;return!0}get parser(){return this.p.parser}dialectEnabled(t){return this.p.parser.dialect.flags[t]}shiftContext(t,e){this.curContext&&this.updateContext(this.curContext.tracker.shift(this.curContext.context,t,this,this.p.stream.reset(e)))}reduceContext(t,e){this.curContext&&this.updateContext(this.curContext.tracker.reduce(this.curContext.context,t,this,this.p.stream.reset(e)))}emitContext(){let t=this.buffer.length-1;(t<0||-3!=this.buffer[t])&&this.buffer.push(this.curContext.hash,this.reducePos,this.reducePos,-3)}emitLookAhead(){let t=this.buffer.length-1;(t<0||-4!=this.buffer[t])&&this.buffer.push(this.lookAhead,this.reducePos,this.reducePos,-4)}updateContext(t){if(t!=this.curContext.context){let e=new _O(this.curContext.tracker,t);e.hash!=this.curContext.hash&&this.emitContext(),this.curContext=e}}setLookAhead(t){t>this.lookAhead&&(this.emitLookAhead(),this.lookAhead=t)}close(){this.curContext&&this.curContext.tracker.strict&&this.emitContext(),this.lookAhead>0&&this.emitLookAhead()}}class _O{constructor(t,e){this.tracker=t,this.context=e,this.hash=t.strict?t.hash(e):0}}var BO;!function(t){t[t.Insert=200]="Insert",t[t.Delete=190]="Delete",t[t.Reduce=100]="Reduce",t[t.MaxNext=4]="MaxNext",t[t.MaxInsertStackDepth=300]="MaxInsertStackDepth",t[t.DampenInsertStackDepth=120]="DampenInsertStackDepth"}(BO||(BO={}));class FO{constructor(t){this.start=t,this.state=t.state,this.stack=t.stack,this.base=this.stack.length}reduce(t){let e=65535&t,i=t>>19;0==i?(this.stack==this.start.stack&&(this.stack=this.stack.slice()),this.stack.push(this.state,0,0),this.base+=3):this.base-=3*(i-1);let n=this.start.p.parser.getGoto(this.stack[this.base-3],e,!0);this.state=n}}class EO{constructor(t,e,i){this.stack=t,this.pos=e,this.index=i,this.buffer=t.buffer,0==this.index&&this.maybeNext()}static create(t,e=t.bufferBase+t.buffer.length){return new EO(t,e,e-t.bufferBase)}maybeNext(){let t=this.stack.parent;null!=t&&(this.index=this.stack.bufferBase-t.bufferBase,this.stack=t,this.buffer=t.buffer)}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}next(){this.index-=4,this.pos-=4,0==this.index&&this.maybeNext()}fork(){return new EO(this.stack,this.pos,this.index)}}class NO{constructor(){this.start=-1,this.value=-1,this.end=-1,this.extended=-1,this.lookAhead=0,this.mask=0,this.context=0}}const LO=new NO;class KO{constructor(t,e){this.input=t,this.ranges=e,this.chunk="",this.chunkOff=0,this.chunk2="",this.chunk2Pos=0,this.next=-1,this.token=LO,this.rangeIndex=0,this.pos=this.chunkPos=e[0].from,this.range=e[0],this.end=e[e.length-1].to,this.readNext()}resolveOffset(t,e){let i=this.range,n=this.rangeIndex,s=this.pos+t;for(;s<i.from;){if(!n)return null;let t=this.ranges[--n];s-=i.from-t.to,i=t}for(;e<0?s>i.to:s>=i.to;){if(n==this.ranges.length-1)return null;let t=this.ranges[++n];s+=t.from-i.to,i=t}return s}peek(t){let e,i,n=this.chunkOff+t;if(n>=0&&n<this.chunk.length)e=this.pos+t,i=this.chunk.charCodeAt(n);else{let n=this.resolveOffset(t,1);if(null==n)return-1;if(e=n,e>=this.chunk2Pos&&e<this.chunk2Pos+this.chunk2.length)i=this.chunk2.charCodeAt(e-this.chunk2Pos);else{let t=this.rangeIndex,n=this.range;for(;n.to<=e;)n=this.ranges[++t];this.chunk2=this.input.chunk(this.chunk2Pos=e),e+this.chunk2.length>n.to&&(this.chunk2=this.chunk2.slice(0,n.to-e)),i=this.chunk2.charCodeAt(0)}}return e>=this.token.lookAhead&&(this.token.lookAhead=e+1),i}acceptToken(t,e=0){let i=e?this.resolveOffset(e,-1):this.pos;if(null==i||i<this.token.start)throw new RangeError("Token end out of bounds");this.token.value=t,this.token.end=i}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk:t,chunkPos:e}=this;this.chunk=this.chunk2,this.chunkPos=this.chunk2Pos,this.chunk2=t,this.chunk2Pos=e,this.chunkOff=this.pos-this.chunkPos}else{this.chunk2=this.chunk,this.chunk2Pos=this.chunkPos;let t=this.input.chunk(this.pos),e=this.pos+t.length;this.chunk=e>this.range.to?t.slice(0,this.range.to-this.pos):t,this.chunkPos=this.pos,this.chunkOff=0}}readNext(){return this.chunkOff>=this.chunk.length&&(this.getChunk(),this.chunkOff==this.chunk.length)?this.next=-1:this.next=this.chunk.charCodeAt(this.chunkOff)}advance(t=1){for(this.chunkOff+=t;this.pos+t>=this.range.to;){if(this.rangeIndex==this.ranges.length-1)return this.setDone();t-=this.range.to-this.pos,this.range=this.ranges[++this.rangeIndex],this.pos=this.range.from}return this.pos+=t,this.pos>=this.token.lookAhead&&(this.token.lookAhead=this.pos+1),this.readNext()}setDone(){return this.pos=this.chunkPos=this.end,this.range=this.ranges[this.rangeIndex=this.ranges.length-1],this.chunk="",this.next=-1}reset(t,e){if(e?(this.token=e,e.start=t,e.lookAhead=t+1,e.value=e.extended=-1):this.token=LO,this.pos!=t){if(this.pos=t,t==this.end)return this.setDone(),this;for(;t<this.range.from;)this.range=this.ranges[--this.rangeIndex];for(;t>=this.range.to;)this.range=this.ranges[++this.rangeIndex];t>=this.chunkPos&&t<this.chunkPos+this.chunk.length?this.chunkOff=t-this.chunkPos:(this.chunk="",this.chunkOff=0),this.readNext()}return this}read(t,e){if(t>=this.chunkPos&&e<=this.chunkPos+this.chunk.length)return this.chunk.slice(t-this.chunkPos,e-this.chunkPos);if(t>=this.chunk2Pos&&e<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(t-this.chunk2Pos,e-this.chunk2Pos);if(t>=this.range.from&&e<=this.range.to)return this.input.read(t,e);let i="";for(let n of this.ranges){if(n.from>=e)break;n.to>t&&(i+=this.input.read(Math.max(n.from,t),Math.min(n.to,e)))}return i}}class HO{constructor(t,e){this.data=t,this.id=e}token(t,e){!function(t,e,i,n){let s=0,r=1<<n,{parser:o}=i.p,{dialect:a}=o;t:for(;0!=(r&t[s]);){let i=t[s+1];for(let n=s+3;n<i;n+=2)if((t[n+1]&r)>0){let i=t[n];if(a.allows(i)&&(-1==e.token.value||e.token.value==i||o.overrides(i,e.token.value))){e.acceptToken(i);break}}for(let n=e.next,r=0,o=t[s+2];r<o;){let a=r+o>>1,f=i+a+(a<<1),l=t[f],h=t[f+1];if(n<l)o=a;else{if(!(n>=h)){s=t[f+2],e.advance();continue t}r=a+1}}break}}(this.data,t,e,this.id)}}HO.prototype.contextual=HO.prototype.fallback=HO.prototype.extend=!1;class tu{constructor(t,e={}){this.token=t,this.contextual=!!e.contextual,this.fallback=!!e.fallback,this.extend=!!e.extend}}function eu(t,e=Uint16Array){if("string"!=typeof t)return t;let i=null;for(let n=0,s=0;n<t.length;){let r=0;for(;;){let e=t.charCodeAt(n++),i=!1;if(126==e){r=65535;break}e>=92&&e--,e>=34&&e--;let s=e-32;if(s>=46&&(s-=46,i=!0),r+=s,i)break;r*=46}i?i[s++]=r:i=new e(r)}return i}const iu="undefined"!=typeof process&&/\bparse\b/.test(process.env.LOG);let nu=null;var su,ru;function ou(t,e,i){let n=t.fullCursor();for(n.moveTo(e);;)if(!(i<0?n.childBefore(e):n.childAfter(e)))for(;;){if((i<0?n.to<e:n.from>e)&&!n.type.isError)return i<0?Math.max(0,Math.min(n.to-1,e-25)):Math.min(t.length,Math.max(n.from+1,e+25));if(i<0?n.prevSibling():n.nextSibling())break;if(!n.parent())return i<0?0:t.length}}!function(t){t[t.Margin=25]="Margin"}(su||(su={}));class au{constructor(t,e){this.fragments=t,this.nodeSet=e,this.i=0,this.fragment=null,this.safeFrom=-1,this.safeTo=-1,this.trees=[],this.start=[],this.index=[],this.nextFragment()}nextFragment(){let t=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(t){for(this.safeFrom=t.openStart?ou(t.tree,t.from+t.offset,1)-t.offset:t.from,this.safeTo=t.openEnd?ou(t.tree,t.to+t.offset,-1)-t.offset:t.to;this.trees.length;)this.trees.pop(),this.start.pop(),this.index.pop();this.trees.push(t.tree),this.start.push(-t.offset),this.index.push(0),this.nextStart=this.safeFrom}else this.nextStart=1e9}nodeAt(t){if(t<this.nextStart)return null;for(;this.fragment&&this.safeTo<=t;)this.nextFragment();if(!this.fragment)return null;for(;;){let e=this.trees.length-1;if(e<0)return this.nextFragment(),null;let i=this.trees[e],n=this.index[e];if(n==i.children.length){this.trees.pop(),this.start.pop(),this.index.pop();continue}let s=i.children[n],r=this.start[e]+i.positions[n];if(r>t)return this.nextStart=r,null;if(s instanceof io){if(r==t){if(r<this.safeFrom)return null;let t=r+s.length;if(t<=this.safeTo){let e=s.prop(Nr.lookAhead);if(!e||t+e<this.fragment.to)return s}}this.index[e]++,r+s.length>=Math.max(this.safeFrom,t)&&(this.trees.push(s),this.start.push(r),this.index.push(0))}else this.index[e]++,this.nextStart=r+s.length}}}class fu{constructor(t,e){this.stream=e,this.tokens=[],this.mainToken=null,this.actions=[],this.tokens=t.tokenizers.map((t=>new NO))}getActions(t){let e=0,i=null,{parser:n}=t.p,{tokenizers:s}=n,r=n.stateSlot(t.state,3),o=t.curContext?t.curContext.hash:0,a=0;for(let n=0;n<s.length;n++){if(0==(1<<n&r))continue;let f=s[n],l=this.tokens[n];if((!i||f.fallback)&&((f.contextual||l.start!=t.pos||l.mask!=r||l.context!=o)&&(this.updateCachedToken(l,f,t),l.mask=r,l.context=o),l.lookAhead>l.end+25&&(a=Math.max(l.lookAhead,a)),0!=l.value)){let n=e;if(l.extended>-1&&(e=this.addActions(t,l.extended,l.end,e)),e=this.addActions(t,l.value,l.end,e),!f.extend&&(i=l,e>n))break}}for(;this.actions.length>e;)this.actions.pop();return a&&t.setLookAhead(a),i||t.pos!=this.stream.end||(i=new NO,i.value=t.p.parser.eofTerm,i.start=i.end=t.pos,e=this.addActions(t,i.value,i.end,e)),this.mainToken=i,this.actions}getMainToken(t){if(this.mainToken)return this.mainToken;let e=new NO,{pos:i,p:n}=t;return e.start=i,e.end=Math.min(i+1,n.stream.end),e.value=i==n.stream.end?n.parser.eofTerm:0,e}updateCachedToken(t,e,i){if(e.token(this.stream.reset(i.pos,t),i),t.value>-1){let{parser:e}=i.p;for(let n=0;n<e.specialized.length;n++)if(e.specialized[n]==t.value){let s=e.specializers[n](this.stream.read(t.start,t.end),i);if(s>=0&&i.p.parser.dialect.allows(s>>1)){0==(1&s)?t.value=s>>1:t.extended=s>>1;break}}}else t.value=0,t.end=Math.min(i.p.stream.end,i.pos+1)}putAction(t,e,i,n){for(let e=0;e<n;e+=3)if(this.actions[e]==t)return n;return this.actions[n++]=t,this.actions[n++]=e,this.actions[n++]=i,n}addActions(t,e,i,n){let{state:s}=t,{parser:r}=t.p,{data:o}=r;for(let t=0;t<2;t++)for(let a=r.stateSlot(s,t?2:1);;a+=3){if(65535==o[a]){if(1!=o[a+1]){0==n&&2==o[a+1]&&(n=this.putAction(du(o,a+2),e,i,n));break}a=du(o,a+2)}o[a]==e&&(n=this.putAction(du(o,a+1),e,i,n))}return n}}!function(t){t[t.Distance=5]="Distance",t[t.MaxRemainingPerStep=3]="MaxRemainingPerStep",t[t.MinBufferLengthPrune=500]="MinBufferLengthPrune",t[t.ForceReduceLimit=10]="ForceReduceLimit",t[t.CutDepth=15e3]="CutDepth",t[t.CutTo=9e3]="CutTo"}(ru||(ru={}));class lu{constructor(t,e,i,n){this.parser=t,this.input=e,this.ranges=n,this.recovering=0,this.nextStackID=9812,this.minStackPos=0,this.reused=[],this.stoppedAt=null,this.stream=new KO(e,n),this.tokens=new fu(t,this.stream),this.topTerm=t.top[1];let{from:s}=n[0];this.stacks=[zO.start(this,t.top[0],s)],this.fragments=i.length&&this.stream.end-s>4*t.bufferLength?new au(i,t.nodeSet):null}get parsedPos(){return this.minStackPos}advance(){let t,e,i=this.stacks,n=this.minStackPos,s=this.stacks=[];for(let r=0;r<i.length;r++){let o=i[r];for(;;){if(this.tokens.mainToken=null,o.pos>n)s.push(o);else{if(this.advanceStack(o,s,i))continue;{t||(t=[],e=[]),t.push(o);let i=this.tokens.getMainToken(o);e.push(i.value,i.end)}}break}}if(!s.length){let e=t&&function(t){let e=null;for(let i of t){let t=i.p.stoppedAt;(i.pos==i.p.stream.end||null!=t&&i.pos>t)&&i.p.parser.stateFlag(i.state,2)&&(!e||e.score<i.score)&&(e=i)}return e}(t);if(e)return this.stackToTree(e);if(this.parser.strict)throw iu&&t&&console.log("Stuck with token "+(this.tokens.mainToken?this.parser.getName(this.tokens.mainToken.value):"none")),new SyntaxError("No parse at "+n);this.recovering||(this.recovering=5)}if(this.recovering&&t){let i=null!=this.stoppedAt&&t[0].pos>this.stoppedAt?t[0]:this.runRecovery(t,e,s);if(i)return this.stackToTree(i.forceAll())}if(this.recovering){let t=1==this.recovering?1:3*this.recovering;if(s.length>t)for(s.sort(((t,e)=>e.score-t.score));s.length>t;)s.pop();s.some((t=>t.reducePos>n))&&this.recovering--}else if(s.length>1)t:for(let t=0;t<s.length-1;t++){let e=s[t];for(let i=t+1;i<s.length;i++){let n=s[i];if(e.sameState(n)||e.buffer.length>500&&n.buffer.length>500){if(!((e.score-n.score||e.buffer.length-n.buffer.length)>0)){s.splice(t--,1);continue t}s.splice(i--,1)}}}this.minStackPos=s[0].pos;for(let t=1;t<s.length;t++)s[t].pos<this.minStackPos&&(this.minStackPos=s[t].pos);return null}stopAt(t){if(null!=this.stoppedAt&&this.stoppedAt<t)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=t}advanceStack(t,e,i){let n=t.pos,{parser:s}=this,r=iu?this.stackID(t)+" -> ":"";if(null!=this.stoppedAt&&n>this.stoppedAt)return t.forceReduce()?t:null;if(this.fragments){let e=t.curContext&&t.curContext.tracker.strict,i=e?t.curContext.hash:0;for(let o=this.fragments.nodeAt(n);o;){let n=this.parser.nodeSet.types[o.type.id]==o.type?s.getGoto(t.state,o.type.id):-1;if(n>-1&&o.length&&(!e||(o.prop(Nr.contextHash)||0)==i))return t.useNode(o,n),iu&&console.log(r+this.stackID(t)+` (via reuse of ${s.getName(o.type.id)})`),!0;if(!(o instanceof io)||0==o.children.length||o.positions[0]>0)break;let a=o.children[0];if(!(a instanceof io&&0==o.positions[0]))break;o=a}}let o=s.stateSlot(t.state,4);if(o>0)return t.reduce(o),iu&&console.log(r+this.stackID(t)+` (via always-reduce ${s.getName(65535&o)})`),!0;if(t.stack.length>=15e3)for(;t.stack.length>9e3&&t.forceReduce(););let a=this.tokens.getActions(t);for(let o=0;o<a.length;){let f=a[o++],l=a[o++],h=a[o++],c=o==a.length||!i,O=c?t:t.split();if(O.apply(f,l,h),iu&&console.log(r+this.stackID(O)+` (via ${0==(65536&f)?"shift":`reduce of ${s.getName(65535&f)}`} for ${s.getName(l)} @ ${n}${O==t?"":", split"})`),c)return!0;O.pos>n?e.push(O):i.push(O)}return!1}advanceFully(t,e){let i=t.pos;for(;;){if(!this.advanceStack(t,null,null))return!1;if(t.pos>i)return hu(t,e),!0}}runRecovery(t,e,i){let n=null,s=!1;for(let r=0;r<t.length;r++){let o=t[r],a=e[r<<1],f=e[1+(r<<1)],l=iu?this.stackID(o)+" -> ":"";if(o.deadEnd){if(s)continue;if(s=!0,o.restart(),iu&&console.log(l+this.stackID(o)+" (restarted)"),this.advanceFully(o,i))continue}let h=o.split(),c=l;for(let t=0;h.forceReduce()&&t<10;t++){if(iu&&console.log(c+this.stackID(h)+" (via force-reduce)"),this.advanceFully(h,i))break;iu&&(c=this.stackID(h)+" -> ")}for(let t of o.recoverByInsert(a))iu&&console.log(l+this.stackID(t)+" (via recover-insert)"),this.advanceFully(t,i);this.stream.end>o.pos?(f==o.pos&&(f++,a=0),o.recoverByDelete(a,f),iu&&console.log(l+this.stackID(o)+` (via recover-delete ${this.parser.getName(a)})`),hu(o,i)):(!n||n.score<o.score)&&(n=o)}return n}stackToTree(t){return t.close(),io.build({buffer:EO.create(t),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:t.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm})}stackID(t){let e=(nu||(nu=new WeakMap)).get(t);return e||nu.set(t,e=String.fromCodePoint(this.nextStackID++)),e+t}}function hu(t,e){for(let i=0;i<e.length;i++){let n=e[i];if(n.pos==t.pos&&n.sameState(t))return void(e[i].score<t.score&&(e[i]=t))}e.push(t)}class cu{constructor(t,e,i){this.source=t,this.flags=e,this.disabled=i}allows(t){return!this.disabled||0==this.disabled[t]}}const Ou=t=>t;class uu extends Qo{constructor(t){if(super(),this.wrappers=[],13!=t.version)throw new RangeError(`Parser version (${t.version}) doesn't match runtime version (13)`);let e=t.nodeNames.split(" ");this.minRepeatTerm=e.length;for(let i=0;i<t.repeatNodeCount;i++)e.push("");let i=Object.keys(t.topRules).map((e=>t.topRules[e][1])),n=[];for(let t=0;t<e.length;t++)n.push([]);function s(t,e,i){n[t].push([e,e.deserialize(String(i))])}if(t.nodeProps)for(let e of t.nodeProps){let t=e[0];for(let i=1;i<e.length;){let n=e[i++];if(n>=0)s(n,t,e[i++]);else{let r=e[i+-n];for(let o=-n;o>0;o--)s(e[i++],t,r);i++}}}this.nodeSet=new Hr(e.map(((e,s)=>Kr.define({name:s>=this.minRepeatTerm?void 0:e,id:s,props:n[s],top:i.indexOf(s)>-1,error:0==s,skipped:t.skippedNodes&&t.skippedNodes.indexOf(s)>-1})))),this.strict=!1,this.bufferLength=Br;let r=eu(t.tokenData);if(this.context=t.context,this.specialized=new Uint16Array(t.specialized?t.specialized.length:0),this.specializers=[],t.specialized)for(let e=0;e<t.specialized.length;e++)this.specialized[e]=t.specialized[e].term,this.specializers[e]=t.specialized[e].get;this.states=eu(t.states,Uint32Array),this.data=eu(t.stateData),this.goto=eu(t.goto),this.maxTerm=t.maxTerm,this.tokenizers=t.tokenizers.map((t=>"number"==typeof t?new HO(r,t):t)),this.topRules=t.topRules,this.dialects=t.dialects||{},this.dynamicPrecedences=t.dynamicPrecedences||null,this.tokenPrecTable=t.tokenPrec,this.termNames=t.termNames||null,this.maxNode=this.nodeSet.types.length-1,this.dialect=this.parseDialect(),this.top=this.topRules[Object.keys(this.topRules)[0]]}createParse(t,e,i){let n=new lu(this,t,e,i);for(let s of this.wrappers)n=s(n,t,e,i);return n}getGoto(t,e,i=!1){let n=this.goto;if(e>=n[0])return-1;for(let s=n[e+1];;){let e=n[s++],r=1&e,o=n[s++];if(r&&i)return o;for(let i=s+(e>>1);s<i;s++)if(n[s]==t)return o;if(r)return-1}}hasAction(t,e){let i=this.data;for(let n=0;n<2;n++)for(let s,r=this.stateSlot(t,n?2:1);;r+=3){if(65535==(s=i[r])){if(1!=i[r+1]){if(2==i[r+1])return du(i,r+2);break}s=i[r=du(i,r+2)]}if(s==e||0==s)return du(i,r+1)}return 0}stateSlot(t,e){return this.states[6*t+e]}stateFlag(t,e){return(this.stateSlot(t,0)&e)>0}validAction(t,e){if(e==this.stateSlot(t,4))return!0;for(let i=this.stateSlot(t,1);;i+=3){if(65535==this.data[i]){if(1!=this.data[i+1])return!1;i=du(this.data,i+2)}if(e==du(this.data,i+1))return!0}}nextStates(t){let e=[];for(let i=this.stateSlot(t,1);;i+=3){if(65535==this.data[i]){if(1!=this.data[i+1])break;i=du(this.data,i+2)}if(0==(1&this.data[i+2])){let t=this.data[i+1];e.some(((e,i)=>1&i&&e==t))||e.push(this.data[i],t)}}return e}overrides(t,e){let i=gu(this.data,this.tokenPrecTable,e);return i<0||gu(this.data,this.tokenPrecTable,t)<i}configure(t){let e=Object.assign(Object.create(uu.prototype),this);if(t.props&&(e.nodeSet=this.nodeSet.extend(...t.props)),t.top){let i=this.topRules[t.top];if(!i)throw new RangeError(`Invalid top rule name ${t.top}`);e.top=i}return t.tokenizers&&(e.tokenizers=this.tokenizers.map((e=>{let i=t.tokenizers.find((t=>t.from==e));return i?i.to:e}))),t.contextTracker&&(e.context=t.contextTracker),t.dialect&&(e.dialect=this.parseDialect(t.dialect)),null!=t.strict&&(e.strict=t.strict),t.wrap&&(e.wrappers=e.wrappers.concat(t.wrap)),null!=t.bufferLength&&(e.bufferLength=t.bufferLength),e}getName(t){return this.termNames?this.termNames[t]:String(t<=this.maxNode&&this.nodeSet.types[t].name||t)}get eofTerm(){return this.maxNode+1}get topNode(){return this.nodeSet.types[this.top[1]]}dynamicPrecedence(t){let e=this.dynamicPrecedences;return null==e?0:e[t]||0}parseDialect(t){let e=Object.keys(this.dialects),i=e.map((()=>!1));if(t)for(let n of t.split(" ")){let t=e.indexOf(n);t>=0&&(i[t]=!0)}let n=null;for(let t=0;t<e.length;t++)if(!i[t])for(let i,s=this.dialects[e[t]];65535!=(i=this.data[s++]);)(n||(n=new Uint8Array(this.maxTerm+1)))[i]=1;return new cu(t,i,n)}static deserialize(t){return new uu(t)}}function du(t,e){return t[e]|t[e+1]<<16}function gu(t,e,i){for(let n,s=e;65535!=(n=t[s]);s++)if(n==i)return s-e;return-1}const pu=uu.deserialize({version:13,states:"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",stateData:"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",goto:"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",nodeNames:"\u26a0 JsonText True False Null Number String } { Object Property PropertyName ] [ Array",maxTerm:25,nodeProps:[[Nr.openedBy,7,"{",12,"["],[Nr.closedBy,8,"}",13,"]"]],skippedNodes:[0],repeatNodeCount:2,tokenData:"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~",tokenizers:[0],topRules:{JsonText:[0,1]},tokenPrec:0}),$u=wo.define({parser:pu.configure({props:[Go.add({Object:Eo({except:/^\s*\}/}),Array:Eo({except:/^\s*\]/})}),Ko.add({"Object Array":Ho}),Nc({String:wO.string,Number:wO.number,"True False":wO.bool,PropertyName:wO.propertyName,Null:wO.null,",":wO.separator,"[ ]":wO.squareBracket,"{ }":wO.brace})]}),languageData:{closeBrackets:{brackets:["[","{",'"']},indentOnInput:/^\s*[\}\]]$/}});function mu(){return new Co($u)}const Qu=280,Su=[9,10,11,12,13,32,133,160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288],bu=new class{constructor(t){this.start=t.start,this.shift=t.shift||Ou,this.reduce=t.reduce||Ou,this.reuse=t.reuse||Ou,this.hash=t.hash||(()=>0),this.strict=!1!==t.strict}}({start:!1,shift:(t,e)=>5==e||6==e||284==e?t:285==e,strict:!1}),vu=new tu(((t,e)=>{let{next:i}=t;(125==i||-1==i||e.context)&&e.canShift(282)&&t.acceptToken(282)}),{contextual:!0,fallback:!0}),xu=new tu(((t,e)=>{let i,{next:n}=t;Su.indexOf(n)>-1||(47!=n||47!=(i=t.peek(1))&&42!=i)&&125!=n&&59!=n&&-1!=n&&!e.context&&e.canShift(279)&&t.acceptToken(279)}),{contextual:!0}),wu=new tu(((t,e)=>{let{next:i}=t;if((43==i||45==i)&&(t.advance(),i==t.next)){t.advance();let i=!e.context&&e.canShift(1);t.acceptToken(i?1:2)}}),{contextual:!0}),yu=new tu((t=>{for(let e=!1,i=0;;i++){let{next:n}=t;if(n<0){i&&t.acceptToken(Qu);break}if(96==n){i?t.acceptToken(Qu):t.acceptToken(281,1);break}if(123==n&&e){1==i?t.acceptToken(3,1):t.acceptToken(Qu,-1);break}if(10==n&&i){t.advance(),t.acceptToken(Qu);break}92==n&&t.advance(),e=36==n,t.advance()}}));const Tu={__proto__:null,export:18,as:23,from:29,default:32,async:37,function:38,this:48,true:56,false:56,void:66,typeof:70,null:86,super:88,new:122,await:139,yield:141,delete:142,class:152,extends:154,public:197,private:197,protected:197,readonly:199,instanceof:220,in:222,const:224,import:256,keyof:307,unique:311,infer:317,is:351,abstract:371,implements:373,type:375,let:378,var:380,interface:387,enum:391,namespace:397,module:399,declare:403,global:407,for:428,of:437,while:440,with:444,do:448,if:452,else:454,switch:458,case:464,try:470,catch:472,finally:474,return:478,throw:482,break:486,continue:490,debugger:494},Pu={__proto__:null,async:109,get:111,set:113,public:161,private:161,protected:161,static:163,abstract:165,override:167,readonly:173,new:355},ku={__proto__:null,"<":129},Wu=uu.deserialize({version:13,states:"$1jO`QYOOO'QQ!LdO'#ChO'XOSO'#DVO)dQYO'#D]O)tQYO'#DhO){QYO'#DrO-xQYO'#DxOOQO'#E]'#E]O.]QWO'#E[O.bQWO'#E[OOQ!LS'#Ef'#EfO0aQ!LdO'#IrO2wQ!LdO'#IsO3eQWO'#EzO3jQpO'#FaOOQ!LS'#FS'#FSO3rO!bO'#FSO4QQWO'#FhO5_QWO'#FgOOQ!LS'#Is'#IsOOQ!LQ'#Ir'#IrOOQQ'#J['#J[O5dQWO'#HnO5iQ!LYO'#HoOOQQ'#If'#IfOOQQ'#Hp'#HpQ`QYOOO){QYO'#DjO5qQWO'#G[O5vQ#tO'#CmO6UQWO'#EZO6aQWO'#EgO6fQ#tO'#FRO7QQWO'#G[O7VQWO'#G`O7bQWO'#G`O7pQWO'#GcO7pQWO'#GdO7pQWO'#GfO5qQWO'#GiO8aQWO'#GlO9oQWO'#CdO:PQWO'#GyO:XQWO'#HPO:XQWO'#HRO`QYO'#HTO:XQWO'#HVO:XQWO'#HYO:^QWO'#H`O:cQ!LZO'#HdO){QYO'#HfO:nQ!LZO'#HhO:yQ!LZO'#HjO5iQ!LYO'#HlO){QYO'#DWOOOS'#Hr'#HrO;UOSO,59qOOQ!LS,59q,59qO=gQbO'#ChO=qQYO'#HsO>UQWO'#ItO@TQbO'#ItO'dQYO'#ItO@[QWO,59wO@rQ&jO'#DbOAkQWO'#E]OAxQWO'#JPOBTQWO'#JOOBTQWO'#JOOB]QWO,5:yOBbQWO'#I}OBiQWO'#DyO5vQ#tO'#EZOBwQWO'#EZOCSQ`O'#FROOQ!LS,5:S,5:SOC[QYO,5:SOEYQ!LdO,5:^OEvQWO,5:dOFaQ!LYO'#I|O7VQWO'#I{OFhQWO'#I{OFpQWO,5:xOFuQWO'#I{OGTQYO,5:vOITQWO'#EWOJ_QWO,5:vOKnQWO'#DlOKuQYO'#DqOLPQ&jO,5;PO){QYO,5;POOQQ'#Er'#ErOOQQ'#Et'#EtO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;ROOQQ'#Ex'#ExOLXQYO,5;cOOQ!LS,5;h,5;hOOQ!LS,5;i,5;iONXQWO,5;iOOQ!LS,5;j,5;jO){QYO'#H}ON^Q!LYO,5<TONxQWO,5;RO){QYO,5;fO! bQpO'#JTO! PQpO'#JTO! iQpO'#JTO! zQpO,5;qOOOO,5;{,5;{O!!YQYO'#FcOOOO'#H|'#H|O3rO!bO,5;nO!!aQpO'#FeOOQ!LS,5;n,5;nO!!}Q,UO'#CrOOQ!LS'#Cu'#CuO!#bQWO'#CuO!#gOSO'#CyO!$TQ#tO,5<QO!$[QWO,5<SO!%hQWO'#FrO!%uQWO'#FsO!%zQWO'#FwO!&|Q&jO'#F{O!'oQ,UO'#IoOOQ!LS'#Io'#IoO!'yQWO'#InO!(XQWO'#ImOOQ!LS'#Cs'#CsOOQ!LS'#C|'#C|O!(aQWO'#DOOJdQWO'#FjOJdQWO'#FlO!(fQWO'#FnO!(kQWO'#FoO!(pQWO'#FuOJdQWO'#FzO!(uQWO'#E^O!)^QWO,5<RO`QYO,5>YOOQQ'#Ii'#IiOOQQ,5>Z,5>ZOOQQ-E;n-E;nO!+YQ!LdO,5:UOOQ!LQ'#Cp'#CpO!+yQ#tO,5<vOOQO'#Cf'#CfO!,[QWO'#CqO!,dQ!LYO'#IjO5_QWO'#IjO:^QWO,59XO!,rQpO,59XO!,zQ#tO,59XO5vQ#tO,59XO!-VQWO,5:vO!-_QWO'#GxO!-mQWO'#J`O){QYO,5;kO!-uQ&jO,5;mO!-zQWO,5=cO!.PQWO,5=cO!.UQWO,5=cO5iQ!LYO,5=cO5qQWO,5<vO!.dQWO'#E_O!.xQ&jO'#E`OOQ!LQ'#I}'#I}O!/ZQ!LYO'#J]O5iQ!LYO,5<zO7pQWO,5=QOOQO'#Cr'#CrO!/fQpO,5<}O!/nQ#tO,5=OO!/yQWO,5=QO!0OQ`O,5=TO:^QWO'#GnO5qQWO'#GpO!0WQWO'#GpO5vQ#tO'#GsO!0]QWO'#GsOOQQ,5=W,5=WO!0bQWO'#GtO!0jQWO'#CmO!0oQWO,59OO!0yQWO,59OO!2{QYO,59OOOQQ,59O,59OO!3YQ!LYO,59OO){QYO,59OO!3eQYO'#G{OOQQ'#G|'#G|OOQQ'#G}'#G}O`QYO,5=eO!3uQWO,5=eO){QYO'#DxO`QYO,5=kO`QYO,5=mO!3zQWO,5=oO`QYO,5=qO!4PQWO,5=tO!4UQYO,5=zOOQQ,5>O,5>OO){QYO,5>OO5iQ!LYO,5>QOOQQ,5>S,5>SO!8VQWO,5>SOOQQ,5>U,5>UO!8VQWO,5>UOOQQ,5>W,5>WO!8[Q`O,59rOOOS-E;p-E;pOOQ!LS1G/]1G/]O!8aQbO,5>_O'dQYO,5>_OOQO,5>d,5>dO!8kQYO'#HsOOQO-E;q-E;qO!8xQWO,5?`O!9QQbO,5?`O!9XQWO,5?jOOQ!LS1G/c1G/cO!9aQpO'#DTOOQO'#Iv'#IvO){QYO'#IvO!:OQpO'#IvO!:mQpO'#DcO!;OQ&jO'#DcO!=ZQYO'#DcO!=bQWO'#IuO!=jQWO,59|O!=oQWO'#EaO!=}QWO'#JQO!>VQWO,5:zO!>mQ&jO'#DcO){QYO,5?kO!>wQWO'#HxOOQO-E;v-E;vO!9XQWO,5?jOOQ!LQ1G0e1G0eO!@TQ&jO'#D|OOQ!LS,5:e,5:eO){QYO,5:eOITQWO,5:eO!@[QWO,5:eO:^QWO,5:uO!,rQpO,5:uO!,zQ#tO,5:uO5vQ#tO,5:uOOQ!LS1G/n1G/nOOQ!LS1G0O1G0OOOQ!LQ'#EV'#EVO){QYO,5?hO!@gQ!LYO,5?hO!@xQ!LYO,5?hO!APQWO,5?gO!AXQWO'#HzO!APQWO,5?gOOQ!LQ1G0d1G0dO7VQWO,5?gOOQ!LS1G0b1G0bO!AsQ!LdO1G0bO!BdQ!LbO,5:rOOQ!LS'#Fq'#FqO!CQQ!LdO'#IoOGTQYO1G0bO!EPQ#tO'#IwO!EZQWO,5:WO!E`QbO'#IxO){QYO'#IxO!EjQWO,5:]OOQ!LS'#DT'#DTOOQ!LS1G0k1G0kO!EoQWO1G0kO!HQQ!LdO1G0mO!HXQ!LdO1G0mO!JlQ!LdO1G0mO!JsQ!LdO1G0mO!LzQ!LdO1G0mO!M_Q!LdO1G0mO#!OQ!LdO1G0mO#!VQ!LdO1G0mO#$jQ!LdO1G0mO#$qQ!LdO1G0mO#&fQ!LdO1G0mO#)`Q7^O'#ChO#+ZQ7^O1G0}O#-UQ7^O'#IsOOQ!LS1G1T1G1TO#-iQ!LdO,5>iOOQ!LQ-E;{-E;{O#.YQ!LdO1G0mOOQ!LS1G0m1G0mO#0[Q!LdO1G1QO#0{QpO,5;sO#1QQpO,5;tO#1VQpO'#F[O#1kQWO'#FZOOQO'#JU'#JUOOQO'#H{'#H{O#1pQpO1G1]OOQ!LS1G1]1G1]OOOO1G1f1G1fO#2OQ7^O'#IrO#2YQWO,5;}OLXQYO,5;}OOOO-E;z-E;zOOQ!LS1G1Y1G1YOOQ!LS,5<P,5<PO#2_QpO,5<POOQ!LS,59a,59aOITQWO'#C{OOOS'#Hq'#HqO#2dOSO,59eOOQ!LS,59e,59eO){QYO1G1lO!(kQWO'#IPO#2oQWO,5<eOOQ!LS,5<b,5<bOOQO'#GV'#GVOJdQWO,5<pOOQO'#GX'#GXOJdQWO,5<rOJdQWO,5<tOOQO1G1n1G1nO#2zQ`O'#CpO#3_Q`O,5<^O#3fQWO'#JXO5qQWO'#JXO#3tQWO,5<`OJdQWO,5<_O#3yQ`O'#FqO#4WQ`O'#JYO#4bQWO'#JYOITQWO'#JYO#4gQWO,5<cOOQ!LQ'#Dg'#DgO#4lQWO'#FtO#4wQpO'#F|O!&wQ&jO'#F|O!&wQ&jO'#GOO#5YQWO'#GPO!(pQWO'#GSOOQO'#IR'#IRO#5_Q&jO,5<gOOQ!LS,5<g,5<gO#5fQ&jO'#F|O#5tQ&jO'#F}O#5|Q&jO'#F}OOQ!LS,5<u,5<uOJdQWO,5?YOJdQWO,5?YO#6RQWO'#ISO#6^QWO,5?XOOQ!LS'#Ch'#ChO#7QQ#tO,59jOOQ!LS,59j,59jO#7sQ#tO,5<UO#8fQ#tO,5<WO#8pQWO,5<YOOQ!LS,5<Z,5<ZO#8uQWO,5<aO#8zQ#tO,5<fOGTQYO1G1mO#9[QWO1G1mOOQQ1G3t1G3tOOQ!LS1G/p1G/pONXQWO1G/pOOQQ1G2b1G2bOITQWO1G2bO){QYO1G2bOITQWO1G2bO#9aQWO1G2bO#9oQWO,59]O#:xQWO'#EWOOQ!LQ,5?U,5?UO#;SQ!LYO,5?UOOQQ1G.s1G.sO:^QWO1G.sO!,rQpO1G.sO!,zQ#tO1G.sO#;bQWO1G0bO#;gQWO'#ChO#;rQWO'#JaO#;zQWO,5=dO#<PQWO'#JaO#<UQWO'#JaO#<^QWO'#I[O#<lQWO,5?zO#<tQbO1G1VOOQ!LS1G1X1G1XO5qQWO1G2}O#<{QWO1G2}O#=QQWO1G2}O#=VQWO1G2}OOQQ1G2}1G2}O#=[Q#tO1G2bO7VQWO'#JOO7VQWO'#EaO7VQWO'#IUO#=mQ!LYO,5?wOOQQ1G2f1G2fO!/yQWO1G2lOITQWO1G2iO#=xQWO1G2iOOQQ1G2j1G2jOITQWO1G2jO#=}QWO1G2jO#>VQ&jO'#GhOOQQ1G2l1G2lO!&wQ&jO'#IWO!0OQ`O1G2oOOQQ1G2o1G2oOOQQ,5=Y,5=YO#>_Q#tO,5=[O5qQWO,5=[O#5YQWO,5=_O5_QWO,5=_O!,rQpO,5=_O!,zQ#tO,5=_O5vQ#tO,5=_O#>pQWO'#J_O#>{QWO,5=`OOQQ1G.j1G.jO#?QQ!LYO1G.jO#?]QWO1G.jO#?bQWO1G.jO5iQ!LYO1G.jO#?jQbO,5?|O#?tQWO,5?|O#@PQYO,5=gO#@WQWO,5=gO7VQWO,5?|OOQQ1G3P1G3PO`QYO1G3POOQQ1G3V1G3VOOQQ1G3X1G3XO:XQWO1G3ZO#@]QYO1G3]O#DWQYO'#H[OOQQ1G3`1G3`O:^QWO1G3fO#DeQWO1G3fO5iQ!LYO1G3jOOQQ1G3l1G3lOOQ!LQ'#Fx'#FxO5iQ!LYO1G3nO5iQ!LYO1G3pOOOS1G/^1G/^O#DmQ`O,5<TO#DuQbO1G3yOOQO1G4O1G4OO){QYO,5>_O#EPQWO1G4zO#EXQWO1G5UO#EaQWO,5?bOLXQYO,5:{O7VQWO,5:{O:^QWO,59}OLXQYO,59}O!,rQpO,59}O#EfQ7^O,59}OOQO,5:{,5:{O#EpQ&jO'#HtO#FWQWO,5?aOOQ!LS1G/h1G/hO#F`Q&jO'#HyO#FtQWO,5?lOOQ!LQ1G0f1G0fO!;OQ&jO,59}O#F|QbO1G5VO7VQWO,5>dOOQ!LQ'#ES'#ESO#GWQ!LrO'#ETO!?{Q&jO'#D}OOQO'#Hw'#HwO#GrQ&jO,5:hOOQ!LS,5:h,5:hO#GyQ&jO'#D}O#H[Q&jO'#D}O#HcQ&jO'#EYO#HfQ&jO'#ETO#HsQ&jO'#ETO!?{Q&jO'#ETO#IWQWO1G0PO#I]Q`O1G0POOQ!LS1G0P1G0PO){QYO1G0POITQWO1G0POOQ!LS1G0a1G0aO:^QWO1G0aO!,rQpO1G0aO!,zQ#tO1G0aO#IdQ!LdO1G5SO){QYO1G5SO#ItQ!LYO1G5SO#JVQWO1G5RO7VQWO,5>fOOQO,5>f,5>fO#J_QWO,5>fOOQO-E;x-E;xO#JVQWO1G5RO#JmQ!LdO,59jO#LlQ!LdO,5<UO#NnQ!LdO,5<WO$!pQ!LdO,5<fOOQ!LS7+%|7+%|O$$xQ!LdO7+%|O$%iQWO'#HuO$%sQWO,5?cOOQ!LS1G/r1G/rO$%{QYO'#HvO$&YQWO,5?dO$&bQbO,5?dOOQ!LS1G/w1G/wOOQ!LS7+&V7+&VO$&lQ7^O,5:^O){QYO7+&iO$&vQ7^O,5:UOOQO1G1_1G1_OOQO1G1`1G1`O$'TQMhO,5;vOLXQYO,5;uOOQO-E;y-E;yOOQ!LS7+&w7+&wOOOO7+'Q7+'QOOOO1G1i1G1iO$'`QWO1G1iOOQ!LS1G1k1G1kO$'eQ`O,59gOOOS-E;o-E;oOOQ!LS1G/P1G/PO$'lQ!LdO7+'WOOQ!LS,5>k,5>kO$(]QWO,5>kOOQ!LS1G2P1G2PP$(bQWO'#IPPOQ!LS-E;}-E;}O$)RQ#tO1G2[O$)tQ#tO1G2^O$*OQ#tO1G2`OOQ!LS1G1x1G1xO$*VQWO'#IOO$*eQWO,5?sO$*eQWO,5?sO$*mQWO,5?sO$*xQWO,5?sOOQO1G1z1G1zO$+WQ#tO1G1yO$+hQWO'#IQO$+xQWO,5?tOITQWO,5?tO$,QQ`O,5?tOOQ!LS1G1}1G1}O5iQ!LYO,5<hO5iQ!LYO,5<iO$,[QWO,5<iO#5TQWO,5<iO!,rQpO,5<hO$,aQWO,5<jO5iQ!LYO,5<kO$,[QWO,5<nOOQO-E<P-E<POOQ!LS1G2R1G2RO!&wQ&jO,5<hO$,iQWO,5<iO!&wQ&jO,5<jO!&wQ&jO,5<iO$,tQ#tO1G4tO$-OQ#tO1G4tOOQO,5>n,5>nOOQO-E<Q-E<QO!-uQ&jO,59lO){QYO,59lO$-]QWO1G1tOJdQWO1G1{O$-bQ!LdO7+'XOOQ!LS7+'X7+'XOGTQYO7+'XOOQ!LS7+%[7+%[O$.RQ`O'#JZO#IWQWO7+'|O$.]QWO7+'|O$.eQ`O7+'|OOQQ7+'|7+'|OITQWO7+'|O){QYO7+'|OITQWO7+'|OOQO1G.w1G.wO$.oQ!LbO'#ChO$/PQ!LbO,5<lO$/nQWO,5<lOOQ!LQ1G4p1G4pOOQQ7+$_7+$_O:^QWO7+$_O!,rQpO7+$_OGTQYO7+%|O$/sQWO'#IZO$0UQWO,5?{OOQO1G3O1G3OO5qQWO,5?{O$0UQWO,5?{O$0^QWO,5?{OOQO,5>v,5>vOOQO-E<Y-E<YOOQ!LS7+&q7+&qO$0cQWO7+(iO5iQ!LYO7+(iO5qQWO7+(iO$0hQWO7+(iO$0mQWO7+'|OOQ!LQ,5>p,5>pOOQ!LQ-E<S-E<SOOQQ7+(W7+(WO$0{Q!LbO7+(TOITQWO7+(TO$1VQ`O7+(UOOQQ7+(U7+(UOITQWO7+(UO$1^QWO'#J^O$1iQWO,5=SOOQO,5>r,5>rOOQO-E<U-E<UOOQQ7+(Z7+(ZO$2cQ&jO'#GqOOQQ1G2v1G2vOITQWO1G2vO){QYO1G2vOITQWO1G2vO$2jQWO1G2vO$2xQ#tO1G2vO5iQ!LYO1G2yO#5YQWO1G2yO5_QWO1G2yO!,rQpO1G2yO!,zQ#tO1G2yO$3ZQWO'#IYO$3fQWO,5?yO$3nQ&jO,5?yOOQ!LQ1G2z1G2zOOQQ7+$U7+$UO$3vQWO7+$UO5iQ!LYO7+$UO$3{QWO7+$UO){QYO1G5hO){QYO1G5iO$4QQYO1G3RO$4XQWO1G3RO$4^QYO1G3RO$4eQ!LYO1G5hOOQQ7+(k7+(kO5iQ!LYO7+(uO`QYO7+(wOOQQ'#Jd'#JdOOQQ'#I]'#I]O$4oQYO,5=vOOQQ,5=v,5=vO){QYO'#H]O$4|QWO'#H_OOQQ7+)Q7+)QO$5RQYO7+)QO7VQWO7+)QOOQQ7+)U7+)UOOQQ7+)Y7+)YOOQQ7+)[7+)[OOQO1G4|1G4|O$9PQ7^O1G0gO$9ZQWO1G0gOOQO1G/i1G/iO$9fQ7^O1G/iO:^QWO1G/iOLXQYO'#DcOOQO,5>`,5>`OOQO-E;r-E;rOOQO,5>e,5>eOOQO-E;w-E;wO!,rQpO1G/iO:^QWO,5:iOOQO,5:o,5:oO){QYO,5:oO$9pQ!LYO,5:oO$9{Q!LYO,5:oO!,rQpO,5:iOOQO-E;u-E;uOOQ!LS1G0S1G0SO!?{Q&jO,5:iO$:ZQ&jO,5:iO$:lQ!LrO,5:oO$;WQ&jO,5:iO!?{Q&jO,5:oOOQO,5:t,5:tO$;_Q&jO,5:oO$;lQ!LYO,5:oOOQ!LS7+%k7+%kO#IWQWO7+%kO#I]Q`O7+%kOOQ!LS7+%{7+%{O:^QWO7+%{O!,rQpO7+%{O$<QQ!LdO7+*nO){QYO7+*nOOQO1G4Q1G4QO7VQWO1G4QO$<bQWO7+*mO$<jQ!LdO1G2[O$>lQ!LdO1G2^O$@nQ!LdO1G1yO$BvQ#tO,5>aOOQO-E;s-E;sO$CQQbO,5>bO){QYO,5>bOOQO-E;t-E;tO$C[QWO1G5OO$CdQ7^O1G0bO$EkQ7^O1G0mO$ErQ7^O1G0mO$GsQ7^O1G0mO$GzQ7^O1G0mO$IoQ7^O1G0mO$JSQ7^O1G0mO$LaQ7^O1G0mO$LhQ7^O1G0mO$NiQ7^O1G0mO$NpQ7^O1G0mO%!eQ7^O1G0mO%!xQ!LdO<<JTO%#iQ7^O1G0mO%%XQ7^O'#IoO%'UQ7^O1G1QOLXQYO'#F^OOQO'#JV'#JVOOQO1G1b1G1bO%'cQWO1G1aO%'hQ7^O,5>iOOOO7+'T7+'TOOOS1G/R1G/ROOQ!LS1G4V1G4VOJdQWO7+'zO%'rQWO,5>jO5qQWO,5>jOOQO-E;|-E;|O%(QQWO1G5_O%(QQWO1G5_O%(YQWO1G5_O%(eQ`O,5>lO%(oQWO,5>lOITQWO,5>lOOQO-E<O-E<OO%(tQ`O1G5`O%)OQWO1G5`OOQO1G2S1G2SOOQO1G2T1G2TO5iQ!LYO1G2TO$,[QWO1G2TO5iQ!LYO1G2SO%)WQWO1G2UOITQWO1G2UOOQO1G2V1G2VO5iQ!LYO1G2YO!,rQpO1G2SO#5TQWO1G2TO%)]QWO1G2UO%)eQWO1G2TOJdQWO7+*`OOQ!LS1G/W1G/WO%)pQWO1G/WOOQ!LS7+'`7+'`O%)uQ#tO7+'gO%*VQ!LdO<<JsOOQ!LS<<Js<<JsOITQWO'#ITO%*vQWO,5?uOOQQ<<Kh<<KhOITQWO<<KhO#IWQWO<<KhO%+OQWO<<KhO%+WQ`O<<KhOITQWO1G2WOOQQ<<Gy<<GyO:^QWO<<GyO%+bQ!LdO<<IhOOQ!LS<<Ih<<IhOOQO,5>u,5>uO%,RQWO,5>uO%,WQWO,5>uOOQO-E<X-E<XO%,`QWO1G5gO%,`QWO1G5gO5qQWO1G5gO%,hQWO<<LTOOQQ<<LT<<LTO%,mQWO<<LTO5iQ!LYO<<LTO){QYO<<KhOITQWO<<KhOOQQ<<Ko<<KoO$0{Q!LbO<<KoOOQQ<<Kp<<KpO$1VQ`O<<KpO%,rQ&jO'#IVO%,}QWO,5?xOLXQYO,5?xOOQQ1G2n1G2nO#GWQ!LrO'#ETO!?{Q&jO'#GrOOQO'#IX'#IXO%-VQ&jO,5=]OOQQ,5=],5=]O%-^Q&jO'#ETO%-iQ&jO'#ETO%.QQ&jO'#ETO%.[Q&jO'#GrO%.mQWO7+(bO%.rQWO7+(bO%.zQ`O7+(bOOQQ7+(b7+(bOITQWO7+(bO){QYO7+(bOITQWO7+(bO%/UQWO7+(bOOQQ7+(e7+(eO5iQ!LYO7+(eO#5YQWO7+(eO5_QWO7+(eO!,rQpO7+(eO%/dQWO,5>tOOQO-E<W-E<WOOQO'#Gu'#GuO%/oQWO1G5eO5iQ!LYO<<GpOOQQ<<Gp<<GpO%/wQWO<<GpO%/|QWO7++SO%0RQWO7++TOOQQ7+(m7+(mO%0WQWO7+(mO%0]QYO7+(mO%0dQWO7+(mO){QYO7++SO){QYO7++TOOQQ<<La<<LaOOQQ<<Lc<<LcOOQQ-E<Z-E<ZOOQQ1G3b1G3bO%0iQWO,5=wOOQQ,5=y,5=yO:^QWO<<LlO%0nQWO<<LlOLXQYO7+&ROOQO7+%T7+%TO%0sQ7^O1G5VO:^QWO7+%TOOQO1G0T1G0TO%0}Q!LdO1G0ZOOQO1G0Z1G0ZO){QYO1G0ZO%1XQ!LYO1G0ZO:^QWO1G0TO!,rQpO1G0TO!?{Q&jO1G0TO%1dQ!LYO1G0ZO%1rQ&jO1G0TO%2TQ!LYO1G0ZO%2iQ!LrO1G0ZO%2sQ&jO1G0TO!?{Q&jO1G0ZOOQ!LS<<IV<<IVOOQ!LS<<Ig<<IgO:^QWO<<IgO%2zQ!LdO<<NYOOQO7+)l7+)lO%3[Q!LdO7+'gO%5dQbO1G3|O%5nQ7^O7+%|O%5{Q7^O,59jO%7xQ7^O,5<UO%9uQ7^O,5<WO%;rQ7^O,5<fO%=bQ7^O7+'WO%=oQ7^O7+'XO%=|QWO,5;xOOQO7+&{7+&{O%>RQ#tO<<KfOOQO1G4U1G4UO%>cQWO1G4UO%>nQWO1G4UO%>|QWO7+*yO%>|QWO7+*yOITQWO1G4WO%?UQ`O1G4WO%?`QWO7+*zOOQO7+'o7+'oO5iQ!LYO7+'oOOQO7+'n7+'nO$,[QWO7+'pO%?hQ`O7+'pOOQO7+'t7+'tO5iQ!LYO7+'nO$,[QWO7+'oO%?oQWO7+'pOITQWO7+'pO#5TQWO7+'oO%?tQ#tO<<MzOOQ!LS7+$r7+$rO%@OQ`O,5>oOOQO-E<R-E<RO#IWQWOANASOOQQANASANASOITQWOANASO%@YQ!LbO7+'rOOQQAN=eAN=eO5qQWO1G4aOOQO1G4a1G4aO%@gQWO1G4aO%@lQWO7++RO%@lQWO7++RO5iQ!LYOANAoO%@tQWOANAoOOQQANAoANAoO%@yQWOANASO%ARQ`OANASOOQQANAZANAZOOQQANA[ANA[O%A]QWO,5>qOOQO-E<T-E<TO%AhQ7^O1G5dO#5YQWO,5=^O5_QWO,5=^O!,rQpO,5=^OOQO-E<V-E<VOOQQ1G2w1G2wO$:lQ!LrO,5:oO!?{Q&jO,5=^O%ArQ&jO,5=^O%BTQ&jO,5:oOOQQ<<K|<<K|OITQWO<<K|O%.mQWO<<K|O%B_QWO<<K|O%BgQ`O<<K|O){QYO<<K|OITQWO<<K|OOQQ<<LP<<LPO5iQ!LYO<<LPO#5YQWO<<LPO5_QWO<<LPO%BqQ&jO1G4`O%ByQWO7++POOQQAN=[AN=[O5iQ!LYOAN=[OOQQ<<Nn<<NnOOQQ<<No<<NoOOQQ<<LX<<LXO%CRQWO<<LXO%CWQYO<<LXO%C_QWO<<NnO%CdQWO<<NoOOQQ1G3c1G3cOOQQANBWANBWO:^QWOANBWO%CiQ7^O<<ImOOQO<<Ho<<HoOOQO7+%u7+%uO%0}Q!LdO7+%uO){QYO7+%uOOQO7+%o7+%oO:^QWO7+%oO!,rQpO7+%oO%CsQ!LYO7+%uO!?{Q&jO7+%oO%DOQ!LYO7+%uO%D^Q&jO7+%oO%DoQ!LYO7+%uOOQ!LSAN?RAN?RO%ETQ!LdO<<KfO%G]Q7^O<<JTO%GjQ7^O1G1yO%IYQ7^O1G2[O%KVQ7^O1G2^O%MSQ7^O<<JsO%MaQ7^O<<IhOOQO1G1d1G1dOOQO7+)p7+)pO%MnQWO7+)pO%MyQWO<<NeO%NRQ`O7+)rOOQO<<KZ<<KZO5iQ!LYO<<K[O$,[QWO<<K[OOQO<<KY<<KYO5iQ!LYO<<KZO%N]Q`O<<K[O$,[QWO<<KZOOQQG26nG26nO#IWQWOG26nOOQO7+){7+){O5qQWO7+){O%NdQWO<<NmOOQQG27ZG27ZO5iQ!LYOG27ZOITQWOG26nOLXQYO1G4]O%NlQWO7++OO5iQ!LYO1G2xO#5YQWO1G2xO5_QWO1G2xO!,rQpO1G2xO!?{Q&jO1G2xO%2iQ!LrO1G0ZO%NtQ&jO1G2xO%.mQWOANAhOOQQANAhANAhOITQWOANAhO& VQWOANAhO& _Q`OANAhOOQQANAkANAkO5iQ!LYOANAkO#5YQWOANAkOOQO'#Gv'#GvOOQO7+)z7+)zOOQQG22vG22vOOQQANAsANAsO& iQWOANAsOOQQANDYANDYOOQQANDZANDZO& nQYOG27rOOQO<<Ia<<IaO%0}Q!LdO<<IaOOQO<<IZ<<IZO:^QWO<<IZO){QYO<<IaO!,rQpO<<IZO&%lQ!LYO<<IaO!?{Q&jO<<IZO&%wQ!LYO<<IaO&&VQ7^O7+'gOOQO<<M[<<M[OOQOAN@vAN@vO5iQ!LYOAN@vOOQOAN@uAN@uO$,[QWOAN@vO5iQ!LYOAN@uOOQQLD,YLD,YOOQO<<Mg<<MgOOQQLD,uLD,uO#IWQWOLD,YO&'uQ7^O7+)wOOQO7+(d7+(dO5iQ!LYO7+(dO#5YQWO7+(dO5_QWO7+(dO!,rQpO7+(dO!?{Q&jO7+(dOOQQG27SG27SO%.mQWOG27SOITQWOG27SOOQQG27VG27VO5iQ!LYOG27VOOQQG27_G27_O:^QWOLD-^OOQOAN>{AN>{OOQOAN>uAN>uO%0}Q!LdOAN>{O:^QWOAN>uO){QYOAN>{O!,rQpOAN>uO&(PQ!LYOAN>{O&([Q7^O<<KfOOQOG26bG26bO5iQ!LYOG26bOOQOG26aG26aOOQQ!$( t!$( tOOQO<<LO<<LOO5iQ!LYO<<LOO#5YQWO<<LOO5_QWO<<LOO!,rQpO<<LOOOQQLD,nLD,nO%.mQWOLD,nOOQQLD,qLD,qOOQQ!$(!x!$(!xOOQOG24gG24gOOQOG24aG24aO%0}Q!LdOG24gO:^QWOG24aO){QYOG24gOOQOLD+|LD+|OOQOANAjANAjO5iQ!LYOANAjO#5YQWOANAjO5_QWOANAjOOQQ!$(!Y!$(!YOOQOLD*RLD*ROOQOLD){LD){O%0}Q!LdOLD*ROOQOG27UG27UO5iQ!LYOG27UO#5YQWOG27UOOQO!$'Mm!$'MmOOQOLD,pLD,pO5iQ!LYOLD,pOOQO!$(![!$(![OLXQYO'#DrO&)zQbO'#IrOLXQYO'#DjO&*RQ!LdO'#ChO&*lQbO'#ChO&*|QYO,5:vOLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO'#H}O&,|QWO,5<TO&.`QWO,5;ROLXQYO,5;fO!(aQWO'#DOO!(aQWO'#DOOITQWO'#FjO&-UQWO'#FjOITQWO'#FlO&-UQWO'#FlOITQWO'#FzO&-UQWO'#FzOLXQYO,5?kO&*|QYO1G0bO&.gQ7^O'#ChOLXQYO1G1lOITQWO,5<pO&-UQWO,5<pOITQWO,5<rO&-UQWO,5<rOITQWO,5<_O&-UQWO,5<_O&*|QYO1G1mOLXQYO7+&iOITQWO1G1{O&-UQWO1G1{O&*|QYO7+'XO&*|QYO7+%|OITQWO7+'zO&-UQWO7+'zO&.qQWO'#E[O&.vQWO'#E[O&/OQWO'#EzO&/TQWO'#EgO&/YQWO'#JPO&/eQWO'#I}O&/pQWO,5:vO&/uQ#tO,5<QO&/|QWO'#FsO&0RQWO'#FsO&0WQWO,5<RO&0`QWO,5:vO&0hQ7^O1G0}O&0oQWO,5<aO&0tQWO,5<aO&0yQWO1G1mO&1OQWO1G0bO&1TQ#tO1G2`O&1[Q#tO1G2`O4QQWO'#FhO5_QWO'#FgOBwQWO'#EZOLXQYO,5;cO!(pQWO'#FuO!(pQWO'#FuOJdQWO,5<tOJdQWO,5<t",stateData:"&2X~O'WOS'XOSTOSUOS~OPTOQTOXyO]cO_hObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#dsO#tpO#x^O%PqO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO%axO%nzO%t{O%v|O%x}O%z!OO%}!PO&T!QO&X!RO&Z!SO&]!TO&_!UO&a!VO'ZPO'dQO'mYO'zaO~OP[XZ[X_[Xj[Xu[Xv[Xx[X!R[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'U[X'd[X'n[X'u[X'v[X~O!]$lX~P$zOR!WO'S!XO'T!ZO~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'Z![O'dQO'mYO'zaO~O!Q!`O!R!]O!O'hP!O'rP~P'dO!S!mO~P`OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'Z9YO'dQO'mYO'zaO~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'dQO'mYO'zaO~O!Q!rO#U!uO#V!rO'Z9ZO!c'oP~P+{O#W!vO~O!]!wO#W!vO~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!R#bO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'dQO'n#[O'u!}O'v#OO~O_'fX'U'fX!c'fX!O'fX!T'fX%Q'fX!]'fX~P.jO!{#eO#o#eOP'gXZ'gX_'gXj'gXu'gXv'gXx'gX!R'gX!a'gX!b'gX!d'gX!j'gX#['gX#]'gX#^'gX#_'gX#`'gX#a'gX#b'gX#e'gX#g'gX#i'gX#j'gX'd'gX'n'gX'u'gX'v'gX~O#c'gX'U'gX!O'gX!c'gXn'gX!T'gX%Q'gX!]'gX~P0zO!{#eO~O#z#fO$R#jO~O!T#kO#x^O$U#lO$W#nO~O]#qOh$OOj#rOk#qOl#qOq$POs$QOx#xO!T#yO!_$VO!d#vO#V$WO#t$TO$_$RO$a$SO$d$UO'Z#pO'd#sO'_'aP~O!d$XO~O!]$ZO~O_$[O'U$[O~O'Z$`O~O!d$XO'Z$`O'[$bO'`$cO~Oc$iO!d$XO'Z$`O~O#c#TO~O]$rOu$nO!T$kO!d$mO%R$qO'Z$`O'[$bO^(SP~O!n$sO~Ox$tO!T$uO'Z$`O~Ox$tO!T$uO%Z$yO'Z$`O~O'Z$zO~O#dsO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO~Ob%TOc%SO!n%QO%P%RO%c%PO~P7uOb%WOcmO!T%VO!nlO#dsO%PqO%TrO%UrO%XuO%ZvO%^wO%_wO%axO~O`%ZO!{%^O%R%XO'[$bO~P8tO!d%_O!g%cO~O!d%dO~O!TSO~O_$[O'R%lO'U$[O~O_$[O'R%oO'U$[O~O_$[O'R%qO'U$[O~OR!WO'S!XO'T%uO~OP[XZ[Xj[Xu[Xv[Xx[X!R[X!RdX!a[X!b[X!d[X!j[X!{[X!{dX#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'd[X'n[X'u[X'v[X~O!O[X!OdX~P;aO!Q%wO!O&gX!O&lX!R&gX!R&lX~P'dO!R%yO!O'hX~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!R%yO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'dQO'n#[O'u!}O'v#OO~O!O'hX~P>^O!O&OO~Ox&RO!W&]O!X&UO!Y&UO'[$bO~O]&SOk&SO!Q&VO'e&PO!S'iP!S'tP~P@aO!O'qX!R'qX!]'qX!c'qX'n'qX~O!{'qX#W#PX!S'qX~PAYO!{&^O!O'sX!R'sX~O!R&_O!O'rX~O!O&bO~O!{#eO~PAYOS&fO!T&cO!o&eO'Z$`O~Oc&kO!d$XO'Z$`O~Ou$nO!d$mO~O!S&lO~P`Ou!{Ov!{Ox!|O!b!yO!d!zO'dQOP!faZ!faj!fa!R!fa!a!fa!j!fa#[!fa#]!fa#^!fa#_!fa#`!fa#a!fa#b!fa#c!fa#e!fa#g!fa#i!fa#j!fa'n!fa'u!fa'v!fa~O_!fa'U!fa!O!fa!c!fan!fa!T!fa%Q!fa!]!fa~PCcO!c&mO~O!]!wO!{&oO'n&nO!R'pX_'pX'U'pX~O!c'pX~PE{O!R&sO!c'oX~O!c&uO~Ox$tO!T$uO#V&vO'Z$`O~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'Z9YO'dQO'mYO'zaO~O]#qOh$OOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_:oO!d#vO#V9rO#t$TO$_9nO$a9pO$d$UO'Z&zO'd#sO~O#W&|O~O]#qOh$OOj#rOk#qOl#qOq$POs$QOx#xO!T#yO!_$VO!d#vO#V$WO#t$TO$_$RO$a$SO$d$UO'Z&zO'd#sO~O'_'kP~PJdO!Q'QO!c'lP~P){O'e'SO'mYO~OP9VOQ9VO]cOb:mOc!jOhcOj9VOkcOlcOq9VOs9VOxRO{cO|cO}cO!T!bO!_9XO!dUO!g9VO!h9VO!i9VO!j9VO!k9VO!n!iO#t!lO#x^O'Z'bO'dQO'mYO'z:kO~O!d!zO~O!R#bO_$]a'U$]a!c$]a!O$]a!T$]a%Q$]a!]$]a~O#d'iO~PITO!]'kO!T'wX#w'wX#z'wX$R'wX~Ou'lO~P! POu'lO!T'wX#w'wX#z'wX$R'wX~O!T'nO#w'rO#z'mO$R'sO~O!Q'vO~PLXO#z#fO$R'yO~Ou$eXx$eX!b$eX'n$eX'u$eX'v$eX~OSfX!RfX!{fX'_fX'_$eX~P!!iOk'{O~OR'|O'S'}O'T(PO~Ou(ROx(SO'n#[O'u(UO'v(WO~O'_(QO~P!#rO'_(ZO~O]#qOh$OOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_:oO!d#vO#V9rO#t$TO$_9nO$a9pO$d$UO'd#sO~O!Q(_O'Z([O!c'{P~P!$aO#W(aO~O!Q(eO'Z(bO!O'|P~P!$aO_(nOj(sOx(kO!W(qO!X(jO!Y(jO!d(hO!x(rO$w(mO'[$bO'e(gO~O!S(pO~P!&XO!b!yOu'cXx'cX'n'cX'u'cX'v'cX!R'cX!{'cX~O'_'cX#m'cX~P!'TOS(vO!{(uO!R'bX'_'bX~O!R(wO'_'aX~O'Z(yO~O!d)OO~O'Z&zO~O!d(hO~Ox$tO!Q!rO!T$uO#U!uO#V!rO'Z$`O!c'oP~O!]!wO#W)SO~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'dQO'n#[O'u!}O'v#OO~O_!^a!R!^a'U!^a!O!^a!c!^an!^a!T!^a%Q!^a!]!^a~P!)fOS)[O!T&cO!o)ZO%Q)YO'`$cO~O'Z$zO'_'aP~O!])_O!T'^X_'^X'U'^X~O!d$XO'`$cO~O!d$XO'Z$`O'`$cO~O!]!wO#W&|O~O])jO%R)kO'Z)gO!S(TP~O!R)lO^(SX~O'e'SO~OZ)pO~O^)qO~O!T$kO'Z$`O'[$bO^(SP~Ox$tO!Q)vO!R&_O!T$uO'Z$`O!O'rP~O]&YOk&YO!Q)wO'e'SO!S'tP~O!R)xO_(PX'U(PX~O!{)|O'`$cO~OS*PO!T#yO'`$cO~O!T*RO~Ou*TO!TSO~O!n*YO~Oc*_O~O'Z(yO!S(RP~Oc$iO~O%RtO'Z$zO~P8tOZ*eO^*dO~OPTOQTO]cObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#x^O%PqO'dQO'mYO'zaO~O!T!bO#t!lO'Z9YO~P!1RO^*dO_$[O'U$[O~O_*iO#d*kO%T*kO%U*kO~P){O!d%_O~O%t*pO~O!T*rO~O&U*uO&V*tOP&SaQ&SaX&Sa]&Sa_&Sab&Sac&Sah&Saj&Sak&Sal&Saq&Sas&Sax&Sa{&Sa|&Sa}&Sa!T&Sa!_&Sa!d&Sa!g&Sa!h&Sa!i&Sa!j&Sa!k&Sa!n&Sa#d&Sa#t&Sa#x&Sa%P&Sa%R&Sa%T&Sa%U&Sa%X&Sa%Z&Sa%^&Sa%_&Sa%a&Sa%n&Sa%t&Sa%v&Sa%x&Sa%z&Sa%}&Sa&T&Sa&X&Sa&Z&Sa&]&Sa&_&Sa&a&Sa'Q&Sa'Z&Sa'd&Sa'm&Sa'z&Sa!S&Sa%{&Sa`&Sa&Q&Sa~O'Z*xO~On*{O~O!O&ga!R&ga~P!)fO!Q+PO!O&gX!R&gX~P){O!R%yO!O'ha~O!O'ha~P>^O!R&_O!O'ra~O!RwX!R!ZX!SwX!S!ZX!]wX!]!ZX!d!ZX!{wX'`!ZX~O!]+UO!{+TO!R#TX!R'jX!S#TX!S'jX!]'jX!d'jX'`'jX~O!]+WO!d$XO'`$cO!R!VX!S!VX~O]&QOk&QOx&RO'e(gO~OP9VOQ9VO]cOb:mOc!jOhcOj9VOkcOlcOq9VOs9VOxRO{cO|cO}cO!T!bO!_9XO!dUO!g9VO!h9VO!i9VO!j9VO!k9VO!n!iO#t!lO#x^O'dQO'mYO'z:kO~O'Z9vO~P!;^O!R+[O!S'iX~O!S+^O~O!]+UO!{+TO!R#TX!S#TX~O!R+_O!S'tX~O!S+aO~O]&QOk&QOx&RO'[$bO'e(gO~O!X+bO!Y+bO~P!>[Ox$tO!Q+dO!T$uO'Z$`O!O&lX!R&lX~O_+hO!W+kO!X+gO!Y+gO!r+oO!s+mO!t+nO!u+lO!x+pO'[$bO'e(gO'm+eO~O!S+jO~P!?]OS+uO!T&cO!o+tO~O!{+{O!R'pa!c'pa_'pa'U'pa~O!]!wO~P!@gO!R&sO!c'oa~Ox$tO!Q,OO!T$uO#U,QO#V,OO'Z$`O!R&nX!c&nX~O_#Oi!R#Oi'U#Oi!O#Oi!c#Oin#Oi!T#Oi%Q#Oi!]#Oi~P!)fO#W!za!R!za!c!za!{!za!T!za_!za'U!za!O!za~P!#rO#W'cXP'cXZ'cX_'cXj'cXv'cX!a'cX!d'cX!j'cX#['cX#]'cX#^'cX#_'cX#`'cX#a'cX#b'cX#c'cX#e'cX#g'cX#i'cX#j'cX'U'cX'd'cX!c'cX!O'cX!T'cXn'cX%Q'cX!]'cX~P!'TO!R,ZO'_'kX~P!#rO'_,]O~O!R,^O!c'lX~P!)fO!c,aO~O!O,bO~OP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'dQOZ#Zi_#Zij#Zi!R#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'u#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O#[#Zi~P!EtO#[#PO~P!EtOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO'dQOZ#Zi_#Zi!R#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'u#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~Oj#Zi~P!H`Oj#RO~P!H`OP#^Oj#ROu!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO'dQO_#Zi!R#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'u#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P!JzOZ#dO!a#TO#a#TO#b#TO#c#TO~P!JzOP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO'dQO_#Zi!R#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'u#Zi~P!MrO'u!}O~P!MrOP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO'dQO'u!}O_#Zi!R#Zi#i#Zi#j#Zi'U#Zi'n#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'v#Zi~P#!^O'v#OO~P#!^OP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO'dQO'u!}O'v#OO~O_#Zi!R#Zi#j#Zi'U#Zi'n#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P#$xOP[XZ[Xj[Xu[Xv[Xx[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'd[X'n[X'u[X'v[X!R[X!S[X~O#m[X~P#']OP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO#g9dO#i9fO#j9gO'dQO'n#[O'u!}O'v#OO~O#m,dO~P#)gOP'gXZ'gXj'gXu'gXv'gXx'gX!a'gX!b'gX!d'gX!j'gX#['gX#]'gX#^'gX#_'gX#`'gX#a'gX#b'gX#e'gX#g'gX#i'gX#j'gX'd'gX'n'gX'u'gX'v'gX!R'gX~O!{9kO#o9kO#c'gX#m'gX!S'gX~P#+bO_&qa!R&qa'U&qa!c&qan&qa!O&qa!T&qa%Q&qa!]&qa~P!)fOP#ZiZ#Zi_#Zij#Ziv#Zi!R#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'd#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P!#rO_#ni!R#ni'U#ni!O#ni!c#nin#ni!T#ni%Q#ni!]#ni~P!)fO#z,fO~O#z,gO~O!]'kO!{,hO!T$OX#w$OX#z$OX$R$OX~O!Q,iO~O!T'nO#w,kO#z'mO$R,lO~O!R9hO!S'fX~P#)gO!S,mO~O$R,oO~OR'|O'S'}O'T,rO~O],uOk,uO!O,vO~O!RdX!]dX!cdX!c$eX'ndX~P!!iO!c,|O~P!#rO!R,}O!]!wO'n&nO!c'{X~O!c-SO~O!O$eX!R$eX!]$lX~P!!iO!R-UO!O'|X~P!#rO!]-WO~O!O-YO~O!Q(_O'Z$`O!c'{P~Oj-^O!]!wO!d$XO'`$cO'n&nO~O!])_O~O!S-dO~P!&XO!X-eO!Y-eO'[$bO'e(gO~Ox-gO'e(gO~O!x-hO~O'Z$zO!R&vX'_&vX~O!R(wO'_'aa~Ou-mOv-mOx-nO'nra'ura'vra!Rra!{ra~O'_ra#mra~P#6fOu(ROx(SO'n$^a'u$^a'v$^a!R$^a!{$^a~O'_$^a#m$^a~P#7[Ou(ROx(SO'n$`a'u$`a'v$`a!R$`a!{$`a~O'_$`a#m$`a~P#7}O]-oO~O#W-pO~O'_$na!R$na#m$na!{$na~P!#rO#W-sO~OS-|O!T&cO!o-{O%Q-zO~O'_-}O~O]#qOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_:oO!d#vO#V9rO#t$TO$_9nO$a9pO$d$UO'd#sO~Oh.PO'Z.OO~P#9tO!])_O!T'^a_'^a'U'^a~O#W.VO~OZ[X!RdX!SdX~O!R.WO!S(TX~O!S.YO~OZ.ZO~O].]O'Z)gO~O!T$kO'Z$`O^'OX!R'OX~O!R)lO^(Sa~O!c.`O~P!)fO].bO~OZ.cO~O^.dO~OS-|O!T&cO!o-{O%Q-zO'`$cO~O!R)xO_(Pa'U(Pa~O!{.jO~OS.mO!T#yO~O'e'SO!S(QP~OS.wO!T.sO!o.vO%Q.uO'`$cO~OZ/RO!R/PO!S(RX~O!S/SO~O^/UO_$[O'U$[O~O]/VO~O]/WO'Z(yO~O#c/XO%r/YO~P0zO!{#eO#c/XO%r/YO~O_/ZO~P){O_/]O~O%{/aOP%yiQ%yiX%yi]%yi_%yib%yic%yih%yij%yik%yil%yiq%yis%yix%yi{%yi|%yi}%yi!T%yi!_%yi!d%yi!g%yi!h%yi!i%yi!j%yi!k%yi!n%yi#d%yi#t%yi#x%yi%P%yi%R%yi%T%yi%U%yi%X%yi%Z%yi%^%yi%_%yi%a%yi%n%yi%t%yi%v%yi%x%yi%z%yi%}%yi&T%yi&X%yi&Z%yi&]%yi&_%yi&a%yi'Q%yi'Z%yi'd%yi'm%yi'z%yi!S%yi`%yi&Q%yi~O`/gO!S/eO&Q/fO~P`O!TSO!d/jO~O!R#bOn$]a~O!O&gi!R&gi~P!)fO!R%yO!O'hi~O!R&_O!O'ri~O!O/nO~O!R!Va!S!Va~P#)gO]&QOk&QO!Q/tO'e(gO!R&hX!S&hX~P@aO!R+[O!S'ia~O]&YOk&YO!Q)wO'e'SO!R&mX!S&mX~O!R+_O!S'ta~O!O'si!R'si~P!)fO_$[O!]!wO!d$XO!j0OO!{/|O'U$[O'`$cO'n&nO~O!S0RO~P!?]O!X0SO!Y0SO'[$bO'e(gO'm+eO~O!W0TO~P#GyO!TSO!W0TO!u0VO!x0WO~P#GyO!W0TO!s0YO!t0YO!u0VO!x0WO~P#GyO!T&cO~O!T&cO~P!#rO!R'pi!c'pi_'pi'U'pi~P!)fO!{0cO!R'pi!c'pi_'pi'U'pi~O!R&sO!c'oi~Ox$tO!T$uO#V0eO'Z$`O~O#WraPraZra_rajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra'Ura'dra!cra!Ora!Tranra%Qra!]ra~P#6fO#W$^aP$^aZ$^a_$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a'U$^a'd$^a!c$^a!O$^a!T$^an$^a%Q$^a!]$^a~P#7[O#W$`aP$`aZ$`a_$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a'U$`a'd$`a!c$`a!O$`a!T$`an$`a%Q$`a!]$`a~P#7}O#W$naP$naZ$na_$naj$nav$na!R$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na'U$na'd$na!c$na!O$na!T$na!{$nan$na%Q$na!]$na~P!#rO_#Oq!R#Oq'U#Oq!O#Oq!c#Oqn#Oq!T#Oq%Q#Oq!]#Oq~P!)fO!R&iX'_&iX~PJdO!R,ZO'_'ka~O!Q0mO!R&jX!c&jX~P){O!R,^O!c'la~O!R,^O!c'la~P!)fO#m!fa!S!fa~PCcO#m!^a!R!^a!S!^a~P#)gO!T1QO#x^O$P1RO~O!S1VO~On1WO~P!#rO_$Yq!R$Yq'U$Yq!O$Yq!c$Yqn$Yq!T$Yq%Q$Yq!]$Yq~P!)fO!O1XO~O],uOk,uO~Ou(ROx(SO'v(WO'n$xi'u$xi!R$xi!{$xi~O'_$xi#m$xi~P$(jOu(ROx(SO'n$zi'u$zi'v$zi!R$zi!{$zi~O'_$zi#m$zi~P$)]O#m1YO~P!#rO!Q1[O'Z$`O!R&rX!c&rX~O!R,}O!c'{a~O!R,}O!]!wO!c'{a~O!R,}O!]!wO'n&nO!c'{a~O'_$gi!R$gi#m$gi!{$gi~P!#rO!Q1cO'Z(bO!O&tX!R&tX~P!$aO!R-UO!O'|a~O!R-UO!O'|a~P!#rO!]!wO~O!]!wO#c1mO~Oj1qO!]!wO'n&nO~O!R'bi'_'bi~P!#rO!{1tO!R'bi'_'bi~P!#rO!c1wO~O_$Zq!R$Zq'U$Zq!O$Zq!c$Zqn$Zq!T$Zq%Q$Zq!]$Zq~P!)fO!R1{O!T'}X~P!#rO!T&cO%Q2OO~O!T&cO%Q2OO~P!#rO!T$eX$u[X_$eX'U$eX~P!!iO$u2SOugXxgX!TgX'ngX'ugX'vgX_gX'UgX~O$u2SO~O]2YO%R2ZO'Z)gO!R&}X!S&}X~O!R.WO!S(Ta~OZ2_O~O^2`O~O]2cO~OS2eO!T&cO!o2dO%Q2OO~O_$[O'U$[O~P!#rO!T#yO~P!#rO!R2jO!{2lO!S(QX~O!S2mO~Ox(kO!W2vO!X2oO!Y2oO!r2uO!s2tO!t2tO!x2sO'[$bO'e(gO'm+eO~O!S2rO~P$1nOS2}O!T.sO!o2|O%Q2{O~OS2}O!T.sO!o2|O%Q2{O'`$cO~O'Z(yO!R&|X!S&|X~O!R/PO!S(Ra~O]3XO'e3WO~O]3YO~O^3[O~O!c3_O~P){O_3aO~O_3aO~P){O#c3cO%r3dO~PE{O`/gO!S3hO&Q/fO~P`O!]3jO~O&V3kOP&SqQ&SqX&Sq]&Sq_&Sqb&Sqc&Sqh&Sqj&Sqk&Sql&Sqq&Sqs&Sqx&Sq{&Sq|&Sq}&Sq!T&Sq!_&Sq!d&Sq!g&Sq!h&Sq!i&Sq!j&Sq!k&Sq!n&Sq#d&Sq#t&Sq#x&Sq%P&Sq%R&Sq%T&Sq%U&Sq%X&Sq%Z&Sq%^&Sq%_&Sq%a&Sq%n&Sq%t&Sq%v&Sq%x&Sq%z&Sq%}&Sq&T&Sq&X&Sq&Z&Sq&]&Sq&_&Sq&a&Sq'Q&Sq'Z&Sq'd&Sq'm&Sq'z&Sq!S&Sq%{&Sq`&Sq&Q&Sq~O!R#Ti!S#Ti~P#)gO!{3mO!R#Ti!S#Ti~O!R!Vi!S!Vi~P#)gO_$[O!{3tO'U$[O~O_$[O!]!wO!{3tO'U$[O~O!X3xO!Y3xO'[$bO'e(gO'm+eO~O_$[O!]!wO!d$XO!j3yO!{3tO'U$[O'`$cO'n&nO~O!W3zO~P$:ZO!W3zO!u3}O!x4OO~P$:ZO_$[O!]!wO!j3yO!{3tO'U$[O'n&nO~O!R'pq!c'pq_'pq'U'pq~P!)fO!R&sO!c'oq~O#W$xiP$xiZ$xi_$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi'U$xi'd$xi!c$xi!O$xi!T$xin$xi%Q$xi!]$xi~P$(jO#W$ziP$ziZ$zi_$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi'U$zi'd$zi!c$zi!O$zi!T$zin$zi%Q$zi!]$zi~P$)]O#W$giP$giZ$gi_$gij$giv$gi!R$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi'U$gi'd$gi!c$gi!O$gi!T$gi!{$gin$gi%Q$gi!]$gi~P!#rO!R&ia'_&ia~P!#rO!R&ja!c&ja~P!)fO!R,^O!c'li~O#m#Oi!R#Oi!S#Oi~P#)gOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'dQOZ#Zij#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'u#Zi'v#Zi!R#Zi!S#Zi~O#[#Zi~P$CqO#[9]O~P$CqOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O'dQOZ#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'u#Zi'v#Zi!R#Zi!S#Zi~Oj#Zi~P$EyOj9_O~P$EyOP#^Oj9_Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O'dQO#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'u#Zi'v#Zi!R#Zi!S#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P$HROZ9jO!a9aO#a9aO#b9aO#c9aO~P$HROP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO'dQO#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'v#Zi!R#Zi!S#Zi~O'u#Zi~P$JgO'u!}O~P$JgOP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO#g9dO'dQO'u!}O#i#Zi#j#Zi#m#Zi'n#Zi!R#Zi!S#Zi~O'v#Zi~P$LoO'v#OO~P$LoOP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO#g9dO#i9fO'dQO'u!}O'v#OO~O#j#Zi#m#Zi'n#Zi!R#Zi!S#Zi~P$NwO_#ky!R#ky'U#ky!O#ky!c#kyn#ky!T#ky%Q#ky!]#ky~P!)fOP#ZiZ#Zij#Ziv#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'd#Zi!R#Zi!S#Zi~P!#rO!b!yOP'cXZ'cXj'cXu'cXv'cXx'cX!a'cX!d'cX!j'cX#['cX#]'cX#^'cX#_'cX#`'cX#a'cX#b'cX#c'cX#e'cX#g'cX#i'cX#j'cX#m'cX'd'cX'n'cX'u'cX'v'cX!R'cX!S'cX~O#m#ni!R#ni!S#ni~P#)gO!S4`O~O!R&qa!S&qa~P#)gO!]!wO'n&nO!R&ra!c&ra~O!R,}O!c'{i~O!R,}O!]!wO!c'{i~O!O&ta!R&ta~P!#rO!]4gO~O!R-UO!O'|i~P!#rO!R-UO!O'|i~O!O4mO~O!]!wO#c4sO~Oj4tO!]!wO'n&nO~O!O4vO~O'_$iq!R$iq#m$iq!{$iq~P!#rO_$Zy!R$Zy'U$Zy!O$Zy!c$Zyn$Zy!T$Zy%Q$Zy!]$Zy~P!)fO!R1{O!T'}a~O!T&cO%Q4{O~O!T&cO%Q4{O~P!#rO_#Oy!R#Oy'U#Oy!O#Oy!c#Oyn#Oy!T#Oy%Q#Oy!]#Oy~P!)fOZ5OO~O]5QO'Z)gO~O!R.WO!S(Ti~O]5TO~O^5UO~O'e'SO!R&yX!S&yX~O!R2jO!S(Qa~O!S5cO~P$1nOx-gO'e(gO'm+eO~O!W5fO!X5eO!Y5eO!x0WO'[$bO'e(gO'm+eO~O!s5gO!t5gO~P%-iO!X5eO!Y5eO'[$bO'e(gO'm+eO~O!T.sO~O!T.sO%Q5iO~O!T.sO%Q5iO~P!#rOS5nO!T.sO!o5mO%Q5iO~OZ5sO!R&|a!S&|a~O!R/PO!S(Ri~O]5vO~O!c5wO~O!c5xO~O!c5yO~O!c5yO~P){O_5{O~O!]6OO~O!c6QO~O!R'si!S'si~P#)gO_$[O'U$[O~P!)fO_$[O!{6VO'U$[O~O_$[O!]!wO!{6VO'U$[O~O!X6[O!Y6[O'[$bO'e(gO'm+eO~O_$[O!]!wO!j6]O!{6VO'U$[O'n&nO~O!d$XO'`$cO~P%2TO!W6^O~P%1rO!R'py!c'py_'py'U'py~P!)fO#W$iqP$iqZ$iq_$iqj$iqv$iq!R$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq'U$iq'd$iq!c$iq!O$iq!T$iq!{$iqn$iq%Q$iq!]$iq~P!#rO!R&ji!c&ji~P!)fO#m#Oq!R#Oq!S#Oq~P#)gOu-mOv-mOx-nOPraZrajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra#mra'dra'nra'ura'vra!Rra!Sra~Ou(ROx(SOP$^aZ$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a#m$^a'd$^a'n$^a'u$^a'v$^a!R$^a!S$^a~Ou(ROx(SOP$`aZ$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a#m$`a'd$`a'n$`a'u$`a'v$`a!R$`a!S$`a~OP$naZ$naj$nav$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na#m$na'd$na!R$na!S$na~P!#rO#m$Yq!R$Yq!S$Yq~P#)gO#m$Zq!R$Zq!S$Zq~P#)gO!S6hO~O'_$|y!R$|y#m$|y!{$|y~P!#rO!]!wO!R&ri!c&ri~O!]!wO'n&nO!R&ri!c&ri~O!R,}O!c'{q~O!O&ti!R&ti~P!#rO!R-UO!O'|q~O!O6oO~P!#rO!O6oO~O!R'by'_'by~P!#rO!R&wa!T&wa~P!#rO!T$tq_$tq'U$tq~P!#rOZ6wO~O!R.WO!S(Tq~O]6zO~O!T&cO%Q6{O~O!T&cO%Q6{O~P!#rO!{6|O!R&ya!S&ya~O!R2jO!S(Qi~P#)gO!X7SO!Y7SO'[$bO'e(gO'm+eO~O!W7UO!x4OO~P%ArO!T.sO%Q7XO~O!T.sO%Q7XO~P!#rO]7`O'e7_O~O!R/PO!S(Rq~O!c7bO~O!c7bO~P){O!c7dO~O!c7eO~O!R#Ty!S#Ty~P#)gO_$[O!{7kO'U$[O~O_$[O!]!wO!{7kO'U$[O~O!X7nO!Y7nO'[$bO'e(gO'm+eO~O_$[O!]!wO!j7oO!{7kO'U$[O'n&nO~O#W$|yP$|yZ$|y_$|yj$|yv$|y!R$|y!a$|y!b$|y!d$|y!j$|y#[$|y#]$|y#^$|y#_$|y#`$|y#a$|y#b$|y#c$|y#e$|y#g$|y#i$|y#j$|y'U$|y'd$|y!c$|y!O$|y!T$|y!{$|yn$|y%Q$|y!]$|y~P!#rO#m#ky!R#ky!S#ky~P#)gOP$giZ$gij$giv$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi#m$gi'd$gi!R$gi!S$gi~P!#rOu(ROx(SO'v(WOP$xiZ$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi#m$xi'd$xi'n$xi'u$xi!R$xi!S$xi~Ou(ROx(SOP$ziZ$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi#m$zi'd$zi'n$zi'u$zi'v$zi!R$zi!S$zi~O#m$Zy!R$Zy!S$Zy~P#)gO#m#Oy!R#Oy!S#Oy~P#)gO!]!wO!R&rq!c&rq~O!R,}O!c'{y~O!O&tq!R&tq~P!#rO!O7uO~P!#rO!R.WO!S(Ty~O!R2jO!S(Qq~O!X8RO!Y8RO'[$bO'e(gO'm+eO~O!T.sO%Q8UO~O!T.sO%Q8UO~P!#rO!c8XO~O&V8YOP&S!ZQ&S!ZX&S!Z]&S!Z_&S!Zb&S!Zc&S!Zh&S!Zj&S!Zk&S!Zl&S!Zq&S!Zs&S!Zx&S!Z{&S!Z|&S!Z}&S!Z!T&S!Z!_&S!Z!d&S!Z!g&S!Z!h&S!Z!i&S!Z!j&S!Z!k&S!Z!n&S!Z#d&S!Z#t&S!Z#x&S!Z%P&S!Z%R&S!Z%T&S!Z%U&S!Z%X&S!Z%Z&S!Z%^&S!Z%_&S!Z%a&S!Z%n&S!Z%t&S!Z%v&S!Z%x&S!Z%z&S!Z%}&S!Z&T&S!Z&X&S!Z&Z&S!Z&]&S!Z&_&S!Z&a&S!Z'Q&S!Z'Z&S!Z'd&S!Z'm&S!Z'z&S!Z!S&S!Z%{&S!Z`&S!Z&Q&S!Z~O_$[O!{8_O'U$[O~O_$[O!]!wO!{8_O'U$[O~OP$iqZ$iqj$iqv$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq#m$iq'd$iq!R$iq!S$iq~P!#rO!R&yq!S&yq~P#)gO_$[O!{8tO'U$[O~OP$|yZ$|yj$|yv$|y!a$|y!b$|y!d$|y!j$|y#[$|y#]$|y#^$|y#_$|y#`$|y#a$|y#b$|y#c$|y#e$|y#g$|y#i$|y#j$|y#m$|y'd$|y!R$|y!S$|y~P!#rOn'fX~P.jOn[X!O[X!c[X%r[X!T[X%Q[X!][X~P$zO!]dX!c[X!cdX'ndX~P;aOP9VOQ9VO]cOb:mOc!jOhcOj9VOkcOlcOq9VOs9VOxRO{cO|cO}cO!TSO!_9XO!dUO!g9VO!h9VO!i9VO!j9VO!k9VO!n!iO#t!lO#x^O'Z'bO'dQO'mYO'z:kO~O!R9hO!S$]a~O]#qOh$OOj#rOk#qOl#qOq$POs9mOx#xO!T#yO!_:pO!d#vO#V9sO#t$TO$_9oO$a9qO$d$UO'Z&zO'd#sO~O#d'iO~P&-UO!S[X!SdX~P;aO#W9[O~O!]!wO#W9[O~O!{9kO~O#c9aO~O!{9tO!R'sX!S'sX~O!{9kO!R'qX!S'qX~O#W9uO~O'_9wO~P!#rO#W9|O~O#W9}O~O!]!wO#W:OO~O!]!wO#W9uO~O#m:PO~P#)gO#W:QO~O#W:RO~O#W:SO~O#W:TO~O#m:UO~P!#rO#m:VO~P!#rO#x~!b!r!t!u#U#V'z$_$a$d$u%P%Q%R%X%Z%^%_%a%c~UT#x'z#]}'W'X#z'W'Z'e~",goto:"#Ed(XPPPPPPPP(YP(jP*^PPPP-uPP.[3n5b5uP5uPPP5uP7c5uP5uP7gPP7lP8Q<cPPPP<gPPPP<g?XPPP?_AjP<gPDTPPPPE{<gPPPPPGt<gPPJuKrPPPPKvM`PMhNiPKr<g<g!#p!&k!+^!+^!.mPPP!.t!1j<gPPPPPPPPPP!4aP!5rPP<g!7PP<gP<g<g<g<gP<g!9dPP!<]P!?Q!?Y!?^!?^P!<YP!?b!?bP!BVP!BZ<g<g!Ba!ET5uP5uP5u5uP!FW5u5u!HO5u!JQ5u!Kr5u5u!L`!NY!NY!N^!NY!NfP!NYP5u# b5u#!l5u5u-uPPP##yPP#$c#$cP#$cP#$x#$cPP#%OP#$uP#$u#%bMd#$u#&P#&V#&Y(Y#&](YP#&d#&d#&dP(YP(YP(YP(YPP(YP#&j#&mP#&m(YPPP(YP(YP(YP(YP(YP(Y(Y#&q#&{#'R#'X#'g#'m#'s#'}#(T#(d#(j#(x#)O#)U#)d#)y#+]#+k#+q#+w#+}#,T#,_#,e#,k#,u#-X#-_PPPPPPPP#-ePP#.X#2VPP#3m#3t#3|PP#8Y#:m#@i#@l#@o#@z#@}PP#AQ#AU#As#Bj#Bn#CSPP#CW#C^#CbP#Ce#Ci#Cl#D[#Dr#Dw#Dz#D}#ET#EW#E[#E`mhOSj}!n$Z%b%e%f%h*m*r/a/dQ$hmQ$opQ%YyS&U!b+[Q&j!jS(j#y(oQ)e$iQ)r$qQ*^%SQ+b&]S+g&c+iQ+y&kQ-e(qQ/O*_Y0S+k+l+m+n+oS2o.s2qU3x0T0V0YU5e2t2u2vS6[3z3}S7S5f5gQ7n6^R8R7U$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8t!j'd#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ(z$QQ)j$kQ*`%VQ*g%_Q,T9lQ.Q)_Q.])kQ/W*eQ2Y.WQ3U/PQ4X9mR5Q2ZpeOSjy}!n$Z%X%b%e%f%h*m*r/a/dR*b%Z&WVOSTjkn}!S!W!k!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%y&R&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:m:n[!cRU!]!`%w&VQ$alQ$gmS$lp$qv$vrs!r!u$X$t&_&s&v)v)w)x*k+U+d,O,Q/j0eQ%OwQ&g!iQ&i!jS(^#v(hS)d$h$iQ)h$kQ)u$sQ*X%QQ*]%SS+x&j&kQ-R(_Q.U)eQ.[)kQ.^)lQ.a)pQ.y*YS.}*^*_Q0a+yQ1Z,}Q2X.WQ2].ZQ2b.cQ3T/OQ4d1[Q5P2ZQ5S2_Q6v5OR7x6w!Y$em!j$g$h$i&T&i&j&k(i)d)e+X+f+x+y-_.U/y0P0U0a1p3w3|6Y7l8`Q)]$aQ)}${Q*Q$|Q*[%SQ.e)uQ.x*XU.|*]*^*_Q3O.yS3S.}/OQ5`2nQ5r3TS7Q5a5dS8P7R7TQ8j8QR8y8kW#|a$c(w:kS${t%XQ$|uQ$}vR){$y$V#{a!w!y#d#v#x$R$S$W&f'|(V(X(Y(a(e(u(v)Y)[)_)|*P+u,Z-U-W-p-z-|.j.m.u.w1Y1c1m1t1{2O2S2e2{2}4g4s4{5i5n6{7X8U9j9n9o9p9q9r9s9x9y9z9{9|9}:Q:R:U:V:k:q:rT'}#s(OV({$Q9l9mU&Y!b$u+_Q'T!{Q)o$nQ.n*RQ1u-mR5[2j&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:n$]#aZ!_!o$_%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n*}+Y+c+z,Y,`,c,e,s-q/o/r0b0l0p0q0r0s0t0u0v0w0x0y0z0{0|1P1U1y2V3o3r4S4V4W4]4^5^6R6U6b6f6g7h7{8]8r8}9W:dT!XQ!Y&_cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ&W!bR/u+[Y&Q!b&U&]+[+bS(i#y(oS+f&c+iS-_(j(qQ-`(kQ-f(rQ.p*TU0P+g+k+lU0U+m+n+oS0Z+p2sQ1p-eQ1r-gQ1s-hS2n.s2qU3w0S0T0VQ3{0WQ3|0YS5a2o2vS5d2t2uU6Y3x3z3}Q6_4OS7R5e5fQ7T5gS7l6[6^S8Q7S7UQ8`7nR8k8RlhOSj}!n$Z%b%e%f%h*m*r/a/dQ%j!QS&w!v9[Q)b$fQ*V%OQ*W%PQ+v&hS,X&|9uS-r)S:OQ.S)cQ.r*UQ/h*tQ/i*uQ/q+VQ0X+mQ0_+wS1z-s:SQ2T.TS2W.V:TQ3n/sQ3q/zQ4Q0`Q4}2UQ6P3kQ6S3pQ6W3vQ6`4RQ7f6QQ7i6XQ8[7jQ8o8YQ8q8^R8|8s$W#`Z!_!o%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n*}+Y+c+z,Y,`,c,s-q/o/r0b0l0p0q0r0s0t0u0v0w0x0y0z0{0|1P1U1y2V3o3r4S4V4W4]4^5^6R6U6b6f6g7h7{8]8r8}9W:dU(t#z&{1OT)W$_,e$W#_Z!_!o%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n*}+Y+c+z,Y,`,c,s-q/o/r0b0l0p0q0r0s0t0u0v0w0x0y0z0{0|1P1U1y2V3o3r4S4V4W4]4^5^6R6U6b6f6g7h7{8]8r8}9W:dQ'e#`S)V$_,eR-t)W&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ%e{Q%f|Q%h!OQ%i!PR/`*pQ&d!iQ)X$aQ+s&gS-y)])uS0[+q+rW1}-v-w-x.eS4P0]0^U4z2P2Q2RU6t4y5W5XQ7w6uR8f7zT+h&c+iS+f&c+iU0P+g+k+lU0U+m+n+oS0Z+p2sS2n.s2qU3w0S0T0VQ3{0WQ3|0YS5a2o2vS5d2t2uU6Y3x3z3}Q6_4OS7R5e5fQ7T5gS7l6[6^S8Q7S7UQ8`7nR8k8RS+h&c+iT2p.s2qS&q!q/^Q-Q(^Q-](iS0O+f2nQ1`-RS1j-^-fU3y0U0Z5dQ4c1ZS4q1q1sU6]3{3|7TQ6j4dQ6s4tR7o6_Q!xXS&p!q/^Q)T$YQ)`$dQ)f$jQ+|&qQ-P(^Q-[(iQ-a(lQ.R)aQ.z*ZS/}+f2nS1_-Q-RS1i-]-fQ1l-`Q1o-bQ3Q.{W3u0O0U0Z5dQ4b1ZQ4f1`S4k1j1sQ4r1rQ5p3RW6Z3y3{3|7TS6i4c4dQ6n4mQ6q4qQ7O5_Q7]5qS7m6]6_Q7q6jQ7s6oQ7v6sQ7}7PQ8W7^Q8a7oQ8d7uQ8h8OQ8w8iQ9P8xQ9T9QQ:^:XQ:g:bR:h:c$rWORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tS!xn!k!j:W#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nR:^:m$rXORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tQ$Yb!Y$dm!j$g$h$i&T&i&j&k(i)d)e+X+f+x+y-_.U/y0P0U0a1p3w3|6Y7l8`S$jn!kQ)a$eQ*Z%SW.{*[*]*^*_U3R.|.}/OQ5_2nS5q3S3TU7P5`5a5dQ7^5rU8O7Q7R7TS8i8P8QS8x8j8kQ9Q8y!j:X#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ:b:lR:c:m$f]OSTjk}!S!W!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tY!hRU!]!`%wv$vrs!r!u$X$t&_&s&v)v)w)x*k+U+d,O,Q/j0eQ*h%_!h:Y#]#k'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nR:]&VS&Z!b$uR/w+_$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8t!j'd#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nR*g%_$roORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tQ'T!{!k:Z#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:n!h#VZ!_$_%v%|&x'P'^'_'`'a'f'j)n*}+c+z,Y,`,s-q0b0l0|1y2V3r4S4V6U7h8]8r8}9W!R9c'c't+Y,e/o/r0p0x0y0z0{1P1U3o4W4]4^5^6R6b6f6g7{:d!d#XZ!_$_%v%|&x'P'`'a'f'j)n*}+c+z,Y,`,s-q0b0l0|1y2V3r4S4V6U7h8]8r8}9W}9e'c't+Y,e/o/r0p0z0{1P1U3o4W4]4^5^6R6b6f6g7{:d!`#]Z!_$_%v%|&x'P'f'j)n*}+c+z,Y,`,s-q0b0l0|1y2V3r4S4V6U7h8]8r8}9Wl(Y#t&})R,{-T-i-j0j1x4a4u:_:i:jx:n'c't+Y,e/o/r0p1P1U3o4W4]4^5^6R6b6f6g7{:d!`:q&y'h(](c+r,W,p-X-u-x.i.k0^0i1a1e2R2g2i2y4U4h4n4w4|5X5l6a6l6r7ZZ:r0}4[6c7p8b&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nS#l`#mR1R,h&e_ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,h,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nS#g^#nT'm#i'qT#h^#nT'o#i'q&e`ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,h,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nT#l`#mQ#o`R'x#m$rbORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8t!k:l#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:n#RdOSUj}!S!W!n!|#k$Z%Z%^%_%b%d%e%f%h%l&R&e'v)Z*i*m*r+t,i-n-{.v/X/Y/Z/]/a/d/f1Q2d2|3a3c3d5m5{t#za!y$R$S$W(V(X(Y(a(u(v,Z-p1Y1t:k:q:r!|&{!w#d#v#x&f'|(e)Y)[)_)|*P+u-U-W-z-|.j.m.u.w1c1m1{2O2S2e2{2}4g4s4{5i5n6{7X8U9n9p9r9x9z9|:Q:UQ)P$UQ,t(Rc1O9j9o9q9s9y9{9}:R:Vt#wa!y$R$S$W(V(X(Y(a(u(v,Z-p1Y1t:k:q:rS(l#y(oQ)Q$VQ-b(m!|:`!w#d#v#x&f'|(e)Y)[)_)|*P+u-U-W-z-|.j.m.u.w1c1m1{2O2S2e2{2}4g4s4{5i5n6{7X8U9n9p9r9x9z9|:Q:Ub:a9j9o9q9s9y9{9}:R:VQ:e:oR:f:pt#za!y$R$S$W(V(X(Y(a(u(v,Z-p1Y1t:k:q:r!|&{!w#d#v#x&f'|(e)Y)[)_)|*P+u-U-W-z-|.j.m.u.w1c1m1{2O2S2e2{2}4g4s4{5i5n6{7X8U9n9p9r9x9z9|:Q:Uc1O9j9o9q9s9y9{9}:R:VlfOSj}!n$Z%b%e%f%h*m*r/a/dQ(d#xQ*y%oQ*z%qR1b-U$U#{a!w!y#d#v#x$R$S$W&f'|(V(X(Y(a(e(u(v)Y)[)_)|*P+u,Z-U-W-p-z-|.j.m.u.w1Y1c1m1t1{2O2S2e2{2}4g4s4{5i5n6{7X8U9j9n9o9p9q9r9s9x9y9z9{9|9}:Q:R:U:V:k:q:rQ*O$|Q.l*QQ2h.kR5Z2iT(n#y(oS(n#y(oT2p.s2qQ)`$dQ-a(lQ.R)aQ.z*ZQ3Q.{Q5p3RQ7O5_Q7]5qQ7}7PQ8W7^Q8h8OQ8w8iQ9P8xR9T9Ql(V#t&})R,{-T-i-j0j1x4a4u:_:i:j!`9x&y'h(](c+r,W,p-X-u-x.i.k0^0i1a1e2R2g2i2y4U4h4n4w4|5X5l6a6l6r7ZZ9y0}4[6c7p8bn(X#t&})R,y,{-T-i-j0j1x4a4u:_:i:j!b9z&y'h(](c+r,W,p-X-u-x.i.k0^0g0i1a1e2R2g2i2y4U4h4n4w4|5X5l6a6l6r7Z]9{0}4[6c6d7p8bpeOSjy}!n$Z%X%b%e%f%h*m*r/a/dQ%UxR*i%_peOSjy}!n$Z%X%b%e%f%h*m*r/a/dR%UxQ*S$}R.h){qeOSjy}!n$Z%X%b%e%f%h*m*r/a/dQ.t*XS2z.x.yW5h2w2x2y3OU7W5j5k5lU8S7V7Y7ZQ8l8TR8z8mQ%]yR*c%XR3X/RR7`5sS$lp$qR.^)lQ%bzR*m%cR*s%iT/b*r/dQjOQ!nST$^j!nQ(O#sR,q(OQ!YQR%t!YQ!^RU%z!^%{+QQ%{!_R+Q%|Q+]&WR/v+]Q,[&}R0k,[Q,_'PS0n,_0oR0o,`Q+i&cR0Q+iS!eR$tU&`!e&a+RQ&a!fR+R%}Q+`&ZR/x+`Q&t!sQ+}&rU,R&t+}0fR0f,SQ'q#iR,j'qQ#m`R'w#mQ#cZU'g#c*|9iQ*|9WR9i'tQ-O(^W1]-O1^4e6kU1^-P-Q-RS4e1_1`R6k4f#q(T#t&y&}'h(](c(|(})R+r,U,V,W,p,y,z,{-T-X-i-j-u-x.i.k0^0g0h0i0j0}1a1e1x2R2g2i2y4U4Y4Z4[4a4h4n4u4w4|5X5l6a6c6d6e6l6r7Z7p8b:_:i:jQ-V(cU1d-V1f4iQ1f-XR4i1eQ(o#yR-c(oQ(x#}R-l(xQ1|-uR4x1|Q)y$wR.g)yQ2k.nS5]2k6}R6}5^Q*U%OR.q*UQ2q.sR5b2qQ/Q*`S3V/Q5tR5t3XQ.X)hW2[.X2^5R6xQ2^.[Q5R2]R6x5SQ)m$lR._)mQ/d*rR3g/dWiOSj!nQ%g}Q)U$ZQ*l%bQ*n%eQ*o%fQ*q%hQ/_*mS/b*r/dR3f/aQ$]gQ%k!RQ%n!TQ%p!UQ%r!VQ)t$rQ)z$xQ*b%]Q*w%mS/T*c*fQ/k*vQ/l*yQ/m*zS/{+f2nQ1g-ZQ1h-[Q1n-aQ2a.bQ2f.iQ3P.zQ3Z/VQ3e/`Y3s/}0O0U0Z5dQ4j1iQ4l1kQ4o1oQ5V2cQ5Y2gQ5o3QQ5u3Y[6T3r3u3y3{3|7TQ6m4kQ6p4pQ6y5TQ7[5pQ7a5vW7g6U6Z6]6_Q7r6nQ7t6qQ7y6zQ7|7OQ8V7]U8Z7h7m7oQ8c7sQ8e7vQ8g7}Q8n8WS8p8]8aQ8u8dQ8v8hQ8{8rQ9O8wQ9R8}Q9S9PR9U9TQ$fmQ&h!jU)c$g$h$iQ+V&TU+w&i&j&kQ-Z(iS.T)d)eQ/s+XQ/z+fS0`+x+yQ1k-_Q2U.UQ3p/yS3v0P0UQ4R0aQ4p1pS6X3w3|Q7j6YQ8^7lR8s8`S#ua:kR)^$cU#}a$c:kR-k(wQ#taS&y!w)_Q&}!yQ'h#dQ(]#vQ(c#xQ(|$RQ(}$SQ)R$WQ+r&fQ,U9nQ,V9pQ,W9rQ,p'|Q,y(VQ,z(XQ,{(YQ-T(aQ-X(eQ-i(uQ-j(vd-u)Y-z.u2O2{4{5i6{7X8UQ-x)[Q.i)|Q.k*PQ0^+uQ0g9xQ0h9zQ0i9|Q0j,ZQ0}9jQ1a-UQ1e-WQ1x-pQ2R-|Q2g.jQ2i.mQ2y.wQ4U:QQ4Y9oQ4Z9qQ4[9sQ4a1YQ4h1cQ4n1mQ4u1tQ4w1{Q4|2SQ5X2eQ5l2}Q6a:UQ6c9}Q6d9yQ6e9{Q6l4gQ6r4sQ7Z5nQ7p:RQ8b:VQ:_:kQ:i:qR:j:rlgOSj}!n$Z%b%e%f%h*m*r/a/dS!pU%dQ%m!SQ%s!WQ'U!|Q'u#kS*f%Z%^Q*j%_Q*v%lQ+S&RQ+q&eQ,n'vQ-w)ZQ/[*iQ0]+tQ1T,iQ1v-nQ2Q-{Q2x.vQ3]/XQ3^/YQ3`/ZQ3b/]Q3i/fQ4_1QQ5W2dQ5k2|Q5z3aQ5|3cQ5}3dQ7Y5mR7c5{!vZOSUj}!S!n!|$Z%Z%^%_%b%d%e%f%h%l&R&e)Z*i*m*r+t-n-{.v/X/Y/Z/]/a/d/f2d2|3a3c3d5m5{Q!_RQ!oTQ$_kS%v!]%yQ%|!`Q&x!vQ'P!zQ'V#PQ'W#QQ'X#RQ'Y#SQ'Z#TQ'[#UQ']#VQ'^#WQ'_#XQ'`#YQ'a#ZQ'c#]Q'f#bQ'j#eW't#k'v,i1QQ)n$mS*}%w+PS+Y&V/tQ+c&^Q+z&oQ,Y&|Q,`'QQ,c9VQ,e9XQ,s(QQ-q)SQ/o+TQ/r+WQ0b+{Q0l,^Q0p9[Q0q9]Q0r9^Q0s9_Q0t9`Q0u9aQ0v9bQ0w9cQ0x9dQ0y9eQ0z9fQ0{9gQ0|,dQ1P9kQ1U9hQ1y-sQ2V.VQ3o9tQ3r/|Q4S0cQ4V0mQ4W9uQ4]9wQ4^:OQ5^2lQ6R3mQ6U3tQ6b:PQ6f:SQ6g:TQ7h6VQ7{6|Q8]7kQ8r8_Q8}8tQ9W!WR:d:nR!aRR&X!bS&T!b+[S+X&U&]R/y+bR'O!yR'R!zT!tU$XS!sU$XU$wrs*kS&r!r!uQ,P&sQ,S&vQ.f)xS0d,O,QR4T0e`!dR!]!`$t%w&_)v+dh!qUrs!r!u$X&s&v)x,O,Q0eQ/^*kQ/p+UQ3l/jT:[&V)wT!gR$tS!fR$tS%x!]&_S%}!`)vS+O%w+dT+Z&V)wT&[!b$uQ#i^R'z#nT'p#i'qR1S,hT(`#v(hR(f#xQ-v)YQ2P-zQ2w.uQ4y2OQ5j2{Q6u4{Q7V5iQ7z6{Q8T7XR8m8UlhOSj}!n$Z%b%e%f%h*m*r/a/dQ%[yR*b%XV$xrs*kR.o*RR*a%VQ$ppR)s$qR)i$kT%`z%cT%az%cT/c*r/d",nodeNames:"\u26a0 ArithOp ArithOp InterpolationStart extends LineComment BlockComment Script ExportDeclaration export Star as VariableName String from ; default FunctionDeclaration async function VariableDefinition TypeParamList TypeDefinition ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Interpolation null super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression await yield delete LogicOp BitOp ParenthesizedExpression ClassExpression class extends ClassBody MethodDeclaration Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression PrivatePropertyName BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody MethodDeclaration AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try catch finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement",maxTerm:330,context:bu,nodeProps:[[Nr.closedBy,3,"InterpolationEnd",40,"]",51,"}",66,")",132,"JSXSelfCloseEndTag JSXEndTag",146,"JSXEndTag"],[Nr.group,-26,8,15,17,58,184,188,191,192,194,197,200,211,213,219,221,223,225,228,234,238,240,242,244,246,248,249,"Statement",-30,12,13,24,27,28,41,43,44,45,47,52,60,68,74,75,91,92,101,103,119,122,124,125,126,127,129,130,148,149,151,"Expression",-22,23,25,29,32,34,152,154,156,157,159,160,161,163,164,165,167,168,169,178,180,182,183,"Type",-3,79,85,90,"ClassItem"],[Nr.openedBy,30,"InterpolationStart",46,"[",50,"{",65,"(",131,"JSXStartTag",141,"JSXStartTag JSXStartCloseTag"]],skippedNodes:[0,5,6],repeatNodeCount:28,tokenData:"!C}~R!`OX%TXY%cYZ'RZ[%c[]%T]^'R^p%Tpq%cqr'crs(kst0htu2`uv4pvw5ewx6cxy<yyz=Zz{=k{|>k|}?O}!O>k!O!P?`!P!QCl!Q!R!0[!R![!1q![!]!7s!]!^!8V!^!_!8g!_!`!9d!`!a!:[!a!b!<R!b!c%T!c!}2`!}#O!=d#O#P%T#P#Q!=t#Q#R!>U#R#S2`#S#T!>i#T#o2`#o#p!>y#p#q!?O#q#r!?f#r#s!?x#s$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$I|2`$I|$I}!Bq$I}$JO!Bq$JO$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`W%YR$UWO!^%T!_#o%T#p~%T,T%jg$UW'W+{OX%TXY%cYZ%TZ[%c[p%Tpq%cq!^%T!_#o%T#p$f%T$f$g%c$g#BY%T#BY#BZ%c#BZ$IS%T$IS$I_%c$I_$JT%T$JT$JU%c$JU$KV%T$KV$KW%c$KW&FU%T&FU&FV%c&FV?HT%T?HT?HU%c?HU~%T,T'YR$UW'X+{O!^%T!_#o%T#p~%T$T'jS$UW!j#{O!^%T!_!`'v!`#o%T#p~%T$O'}S#e#v$UWO!^%T!_!`(Z!`#o%T#p~%T$O(bR#e#v$UWO!^%T!_#o%T#p~%T'u(rZ$UW]!ROY(kYZ)eZr(krs*rs!^(k!^!_+U!_#O(k#O#P-b#P#o(k#o#p+U#p~(k&r)jV$UWOr)ers*Ps!^)e!^!_*a!_#o)e#o#p*a#p~)e&r*WR$P&j$UWO!^%T!_#o%T#p~%T&j*dROr*ars*ms~*a&j*rO$P&j'u*{R$P&j$UW]!RO!^%T!_#o%T#p~%T'm+ZV]!ROY+UYZ*aZr+Urs+ps#O+U#O#P+w#P~+U'm+wO$P&j]!R'm+zROr+Urs,Ts~+U'm,[U$P&j]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R,sU]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R-[O]!R!R-_PO~,n'u-gV$UWOr(krs-|s!^(k!^!_+U!_#o(k#o#p+U#p~(k'u.VZ$P&j$UW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/PZ$UW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/yR$UW]!RO!^%T!_#o%T#p~%T!Z0XT$UWO!^.x!^!_,n!_#o.x#o#p,n#p~.xy0mZ$UWOt%Ttu1`u!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`y1g]$UW'mqOt%Ttu1`u!Q%T!Q![1`![!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`&i2k_$UW#zS'Z%k'epOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`[3q_$UW#zSOt%Ttu3ju}%T}!O3j!O!Q%T!Q![3j![!^%T!_!c%T!c!}3j!}#R%T#R#S3j#S#T%T#T#o3j#p$g%T$g~3j$O4wS#^#v$UWO!^%T!_!`5T!`#o%T#p~%T$O5[R$UW#o#vO!^%T!_#o%T#p~%T%r5lU'v%j$UWOv%Tvw6Ow!^%T!_!`5T!`#o%T#p~%T$O6VS$UW#i#vO!^%T!_!`5T!`#o%T#p~%T'u6jZ$UW]!ROY6cYZ7]Zw6cwx*rx!^6c!^!_8T!_#O6c#O#P:T#P#o6c#o#p8T#p~6c&r7bV$UWOw7]wx*Px!^7]!^!_7w!_#o7]#o#p7w#p~7]&j7zROw7wwx*mx~7w'm8YV]!ROY8TYZ7wZw8Twx+px#O8T#O#P8o#P~8T'm8rROw8Twx8{x~8T'm9SU$P&j]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R9kU]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R:QPO~9f'u:YV$UWOw6cwx:ox!^6c!^!_8T!_#o6c#o#p8T#p~6c'u:xZ$P&j$UW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z;rZ$UW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z<jT$UWO!^;k!^!_9f!_#o;k#o#p9f#p~;k%V=QR!d$}$UWO!^%T!_#o%T#p~%TZ=bR!cR$UWO!^%T!_#o%T#p~%T%R=tU'[!R#_#v$UWOz%Tz{>W{!^%T!_!`5T!`#o%T#p~%T$O>_S#[#v$UWO!^%T!_!`5T!`#o%T#p~%T$u>rSj$m$UWO!^%T!_!`5T!`#o%T#p~%T&i?VR!R&a$UWO!^%T!_#o%T#p~%T&i?gVu%n$UWO!O%T!O!P?|!P!Q%T!Q![@r![!^%T!_#o%T#p~%Ty@RT$UWO!O%T!O!P@b!P!^%T!_#o%T#p~%Ty@iR!Qq$UWO!^%T!_#o%T#p~%Ty@yZ$UWkqO!Q%T!Q![@r![!^%T!_!g%T!g!hAl!h#R%T#R#S@r#S#X%T#X#YAl#Y#o%T#p~%TyAqZ$UWO{%T{|Bd|}%T}!OBd!O!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyBiV$UWO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyCVV$UWkqO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T,TCs`$UW#]#vOYDuYZ%TZzDuz{Jl{!PDu!P!Q!-e!Q!^Du!^!_Fx!_!`!.^!`!a!/]!a!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXD|[$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXEy_$UW}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%TPF}V}POYFxZ!PFx!P!QGd!Q!}Fx!}#OG{#O#PHh#P~FxPGiU}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGdPHOTOYG{Z#OG{#O#PH_#P#QFx#Q~G{PHbQOYG{Z~G{PHkQOYFxZ~FxXHvY$UWOYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~HqXIkV$UWOYHqYZ%TZ!^Hq!^!_G{!_#oHq#o#pG{#p~HqXJVV$UWOYDuYZ%TZ!^Du!^!_Fx!_#oDu#o#pFx#p~Du,TJs^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q!,R!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl,TKtV$UWOzKoz{LZ{!^Ko!^!_M]!_#oKo#o#pM]#p~Ko,TL`X$UWOzKoz{LZ{!PKo!P!QL{!Q!^Ko!^!_M]!_#oKo#o#pM]#p~Ko,TMSR$UWU+{O!^%T!_#o%T#p~%T+{M`ROzM]z{Mi{~M]+{MlTOzM]z{Mi{!PM]!P!QM{!Q~M]+{NQOU+{,TNX^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q! T!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl,T! ^_$UWU+{}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%T+{!!bY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!&x!Q!}!!]!}#O!$`#O#P!&f#P~!!]+{!#VY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!#u!Q!}!!]!}#O!$`#O#P!&f#P~!!]+{!#|UU+{}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGd+{!$cWOY!$`YZM]Zz!$`z{!${{#O!$`#O#P!&S#P#Q!!]#Q~!$`+{!%OYOY!$`YZM]Zz!$`z{!${{!P!$`!P!Q!%n!Q#O!$`#O#P!&S#P#Q!!]#Q~!$`+{!%sTU+{OYG{Z#OG{#O#PH_#P#QFx#Q~G{+{!&VTOY!$`YZM]Zz!$`z{!${{~!$`+{!&iTOY!!]YZM]Zz!!]z{!#Q{~!!]+{!&}_}POzM]z{Mi{#ZM]#Z#[!&x#[#]M]#]#^!&x#^#aM]#a#b!&x#b#gM]#g#h!&x#h#iM]#i#j!&x#j#mM]#m#n!&x#n~M],T!(R[$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|,T!(|^$UWOY!'|YZKoZz!'|z{!(w{!P!'|!P!Q!)x!Q!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|,T!*PY$UWU+{OYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~Hq,T!*tX$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#o!'|#o#p!$`#p~!'|,T!+fX$UWOYJlYZKoZzJlz{NQ{!^Jl!^!_!!]!_#oJl#o#p!!]#p~Jl,T!,Yc$UW}POzKoz{LZ{!^Ko!^!_M]!_#ZKo#Z#[!,R#[#]Ko#]#^!,R#^#aKo#a#b!,R#b#gKo#g#h!,R#h#iKo#i#j!,R#j#mKo#m#n!,R#n#oKo#o#pM]#p~Ko,T!-lV$UWT+{OY!-eYZ%TZ!^!-e!^!_!.R!_#o!-e#o#p!.R#p~!-e+{!.WQT+{OY!.RZ~!.R$P!.g[$UW#o#v}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Du]!/f[#wS$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Duy!0cd$UWkqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#U%T#U#V!3X#V#X%T#X#YAl#Y#b%T#b#c!2w#c#d!4m#d#l%T#l#m!5{#m#o%T#p~%Ty!1x_$UWkqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#X%T#X#YAl#Y#b%T#b#c!2w#c#o%T#p~%Ty!3OR$UWkqO!^%T!_#o%T#p~%Ty!3^W$UWO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#o%T#p~%Ty!3}Y$UWkqO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#b%T#b#c!2w#c#o%T#p~%Ty!4rV$UWO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#o%T#p~%Ty!5`X$UWkqO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#b%T#b#c!2w#c#o%T#p~%Ty!6QZ$UWO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#o%T#p~%Ty!6z]$UWkqO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#b%T#b#c!2w#c#o%T#p~%T%w!7|R!]V$UW#m%hO!^%T!_#o%T#p~%T!P!8^R_w$UWO!^%T!_#o%T#p~%T+c!8rR'`d!a%Y#x&s'zP!P!Q!8{!^!_!9Q!_!`!9_W!9QO$WW#v!9VP#`#v!_!`!9Y#v!9_O#o#v#v!9dO#a#v%w!9kT!{%o$UWO!^%T!_!`'v!`!a!9z!a#o%T#p~%T$P!:RR#W#w$UWO!^%T!_#o%T#p~%T%w!:gT'_!s#a#v$RS$UWO!^%T!_!`!:v!`!a!;W!a#o%T#p~%T$O!:}R#a#v$UWO!^%T!_#o%T#p~%T$O!;_T#`#v$UWO!^%T!_!`5T!`!a!;n!a#o%T#p~%T$O!;uS#`#v$UWO!^%T!_!`5T!`#o%T#p~%T%w!<YV'n%o$UWO!O%T!O!P!<o!P!^%T!_!a%T!a!b!=P!b#o%T#p~%T$`!<vRv$W$UWO!^%T!_#o%T#p~%T$O!=WS$UW#j#vO!^%T!_!`5T!`#o%T#p~%T&e!=kRx&]$UWO!^%T!_#o%T#p~%TZ!={R!OR$UWO!^%T!_#o%T#p~%T$O!>]S#g#v$UWO!^%T!_!`5T!`#o%T#p~%T$P!>pR$UW'd#wO!^%T!_#o%T#p~%T~!?OO!T~%r!?VT'u%j$UWO!^%T!_!`5T!`#o%T#p#q!=P#q~%T$u!?oR!S$knQ$UWO!^%T!_#o%T#p~%TX!@PR!kP$UWO!^%T!_#o%T#p~%T,T!@gr$UW'W+{#zS'Z%k'epOX%TXY%cYZ%TZ[%c[p%Tpq%cqt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`,T!CO_$UW'X+{#zS'Z%k'epOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`",tokenizers:[xu,wu,yu,0,1,2,3,4,5,6,7,8,vu],topRules:{Script:[0,7]},dialects:{jsx:11335,ts:11337},dynamicPrecedences:{149:1,176:1},specialized:[{term:287,get:(t,e)=>function(t,e){return"extends"==t&&e.dialectEnabled(1)?4:-1}(t,e)<<1},{term:287,get:t=>Tu[t]||-1},{term:297,get:t=>Pu[t]||-1},{term:63,get:t=>ku[t]||-1}],tokenPrec:11358}),Ru=[kc("function ${name}(${params}) {\n\t${}\n}",{label:"function",detail:"definition",type:"keyword"}),kc("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n\t${}\n}",{label:"for",detail:"loop",type:"keyword"}),kc("for (let ${name} of ${collection}) {\n\t${}\n}",{label:"for",detail:"of loop",type:"keyword"}),kc("try {\n\t${}\n} catch (${error}) {\n\t${}\n}",{label:"try",detail:"block",type:"keyword"}),kc("class ${name} {\n\tconstructor(${params}) {\n\t\t${}\n\t}\n}",{label:"class",detail:"definition",type:"keyword"}),kc('import {${names}} from "${module}"\n${}',{label:"import",detail:"named",type:"keyword"}),kc('import ${name} from "${module}"\n${}',{label:"import",detail:"default",type:"keyword"})],Xu=wo.define({parser:Wu.configure({props:[Go.add({IfStatement:Eo({except:/^\s*({|else\b)/}),TryStatement:Eo({except:/^\s*({|catch\b|finally\b)/}),LabeledStatement:t=>t.baseIndent,SwitchBody:t=>{let e=t.textAfter,i=/^\s*\}/.test(e),n=/^\s*(case|default)\b/.test(e);return t.baseIndent+(i?0:n?1:2)*t.unit},Block:Bo({closing:"}"}),ArrowFunction:t=>t.baseIndent+t.unit,"TemplateString BlockComment":()=>-1,"Statement Property":Eo({except:/^{/}),JSXElement(t){let e=/^\s*<\//.test(t.textAfter);return t.lineIndent(t.node.from)+(e?0:t.unit)},JSXEscape(t){let e=/\s*\}/.test(t.textAfter);return t.lineIndent(t.node.from)+(e?0:t.unit)},"JSXOpenTag JSXSelfClosingTag":t=>t.column(t.node.from)+t.unit}),Ko.add({"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression":Ho,BlockComment:t=>({from:t.from+2,to:t.to-2})}),Nc({"get set async static":wO.modifier,"for while do if else switch try catch finally return throw break continue default case":wO.controlKeyword,"in of await yield void typeof delete instanceof":wO.operatorKeyword,"let var const function class extends":wO.definitionKeyword,"import export from":wO.moduleKeyword,"with debugger as new":wO.keyword,TemplateString:wO.special(wO.string),Super:wO.atom,BooleanLiteral:wO.bool,this:wO.self,null:wO.null,Star:wO.modifier,VariableName:wO.variableName,"CallExpression/VariableName TaggedTemplateExpression/VariableName":wO.function(wO.variableName),VariableDefinition:wO.definition(wO.variableName),Label:wO.labelName,PropertyName:wO.propertyName,PrivatePropertyName:wO.special(wO.propertyName),"CallExpression/MemberExpression/PropertyName":wO.function(wO.propertyName),"FunctionDeclaration/VariableDefinition":wO.function(wO.definition(wO.variableName)),"ClassDeclaration/VariableDefinition":wO.definition(wO.className),PropertyDefinition:wO.definition(wO.propertyName),PrivatePropertyDefinition:wO.definition(wO.special(wO.propertyName)),UpdateOp:wO.updateOperator,LineComment:wO.lineComment,BlockComment:wO.blockComment,Number:wO.number,String:wO.string,ArithOp:wO.arithmeticOperator,LogicOp:wO.logicOperator,BitOp:wO.bitwiseOperator,CompareOp:wO.compareOperator,RegExp:wO.regexp,Equals:wO.definitionOperator,"Arrow : Spread":wO.punctuation,"( )":wO.paren,"[ ]":wO.squareBracket,"{ }":wO.brace,"InterpolationStart InterpolationEnd":wO.special(wO.brace),".":wO.derefOperator,", ;":wO.separator,TypeName:wO.typeName,TypeDefinition:wO.definition(wO.typeName),"type enum interface implements namespace module declare":wO.definitionKeyword,"abstract global Privacy readonly override":wO.modifier,"is keyof unique infer":wO.operatorKeyword,JSXAttributeValue:wO.attributeValue,JSXText:wO.content,"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag":wO.angleBracket,"JSXIdentifier JSXNameSpacedName":wO.tagName,"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName":wO.attributeName})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"',"`"]},commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\}|<\/)$/,wordChars:"$"}}),Zu=Xu.configure({dialect:"ts"}),Yu=Xu.configure({dialect:"jsx"}),Cu=Xu.configure({dialect:"jsx ts"});const Vu={__proto__:null,return:278},ju=uu.deserialize({version:13,states:"BbOVQPOOO$dQPO'#CeO%iQQO'#CiOOQO'#Ea'#EaOOQO'#Cm'#CmO%pQPO'#CnO'qQPO'#E[O#fQPO'#CwO*VQPO'#C|OOQO'#C{'#C{O*[QPO'#E^OOQO'#E^'#E^O#fQPO'#C^O+YQPO'#DQO+_QPO'#DSO#fQPO'#DVO+dQPO'#DdO+dQPO'#DhO+nQPO'#DjOOQO'#FU'#FUO+_QPO'#DmO+sQPO'#DmO,OQPO'#DsOOQO'#FT'#FTO,TQPO'#D}OOQO'#E['#E[OOQO'#EO'#EOQVQPOOO-vQPO'#EPO.sQPO,59PO#fQPO,59POOQO,59P,59PO1jQQO'#EPO1qQQO,59TO$kQPO,59TOOQO,59T,59TO1xQPO'#EcO2SQPO,59YO2XQPO,59]O#fQPO,59_O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O#fQPO,59`O3[QSO,59dO6OQPO,59cOOQO,59h,59hP8WQSO,59gO:XQSO,5:xO:`QPO,58xO:gQPO'#C}O:nQPO,59lO:sQQO,59nO:xQPO,59qO;PQPO,5:OO+_QPO'#D`O;WQPO,5:OO:`QPO,5:SO+YQPO,5:SOOQO'#Dl'#DlOOQO,5:U,5:UO;]QPO'#FWO;eQPO'#FVOOQO,5:X,5:XO+_QPO,5:XO,OQPO,5:_OOQO'#Du'#DuO>TQPO,5:_O>YQPO,5:iOOQO-E7|-E7|OOQO,5:l,5:lO-yQPO'#EPOOQO-E7}-E7}OOQO1G.k1G.kO@nQPO1G.kOOQO-E8O-E8OOOQO,5:m,5:mO.zQQO'#EPOOQO1G.o1G.oOBuQQO1G.oOOQO-E8P-E8POB|QQO,59cO#fQPO'#ESOCWQPO,5:}OOQO1G.t1G.tOOQO'#Cr'#CrOOQO1G.w1G.wODsQPO1G.yOLqQPO1G.zO!#`QPO1G.zO!#mQPO1G.zO!(hQPO1G.zO!(oQPO1G.zO!-ZQPO1G.zO!-kQPO1G.zO!2iQPO1G.zO!2pQPO1G.zO!7eQPO1G.zO!7lQPO1G.zO!7sQSO'#CmO!9vQSO'#CyO!:QQPO'#CyO!:VQSO'#FPO!:_QSO1G/OP!:dQSO'#EcP!:nQSO1G/ROOQO1G0d1G0dO!:sQSO,59cOOQO1G.d1G.dOOQO,59i,59iO!<sQPO,59iO#fQPO1G/WO#fQPO1G/YO!=]QPO'#DXOOQO1G/]1G/]O+YQPO'#DfOOQO1G/j1G/jO!=dQPO,59zO!=lQPO1G/nO#fQPO,5;rO!@[QWO,5;rO+_QPO'#EVO!@aQPO,5;qOOQO1G/s1G/sO>TQPO1G/yO!CPQSO'#DvO!C[QWO'#FXO+YQPO1G/yOOQO7+$V7+$VP@qQPO'#EQO!CdQQO1G.yO!GfQQO1G.zO!JVQQO1G.zO!JdQQO1G.zO!MaQQO1G.zO!MhQQO1G.zO#!UQQO1G.zO#!fQQO1G.zO#%fQQO1G.zO#%mQQO1G.zO#(dQQO1G.zO#(kQQO1G.zOOQO7+$Z7+$ZP@xQQO'#ERO#(rQPO,5:nOOQO-E8Q-E8QO*[QPO,59eO2^QPO'#ETO#(|QSO,5;kOOQO7+$j7+$jP#)UQSO,5:}POQO7+$m7+$mO#*nQSO1G.yO#+bQSO1G.zO#-{QSO1G.zO#.YQSO1G.zO#0dQSO1G.zO#0kQSO1G.zO#2fQSO1G.zO#2vQSO1G.zO#5TQSO1G.zO#5[QSO1G.zO#7`QSO1G.zO#7gQSO1G.zOOQO1G/T1G/TO#7nQPO7+$rO:`QPO7+$tO#:SQPO'#D[O+dQPO'#D^OOQO'#FS'#FSOOQO'#EU'#EUO#:XQPO,59sOOQO,59s,59sOOQO,5:Q,5:QO#fQPO1G/fO#:`QWO1G/fOOQO7+%Y7+%YO#:eQPO1G1^O#<|QPO1G1^OOQO,5:q,5:qOOQO-E8T-E8TO+YQPO7+%eO#=RQPO'#CzOOQO'#Dy'#DyO#=ZQSO'#FYO#=cQSO,5:bO#=hQPO'#DwO#=mQPO'#DwO#=rQ`O,5;sOOQO7+%e7+%eO#=wQSO1G/POOQO,5:o,5:oOOQO-E8R-E8RP#>RQSO,5:nOOQO<<H`<<H`O#>]QPO,59vO#?{QPO,59xO#@SQPO,59xOOQO-E8S-E8SOOQO1G/_1G/_O#@XQPO7+%QO#@fQPO7+%QO#fQPO7+&xOOQO<<IP<<IPO#@kQPO'#EWO#@sQSO,5;tOOQO1G/|1G/|O#@{QWO,5:cOOQO'#Cz'#CzO#AQQPO,5:cOOQO1G1_1G1_O#AVQPO1G/bO#BuQPO1G/dO#fQPO<<HlO#DeQPO<<JdOOQO,5:r,5:rOOQO-E8U-E8UOOQO1G/}1G/}O#F|QWO1G/}O#GRQPO7+%OO#HqQPOAN>WOOQO7+%i7+%iO$kQPO'#CwO*[QPO'#CwO$kQPO,59_O*[QPO,59_O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`O$kQPO,59`O*[QPO,59`P*[QPO'#ES",stateData:"#Ik~O!}OS~OR[OSROTROUROVROWROYPO^QOcTOu]Ow^Oz_O|iO}iO!TdO!UdO!X`O!]aO!_bO!bcO!ccO!dcO!ecO!fcO!hfO!oiO!piO#PiO#RYO#USO#cVO#dVO#rVO#uWO$PhO~OSROTROUROVROWROYPO^QOcTO#RYO#USO#cVO#dVO#rVO#uWO~OZoO~P#fOSROTROUROVROWROYPO^QOcTO#RYO#USO#c%}O#d%}O#r%}O#uWO~O_sO~P$kOd#VP~P#fOixOjxO#R!TO#XvO#YwO#ZwO#[wO#]wO#^wO#_wO#`yO#ayO#byO#czO#d{O#e|O#f|O#g|O#h|O#i}O#j}O#k}O#l}O#m!OO#n!PO#o!QO#p!RO#q!SO~OR#OXS#OXT#OXU#OXV#OXW#OXY#OX^#OXc#OXu#OXw#OXz#OX|#OX}#OX!T#OX!U#OX!X#OX!]#OX!_#OX!b#OX!c#OX!d#OX!e#OX!f#OX!h#OX!o#OX!p#OX!{#OX#P#OX#U#OX#r#OX#u#OX$P#OXs#OX!P#OX!R#OX~P%wO#U!VO~OSROTROUROVROWROYPO^QOcTO#RYO#USO#c&OO#d&OO#r&OO#uWO~Or!ZO~O#USO~O!T!`O!U!`O~P#fO#U!dO~O!T!iO!U!iO!h!jO~O#U!kO~OR!qXu!qXw!qXz!qX|!qX}!qX!T!qX!U!qX!X!qX!]!qX!_!qX!b!qX!c!qX!d!qX!e!qX!f!qX!h!qX!o!qX!p!qX!{!qX#P!qX$P!qXs!qX!P!qX!R!qX~P#fO[!oOS!sXT!sXU!sXV!sXW!sXY!sXZ!sX^!sXc!sX#U!sX#r!sX#u!sX~P%wOZ!rO~P#fOi&ROj&RO#R!TO#XvO#Y&PO#Z&PO#[&PO#]&PO#^&PO#_&PO#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZO#i&]O#j&]O#k&]O#l&]O#m&_O#n&aO#o&cO#p&eO#q&gOS!sXT!sXU!sXV!sXW!sXY!sX^!sX_!sXc!sX#U!sX#r!sX#u!sX~O`!uO~P.zO_!wO~P$kO#W!{Od#VX~P%wOd!}O~O#U#OO~OSROTROUROVROWROYPO^QOcTO#RYO#U#^O#c&OO#d&OO#r&OO#uWO~O#S#sP~P2^O#R!TO#XvOSkaTkaUkaVkaWkaYka^kackaikajka#Uka#Yka#Zka#[ka#]ka#^ka#_ka#`ka#aka#bka#cka#dka#eka#fka#gka#hka#ika#jka#kka#lka#mka#nka#oka#pka#qka#rka#uka~ORkaukawkazka|ka}ka!Tka!Uka!Xka!]ka!_ka!bka!cka!dka!eka!fka!hka!oka!pka!{ka#Pka$PkaZka[kadka#Wkarka!Zkaska#tka!Pka!Rka~P3cO#S#VP~P*[Oi&SOj&SO#R!TO#XvO#Y&QO#Z&QO#[&QO#]&QO#^&QO#_&QO#`&UO#a&UO#b&UO#c&WO#d&YO#e&[O#f&[O#g&[O#h&[O#i&^O#j&^O#k&^O#l&^O#m&`O#n&bO#o&dO#p&fO#q&hO~O#S#eO~P8_Or!ZO~P%wOs#hO~PVOR#jO~Ox#kO~Or#lO~P%wO!Z#nO~P%wO!Z#nO~O#Y#rO#t#sO~O#W#tOR#yXS#yXT#yXU#yXV#yXW#yXY#yX^#yXc#yXu#yXw#yXz#yX|#yX}#yX!T#yX!U#yX!X#yX!]#yX!_#yX!b#yX!c#yX!d#yX!e#yX!f#yX!h#yX!o#yX!p#yX!{#yX#P#yX#R#yX#U#yX#c#yX#d#yX#r#yX#u#yX$P#yXs#yX!P#yX!R#yX~O#R#xO~OR!qaS!qaT!qaU!qaV!qaW!qaY!qa^!qac!qau!qaw!qaz!qa|!qa}!qa!T!qa!U!qa!X!qa!]!qa!_!qa!b!qa!c!qa!d!qa!e!qa!f!qa!h!qa!o!qa!p!qa!{!qa#P!qa#U!qa#r!qa#u!qa$P!qas!qa!P!qa!R!qa~P%wOZ#{O[!oO~P%wO`!uOi&ROj&RO#R!TO#XvO#Y&PO#Z&PO#[&PO#]&PO#^&PO#_&PO#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZO#i&]O#j&]O#k&]O#l&]O#m&_O#n&aO#o&cO#p&eO#q&gO~O_$ZO~P@xO_ka`ka~P3cO#W!{Od#Va~O#R!TO#XvOSgiTgiUgiVgiWgiYgi^gicgiigijgi#Ugi#Ygi#Zgi#[gi#]gi#^gi#_gi#rgi#ugi~O#`yO#ayO#byO#czO#d{O#e|O#f|O#g|O#h|O#i}O#j}O#k}O#l}O#m!OO#n!PO#o!QO#p!RO#q!SORgiugiwgizgi|gi}gi!Tgi!Ugi!Xgi!]gi!_gi!bgi!cgi!dgi!egi!fgi!hgi!ogi!pgi!{gi#Pgi$PgiZgi[gidgi#Wgirgi!Zgisgi#tgi!Pgi!Rgi~PC`O#R!TO#XvO#`yO#ayO#byO#czO#d{O#e|O#f|O#g|O#h|O#i}O#j}O#k}O#l}O#m!OO#n!PO#o!QO#p!RORhiShiThiUhiVhiWhiYhi^hichiihijhiuhiwhizhi|hi}hi!Thi!Uhi!Xhi!]hi!_hi!bhi!chi!dhi!ehi!fhi!hhi!ohi!phi!{hi#Phi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#rhi#uhi$PhiZhi[hidhi#Whirhi!Zhishi#thi!Phi!Rhi~O#q!SO~PHTO#R!TO#XvORhiShiThiUhiVhiWhiYhi^hichiihijhiuhiwhizhi|hi}hi!Thi!Uhi!Xhi!]hi!_hi!bhi!chi!dhi!ehi!fhi!hhi!ohi!phi!{hi#Phi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#chi#dhi#ehi#fhi#ghi#hhi#ihi#jhi#khi#lhi#mhi#nhi#ohi#phi#qhi#rhi#uhi$PhiZhi[hidhi#Whirhi!Zhishi#thi!Phi!Rhi~O#`hi#ahi#bhi~PLxO#`yO#ayO#byO~PLxO#R!TO#XvO#`yO#ayO#byO#czORhiShiThiUhiVhiWhiYhi^hichiihijhiuhiwhizhi|hi}hi!Thi!Uhi!Xhi!]hi!_hi!bhi!chi!dhi!ehi!fhi!hhi!ohi!phi!{hi#Phi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#ehi#fhi#ghi#hhi#ihi#jhi#khi#lhi#mhi#nhi#ohi#phi#qhi#rhi#uhi$PhiZhi[hidhi#Whirhi!Zhishi#thi!Phi!Rhi~O#dhi~P!#zO#d{O~P!#zO#R!TO#XvO#`yO#ayO#byO#czO#d{O#e|O#f|O#g|O#h|ORhiShiThiUhiVhiWhiYhi^hichiihijhiuhiwhizhi|hi}hi!Thi!Uhi!Xhi!]hi!_hi!bhi!chi!dhi!ehi!fhi!hhi!ohi!phi!{hi#Phi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#mhi#nhi#ohi#phi#qhi#rhi#uhi$PhiZhi[hidhi#Whirhi!Zhishi#thi!Phi!Rhi~O#ihi#jhi#khi#lhi~P!(vO#i}O#j}O#k}O#l}O~P!(vO#R!TO#XvO#`yO#ayO#byO#czO#d{O#e|O#f|O#g|O#h|O#i}O#j}O#k}O#l}O#m!OORhiShiThiUhiVhiWhiYhi^hichiihijhiuhiwhizhi|hi}hi!Thi!Uhi!Xhi!]hi!_hi!bhi!chi!dhi!ehi!fhi!hhi!ohi!phi!{hi#Phi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#ohi#phi#qhi#rhi#uhi$PhiZhi[hidhi#Whirhi!Zhishi#thi!Phi!Rhi~O#nhi~P!-{O#n!PO~P!-{O#R!TO#XvO#`yO#ayO#byO#czO#d{O#e|O#f|O#g|O#h|O#i}O#j}O#k}O#l}O#m!OO#n!PO#o!QORhiShiThiUhiVhiWhiYhi^hichiihijhiuhiwhizhi|hi}hi!Thi!Uhi!Xhi!]hi!_hi!bhi!chi!dhi!ehi!fhi!hhi!ohi!phi!{hi#Phi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#qhi#rhi#uhi$PhiZhi[hidhi#Whirhi!Zhishi#thi!Phi!Rhi~O#phi~P!2wO#qhi~PHTOiaXjaX#RaX#SaX#WaX#XaX#YaX#ZaX#[aX#]aX#^aX#_aX#`aX#aaX#baX#caX#daX#eaX#faX#gaX#haX#iaX#jaX#kaX#laX#maX#naX#oaX#paX#qaX#tnX~O#SmX#WmX~P8_O#t$_O~O#W$`O#S#sX~O#S$bO~O#W&iO#S#VX~P8_O#S$dO~O#R!TO#XvOikajka#Ska#Yka#Zka#[ka#]ka#^ka#_ka#`ka#aka#bka#cka#dka#eka#fka#gka#hka#ika#jka#kka#lka#mka#nka#oka#pka#qka#Wka~Os$qO~PVO|$vO}$vO!P$tO!R$uO#P$vO~Os$yO~P!<zO#Y${O#t$|O~O!Z#nOR![iS![iT![iU![iV![iW![iY![i^![ic![iu![iw![iz![i|![i}![i!T![i!U![i!X![i!]![i!_![i!b![i!c![i!d![i!e![i!f![i!h![i!o![i!p![i!{![i#P![i#R![i#U![i#c![i#d![i#r![i#u![i$P![is![i!P![i!R![i~O!V%PO~O#W#tOR#yaS#yaT#yaU#yaV#yaW#yaY#ya^#yac#yau#yaw#yaz#ya|#ya}#ya!T#ya!U#ya!X#ya!]#ya!_#ya!b#ya!c#ya!d#ya!e#ya!f#ya!h#ya!o#ya!p#ya!{#ya#P#ya#R#ya#U#ya#c#ya#d#ya#r#ya#u#ya$P#yas#ya!P#ya!R#ya~O#U%TO#}%UO#S#|P~O$O%ZOr#{X~O#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZO#i&]O#j&]O#k&]O#l&]O#m&_O#n&aO#o&cO#p&eO#q&gO_gi`gi~PC`O#R!TO#XvO#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZO#i&]O#j&]O#k&]O#l&]O#m&_O#n&aO#o&cO#p&eOShiThiUhiVhiWhiYhi^hi_hi`hichiihijhi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#rhi#uhi~O#q&gO~P!DvO#R!TO#XvOShiThiUhiVhiWhiYhi^hi_hi`hichiihijhi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#chi#dhi#ehi#fhi#ghi#hhi#ihi#jhi#khi#lhi#mhi#nhi#ohi#phi#qhi#rhi#uhi~O#`hi#ahi#bhi~P!GmO#`&TO#a&TO#b&TO~P!GmO#R!TO#XvO#`&TO#a&TO#b&TO#c&VOShiThiUhiVhiWhiYhi^hi_hi`hichiihijhi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#ehi#fhi#ghi#hhi#ihi#jhi#khi#lhi#mhi#nhi#ohi#phi#qhi#rhi#uhi~O#dhi~P!JqO#d&XO~P!JqO#R!TO#XvO#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZOShiThiUhiVhiWhiYhi^hi_hi`hichiihijhi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#mhi#nhi#ohi#phi#qhi#rhi#uhi~O#ihi#jhi#khi#lhi~P!MoO#i&]O#j&]O#k&]O#l&]O~P!MoO#R!TO#XvO#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZO#i&]O#j&]O#k&]O#l&]O#m&_OShiThiUhiVhiWhiYhi^hi_hi`hichiihijhi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#ohi#phi#qhi#rhi#uhi~O#nhi~P#!vO#n&aO~P#!vO#R!TO#XvO#`&TO#a&TO#b&TO#c&VO#d&XO#e&ZO#f&ZO#g&ZO#h&ZO#i&]O#j&]O#k&]O#l&]O#m&_O#n&aO#o&cOShiThiUhiVhiWhiYhi^hi_hi`hichiihijhi#Uhi#Yhi#Zhi#[hi#]hi#^hi#_hi#qhi#rhi#uhi~O#phi~P#%tO#qhi~P!DvOd!va#W!va~P%wO#W$`O#S#sa~O#W&iO#S#Va~O#R!TO#XvO#`&UO#a&UO#b&UO#c&WO#d&YO#e&[O#f&[O#g&[O#h&[O#i&^O#j&^O#k&^O#l&^O#m&`O#n&bO#o&dO#p&fO#q&hO~Oigijgi#Sgi#Ygi#Zgi#[gi#]gi#^gi#_gi#Wgi~P#)^Oihijhi#Shi#Yhi#Zhi#[hi#]hi#^hi#_hi#Whi~P#)^O#R!TO#XvOihijhi#Shi#Yhi#Zhi#[hi#]hi#^hi#_hi#chi#dhi#ehi#fhi#ghi#hhi#ihi#jhi#khi#lhi#mhi#nhi#ohi#phi#qhi#Whi~O#`hi#ahi#bhi~P#,UO#`&UO#a&UO#b&UO~P#,UO#R!TO#XvO#`&UO#a&UO#b&UO#c&WOihijhi#Shi#Yhi#Zhi#[hi#]hi#^hi#_hi#ehi#fhi#ghi#hhi#ihi#jhi#khi#lhi#mhi#nhi#ohi#phi#qhi#Whi~O#dhi~P#.gO#d&YO~P#.gO#R!TO#XvO#`&UO#a&UO#b&UO#c&WO#d&YO#e&[O#f&[O#g&[O#h&[Oihijhi#Shi#Yhi#Zhi#[hi#]hi#^hi#_hi#mhi#nhi#ohi#phi#qhi#Whi~O#ihi#jhi#khi#lhi~P#0rO#i&^O#j&^O#k&^O#l&^O~P#0rO#R!TO#XvO#`&UO#a&UO#b&UO#c&WO#d&YO#e&[O#f&[O#g&[O#h&[O#i&^O#j&^O#k&^O#l&^O#m&`Oihijhi#Shi#Yhi#Zhi#[hi#]hi#^hi#_hi#ohi#phi#qhi#Whi~O#nhi~P#3WO#n&bO~P#3WO#R!TO#XvO#`&UO#a&UO#b&UO#c&WO#d&YO#e&[O#f&[O#g&[O#h&[O#i&^O#j&^O#k&^O#l&^O#m&`O#n&bO#o&dOihijhi#Shi#Yhi#Zhi#[hi#]hi#^hi#_hi#qhi#Whi~O#phi~P#5cO#p&fO~P#5cORtqStqTtqUtqVtqWtqYtq^tqctqutqwtqztq|tq}tq!Ttq!Utq!Xtq!]tq!_tq!btq!ctq!dtq!etq!ftq!htq!otq!ptq!{tq#Ptq#Utq#rtq#utq$Ptqstq!Ptq!Rtq~P%wO#t%bO~Os%fO~P!<zO!V%hO~OR#ziS#ziT#ziU#ziV#ziW#ziY#zi^#zic#ziu#ziw#ziz#zi|#zi}#zi!T#zi!U#zi!X#zi!]#zi!_#zi!b#zi!c#zi!d#zi!e#zi!f#zi!h#zi!o#zi!p#zi!{#zi#P#zi#U#zi#W#zi#r#zi#u#zi$P#zis#zi!P#zi!R#zi~P%wO#Y%iO~O#U!lX#tnX~O#W%kO#S#|X~O#S%mO~O#t%nO~O#U%oO~O!n%qO~O#Smi#Wmi~P8_O#S!va#W!va~P8_OR[Ou]Ow^Oz_O!TdO!UdO!X`O!]aO!_bO!bcO!ccO!dcO!ecO!fcO!hfO!oiO!piO$PhOs!Oa|!Oa}!Oa!P!Oa!R!Oa#P!Oa~P#fO#t%sO~P%wO#t%sO~O!Z!Sqr!Sq#t!Sq~P%wO#Y%tO~O#U%TO#}%UO~O#W%kO#S#|a~O!V%xO~O#t%yO~OR[Ou]Ow^Oz_O!TdO!UdO!X`O!]aO!_bO!bcO!ccO!dcO!ecO!fcO!hfO!oiO!piO$PhOs!Oi|!Oi}!Oi!P!Oi!R!Oi#P!Oi~P#fOR[Ou]Ow^Oz_O!TdO!UdO!X`O!]aO!_bO!bcO!ccO!dcO!ecO!fcO!hfO!oiO!piO$PhOs!Qi|!Qi}!Qi!P!Qi!R!Qi#P!Qi~P#fOR#zyS#zyT#zyU#zyV#zyW#zyY#zy^#zyc#zyu#zyw#zyz#zy|#zy}#zy!T#zy!U#zy!X#zy!]#zy!_#zy!b#zy!c#zy!d#zy!e#zy!f#zy!h#zy!o#zy!p#zy!{#zy#P#zy#U#zy#W#zy#r#zy#u#zy$P#zys#zy!P#zy!R#zy~P%wO!V%|O~OR[Ou]Ow^Oz_O!TdO!UdO!X`O!]aO!_bO!bcO!ccO!dcO!ecO!fcO!hfO!oiO!piO$PhOs!Qq|!Qq}!Qq!P!Qq!R!Qq#P!Qq~P#fO!Z!S!Rr!S!R#t!S!R~P%wO#Sz!hUT#}!_!T!U!Z!]!X!f!e!d!c!bxwRu!p!o!P!R#U~",goto:"4_#}PP$OPPPPPP$YPPP$YPPP%w'qPP'q)`'q'qPP'q'q)c)i'q)t+cPP$OP$OPP$OP+yPP+|P+|P,QPPP$OP,ZP$OP,bP,l,bPPPPP,bP,o,u,y-P-PPPP$O-T-g-q-w-}.X._.e.kPPP.qP.{PP'qP3`PPPPPPPPPPPPPPPPPPPPPPPPPPP3fPP3i$O3m3w3}4U4[aiOk!Z#i%b%r%s%z$XROPQTVY[_`ahkmnqrwxyz{|}!O!P!Q!R!S!T!W!Z!{#i#j#k#r$_$`$u${%b%i%r%s%t%z%}&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i$WZOPQTVY[_`ahkmnqrwxyz{|}!O!P!Q!R!S!T!W!Z!{#i#j#k#r$_$`$u${%b%i%r%s%t%z%}&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&iQ!]^U!fd!i#tR#p!`$XZOPQTVY[_`ahkmnqrwxyz{|}!O!P!Q!R!S!T!W!Z!{#i#j#k#r$_$`$u${%b%i%r%s%t%z%}&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&iR#PvQ#a!TR%^$`S#`!T$`S%X#x%kR%p%Y$XXOPQTVY[_`ahkmnqrwxyz{|}!O!P!Q!R!S!T!W!Z!{#i#j#k#r$_$`$u${%b%i%r%s%t%z%}&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&iQ![]Q#g!YS#q!b!cQ$z#nQ%[#zQ%a$sR%j%SR#m!^T$v#l$xQ!a`Q!caR%d$uS#o!_!aR$}#qagOk!Z#i%b%r%s%zR!ebQ!lfR#w!jT#y!l#wQ%V#xR%v%kT%Y#x%kQkOW!nk#i%r%zQ#i!ZQ%r%bR%z%sQmPQqQT!qmqQnPR!tnQrQR!yrQ!|tS$^!|$cR$c#cQ$a#aR%_$aQ$x#lR%e$xQ#u!gR%R#uQ%l%VR%w%lajOk!Z#i%b%r%s%z`UOk!Z#i%b%r%s%zQlPQpQQtTQ!UVQ!XYQ!Y[Q!^_Q!_`Q!baQ!mhQ!pmQ!snQ!vqQ!xrQ!z%}Q#QwQ#RxQ#SyQ#TzQ#U{Q#V|Q#W}Q#X!OQ#Y!PQ#Z!QQ#[!RQ#]!SS#_!T$`Q#c!WQ#f&OQ#}&PQ$O&RQ$P&TQ$Q&VQ$R&XQ$S&ZQ$T&]Q$U&_Q$V&aQ$W&cQ$X&eQ$Y&gQ$]!{Q$e&QQ$f&SQ$g&UQ$h&WQ$i&YQ$j&[Q$k&^Q$l&`Q$m&bQ$n&dQ$o&fQ$p&hQ$r#jQ$s#kQ%O#rQ%]$_Q%`&iQ%c$uQ%g${Q%u%iR%{%tQuTR#d!WR#b!TT$w#l$xaeOk!Z#i%b%r%s%zQ!hdR#v!iS!gd!iR%Q#tQ#z!lR%S#wR%W#x",nodeNames:"\u26a0 Swift WhileStatement While NumericLiteral BooleanLiteral NilLiteral StaticStringLiteral MultilineStaticStringLiteral InterpolatedStringLiteral InterpolatedStringLiteralStart InterpolatedStringLiteralEnd InterpolatedStringLiteralMiddle MultilineInterpolatedStringLiteral MultilineInterpolatedStringLiteralStart MultilineInterpolatedStringLiteralEnd MultilineInterpolatedStringLiteralMiddle VariableName ArrayExpression braceStart braceEnd MemberExpression PropertyName AssignmentExpression BinaryExpression ClosedRange HalfOpenRange UnaryExpression CallExpression CallArgument ArgumentName AttributeExpression AttributeName Block bracketStart bracketEnd RepeatStatement Repeat ForStatement For In SwitchStatement Switch SwitchBlock Comment MultilineComment SwitchDefault Default SwitchCase Case VariableAssignmentExpression Var Let Type GuardStatement Guard ElseStatement Else IfStatement If ImportDeclaration Import ModuleName VariableDeclaration Public Open Internal Private FilePrivate FunctionDeclaration Func FunctionName ArgumentList Argument ArgumentLabel AnyArgumentLabel ReturnType Continue Break ReturnExpression",maxTerm:139,nodeProps:[[Nr.openedBy,19,"braceEnd",20,"braceStart",34,"bracketEnd",35,"bracketStart"]],skippedNodes:[0],repeatNodeCount:9,tokenData:"01n~R#rOP)]XY)]YZ)qZ[)][])]]^)qpq)]qr)vrs*]st?Quv!<rvw!=Pxy!=^yz!=wz{#%X{|#%f|}#%s}!O#%x!O!P#&_!P!Q#&z!Q!R#(_!R![#*S![!]#,Y!^!_#,_!_!`#,l!`!a#-R!b!c#-`!c!d#-e!d!u#2f!u!v#<n!v!x#2f!x!y#Kq!y!}#2f!}#O$,t#P#Q$,y#Q#R$-O#R#S$-T#T#U#2f#U#V$2d#V#W$Kb#W#X&&h#X#Y&Ih#Y#Z'/h#Z#[)7x#[#]#2f#]#^*!v#^#`#2f#`#a+;Q#a#b#2f#b#c+JP#c#d,+O#d#e,?O#e#f#2f#f#g-MV#g#h.=U#h#i/-W#i#j#2f#j#k/7Y#k#l/FU#l#o#2f#o#p01V#p#q01[#q#r01i$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?Cl?DR#2f?DT?Mn#2f~)bT!}~OP)]XY)]Z[)][])]pq)]~)vO#P~~){P#r~!_!`*O~*TP#i~!_!`*W~*]O#k~~*`VOY*uZ]*u^r*urs4`s#O*u#O#P+d#P~*u~*xVOY*uZ]*u^r*urs+_s#O*u#O#P+d#P~*u~+dOV~~+gYrs*ust,Vwx*uxy4Z!Q!R*u#O#P*u#b#c*u#f#g*u#h#i*u#i#j,r~,YWrs*uwx*u!Q!R*u#O#P*u#b#c*u#f#g*u#h#i*u#i#j,r~,uP#o#p,x~,{[!Q!R-q!R!S-q!S!T-q!T!U-q!U!V-q!V!W-q!W!X-q!X!Y-q!Y!Z-q!Z![-q!c!i-q#T#Z-q~-t]!Q!R.m!R!S.m!S!T.m!T!U.m!U!V.m!V!W.m!W!X.m!X!Y.m!Y!Z.m!Z![.m!c!i.m#T#Z.m#q#r*u~.p]!Q!R/i!R!S/i!S!T/i!T!U/i!U!V/i!V!W/i!W!X/i!X!Y/i!Y!Z/i!Z![/i!c!i/i#T#Z/i#q#r*u~/l]!Q!R0e!R!S0e!S!T0e!T!U0e!U!V0e!V!W0e!W!X0e!X!Y0e!Y!Z0e!Z![0e!c!i0e#T#Z0e#q#r*u~0h]!Q!R1a!R!S1a!S!T1a!T!U1a!U!V1a!V!W1a!W!X1a!X!Y1a!Y!Z1a!Z![1a!c!i1a#T#Z1a#q#r*u~1d]!Q!R2]!R!S2]!S!T2]!T!U2]!U!V2]!V!W2]!W!X2]!X!Y2]!Y!Z2]!Z![2]!c!i2]#T#Z2]#q#r*u~2`]!Q!R3X!R!S3X!S!T3X!T!U3X!U!V3X!V!W3X!W!X3X!X!Y3X!Y!Z3X!Z![3X!c!i3X#T#Z3X#q#r*u~3[]!Q!R4T!R!S4T!S!T4T!T!U4T!U!V4T!V!W4T!W!X4T!X!Y4T!Y!Z4T!Z![4T!c!i4T#T#Z4T#q#r*u~4WP#q#r*u~4`OY~~4ePV~rs4h~4kTOr4hrs4zs#O4h#O#P5]#P~4h~4}Prs5Q~5TPrs5W~5]OW~~5`^XY6[YZ4h]^4hpq6[rs4hst6kwx4hxy>{!Q!R4h#O#P4h#b#c4h#f#g4h#h#i4h#i#j7d~6_SXY6[YZ4h]^4hpq6[~6n[XY6[YZ4h]^4hpq6[rs4hwx4h!Q!R4h#O#P4h#b#c4h#f#g4h#h#i4h#i#j7d~7gP#o#p7j~7m[!Q!R8c!R!S8c!S!T8c!T!U8c!U!V8c!V!W8c!W!X8c!X!Y8c!Y!Z8c!Z![8c!c!i8c#T#Z8c~8f]!Q!R9_!R!S9_!S!T9_!T!U9_!U!V9_!V!W9_!W!X9_!X!Y9_!Y!Z9_!Z![9_!c!i9_#T#Z9_#q#r4h~9b]!Q!R:Z!R!S:Z!S!T:Z!T!U:Z!U!V:Z!V!W:Z!W!X:Z!X!Y:Z!Y!Z:Z!Z![:Z!c!i:Z#T#Z:Z#q#r4h~:^]!Q!R;V!R!S;V!S!T;V!T!U;V!U!V;V!V!W;V!W!X;V!X!Y;V!Y!Z;V!Z![;V!c!i;V#T#Z;V#q#r4h~;Y]!Q!R<R!R!S<R!S!T<R!T!U<R!U!V<R!V!W<R!W!X<R!X!Y<R!Y!Z<R!Z![<R!c!i<R#T#Z<R#q#r4h~<U]!Q!R<}!R!S<}!S!T<}!T!U<}!U!V<}!V!W<}!W!X<}!X!Y<}!Y!Z<}!Z![<}!c!i<}#T#Z<}#q#r4h~=Q]!Q!R=y!R!S=y!S!T=y!T!U=y!U!V=y!V!W=y!W!X=y!X!Y=y!Y!Z=y!Z![=y!c!i=y#T#Z=y#q#r4h~=|]!Q!R>u!R!S>u!S!T>u!T!U>u!U!V>u!V!W>u!W!X>u!X!Y>u!Y!Z>u!Z![>u!c!i>u#T#Z>u#q#r4h~>xP#q#r4h~?QO^~~?TQrs?Zst?Q~?^VOY?sZ]?s^r?srs!$[s#O?s#O#PAg#P~?s~?vVOY?sZ]?s^r?srs@]s#O?s#O#PAg#P~?s~@`WOY?sZ]?s^r?srs@]st@xt#O?s#O#PAg#P~?s~@}WV~OY?sZ]?s^r?srs@]st@xt#O?s#O#PAg#P~?s~AjcOY?sZ]?s^r?srs@]stButw?swx?sx!Q?s!Q!R?s!R#O?s#O#PAg#P#b?s#b#c?s#c#f?s#f#g?s#g#h?s#h#i?s#i#jDQ#j~?s~BxbOY?sZ]?s^r?srs@]sw?swx?sx!Q?s!Q!R?s!R#O?s#O#PAg#P#b?s#b#c?s#c#f?s#f#g?s#g#h?s#h#i?s#i#jDQ#j~?s~DTXOY?sZ]?s^r?srs@]s#O?s#O#PAg#P#o?s#o#pDp#p~?s~DsfOY?sZ]?s^r?srs@]s!Q?s!Q!RFX!R!SFX!S!TFX!T!UFX!U!VFX!V!WFX!W!XFX!X!YFX!Y!ZFX!Z![FX![!c?s!c!iFX!i#O?s#O#PAg#P#T?s#T#ZFX#Z~?s~F[hOY?sZ]?s^r?srs@]s!Q?s!Q!RGv!R!SGv!S!TGv!T!UGv!U!VGv!V!WGv!W!XGv!X!YGv!Y!ZGv!Z![Gv![!c?s!c!iGv!i#O?s#O#PAg#P#T?s#T#ZGv#Z#q?s#q#r?s#r~?s~GyhOY?sZ]?s^r?srs@]s!Q?s!Q!RIe!R!SIe!S!TIe!T!UIe!U!VIe!V!WIe!W!XIe!X!YIe!Y!ZIe!Z![Ie![!c?s!c!iIe!i#O?s#O#PAg#P#T?s#T#ZIe#Z#q?s#q#r?s#r~?s~IhhOY?sZ]?s^r?srs@]s!Q?s!Q!RKS!R!SKS!S!TKS!T!UKS!U!VKS!V!WKS!W!XKS!X!YKS!Y!ZKS!Z![KS![!c?s!c!iKS!i#O?s#O#PAg#P#T?s#T#ZKS#Z#q?s#q#r?s#r~?s~KVhOY?sZ]?s^r?srs@]s!Q?s!Q!RLq!R!SLq!S!TLq!T!ULq!U!VLq!V!WLq!W!XLq!X!YLq!Y!ZLq!Z![Lq![!c?s!c!iLq!i#O?s#O#PAg#P#T?s#T#ZLq#Z#q?s#q#r?s#r~?s~LthOY?sZ]?s^r?srs@]s!Q?s!Q!RN`!R!SN`!S!TN`!T!UN`!U!VN`!V!WN`!W!XN`!X!YN`!Y!ZN`!Z![N`![!c?s!c!iN`!i#O?s#O#PAg#P#T?s#T#ZN`#Z#q?s#q#r?s#r~?s~NchOY?sZ]?s^r?srs@]s!Q?s!Q!R! }!R!S! }!S!T! }!T!U! }!U!V! }!V!W! }!W!X! }!X!Y! }!Y!Z! }!Z![! }![!c?s!c!i! }!i#O?s#O#PAg#P#T?s#T#Z! }#Z#q?s#q#r?s#r~?s~!!QhOY?sZ]?s^r?srs@]s!Q?s!Q!R!#l!R!S!#l!S!T!#l!T!U!#l!U!V!#l!V!W!#l!W!X!#l!X!Y!#l!Y!Z!#l!Z![!#l![!c?s!c!i!#l!i#O?s#O#PAg#P#T?s#T#Z!#l#Z#q?s#q#r?s#r~?s~!#oXOY?sZ]?s^r?srs@]s#O?s#O#PAg#P#q?s#q#r?s#r~?s~!$_WOY?sZ]?s^r?srs!$wst@xt#O?s#O#PAg#P~?s~!$zYOY?sYZ!%jZ]?s]^!%j^r?srs@]st@xt#O?s#O#PAg#P~?s~!%mVOY!&SZ]!&S^r!&Srs!*^s#O!&S#O#P!'^#P~!&S~!&VVOY!&SYZ!&lZ]!&S]^!&l^#O!&S#O#P!'^#P~!&S~!&oPrs!&r~!&uPrs!&x~!&{Prs!'O~!'RPst!'U~!'ZPW~st!'U~!'ahOX!&SXY!({YZ!)nZ]!&S]^!)n^p!&Spq!({qr!&Srs!&Sst!,|tw!&Swx!&Sx!Q!&S!Q!R!&S!R#O!&S#O#P!'^#P#b!&S#b#c!&S#c#f!&S#f#g!&S#g#h!&S#h#i!&S#i#j!.h#j~!&S~!)OYOX!&SXY!({YZ!)nZ]!&S]^!)n^p!&Spq!({q#O!&S#O#P!'^#P~!&S~!)qXOY!&SYZ!&lZ]!&S]^!&l^r!&Srs!*^s#O!&S#O#P!'^#P~!&S~!*aXOY!&SYZ!&lZ]!&S]^!&l^r!&Srs!*|s#O!&S#O#P!'^#P~!&S~!+PXOY!&SYZ!&lZ]!&S]^!&l^r!&Srs!+ls#O!&S#O#P!'^#P~!&S~!+oXOY!&SYZ!&lZ]!&S]^!&l^s!&Sst!,[t#O!&S#O#P!'^#P~!&S~!,aXW~OY!&SYZ!&lZ]!&S]^!&l^s!&Sst!,[t#O!&S#O#P!'^#P~!&S~!-PgOX!&SXY!({YZ!)nZ]!&S]^!)n^p!&Spq!({qr!&Srs!&Ssw!&Swx!&Sx!Q!&S!Q!R!&S!R#O!&S#O#P!'^#P#b!&S#b#c!&S#c#f!&S#f#g!&S#g#h!&S#h#i!&S#i#j!.h#j~!&S~!.kXOY!&SYZ!&lZ]!&S]^!&l^#O!&S#O#P!'^#P#o!&S#o#p!/W#p~!&S~!/ZfOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!0o!R!S!0o!S!T!0o!T!U!0o!U!V!0o!V!W!0o!W!X!0o!X!Y!0o!Y!Z!0o!Z![!0o![!c!&S!c!i!0o!i#O!&S#O#P!'^#P#T!&S#T#Z!0o#Z~!&S~!0rhOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!2^!R!S!2^!S!T!2^!T!U!2^!U!V!2^!V!W!2^!W!X!2^!X!Y!2^!Y!Z!2^!Z![!2^![!c!&S!c!i!2^!i#O!&S#O#P!'^#P#T!&S#T#Z!2^#Z#q!&S#q#r!&S#r~!&S~!2ahOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!3{!R!S!3{!S!T!3{!T!U!3{!U!V!3{!V!W!3{!W!X!3{!X!Y!3{!Y!Z!3{!Z![!3{![!c!&S!c!i!3{!i#O!&S#O#P!'^#P#T!&S#T#Z!3{#Z#q!&S#q#r!&S#r~!&S~!4OhOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!5j!R!S!5j!S!T!5j!T!U!5j!U!V!5j!V!W!5j!W!X!5j!X!Y!5j!Y!Z!5j!Z![!5j![!c!&S!c!i!5j!i#O!&S#O#P!'^#P#T!&S#T#Z!5j#Z#q!&S#q#r!&S#r~!&S~!5mhOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!7X!R!S!7X!S!T!7X!T!U!7X!U!V!7X!V!W!7X!W!X!7X!X!Y!7X!Y!Z!7X!Z![!7X![!c!&S!c!i!7X!i#O!&S#O#P!'^#P#T!&S#T#Z!7X#Z#q!&S#q#r!&S#r~!&S~!7[hOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!8v!R!S!8v!S!T!8v!T!U!8v!U!V!8v!V!W!8v!W!X!8v!X!Y!8v!Y!Z!8v!Z![!8v![!c!&S!c!i!8v!i#O!&S#O#P!'^#P#T!&S#T#Z!8v#Z#q!&S#q#r!&S#r~!&S~!8yhOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!:e!R!S!:e!S!T!:e!T!U!:e!U!V!:e!V!W!:e!W!X!:e!X!Y!:e!Y!Z!:e!Z![!:e![!c!&S!c!i!:e!i#O!&S#O#P!'^#P#T!&S#T#Z!:e#Z#q!&S#q#r!&S#r~!&S~!:hhOY!&SYZ!&lZ]!&S]^!&l^!Q!&S!Q!R!<S!R!S!<S!S!T!<S!T!U!<S!U!V!<S!V!W!<S!W!X!<S!X!Y!<S!Y!Z!<S!Z![!<S![!c!&S!c!i!<S!i#O!&S#O#P!'^#P#T!&S#T#Z!<S#Z#q!&S#q#r!&S#r~!&S~!<VXOY!&SYZ!&lZ]!&S]^!&l^#O!&S#O#P!'^#P#q!&S#q#r!&S#r~!&S~!<wP#a~!_!`!<z~!=PO#_~~!=UP#o~vw!=X~!=^O#p~o!=cP#RVyz!=fh!=mP!n`!VW!a!b!=ph!=wO!n`!VWV!=|X#SSOY!>iYZ!?XZ]!>i]^!?X^r!>irs!Iis#O!>i#O#P!Iq#P~!>iR!>lXOY!>iYZ!?XZ]!>i]^!?X^r!>irs!Iis#O!>i#O#P!Iq#P~!>iQ!?[TOr!?Xrs!?ks#O!?X#O#P!?|#P~!?XQ!?nPrs!?qQ!?tPrs!?wQ!?|O_QQ!@P]XY!@xYZ!?X]^!?Xpq!@xrs!?Xst!AXwx!?X!Q!R!?X#O#P!?X#b#c!?X#f#g!?X#h#i!?X#i#j!BQQ!@{SXY!@xYZ!?X]^!?Xpq!@xQ!A[[XY!@xYZ!?X]^!?Xpq!@xrs!?Xwx!?X!Q!R!?X#O#P!?X#b#c!?X#f#g!?X#h#i!?X#i#j!BQQ!BTP#o#p!BWQ!BZ[!Q!R!CP!R!S!CP!S!T!CP!T!U!CP!U!V!CP!V!W!CP!W!X!CP!X!Y!CP!Y!Z!CP!Z![!CP!c!i!CP#T#Z!CPQ!CS]!Q!R!C{!R!S!C{!S!T!C{!T!U!C{!U!V!C{!V!W!C{!W!X!C{!X!Y!C{!Y!Z!C{!Z![!C{!c!i!C{#T#Z!C{#q#r!?XQ!DO]!Q!R!Dw!R!S!Dw!S!T!Dw!T!U!Dw!U!V!Dw!V!W!Dw!W!X!Dw!X!Y!Dw!Y!Z!Dw!Z![!Dw!c!i!Dw#T#Z!Dw#q#r!?XQ!Dz]!Q!R!Es!R!S!Es!S!T!Es!T!U!Es!U!V!Es!V!W!Es!W!X!Es!X!Y!Es!Y!Z!Es!Z![!Es!c!i!Es#T#Z!Es#q#r!?XQ!Ev]!Q!R!Fo!R!S!Fo!S!T!Fo!T!U!Fo!U!V!Fo!V!W!Fo!W!X!Fo!X!Y!Fo!Y!Z!Fo!Z![!Fo!c!i!Fo#T#Z!Fo#q#r!?XQ!Fr]!Q!R!Gk!R!S!Gk!S!T!Gk!T!U!Gk!U!V!Gk!V!W!Gk!W!X!Gk!X!Y!Gk!Y!Z!Gk!Z![!Gk!c!i!Gk#T#Z!Gk#q#r!?XQ!Gn]!Q!R!Hg!R!S!Hg!S!T!Hg!T!U!Hg!U!V!Hg!V!W!Hg!W!X!Hg!X!Y!Hg!Y!Z!Hg!Z![!Hg!c!i!Hg#T#Z!Hg#q#r!?XQ!Hj]!Q!R!Ic!R!S!Ic!S!T!Ic!T!U!Ic!U!V!Ic!V!W!Ic!W!X!Ic!X!Y!Ic!Y!Z!Ic!Z![!Ic!c!i!Ic#T#Z!Ic#q#r!?XQ!IfP#q#r!?XR!InPZPrs!?qR!It^XY!@xYZ!?X]^!?Xpq!@xrs!>ist!Jpwx!>ixy#%Q!Q!R!>i#O#P!>i#b#c!>i#f#g!>i#h#i!>i#i#j!KiR!Js[XY!@xYZ!?X]^!?Xpq!@xrs!>iwx!>i!Q!R!>i#O#P!>i#b#c!>i#f#g!>i#h#i!>i#i#j!KiR!KlP#o#p!KoR!Kr[!Q!R!Lh!R!S!Lh!S!T!Lh!T!U!Lh!U!V!Lh!V!W!Lh!W!X!Lh!X!Y!Lh!Y!Z!Lh!Z![!Lh!c!i!Lh#T#Z!LhR!Lk]!Q!R!Md!R!S!Md!S!T!Md!T!U!Md!U!V!Md!V!W!Md!W!X!Md!X!Y!Md!Y!Z!Md!Z![!Md!c!i!Md#T#Z!Md#q#r!>iR!Mg]!Q!R!N`!R!S!N`!S!T!N`!T!U!N`!U!V!N`!V!W!N`!W!X!N`!X!Y!N`!Y!Z!N`!Z![!N`!c!i!N`#T#Z!N`#q#r!>iR!Nc]!Q!R# [!R!S# [!S!T# [!T!U# [!U!V# [!V!W# [!W!X# [!X!Y# [!Y!Z# [!Z![# [!c!i# [#T#Z# [#q#r!>iR# _]!Q!R#!W!R!S#!W!S!T#!W!T!U#!W!U!V#!W!V!W#!W!W!X#!W!X!Y#!W!Y!Z#!W!Z![#!W!c!i#!W#T#Z#!W#q#r!>iR#!Z]!Q!R##S!R!S##S!S!T##S!T!U##S!U!V##S!V!W##S!W!X##S!X!Y##S!Y!Z##S!Z![##S!c!i##S#T#Z##S#q#r!>iR##V]!Q!R#$O!R!S#$O!S!T#$O!T!U#$O!U!V#$O!V!W#$O!W!X#$O!X!Y#$O!Y!Z#$O!Z![#$O!c!i#$O#T#Z#$O#q#r!>iR#$R]!Q!R#$z!R!S#$z!S!T#$z!T!U#$z!U!V#$z!V!W#$z!W!X#$z!X!Y#$z!Y!Z#$z!Z![#$z!c!i#$z#T#Z#$z#q#r!>iR#$}P#q#r!>iR#%XO[P`Q~#%^P#b~!_!`#%a~#%fO#^~~#%kP#c~!_!`#%n~#%sO#[~~#%xO#W~~#%}Q#dV!_!`#&T!`!a#&Y~#&YO#]~W#&_O$OW~#&dP#X~!O!P#&g~#&jQ!O!P#&p!^!_#&u~#&uOi~~#&zOj~~#'PR#`~z{#'Y!P!Q#'}!_!`#(Y~#']ROz#'Yz{#'f{~#'Y~#'iTOz#'Yz{#'f{!P#'Y!P!Q#'x!Q~#'Y~#'}O}~~#(SQ|~OY#'}Z~#'}~#(_O#Z~~#(dWS~!O!P#(|!Q![#*S!g!h#)e#R#S#*S#U#V#*h#X#Y#)e#c#d#+S#l#m#+h~#)PP!Q![#)S~#)XSS~!Q![#)S!g!h#)e#R#S#)S#X#Y#)e~#)hR{|#)q}!O#)q!Q![#)w~#)tP!Q![#)w~#)|QS~!Q![#)w#R#S#)w~#*XTS~!O!P#(|!Q![#*S!g!h#)e#R#S#*S#X#Y#)e~#*kR!Q!R#*t!R!S#*t#R#S#*t~#*yRS~!Q!R#*t!R!S#*t#R#S#*t~#+VQ!Q!Y#+]#R#S#+]~#+bQS~!Q!Y#+]#R#S#+]~#+kS!Q![#+w!c!i#+w#R#S#+w#T#Z#+w~#+|SS~!Q![#+w!c!i#+w#R#S#+w#T#Z#+w~#,_O#t~~#,dP#e~!_!`#,g~#,lO#f~~#,qP#Y~!_!`#,t~#,yP#j~!_!`#,|~#-RO#l~~#-WP#g~!_!`#-Z~#-`O#h~~#-eO#u~o#-n!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#b#2f#b#c#7m#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo#2o!j!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo#7dP;=`<%l#2fo#7jP;=`<%j#2fo#7v!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#m#2f#m#n#2f#n#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo#<w!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y#Ao#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo#Ax!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a#Fp#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo#Fy!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#Y#2f#Y#Z#2f#Z#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo#Kz!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#c#2f#c#d$!r#d#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$!{!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^$'s#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$'|!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#W#2f#W#X#2f#X#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2f~$,yOc~~$-OOd~~$-TO#n~o$-^!o!n`!VW#UVOP$2_XY$2_Z[$2_[]$2_pq$2_!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fT$2dO#}To$2m!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g$7e#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$7n!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y$<f#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$<o!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U$Ad#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$Am!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#_#2f#_#`$Fe#`#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$Fp!j!n`!VW!pP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo$Kk!m!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U%!f#U#c#2f#c#d%1e#d#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%!o!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#g#2f#g#h%'g#h#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%'p!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y%,h#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%,s!j!n`!VW!RP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%1n!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#b#2f#b#c%6f#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%6o!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i%;g#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%;p!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^%@h#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%@q!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#b#2f#b#c%Ei#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%Er!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#i#2f#i#j%Jj#j#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo%Js!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y& k#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo& v!j!n`!VW!oP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&&q!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y&+i#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&+r!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#Y#2f#Y#Z&0j#Z#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&0s!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U&5h#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&5q!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#i#2f#i#j&:i#j#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&:r!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a&?j#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&?s!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i&Dk#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&Dv!j!n`!VW!PP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&Iq!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a&Ni#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo&Nr!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#g#2f#g#h'%j#h#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'%s!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y'*k#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'*v!j!n`!VW!ZP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'/q!q!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U'4x#U#]#2f#]#^'Hx#^#c#2f#c#d(L{#d#i#2f#i#j)(y#j#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'5R!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a'9y#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo':S!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#g#2f#g#h'>z#h#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'?T!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y'C{#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'DW!j!n`!VWTV#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'IR!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a'My#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo'NS!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y($z#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(%T!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#d#2f#d#e(){#e#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(*U!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g(.|#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(/V!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^(3}#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(4W!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#j#2f#j#k(9O#k#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(9X!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U(=|#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(>V!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i(B}#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(CW!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y(HO#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(HZ!j!n`!VW!fP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo(MU!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g)#|#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)$X!j!n`!VWwP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo))S!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#b#2f#b#c)-z#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo).T!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#V#2f#V#W)2{#W#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)3W!j!n`!VW!hP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)8R!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#i#2f#i#j)<y#j#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)=S!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U)Aw#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)BQ!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g)Fx#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)GR!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#W#2f#W#X)Ky#X#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo)LU!j!n`!VW!XP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*#P!o!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#Y#2f#Y#Z*(Q#Z#a#2f#a#b*,}#b#c*FO#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*(]!j!n`!VW!]P#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*-W!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#d#2f#d#e*2O#e#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*2X!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#c#2f#c#d*7P#d#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*7Y!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g*<Q#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*<Z!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i*AR#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*A^!j!n`!VW!_P#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*FZ!l!n`!VWxQ#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i*KR#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo*K[!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y+!S#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+!]!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g+'T#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+'^!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#b#2f#b#c+,U#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+,_!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U+1S#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+1]!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a+6T#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+6`!j!n`!VW!dP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+;Z!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y+@R#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+@[!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i+ES#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+E_!j!n`!VW!UP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo+JY!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^, Q#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo, Z!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a,&R#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,&^!j!n`!VWUV#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,+X!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#d#2f#d#e,0P#e#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,0Y!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y,5Q#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,5Z!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#b#2f#b#c,:R#c#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,:^!j!n`!VW!cP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,?X!n!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g,DV#g#i#2f#i#j-4U#j#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,D`!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^,IW#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,Ia!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#j#2f#j#k,NX#k#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo,Nb!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U-%V#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-%`!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i-*W#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-*a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y-/X#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-/d!j!n`!VW!eP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-4_!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U#2f#U#V-9V#V#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-9`!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a->W#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo->a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^-CX#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-Cb!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#V#2f#V#W-HY#W#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-He!j!n`!VW!bP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo-M`!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y.$W#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.$a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#d#2f#d#e.)X#e#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.)b!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y..Y#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo..c!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U.3W#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.3a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i.8X#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.8d!j!n`!VWuP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.=_!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#k#2f#k#l.BV#l#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.B`!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^.GW#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.Ga!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#h#2f#h#i.LX#i#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo.Lb!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#V#2f#V#W/#Y#W#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/#c!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#[#2f#[#]/(Z#]#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/(f!j!n`!VWzP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/-a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g/2X#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/2b!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#i#2f#i#j'>z#j#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/7c!k!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#U/<W#U#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/<a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#f#2f#f#g/AX#g#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/Ad!j!n`!VW!TP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/F_!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#[#2f#[#]/KV#]#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo/K`!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#]#2f#]#^0!W#^#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo0!a!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#`#2f#`#a0'X#a#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo0'b!l!n`!VW#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#X#2f#X#Y0,Y#Y#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2fo0,e!j!n`!VWRP#UV!Q![#2f!a!b!=p!c!}#2f#R#S#2f#T#o#2f$n$o#2f$p$q#2f$s$t#2f$u$v#2f$x$|#2f$}%R#2f%S%V#2f%W%o#2f%p&a#2f&b&j#2f&j1p#2f1p4U#2f4U#BY#2f#BZ#Jx#2f#Jy$<j#2f$<j$=|#2f$=|$IS#2f$I_$Ib#2f$JO$JT#2f$Je$Jg#2f$Jz$J{#2f$KW$Kh#2f$Kh$Ml#2f$Ml$Nn#2f$Nn%#t#2f%3d%6z#2f%Dl%E[#2f&/x&;O#2f&=t&FU#2f&FY&F^#2f&Fw&GW#2f&GX&Gh#2f&Gh;'S#2f;'S;(e#7a;(e;(f#7g;(f;)w#7a;)w;)x#7g;)x;+Z#7a;+Z;+[#7g;+[;,m#7a;,m;,n#7g;,n;.P#7a;.P;.Q#7g;.Q;/c#7a;/c;/d#7g;/d;0u#7a;0u;0v#7g;0v;2X#7a;2X;2Y#7g;2Y;3k#7a;3k;3l#7g;3l;4}#7a;4};5O#7g;5O;6a#7a;6a;6b#7g;6b;7s#7a;7s;7t#7g;7t;9V#7a;9V;9W#7g;9W;:i#7a;:i;:j#7g?&r?>`#2f?>b?Ah#2f?BY?C[#2f?C[?Cl#2f?Cl?DR#2f?DT?Mn#2f~01[Or~~01aP#m~#p#q01d~01iO#q~~01nOs~",tokenizers:[0,1,2,3,4],topRules:{Swift:[0,1]},specialized:[{term:98,get:t=>Vu[t]||-1}],tokenPrec:6072}),Uu=wo.define({parser:ju.configure({props:[Nc({NilLiteral:wO.null,BooleanLiteral:wO.bool,NumericLiteral:wO.number,StaticStringLiteral:wO.string,MultilineStaticStringLiteral:wO.string,InterpolatedStringLiteralStart:wO.string,InterpolatedStringLiteralMiddle:wO.string,InterpolatedStringLiteralEnd:wO.string,MultilineInterpolatedStringLiteral:wO.string,MultilineInterpolatedStringLiteralStart:wO.string,MultilineInterpolatedStringLiteralMiddle:wO.string,MultilineInterpolatedStringLiteralEnd:wO.string,Comment:wO.lineComment,MultilineComment:wO.blockComment,ReturnType:wO.name,VariableName:wO.definition(wO.variableName),ArgumentName:wO.name,ArgumentLabel:wO.name,CallExpression:wO.function(wO.propertyName),MemberExpression:wO.function(wO.propertyName),PropertyName:wO.function(wO.propertyName),Type:wO.typeName,ReturnType:wO.typeName,ReturnExpression:wO.moduleKeyword,ModuleName:wO.definition(wO.variableName),AttributeName:wO.moduleKeyword,Switch:wO.moduleKeyword,Case:wO.moduleKeyword,Default:wO.moduleKeyword,Break:wO.moduleKeyword,Continue:wO.moduleKeyword,Repeat:wO.moduleKeyword,While:wO.moduleKeyword,For:wO.moduleKeyword,Do:wO.moduleKeyword,In:wO.moduleKeyword,Public:wO.moduleKeyword,Open:wO.moduleKeyword,Internal:wO.moduleKeyword,Private:wO.moduleKeyword,FilePrivate:wO.moduleKeyword,Guard:wO.moduleKeyword,If:wO.moduleKeyword,Else:wO.moduleKeyword,Func:wO.moduleKeyword,Import:wO.moduleKeyword,Var:wO.moduleKeyword,Let:wO.moduleKeyword,"( )":wO.paren}),Go.add({IfStatement:Eo({except:/^\s*({|else\b)/}),Block:Bo({closing:"}"}),SwitchBlock:Bo({closing:"}"}),BlockComment:()=>-1}),Ko.add({Block:Ho,SwitchBlock:Ho,ArrayExpression:Ho})]}),languageData:{closeBrackets:{brackets:["(","[","{",'"']},indentOnInput:/^\s*(?:case |default:|\{|\}|<\/)$/,commentTokens:{block:{open:"/*",close:"*/"},line:"//",doc:"///"}}}),Ju=Uu.data.of({autocomplete:jh([{label:"var",type:"keyword"},{label:"let",type:"keyword"},{label:"func",type:"function"}])});let Mu={};window.cm=Mu,Mu.swiftSetup=[Qr(),Rr(),Hs(),cr(),yt.allowMultipleSelections.of(!0),No(),yO.fallback,Ba(),nl(),Rc(),Ic(),Ml(),_s.of([...ll,...Nf,...Oh,..._r,...Za,...Uc,...Xc,...UO]),jo.of("    "),_s.of([Lf]),new Co(Uu,[Ju])],Mu.javascriptSetup=[Qr(),Rr(),Hs(),cr(),yt.allowMultipleSelections.of(!0),No(),yO.fallback,Ba(),nl(),Rc(),Ic(),Ml(),_s.of([...ll,...Nf,...Oh,..._r,...Za,...Uc,...Xc,...UO]),jo.of("    "),_s.of([Lf]),function(t={}){let e=t.jsx?t.typescript?Cu:Yu:t.typescript?Zu:Xu;return new Co(e,Xu.data.of({autocomplete:(i=["LineComment","BlockComment","String"],n=jh(Ru),t=>{for(let e=yo(t.state).resolveInner(t.pos,-1);e;e=e.parent)if(i.indexOf(e.name)>-1)return null;return n(t)})}));var i,n}()],Mu.jsonSetup=[Qr(),Rr(),Hs(),cr(),yt.allowMultipleSelections.of(!0),No(),yO.fallback,Ba(),nl(),Rc(),Ic(),Ml(),_s.of([...ll,...Nf,...Oh,..._r,...Za,...Uc,...Xc,...UO]),jo.of("    "),_s.of([Lf]),mu()],Mu.minimalSetup=[Qr(),Rr(),Hs(),cr(),yt.allowMultipleSelections.of(!0),No(),yO.fallback,Ba(),nl(),_s.of([...ll,...Nf,...Oh,..._r,...Uc,...Xc,...UO]),jo.of("    "),_s.of([Lf]),mu()];const Du=Vs.baseTheme({"&.cm-editor":{fontSize:"1rem",flex:"1 1 auto",alignSelf:"stretch",minHeight:"0px"},".cm-scroller":{fontFamily:"Roboto Mono, Courier New, monospace",overflow:"auto"}});Mu.endeavourJsonParse=function(t){try{return JSON.parse(t)}catch(t){return{}}},Mu.endeavourSend=function(t,e){let i=new XMLHttpRequest;i.onreadystatechange=function(){if(4==this.readyState){let n=i.getResponseHeader("Service-Response"),s=Mu.endeavourJsonParse(n);null==e&&(e=s.documentUUID);let r=Mu.endeavourDocuments[e];try{if(200!=this.status)r.didError(i.responseText);else{let e=Mu.endeavourJsonParse(i.responseText);switch(t.command){case"pull":r.didPull(s,e);break;case"push":r.didPush(s,e)}}switch(t.command){case"pull":Mu.endeavourIsPulling=!1,Mu.endeavourPullUpdates();break;case"push":Mu.endeavourIsPushing=!1}}catch(t){null!=r?r.didError(t):print(`Uncaught error: ${t}`)}}},i.open("POST","/");let n=sessionStorage.getItem("Session-Id");null!=n&&i.setRequestHeader("Session-Id",n),i.setRequestHeader("Pragma","no-cache"),i.setRequestHeader("Expires","-1"),i.setRequestHeader("Cache-Control","no-cache"),i.setRequestHeader("Content-Type","application/json;charset=UTF-8"),i.send(JSON.stringify(t))},Mu.endeavourDocuments={},Mu.endeavourIsPushing=!1,Mu.endeavourPushUpdates=function(t,e,i){if(0==Mu.endeavourIsPushing){let n={service:"EndeavourService",command:"push",documentUUID:t,version:e,updates:i};Mu.endeavourIsPushing=!0,Mu.endeavourSend(n,t)}},Mu.endeavourIsPulling=!1,Mu.endeavourPullUpdates=function(){if(0==Mu.endeavourIsPulling){var t=[],e=[];for(let i in Mu.endeavourDocuments){let n=Mu.endeavourDocuments[i];t.push(i),e.push(n.documentVersion())}let i={service:"EndeavourService",command:"pull",documentUUIDs:t,documentVersions:e};Mu.endeavourIsPulling=!0,Mu.endeavourSend(i)}},Mu.endeavourPullUpdates(),Mu.endeavourExtension=function(t,e){let i=t.documentUUID,n=t.version,s=Ui.fromClass(class{pushing=!1;constructor(t){this.statusCallback=e,this.documentUUID=i,this.view=t,Mu.endeavourDocuments[this.documentUUID]=this}update(t){t.docChanged&&this.push()}documentVersion(){return this.view.state.field(Xt).version||0}clientID(){return this.view.state.facet(Wt).clientID}push(){let t=Yt(this.view.state);0!=t.length&&(t=t.map((function(t){return{changes:t.changes.toJSON(),clientID:t.clientID}})),Mu.endeavourPushUpdates(this.documentUUID,this.documentVersion(),t))}didPush(t,e){Yt(this.view.state).length&&setTimeout((()=>this.push()),100)}didPull(t,i){let n=i.map((function(t){return{changes:y.fromJSON(t.changes),clientID:t.clientID}}));this.view.dispatch(function(t,e){let{version:i,unconfirmed:n}=t.field(Xt),{clientID:s}=t.facet(Wt);i+=e.length;let r=0;for(;r<e.length&&e[r].clientID==s;)r++;if(r&&(n=n.slice(r),e=e.slice(r)),!e.length)return t.update({annotations:[Rt.of(new kt(i,n))]});let o=e[0].changes,a=e[0].effects||[];for(let t=1;t<e.length;t++){let i=e[t];a=ut.mapEffects(a,i.changes),i.effects&&(a=a.concat(i.effects)),o=o.compose(i.changes)}return n.length&&(n=n.map((t=>{let e=t.changes.map(o);return o=o.map(t.changes,!0),new Pt(t.origin,e,ut.mapEffects(t.effects,o),s)})),a=ut.mapEffects(a,n.reduce(((t,e)=>t.compose(e.changes)),y.empty(n[0].changes.length)))),t.update({changes:o,effects:a,annotations:[dt.addToHistory.of(!1),dt.remote.of(!0),Rt.of(new kt(i,n))],filter:!1})}(this.view.state,n)),null!=e&&e(`Document ${this.documentUUID}`,!1)}didError(t){null!=e&&e(t,!0)}destroy(){Mu.endeavourDocuments[this.documentUUID]=void 0}});return[Zt({startingDocumentVersion:n}),s]},Mu.CreateEditor=function(t,e,i="",n=!0){let s=document.getElementById(t);return e.push(Du),n?(e.push(function(t={}){return[pa.of(t),fa(),Qa]}()),e.push(function(t={}){let e=Object.assign(Object.assign({},Ua),t),i=new Ja(e,!0),n=new Ja(e,!1),s=Ui.fromClass(class{constructor(t){this.from=t.viewport.from,this.markers=this.buildMarkers(t)}update(t){(t.docChanged||t.viewportChanged||t.startState.facet(Yo)!=t.state.facet(Yo)||t.startState.field(Pa,!1)!=t.state.field(Pa,!1))&&(this.markers=this.buildMarkers(t.view))}buildMarkers(t){let e=new zt;for(let s of t.viewportLineBlocks){let r=ka(t.state,s.from,s.to)?n:ta(t.state,s.from,s.to)?i:null;r&&e.add(s.from,s.from,r)}return e.finish()}}),{domEventHandlers:r}=e;return[s,ra({class:"cm-foldGutter",markers(t){var e;return(null===(e=t.plugin(s))||void 0===e?void 0:e.markers)||It.empty},initialSpacer:()=>new Ja(e,!1),domEventHandlers:Object.assign(Object.assign({},r),{click:(t,e,i)=>{if(r.click&&r.click(t,e,i))return!0;let n=ka(t.state,e.from,e.to);if(n)return t.dispatch({effects:ya.of(n)}),!0;let s=ta(t.state,e.from,e.to);return!!s&&(t.dispatch({effects:wa.of(s)}),!0)}})}),Va()]}()),e.push(va),e.push(wr)):(e.push(Vs.editable.of(!1)),e.push(yt.readOnly.of(!0))),new Vs({state:yt.create({doc:u.of(i.split("\n")),extensions:e,tabSize:4}),parent:s})}}();

"""###
private let compressedEditorBundleJs = Data(base64Encoded:"")!

public extension EndeavourPamphlet.Public.Endeavour {
    static func Robotomono400Woff() -> Data {
    #if DEBUG
        let fileOnDiskPath = "/Volumes/Development/Development/chimerasw3/Endeavour/Resources/public/endeavour/robotomono_400.woff"
        if let contents = try? Data(contentsOf:URL(fileURLWithPath: fileOnDiskPath)) {
            return contents
        }
        return Data()
    #else
        return uncompressedRobotomono400Woff
    #endif
    }
}

private let uncompressedRobotomono400Woff = Data(base64Encoded:"")!

public extension EndeavourPamphlet.Public.Endeavour {
    static func Robotomono500Woff() -> Data {
    #if DEBUG
        let fileOnDiskPath = "/Volumes/Development/Development/chimerasw3/Endeavour/Resources/public/endeavour/robotomono_500.woff"
        if let contents = try? Data(contentsOf:URL(fileURLWithPath: fileOnDiskPath)) {
            return contents
        }
        return Data()
    #else
        return uncompressedRobotomono500Woff
    #endif
    }
}

private let uncompressedRobotomono500Woff = Data(base64Encoded:"")!

