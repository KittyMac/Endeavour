import Foundation

// swiftlint:disable all

public extension EndeavourPamphlet.Public.Endeavour {
    #if DEBUG
    static func Robotomono500Woff() -> Data {
        let fileOnDiskPath = "/Users/rjbowli/Development/chimerasw/Endeavour/Resources/public/endeavour/robotomono_500.woff"
        if let contents = try? Data(contentsOf:URL(fileURLWithPath: fileOnDiskPath)) {
            return contents
        }
        return Data()
    }
    #else
    static func Robotomono500Woff() -> Data {
        return uncompressedRobotomono500Woff
    }
    #endif
}

private let uncompressedRobotomono500Woff = Data(base64Encoded:"")!

public extension EndeavourPamphlet.Public.Endeavour {
    #if DEBUG
    static func EditorBundleJs() -> String {
        let fileOnDiskPath = "/Users/rjbowli/Development/chimerasw/Endeavour/Resources/public/endeavour/editor.bundle.js"
        if let contents = try? String(contentsOf:URL(fileURLWithPath: fileOnDiskPath)) {
            if contents.hasPrefix("#define PAMPHLET_PREPROCESSOR") {
                do {
                    let task = Process()
                    task.executableURL = URL(fileURLWithPath: "/opt/homebrew/bin/pamphlet")
                    task.arguments = ["preprocess", fileOnDiskPath]
                    let outputPipe = Pipe()
                    task.standardOutput = outputPipe
                    try task.run()
                    let outputData = outputPipe.fileHandleForReading.readDataToEndOfFile()
                    let output = String(decoding: outputData, as: UTF8.self)
                    return output
                } catch {
                    return "Failed to use /opt/homebrew/bin/pamphlet to preprocess the requested file"
                }
            }
            return contents
        }
        return String()
    }
    #else
    static func EditorBundleJs() -> StaticString {
        return uncompressedEditorBundleJs
    }
    #endif
    static func EditorBundleJsGzip() -> Data {
        return compressedEditorBundleJs
    }
}

private let uncompressedEditorBundleJs: StaticString = ###"""
!function(){"use strict";let t="lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((t=>t?parseInt(t,36):1));for(let e=1;e<t.length;e++)t[e]+=t[e-1];function e(e){for(let i=1;i<t.length;i+=2)if(t[i]>e)return t[i-1]<=e;return!1}function i(t){return t>=127462&&t<=127487}function n(t,e,i=!0,n=!0){return(i?r:s)(t,e,n)}function r(t,n,r){if(n==t.length)return n;n&&o(t.charCodeAt(n))&&a(t.charCodeAt(n-1))&&n--;let s=l(t,n);for(n+=O(s);n<t.length;){let o=l(t,n);if(8205==s||8205==o||r&&e(o))n+=O(o),s=o;else{if(!i(o))break;{let e=0,r=n-2;for(;r>=0&&i(l(t,r));)e++,r-=2;if(e%2==0)break;n+=2}}}return n}function s(t,e,i){for(;e>0;){let n=r(t,e-2,i);if(n<e)return n;e--}return 0}function o(t){return t>=56320&&t<57344}function a(t){return t>=55296&&t<56320}function l(t,e){let i=t.charCodeAt(e);if(!a(i)||e+1==t.length)return i;let n=t.charCodeAt(e+1);return o(n)?n-56320+(i-55296<<10)+65536:i}function h(t){return t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10),56320+(1023&t)))}function O(t){return t<65536?1:2}function c(t,e,i=t.length){let r=0;for(let s=0;s<i;)9==t.charCodeAt(s)?(r+=e-r%e,s++):(r++,s=n(t,s));return r}function u(t,e,i,r){for(let r=0,s=0;;){if(s>=e)return r;if(r==t.length)break;s+=9==t.charCodeAt(r)?i-s%i:1,r=n(t,r)}return!0===r?-1:t.length}class d{constructor(){}lineAt(t){if(t<0||t>this.length)throw new RangeError(`Invalid position ${t} in document of length ${this.length}`);return this.lineInner(t,!1,1,0)}line(t){if(t<1||t>this.lines)throw new RangeError(`Invalid line number ${t} in ${this.lines}-line document`);return this.lineInner(t,!0,1,0)}replace(t,e,i){let n=[];return this.decompose(0,t,n,2),i.length&&i.decompose(0,i.length,n,3),this.decompose(e,this.length,n,1),f.from(n,this.length-(e-t)+i.length)}append(t){return this.replace(this.length,this.length,t)}slice(t,e=this.length){let i=[];return this.decompose(t,e,i,0),f.from(i,e-t)}eq(t){if(t==this)return!0;if(t.length!=this.length||t.lines!=this.lines)return!1;let e=this.scanIdentical(t,1),i=this.length-this.scanIdentical(t,-1),n=new m(this),r=new m(t);for(let t=e,s=e;;){if(n.next(t),r.next(t),t=0,n.lineBreak!=r.lineBreak||n.done!=r.done||n.value!=r.value)return!1;if(s+=n.value.length,n.done||s>=i)return!0}}iter(t=1){return new m(this,t)}iterRange(t,e=this.length){return new g(this,t,e)}iterLines(t,e){let i;if(null==t)i=this.iter();else{null==e&&(e=this.lines+1);let n=this.line(t).from;i=this.iterRange(n,Math.max(n,e==this.lines+1?this.length:e<=1?0:this.line(e-1).to))}return new T(i)}toString(){return this.sliceString(0)}toJSON(){let t=[];return this.flatten(t),t}static of(t){if(0==t.length)throw new RangeError("A document must have at least one line");return 1!=t.length||t[0]?t.length<=32?new $(t):f.from($.split(t,[])):d.empty}}class $ extends d{constructor(t,e=function(t){let e=-1;for(let i of t)e+=i.length+1;return e}(t)){super(),this.text=t,this.length=e}get lines(){return this.text.length}get children(){return null}lineInner(t,e,i,n){for(let r=0;;r++){let s=this.text[r],o=n+s.length;if((e?i:o)>=t)return new b(n,o,i,s);n=o+1,i++}}decompose(t,e,i,n){let r=t<=0&&e>=this.length?this:new $(p(this.text,t,e),Math.min(e,this.length)-Math.max(0,t));if(1&n){let t=i.pop(),e=_(r.text,t.text.slice(),0,r.length);if(e.length<=32)i.push(new $(e,t.length+r.length));else{let t=e.length>>1;i.push(new $(e.slice(0,t)),new $(e.slice(t)))}}else i.push(r)}replace(t,e,i){if(!(i instanceof $))return super.replace(t,e,i);let n=_(this.text,_(i.text,p(this.text,0,t)),e),r=this.length+i.length-(e-t);return n.length<=32?new $(n,r):f.from($.split(n,[]),r)}sliceString(t,e=this.length,i="\n"){let n="";for(let r=0,s=0;r<=e&&s<this.text.length;s++){let o=this.text[s],a=r+o.length;r>t&&s&&(n+=i),t<a&&e>r&&(n+=o.slice(Math.max(0,t-r),e-r)),r=a+1}return n}flatten(t){for(let e of this.text)t.push(e)}scanIdentical(){return 0}static split(t,e){let i=[],n=-1;for(let r of t)i.push(r),n+=r.length+1,32==i.length&&(e.push(new $(i,n)),i=[],n=-1);return n>-1&&e.push(new $(i,n)),e}}class f extends d{constructor(t,e){super(),this.children=t,this.length=e,this.lines=0;for(let e of t)this.lines+=e.lines}lineInner(t,e,i,n){for(let r=0;;r++){let s=this.children[r],o=n+s.length,a=i+s.lines-1;if((e?a:o)>=t)return s.lineInner(t,e,i,n);n=o+1,i=a+1}}decompose(t,e,i,n){for(let r=0,s=0;s<=e&&r<this.children.length;r++){let o=this.children[r],a=s+o.length;if(t<=a&&e>=s){let r=n&((s<=t?1:0)|(a>=e?2:0));s>=t&&a<=e&&!r?i.push(o):o.decompose(t-s,e-s,i,r)}s=a+1}}replace(t,e,i){if(i.lines<this.lines)for(let n=0,r=0;n<this.children.length;n++){let s=this.children[n],o=r+s.length;if(t>=r&&e<=o){let a=s.replace(t-r,e-r,i),l=this.lines-s.lines+a.lines;if(a.lines<l>>4&&a.lines>l>>6){let r=this.children.slice();return r[n]=a,new f(r,this.length-(e-t)+i.length)}return super.replace(r,o,a)}r=o+1}return super.replace(t,e,i)}sliceString(t,e=this.length,i="\n"){let n="";for(let r=0,s=0;r<this.children.length&&s<=e;r++){let o=this.children[r],a=s+o.length;s>t&&r&&(n+=i),t<a&&e>s&&(n+=o.sliceString(t-s,e-s,i)),s=a+1}return n}flatten(t){for(let e of this.children)e.flatten(t)}scanIdentical(t,e){if(!(t instanceof f))return 0;let i=0,[n,r,s,o]=e>0?[0,0,this.children.length,t.children.length]:[this.children.length-1,t.children.length-1,-1,-1];for(;;n+=e,r+=e){if(n==s||r==o)return i;let a=this.children[n],l=t.children[r];if(a!=l)return i+a.scanIdentical(l,e);i+=a.length+1}}static from(t,e=t.reduce(((t,e)=>t+e.length+1),-1)){let i=0;for(let e of t)i+=e.lines;if(i<32){let i=[];for(let e of t)e.flatten(i);return new $(i,e)}let n=Math.max(32,i>>5),r=n<<1,s=n>>1,o=[],a=0,l=-1,h=[];function O(t){let e;if(t.lines>r&&t instanceof f)for(let e of t.children)O(e);else t.lines>s&&(a>s||!a)?(c(),o.push(t)):t instanceof $&&a&&(e=h[h.length-1])instanceof $&&t.lines+e.lines<=32?(a+=t.lines,l+=t.length+1,h[h.length-1]=new $(e.text.concat(t.text),e.length+1+t.length)):(a+t.lines>n&&c(),a+=t.lines,l+=t.length+1,h.push(t))}function c(){0!=a&&(o.push(1==h.length?h[0]:f.from(h,l)),l=-1,a=h.length=0)}for(let e of t)O(e);return c(),1==o.length?o[0]:new f(o,e)}}function _(t,e,i=0,n=1e9){for(let r=0,s=0,o=!0;s<t.length&&r<=n;s++){let a=t[s],l=r+a.length;l>=i&&(l>n&&(a=a.slice(0,n-r)),r<i&&(a=a.slice(i-r)),o?(e[e.length-1]+=a,o=!1):e.push(a)),r=l+1}return e}function p(t,e,i){return _(t,[""],e,i)}d.empty=new $([""],0);class m{constructor(t,e=1){this.dir=e,this.done=!1,this.lineBreak=!1,this.value="",this.nodes=[t],this.offsets=[e>0?1:(t instanceof $?t.text.length:t.children.length)<<1]}nextInner(t,e){for(this.done=this.lineBreak=!1;;){let i=this.nodes.length-1,n=this.nodes[i],r=this.offsets[i],s=r>>1,o=n instanceof $?n.text.length:n.children.length;if(s==(e>0?o:0)){if(0==i)return this.done=!0,this.value="",this;e>0&&this.offsets[i-1]++,this.nodes.pop(),this.offsets.pop()}else if((1&r)==(e>0?0:1)){if(this.offsets[i]+=e,0==t)return this.lineBreak=!0,this.value="\n",this;t--}else if(n instanceof $){let r=n.text[s+(e<0?-1:0)];if(this.offsets[i]+=e,r.length>Math.max(0,t))return this.value=0==t?r:e>0?r.slice(t):r.slice(0,r.length-t),this;t-=r.length}else{let r=n.children[s+(e<0?-1:0)];t>r.length?(t-=r.length,this.offsets[i]+=e):(e<0&&this.offsets[i]--,this.nodes.push(r),this.offsets.push(e>0?1:(r instanceof $?r.text.length:r.children.length)<<1))}}}next(t=0){return t<0&&(this.nextInner(-t,-this.dir),t=this.value.length),this.nextInner(t,this.dir)}}class g{constructor(t,e,i){this.value="",this.done=!1,this.cursor=new m(t,e>i?-1:1),this.pos=e>i?t.length:0,this.from=Math.min(e,i),this.to=Math.max(e,i)}nextInner(t,e){if(e<0?this.pos<=this.from:this.pos>=this.to)return this.value="",this.done=!0,this;t+=Math.max(0,e<0?this.pos-this.to:this.from-this.pos);let i=e<0?this.pos-this.from:this.to-this.pos;t>i&&(t=i),i-=t;let{value:n}=this.cursor.next(t);return this.pos+=(n.length+t)*e,this.value=n.length<=i?n:e<0?n.slice(n.length-i):n.slice(0,i),this.done=!this.value,this}next(t=0){return t<0?t=Math.max(t,this.from-this.pos):t>0&&(t=Math.min(t,this.to-this.pos)),this.nextInner(t,this.cursor.dir)}get lineBreak(){return this.cursor.lineBreak&&""!=this.value}}class T{constructor(t){this.inner=t,this.afterBreak=!0,this.value="",this.done=!1}next(t=0){let{done:e,lineBreak:i,value:n}=this.inner.next(t);return e?(this.done=!0,this.value=""):i?this.afterBreak?this.value="":(this.afterBreak=!0,this.next()):(this.value=n,this.afterBreak=!1),this}get lineBreak(){return!1}}"undefined"!=typeof Symbol&&(d.prototype[Symbol.iterator]=function(){return this.iter()},m.prototype[Symbol.iterator]=g.prototype[Symbol.iterator]=T.prototype[Symbol.iterator]=function(){return this});class b{constructor(t,e,i,n){this.from=t,this.to=e,this.number=i,this.text=n}get length(){return this.to-this.from}}const Q=/\r\n?|\n/;var Z=function(t){return t[t.Simple=0]="Simple",t[t.TrackDel=1]="TrackDel",t[t.TrackBefore=2]="TrackBefore",t[t.TrackAfter=3]="TrackAfter",t}(Z||(Z={}));class S{constructor(t){this.sections=t}get length(){let t=0;for(let e=0;e<this.sections.length;e+=2)t+=this.sections[e];return t}get newLength(){let t=0;for(let e=0;e<this.sections.length;e+=2){let i=this.sections[e+1];t+=i<0?this.sections[e]:i}return t}get empty(){return 0==this.sections.length||2==this.sections.length&&this.sections[1]<0}iterGaps(t){for(let e=0,i=0,n=0;e<this.sections.length;){let r=this.sections[e++],s=this.sections[e++];s<0?(t(i,n,r),n+=r):n+=s,i+=r}}iterChangedRanges(t,e=!1){w(this,t,e)}get invertedDesc(){let t=[];for(let e=0;e<this.sections.length;){let i=this.sections[e++],n=this.sections[e++];n<0?t.push(i,n):t.push(n,i)}return new S(t)}composeDesc(t){return this.empty?t:t.empty?this:P(this,t)}mapDesc(t,e=!1){return t.empty?this:y(this,t,e)}mapPos(t,e=-1,i=Z.Simple){let n=0,r=0;for(let s=0;s<this.sections.length;){let o=this.sections[s++],a=this.sections[s++],l=n+o;if(a<0){if(l>t)return r+(t-n);r+=o}else{if(i!=Z.Simple&&l>=t&&(i==Z.TrackDel&&n<t&&l>t||i==Z.TrackBefore&&n<t||i==Z.TrackAfter&&l>t))return null;if(l>t||l==t&&e<0&&!o)return t==n||e<0?r:r+a;r+=a}n=l}if(t>n)throw new RangeError(`Position ${t} is out of range for changeset of length ${n}`);return r}touchesRange(t,e=t){for(let i=0,n=0;i<this.sections.length&&n<=e;){let r=n+this.sections[i++];if(this.sections[i++]>=0&&n<=e&&r>=t)return!(n<t&&r>e)||"cover";n=r}return!1}toString(){let t="";for(let e=0;e<this.sections.length;){let i=this.sections[e++],n=this.sections[e++];t+=(t?" ":"")+i+(n>=0?":"+n:"")}return t}toJSON(){return this.sections}static fromJSON(t){if(!Array.isArray(t)||t.length%2||t.some((t=>"number"!=typeof t)))throw new RangeError("Invalid JSON representation of ChangeDesc");return new S(t)}}class v extends S{constructor(t,e){super(t),this.inserted=e}apply(t){if(this.length!=t.length)throw new RangeError("Applying change set to a document with the wrong length");return w(this,((e,i,n,r,s)=>t=t.replace(n,n+(i-e),s)),!1),t}mapDesc(t,e=!1){return y(this,t,e,!0)}invert(t){let e=this.sections.slice(),i=[];for(let n=0,r=0;n<e.length;n+=2){let s=e[n],o=e[n+1];if(o>=0){e[n]=o,e[n+1]=s;let a=n>>1;for(;i.length<a;)i.push(d.empty);i.push(s?t.slice(r,r+s):d.empty)}r+=s}return new v(e,i)}compose(t){return this.empty?t:t.empty?this:P(this,t,!0)}map(t,e=!1){return t.empty?this:y(this,t,e,!0)}iterChanges(t,e=!1){w(this,t,e)}get desc(){return new S(this.sections)}filter(t){let e=[],i=[],n=[],r=new X(this);t:for(let s=0,o=0;;){let a=s==t.length?1e9:t[s++];for(;o<a||o==a&&0==r.len;){if(r.done)break t;let t=Math.min(r.len,a-o);x(n,t,-1);let s=-1==r.ins?-1:0==r.off?r.ins:0;x(e,t,s),s>0&&k(i,e,r.text),r.forward(t),o+=t}let l=t[s++];for(;o<l;){if(r.done)break t;let t=Math.min(r.len,l-o);x(e,t,-1),x(n,t,-1==r.ins?-1:0==r.off?r.ins:0),r.forward(t),o+=t}}return{changes:new v(e,i),filtered:new S(n)}}toJSON(){let t=[];for(let e=0;e<this.sections.length;e+=2){let i=this.sections[e],n=this.sections[e+1];n<0?t.push(i):0==n?t.push([i]):t.push([i].concat(this.inserted[e>>1].toJSON()))}return t}static of(t,e,i){let n=[],r=[],s=0,o=null;function a(t=!1){if(!t&&!n.length)return;s<e&&x(n,e-s,-1);let i=new v(n,r);o=o?o.compose(i.map(o)):i,n=[],r=[],s=0}return function t(l){if(Array.isArray(l))for(let e of l)t(e);else if(l instanceof v){if(l.length!=e)throw new RangeError(`Mismatched change set length (got ${l.length}, expected ${e})`);a(),o=o?o.compose(l.map(o)):l}else{let{from:t,to:o=t,insert:h}=l;if(t>o||t<0||o>e)throw new RangeError(`Invalid change range ${t} to ${o} (in doc of length ${e})`);let O=h?"string"==typeof h?d.of(h.split(i||Q)):h:d.empty,c=O.length;if(t==o&&0==c)return;t<s&&a(),t>s&&x(n,t-s,-1),x(n,o-t,c),k(r,n,O),s=o}}(t),a(!o),o}static empty(t){return new v(t?[t,-1]:[],[])}static fromJSON(t){if(!Array.isArray(t))throw new RangeError("Invalid JSON representation of ChangeSet");let e=[],i=[];for(let n=0;n<t.length;n++){let r=t[n];if("number"==typeof r)e.push(r,-1);else{if(!Array.isArray(r)||"number"!=typeof r[0]||r.some(((t,e)=>e&&"string"!=typeof t)))throw new RangeError("Invalid JSON representation of ChangeSet");if(1==r.length)e.push(r[0],0);else{for(;i.length<n;)i.push(d.empty);i[n]=d.of(r.slice(1)),e.push(r[0],i[n].length)}}}return new v(e,i)}}function x(t,e,i,n=!1){if(0==e&&i<=0)return;let r=t.length-2;r>=0&&i<=0&&i==t[r+1]?t[r]+=e:0==e&&0==t[r]?t[r+1]+=i:n?(t[r]+=e,t[r+1]+=i):t.push(e,i)}function k(t,e,i){if(0==i.length)return;let n=e.length-2>>1;if(n<t.length)t[t.length-1]=t[t.length-1].append(i);else{for(;t.length<n;)t.push(d.empty);t.push(i)}}function w(t,e,i){let n=t.inserted;for(let r=0,s=0,o=0;o<t.sections.length;){let a=t.sections[o++],l=t.sections[o++];if(l<0)r+=a,s+=a;else{let h=r,O=s,c=d.empty;for(;h+=a,O+=l,l&&n&&(c=c.append(n[o-2>>1])),!(i||o==t.sections.length||t.sections[o+1]<0);)a=t.sections[o++],l=t.sections[o++];e(r,h,s,O,c),r=h,s=O}}}function y(t,e,i,n=!1){let r=[],s=n?[]:null,o=new X(t),a=new X(e);for(let t=0,e=0;;)if(-1==o.ins)t+=o.len,o.next();else if(-1==a.ins&&e<t){let i=Math.min(a.len,t-e);a.forward(i),x(r,i,-1),e+=i}else if(a.ins>=0&&(o.done||e<t||e==t&&(a.len<o.len||a.len==o.len&&!i))){for(x(r,a.ins,-1);t>e&&!o.done&&t+o.len<e+a.len;)t+=o.len,o.next();e+=a.len,a.next()}else{if(!(o.ins>=0)){if(o.done&&a.done)return s?new v(r,s):new S(r);throw new Error("Mismatched change set lengths")}{let i=0,n=t+o.len;for(;;)if(a.ins>=0&&e>t&&e+a.len<n)i+=a.ins,e+=a.len,a.next();else{if(!(-1==a.ins&&e<n))break;{let t=Math.min(a.len,n-e);i+=t,a.forward(t),e+=t}}x(r,i,o.ins),s&&k(s,r,o.text),t=n,o.next()}}}function P(t,e,i=!1){let n=[],r=i?[]:null,s=new X(t),o=new X(e);for(let t=!1;;){if(s.done&&o.done)return r?new v(n,r):new S(n);if(0==s.ins)x(n,s.len,0,t),s.next();else if(0!=o.len||o.done){if(s.done||o.done)throw new Error("Mismatched change set lengths");{let e=Math.min(s.len2,o.len),i=n.length;if(-1==s.ins){let i=-1==o.ins?-1:o.off?0:o.ins;x(n,e,i,t),r&&i&&k(r,n,o.text)}else-1==o.ins?(x(n,s.off?0:s.len,e,t),r&&k(r,n,s.textBit(e))):(x(n,s.off?0:s.len,o.off?0:o.ins,t),r&&!o.off&&k(r,n,o.text));t=(s.ins>e||o.ins>=0&&o.len>e)&&(t||n.length>i),s.forward2(e),o.forward(e)}}else x(n,0,o.ins,t),r&&k(r,n,o.text),o.next()}}class X{constructor(t){this.set=t,this.i=0,this.next()}next(){let{sections:t}=this.set;this.i<t.length?(this.len=t[this.i++],this.ins=t[this.i++]):(this.len=0,this.ins=-2),this.off=0}get done(){return-2==this.ins}get len2(){return this.ins<0?this.len:this.ins}get text(){let{inserted:t}=this.set,e=this.i-2>>1;return e>=t.length?d.empty:t[e]}textBit(t){let{inserted:e}=this.set,i=this.i-2>>1;return i>=e.length&&!t?d.empty:e[i].slice(this.off,null==t?void 0:this.off+t)}forward(t){t==this.len?this.next():(this.len-=t,this.off+=t)}forward2(t){-1==this.ins?this.forward(t):t==this.ins?this.next():(this.ins-=t,this.off+=t)}}class R{constructor(t,e,i){this.from=t,this.to=e,this.flags=i}get anchor(){return 16&this.flags?this.to:this.from}get head(){return 16&this.flags?this.from:this.to}get empty(){return this.from==this.to}get assoc(){return 4&this.flags?-1:8&this.flags?1:0}get bidiLevel(){let t=3&this.flags;return 3==t?null:t}get goalColumn(){let t=this.flags>>5;return 33554431==t?void 0:t}map(t,e=-1){let i,n;return this.empty?i=n=t.mapPos(this.from,e):(i=t.mapPos(this.from,1),n=t.mapPos(this.to,-1)),i==this.from&&n==this.to?this:new R(i,n,this.flags)}extend(t,e=t){if(t<=this.anchor&&e>=this.anchor)return W.range(t,e);let i=Math.abs(t-this.anchor)>Math.abs(e-this.anchor)?t:e;return W.range(this.anchor,i)}eq(t){return this.anchor==t.anchor&&this.head==t.head}toJSON(){return{anchor:this.anchor,head:this.head}}static fromJSON(t){if(!t||"number"!=typeof t.anchor||"number"!=typeof t.head)throw new RangeError("Invalid JSON representation for SelectionRange");return W.range(t.anchor,t.head)}}class W{constructor(t,e=0){this.ranges=t,this.mainIndex=e}map(t,e=-1){return t.empty?this:W.create(this.ranges.map((i=>i.map(t,e))),this.mainIndex)}eq(t){if(this.ranges.length!=t.ranges.length||this.mainIndex!=t.mainIndex)return!1;for(let e=0;e<this.ranges.length;e++)if(!this.ranges[e].eq(t.ranges[e]))return!1;return!0}get main(){return this.ranges[this.mainIndex]}asSingle(){return 1==this.ranges.length?this:new W([this.main])}addRange(t,e=!0){return W.create([t].concat(this.ranges),e?0:this.mainIndex+1)}replaceRange(t,e=this.mainIndex){let i=this.ranges.slice();return i[e]=t,W.create(i,this.mainIndex)}toJSON(){return{ranges:this.ranges.map((t=>t.toJSON())),main:this.mainIndex}}static fromJSON(t){if(!t||!Array.isArray(t.ranges)||"number"!=typeof t.main||t.main>=t.ranges.length)throw new RangeError("Invalid JSON representation for EditorSelection");return new W(t.ranges.map((t=>R.fromJSON(t))),t.main)}static single(t,e=t){return new W([W.range(t,e)],0)}static create(t,e=0){if(0==t.length)throw new RangeError("A selection needs at least one range");for(let i=0,n=0;n<t.length;n++){let r=t[n];if(r.empty?r.from<=i:r.from<i)return Y(t.slice(),e);i=r.to}return new W(t,e)}static cursor(t,e=0,i,n){return new R(t,t,(0==e?0:e<0?4:8)|(null==i?3:Math.min(2,i))|(null!=n?n:33554431)<<5)}static range(t,e,i){let n=(null!=i?i:33554431)<<5;return e<t?new R(e,t,24|n):new R(t,e,n|(e>t?4:0))}}function Y(t,e=0){let i=t[e];t.sort(((t,e)=>t.from-e.from)),e=t.indexOf(i);for(let i=1;i<t.length;i++){let n=t[i],r=t[i-1];if(n.empty?n.from<=r.to:n.from<r.to){let s=r.from,o=Math.max(n.to,r.to);i<=e&&e--,t.splice(--i,2,n.anchor>n.head?W.range(o,s):W.range(s,o))}}return new W(t,e)}function C(t,e){for(let i of t.ranges)if(i.to>e)throw new RangeError("Selection points outside of document")}let V=0;class j{constructor(t,e,i,n,r){this.combine=t,this.compareInput=e,this.compare=i,this.isStatic=n,this.extensions=r,this.id=V++,this.default=t([])}static define(t={}){return new j(t.combine||(t=>t),t.compareInput||((t,e)=>t===e),t.compare||(t.combine?(t,e)=>t===e:U),!!t.static,t.enables)}of(t){return new J([],this,0,t)}compute(t,e){if(this.isStatic)throw new Error("Can't compute a static facet");return new J(t,this,1,e)}computeN(t,e){if(this.isStatic)throw new Error("Can't compute a static facet");return new J(t,this,2,e)}from(t,e){return e||(e=t=>t),this.compute([t],(i=>e(i.field(t))))}}function U(t,e){return t==e||t.length==e.length&&t.every(((t,i)=>t===e[i]))}class J{constructor(t,e,i,n){this.dependencies=t,this.facet=e,this.type=i,this.value=n,this.id=V++}dynamicSlot(t){var e;let i=this.value,n=this.facet.compareInput,r=this.id,s=t[r]>>1,o=2==this.type,a=!1,l=!1,h=[];for(let i of this.dependencies)"doc"==i?a=!0:"selection"==i?l=!0:0==(1&(null!==(e=t[i.id])&&void 0!==e?e:1))&&h.push(t[i.id]);return{create:t=>(t.values[s]=i(t),1),update(t,e){if(a&&e.docChanged||l&&(e.docChanged||e.selection)||h.some((e=>(1&et(t,e))>0))){let e=i(t);if(o?!G(e,t.values[s],n):!n(e,t.values[s]))return t.values[s]=e,1}return 0},reconfigure(t,e){let a=i(t),l=e.config.address[r];if(null!=l){let i=it(e,l);if(o?G(a,i,n):n(a,i))return t.values[s]=i,0}return t.values[s]=a,1}}}}function G(t,e,i){if(t.length!=e.length)return!1;for(let n=0;n<t.length;n++)if(!i(t[n],e[n]))return!1;return!0}function D(t,e,i){let n=i.map((e=>t[e.id])),r=i.map((t=>t.type)),s=n.filter((t=>!(1&t))),o=t[e.id]>>1;function a(t){let i=[];for(let e=0;e<n.length;e++){let s=it(t,n[e]);if(2==r[e])for(let t of s)i.push(t);else i.push(s)}return e.combine(i)}return{create(t){for(let e of n)et(t,e);return t.values[o]=a(t),1},update(t,i){if(!s.some((e=>1&et(t,e))))return 0;let n=a(t);return e.compare(n,t.values[o])?0:(t.values[o]=n,1)},reconfigure(t,r){let s=n.some((e=>1&et(t,e))),l=r.config.facets[e.id],h=r.facet(e);if(l&&!s&&U(i,l))return t.values[o]=h,0;let O=a(t);return e.compare(O,h)?(t.values[o]=h,0):(t.values[o]=O,1)}}}const M=j.define({static:!0});class A{constructor(t,e,i,n,r){this.id=t,this.createF=e,this.updateF=i,this.compareF=n,this.spec=r,this.provides=void 0}static define(t){let e=new A(V++,t.create,t.update,t.compare||((t,e)=>t===e),t);return t.provide&&(e.provides=t.provide(e)),e}create(t){let e=t.facet(M).find((t=>t.field==this));return((null==e?void 0:e.create)||this.createF)(t)}slot(t){let e=t[this.id]>>1;return{create:t=>(t.values[e]=this.create(t),1),update:(t,i)=>{let n=t.values[e],r=this.updateF(n,i);return this.compareF(n,r)?0:(t.values[e]=r,1)},reconfigure:(t,i)=>null!=i.config.address[this.id]?(t.values[e]=i.field(this),0):(t.values[e]=this.create(t),1)}}init(t){return[this,M.of({field:this,create:t})]}get extension(){return this}}const I=4,q=3,z=2,E=1,B=0;function F(t){return e=>new L(e,t)}const N={lowest:F(I),low:F(q),default:F(z),high:F(E),highest:F(B),fallback:F(I),extend:F(E),override:F(B)};class L{constructor(t,e){this.inner=t,this.prec=e}}class K{of(t){return new H(this,t)}reconfigure(t){return K.reconfigure.of({compartment:this,extension:t})}get(t){return t.config.compartments.get(this)}}class H{constructor(t,e){this.compartment=t,this.inner=e}}class tt{constructor(t,e,i,n,r,s){for(this.base=t,this.compartments=e,this.dynamicSlots=i,this.address=n,this.staticValues=r,this.facets=s,this.statusTemplate=[];this.statusTemplate.length<i.length;)this.statusTemplate.push(0)}staticFacet(t){let e=this.address[t.id];return null==e?t.default:this.staticValues[e>>1]}static resolve(t,e,i){let n=[],r=Object.create(null),s=new Map;for(let i of function(t,e,i){let n=[[],[],[],[],[]],r=new Map;function s(t,o){let a=r.get(t);if(null!=a){if(a>=o)return;let e=n[a].indexOf(t);e>-1&&n[a].splice(e,1),t instanceof H&&i.delete(t.compartment)}if(r.set(t,o),Array.isArray(t))for(let e of t)s(e,o);else if(t instanceof H){if(i.has(t.compartment))throw new RangeError("Duplicate use of compartment in extensions");let n=e.get(t.compartment)||t.inner;i.set(t.compartment,n),s(n,o)}else if(t instanceof L)s(t.inner,t.prec);else if(t instanceof A)n[o].push(t),t.provides&&s(t.provides,o);else if(t instanceof J)n[o].push(t),t.facet.extensions&&s(t.facet.extensions,o);else{let e=t.extension;if(!e)throw new Error(`Unrecognized extension value in extension set (${t}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);s(e,o)}}return s(t,z),n.reduce(((t,e)=>t.concat(e)))}(t,e,s))i instanceof A?n.push(i):(r[i.facet.id]||(r[i.facet.id]=[])).push(i);let o=Object.create(null),a=[],l=[];for(let t of n)o[t.id]=l.length<<1,l.push((e=>t.slot(e)));let h=null==i?void 0:i.config.facets;for(let t in r){let e=r[t],n=e[0].facet,s=h&&h[t]||[];if(e.every((t=>0==t.type)))if(o[n.id]=a.length<<1|1,U(s,e))a.push(i.facet(n));else{let t=n.combine(e.map((t=>t.value)));a.push(i&&n.compare(t,i.facet(n))?i.facet(n):t)}else{for(let t of e)0==t.type?(o[t.id]=a.length<<1|1,a.push(t.value)):(o[t.id]=l.length<<1,l.push((e=>t.dynamicSlot(e))));o[n.id]=l.length<<1,l.push((t=>D(t,n,e)))}}let O=l.map((t=>t(o)));return new tt(t,s,O,o,a,r)}}function et(t,e){if(1&e)return 2;let i=e>>1,n=t.status[i];if(4==n)throw new Error("Cyclic dependency between fields and/or facets");if(2&n)return n;t.status[i]=4;let r=t.computeSlot(t,t.config.dynamicSlots[i]);return t.status[i]=2|r}function it(t,e){return 1&e?t.config.staticValues[e>>1]:t.values[e>>1]}const nt=j.define(),rt=j.define({combine:t=>t.some((t=>t)),static:!0}),st=j.define({combine:t=>t.length?t[0]:void 0,static:!0}),ot=j.define(),at=j.define(),lt=j.define(),ht=j.define({combine:t=>!!t.length&&t[0]});class Ot{constructor(t,e){this.type=t,this.value=e}static define(){return new ct}}class ct{of(t){return new Ot(this,t)}}class ut{constructor(t){this.map=t}of(t){return new dt(this,t)}}class dt{constructor(t,e){this.type=t,this.value=e}map(t){let e=this.type.map(this.value,t);return void 0===e?void 0:e==this.value?this:new dt(this.type,e)}is(t){return this.type==t}static define(t={}){return new ut(t.map||(t=>t))}static mapEffects(t,e){if(!t.length)return t;let i=[];for(let n of t){let t=n.map(e);t&&i.push(t)}return i}}dt.reconfigure=dt.define(),dt.appendConfig=dt.define();class $t{constructor(t,e,i,n,r,s){this.startState=t,this.changes=e,this.selection=i,this.effects=n,this.annotations=r,this.scrollIntoView=s,this._doc=null,this._state=null,i&&C(i,e.newLength),r.some((t=>t.type==$t.time))||(this.annotations=r.concat($t.time.of(Date.now())))}get newDoc(){return this._doc||(this._doc=this.changes.apply(this.startState.doc))}get newSelection(){return this.selection||this.startState.selection.map(this.changes)}get state(){return this._state||this.startState.applyTransaction(this),this._state}annotation(t){for(let e of this.annotations)if(e.type==t)return e.value}get docChanged(){return!this.changes.empty}get reconfigured(){return this.startState.config!=this.state.config}isUserEvent(t){let e=this.annotation($t.userEvent);return!(!e||!(e==t||e.length>t.length&&e.slice(0,t.length)==t&&"."==e[t.length]))}}function ft(t,e){let i=[];for(let n=0,r=0;;){let s,o;if(n<t.length&&(r==e.length||e[r]>=t[n]))s=t[n++],o=t[n++];else{if(!(r<e.length))return i;s=e[r++],o=e[r++]}!i.length||i[i.length-1]<s?i.push(s,o):i[i.length-1]<o&&(i[i.length-1]=o)}}function _t(t,e,i){var n;let r,s,o;return i?(r=e.changes,s=v.empty(e.changes.length),o=t.changes.compose(e.changes)):(r=e.changes.map(t.changes),s=t.changes.mapDesc(e.changes,!0),o=t.changes.compose(r)),{changes:o,selection:e.selection?e.selection.map(s):null===(n=t.selection)||void 0===n?void 0:n.map(r),effects:dt.mapEffects(t.effects,r).concat(dt.mapEffects(e.effects,s)),annotations:t.annotations.length?t.annotations.concat(e.annotations):e.annotations,scrollIntoView:t.scrollIntoView||e.scrollIntoView}}function pt(t,e,i){let n=e.selection,r=Tt(e.annotations);return e.userEvent&&(r=r.concat($t.userEvent.of(e.userEvent))),{changes:e.changes instanceof v?e.changes:v.of(e.changes||[],i,t.facet(st)),selection:n&&(n instanceof W?n:W.single(n.anchor,n.head)),effects:Tt(e.effects),annotations:r,scrollIntoView:!!e.scrollIntoView}}function mt(t,e,i){let n=pt(t,e.length?e[0]:{},t.doc.length);e.length&&!1===e[0].filter&&(i=!1);for(let r=1;r<e.length;r++){!1===e[r].filter&&(i=!1);let s=!!e[r].sequential;n=_t(n,pt(t,e[r],s?n.changes.newLength:t.doc.length),s)}let r=new $t(t,n.changes,n.selection,n.effects,n.annotations,n.scrollIntoView);return function(t){let e=t.startState,i=e.facet(lt),n=t;for(let r=i.length-1;r>=0;r--){let s=i[r](t);s&&Object.keys(s).length&&(n=_t(t,pt(e,s,t.changes.newLength),!0))}return n==t?t:new $t(e,t.changes,t.selection,n.effects,n.annotations,n.scrollIntoView)}(i?function(t){let e=t.startState,i=!0;for(let n of e.facet(ot)){let e=n(t);if(!1===e){i=!1;break}Array.isArray(e)&&(i=!0===i?e:ft(i,e))}if(!0!==i){let n,r;if(!1===i)r=t.changes.invertedDesc,n=v.empty(e.doc.length);else{let e=t.changes.filter(i);n=e.changes,r=e.filtered.invertedDesc}t=new $t(e,n,t.selection&&t.selection.map(r),dt.mapEffects(t.effects,r),t.annotations,t.scrollIntoView)}let n=e.facet(at);for(let i=n.length-1;i>=0;i--){let r=n[i](t);t=r instanceof $t?r:Array.isArray(r)&&1==r.length&&r[0]instanceof $t?r[0]:mt(e,Tt(r),!1)}return t}(r):r)}$t.time=Ot.define(),$t.userEvent=Ot.define(),$t.addToHistory=Ot.define(),$t.remote=Ot.define();const gt=[];function Tt(t){return null==t?gt:Array.isArray(t)?t:[t]}var bt=function(t){return t[t.Word=0]="Word",t[t.Space=1]="Space",t[t.Other=2]="Other",t}(bt||(bt={}));const Qt=/[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;let Zt;try{Zt=new RegExp("[\\p{Alphabetic}\\p{Number}_]","u")}catch(t){}function St(t){return e=>{if(!/\S/.test(e))return bt.Space;if(function(t){if(Zt)return Zt.test(t);for(let e=0;e<t.length;e++){let i=t[e];if(/\w/.test(i)||i>"\x80"&&(i.toUpperCase()!=i.toLowerCase()||Qt.test(i)))return!0}return!1}(e))return bt.Word;for(let i=0;i<t.length;i++)if(e.indexOf(t[i])>-1)return bt.Word;return bt.Other}}class vt{constructor(t,e,i,n,r,s){this.config=t,this.doc=e,this.selection=i,this.values=n,this.status=t.statusTemplate.slice(),this.computeSlot=r,s&&(s._state=this);for(let t=0;t<this.config.dynamicSlots.length;t++)et(this,t<<1);this.computeSlot=null}field(t,e=!0){let i=this.config.address[t.id];if(null!=i)return et(this,i),it(this,i);if(e)throw new RangeError("Field is not present in this state")}update(...t){return mt(this,t,!0)}applyTransaction(t){let e,i=this.config,{base:n,compartments:r}=i;for(let e of t.effects)e.is(K.reconfigure)?(i&&(r=new Map,i.compartments.forEach(((t,e)=>r.set(e,t))),i=null),r.set(e.value.compartment,e.value.extension)):e.is(dt.reconfigure)?(i=null,n=e.value):e.is(dt.appendConfig)&&(i=null,n=Tt(n).concat(e.value));if(i)e=t.startState.values.slice();else{i=tt.resolve(n,r,this),e=new vt(i,this.doc,this.selection,i.dynamicSlots.map((()=>null)),((t,e)=>e.reconfigure(t,this)),null).values}new vt(i,t.newDoc,t.newSelection,e,((e,i)=>i.update(e,t)),t)}replaceSelection(t){return"string"==typeof t&&(t=this.toText(t)),this.changeByRange((e=>({changes:{from:e.from,to:e.to,insert:t},range:W.cursor(e.from+t.length)})))}changeByRange(t){let e=this.selection,i=t(e.ranges[0]),n=this.changes(i.changes),r=[i.range],s=Tt(i.effects);for(let i=1;i<e.ranges.length;i++){let o=t(e.ranges[i]),a=this.changes(o.changes),l=a.map(n);for(let t=0;t<i;t++)r[t]=r[t].map(l);let h=n.mapDesc(a,!0);r.push(o.range.map(h)),n=n.compose(l),s=dt.mapEffects(s,l).concat(dt.mapEffects(Tt(o.effects),h))}return{changes:n,selection:W.create(r,e.mainIndex),effects:s}}changes(t=[]){return t instanceof v?t:v.of(t,this.doc.length,this.facet(vt.lineSeparator))}toText(t){return d.of(t.split(this.facet(vt.lineSeparator)||Q))}sliceDoc(t=0,e=this.doc.length){return this.doc.sliceString(t,e,this.lineBreak)}facet(t){let e=this.config.address[t.id];return null==e?t.default:(et(this,e),it(this,e))}toJSON(t){let e={doc:this.sliceDoc(),selection:this.selection.toJSON()};if(t)for(let i in t){let n=t[i];n instanceof A&&(e[i]=n.spec.toJSON(this.field(t[i]),this))}return e}static fromJSON(t,e={},i){if(!t||"string"!=typeof t.doc)throw new RangeError("Invalid JSON representation for EditorState");let n=[];if(i)for(let e in i){let r=i[e],s=t[e];n.push(r.init((t=>r.spec.fromJSON(s,t))))}return vt.create({doc:t.doc,selection:W.fromJSON(t.selection),extensions:e.extensions?n.concat([e.extensions]):n})}static create(t={}){let e=tt.resolve(t.extensions||[],new Map),i=t.doc instanceof d?t.doc:d.of((t.doc||"").split(e.staticFacet(vt.lineSeparator)||Q)),n=t.selection?t.selection instanceof W?t.selection:W.single(t.selection.anchor,t.selection.head):W.single(0);return C(n,i.length),e.staticFacet(rt)||(n=n.asSingle()),new vt(e,i,n,e.dynamicSlots.map((()=>null)),((t,e)=>e.create(t)),null)}get tabSize(){return this.facet(vt.tabSize)}get lineBreak(){return this.facet(vt.lineSeparator)||"\n"}get readOnly(){return this.facet(ht)}phrase(t){for(let e of this.facet(vt.phrases))if(Object.prototype.hasOwnProperty.call(e,t))return e[t];return t}languageDataAt(t,e,i=-1){let n=[];for(let r of this.facet(nt))for(let s of r(this,e,i))Object.prototype.hasOwnProperty.call(s,t)&&n.push(s[t]);return n}charCategorizer(t){return St(this.languageDataAt("wordChars",t).join(""))}wordAt(t){let{text:e,from:i,length:r}=this.doc.lineAt(t),s=this.charCategorizer(t),o=t-i,a=t-i;for(;o>0;){let t=n(e,o,!1);if(s(e.slice(t,o))!=bt.Word)break;o=t}for(;a<r;){let t=n(e,a);if(s(e.slice(a,t))!=bt.Word)break;a=t}return o==a?null:W.range(o+i,a+i)}}function xt(t,e,i={}){let n={};for(let e of t)for(let t of Object.keys(e)){let r=e[t],s=n[t];if(void 0===s)n[t]=r;else if(s===r||void 0===r);else{if(!Object.hasOwnProperty.call(i,t))throw new Error("Config merge conflict for field "+t);n[t]=i[t](s,r)}}for(let t in e)void 0===n[t]&&(n[t]=e[t]);return n}vt.allowMultipleSelections=rt,vt.tabSize=j.define({combine:t=>t.length?t[0]:4}),vt.lineSeparator=st,vt.readOnly=ht,vt.phrases=j.define(),vt.languageData=nt,vt.changeFilter=ot,vt.transactionFilter=at,vt.transactionExtender=lt,K.reconfigure=dt.define();class kt{constructor(t,e,i,n){this.origin=t,this.changes=e,this.effects=i,this.clientID=n}}class wt{constructor(t,e){this.version=t,this.unconfirmed=e}}const yt=j.define({combine(t){let e=xt(t,{startVersion:0,clientID:null,sharedEffects:()=>[]});return null==e.clientID&&(e.clientID=t.length&&t[0].generatedID||""),e}}),Pt=Ot.define(),Xt=A.define({create:t=>new wt(t.facet(yt).startVersion,[]),update(t,e){let i=e.annotation(Pt);if(i)return i;let{sharedEffects:n,clientID:r}=e.startState.facet(yt),s=n(e);return s.length||!e.changes.empty?new wt(t.version,t.unconfirmed.concat(new kt(e,e.changes,s,r))):t}});function Rt(t={}){return[Xt,yt.of(Object.assign({generatedID:Math.floor(1e9*Math.random()).toString(36)},t))]}function Wt(t){return t.field(Xt).unconfirmed}const Yt="undefined"==typeof Symbol?"__\u037c":Symbol.for("\u037c"),Ct="undefined"==typeof Symbol?"__styleSet"+Math.floor(1e8*Math.random()):Symbol("styleSet"),Vt="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:{};class jt{constructor(t,e){this.rules=[];let{finish:i}=e||{};function n(t){return/^@/.test(t)?[t]:t.split(/,\s*/)}function r(t,e,s,o){let a=[],l=/^@(\w+)\b/.exec(t[0]),h=l&&"keyframes"==l[1];if(l&&null==e)return s.push(t[0]+";");for(let i in e){let o=e[i];if(/&/.test(i))r(i.split(/,\s*/).map((e=>t.map((t=>e.replace(/&/,t))))).reduce(((t,e)=>t.concat(e))),o,s);else if(o&&"object"==typeof o){if(!l)throw new RangeError("The value of a property ("+i+") should be a primitive value.");r(n(i),o,a,h)}else null!=o&&a.push(i.replace(/_.*/,"").replace(/[A-Z]/g,(t=>"-"+t.toLowerCase()))+": "+o+";")}(a.length||h)&&s.push((!i||l||o?t:t.map(i)).join(", ")+" {"+a.join(" ")+"}")}for(let e in t)r(n(e),t[e],this.rules)}getRules(){return this.rules.join("\n")}static newName(){let t=Vt[Yt]||1;return Vt[Yt]=t+1,"\u037c"+t.toString(36)}static mount(t,e){(t[Ct]||new Jt(t)).mount(Array.isArray(e)?e:[e])}}let Ut=null;class Jt{constructor(t){if(!t.head&&t.adoptedStyleSheets&&"undefined"!=typeof CSSStyleSheet){if(Ut)return t.adoptedStyleSheets=[Ut.sheet].concat(t.adoptedStyleSheets),t[Ct]=Ut;this.sheet=new CSSStyleSheet,t.adoptedStyleSheets=[this.sheet].concat(t.adoptedStyleSheets),Ut=this}else{this.styleTag=(t.ownerDocument||t).createElement("style");let e=t.head||t;e.insertBefore(this.styleTag,e.firstChild)}this.modules=[],t[Ct]=this}mount(t){let e=this.sheet,i=0,n=0;for(let r=0;r<t.length;r++){let s=t[r],o=this.modules.indexOf(s);if(o<n&&o>-1&&(this.modules.splice(o,1),n--,o=-1),-1==o){if(this.modules.splice(n++,0,s),e)for(let t=0;t<s.rules.length;t++)e.insertRule(s.rules[t],i++)}else{for(;n<o;)i+=this.modules[n++].rules.length;i+=s.rules.length,n++}}if(!e){let t="";for(let e=0;e<this.modules.length;e++)t+=this.modules[e].getRules()+"\n";this.styleTag.textContent=t}}}class Gt{eq(t){return this==t}range(t,e=t){return new Dt(t,e,this)}}Gt.prototype.startSide=Gt.prototype.endSide=0,Gt.prototype.point=!1,Gt.prototype.mapMode=Z.TrackDel;class Dt{constructor(t,e,i){this.from=t,this.to=e,this.value=i}}function Mt(t,e){return t.from-e.from||t.value.startSide-e.value.startSide}class At{constructor(t,e,i,n){this.from=t,this.to=e,this.value=i,this.maxPoint=n}get length(){return this.to[this.to.length-1]}findIndex(t,e,i,n=0){let r=i?this.to:this.from;for(let s=n,o=r.length;;){if(s==o)return s;let n=s+o>>1,a=r[n]-t||(i?this.value[n].endSide:this.value[n].startSide)-e;if(n==s)return a>=0?s:o;a>=0?o=n:s=n+1}}between(t,e,i,n){for(let r=this.findIndex(e,-1e9,!0),s=this.findIndex(i,1e9,!1,r);r<s;r++)if(!1===n(this.from[r]+t,this.to[r]+t,this.value[r]))return!1}map(t,e){let i=[],n=[],r=[],s=-1,o=-1;for(let a=0;a<this.value.length;a++){let l,h,O=this.value[a],c=this.from[a]+t,u=this.to[a]+t;if(c==u){let t=e.mapPos(c,O.startSide,O.mapMode);if(null==t)continue;if(l=h=t,O.startSide!=O.endSide&&(h=e.mapPos(c,O.endSide),h<l))continue}else if(l=e.mapPos(c,O.startSide),h=e.mapPos(u,O.endSide),l>h||l==h&&O.startSide>0&&O.endSide<=0)continue;(h-l||O.endSide-O.startSide)<0||(s<0&&(s=l),O.point&&(o=Math.max(o,h-l)),i.push(O),n.push(l-s),r.push(h-s))}return{mapped:i.length?new At(n,r,i,o):null,pos:s}}}class It{constructor(t,e,i=It.empty,n){this.chunkPos=t,this.chunk=e,this.nextLayer=i,this.maxPoint=n}get length(){let t=this.chunk.length-1;return t<0?0:Math.max(this.chunkEnd(t),this.nextLayer.length)}get size(){if(this.isEmpty)return 0;let t=this.nextLayer.size;for(let e of this.chunk)t+=e.value.length;return t}chunkEnd(t){return this.chunkPos[t]+this.chunk[t].length}update(t){let{add:e=[],sort:i=!1,filterFrom:n=0,filterTo:r=this.length}=t,s=t.filter;if(0==e.length&&!s)return this;if(i&&(e=e.slice().sort(Mt)),this.isEmpty)return e.length?It.of(e):this;let o=new Et(this,null,-1).goto(0),a=0,l=[],h=new qt;for(;o.value||a<e.length;)if(a<e.length&&(o.from-e[a].from||o.startSide-e[a].value.startSide)>=0){let t=e[a++];h.addInner(t.from,t.to,t.value)||l.push(t)}else 1==o.rangeIndex&&o.chunkIndex<this.chunk.length&&(a==e.length||this.chunkEnd(o.chunkIndex)<e[a].from)&&(!s||n>this.chunkEnd(o.chunkIndex)||r<this.chunkPos[o.chunkIndex])&&h.addChunk(this.chunkPos[o.chunkIndex],this.chunk[o.chunkIndex])?o.nextChunk():((!s||n>o.to||r<o.from||s(o.from,o.to,o.value))&&(h.addInner(o.from,o.to,o.value)||l.push(new Dt(o.from,o.to,o.value))),o.next());return h.finishInner(this.nextLayer.isEmpty&&!l.length?It.empty:this.nextLayer.update({add:l,filter:s,filterFrom:n,filterTo:r}))}map(t){if(t.empty||this.isEmpty)return this;let e=[],i=[],n=-1;for(let r=0;r<this.chunk.length;r++){let s=this.chunkPos[r],o=this.chunk[r],a=t.touchesRange(s,s+o.length);if(!1===a)n=Math.max(n,o.maxPoint),e.push(o),i.push(t.mapPos(s));else if(!0===a){let{mapped:r,pos:a}=o.map(s,t);r&&(n=Math.max(n,r.maxPoint),e.push(r),i.push(a))}}let r=this.nextLayer.map(t);return 0==e.length?r:new It(i,e,r,n)}between(t,e,i){if(!this.isEmpty){for(let n=0;n<this.chunk.length;n++){let r=this.chunkPos[n],s=this.chunk[n];if(e>=r&&t<=r+s.length&&!1===s.between(r,t-r,e-r,i))return}this.nextLayer.between(t,e,i)}}iter(t=0){return Bt.from([this]).goto(t)}get isEmpty(){return this.nextLayer==this}static iter(t,e=0){return Bt.from(t).goto(e)}static compare(t,e,i,n,r=-1){let s=t.filter((t=>t.maxPoint>0||!t.isEmpty&&t.maxPoint>=r)),o=e.filter((t=>t.maxPoint>0||!t.isEmpty&&t.maxPoint>=r)),a=zt(s,o,i),l=new Nt(s,a,r),h=new Nt(o,a,r);i.iterGaps(((t,e,i)=>Lt(l,t,h,e,i,n))),i.empty&&0==i.length&&Lt(l,0,h,0,0,n)}static eq(t,e,i=0,n){null==n&&(n=1e9);let r=t.filter((t=>!t.isEmpty&&e.indexOf(t)<0)),s=e.filter((e=>!e.isEmpty&&t.indexOf(e)<0));if(r.length!=s.length)return!1;if(!r.length)return!0;let o=zt(r,s),a=new Nt(r,o,0).goto(i),l=new Nt(s,o,0).goto(i);for(;;){if(a.to!=l.to||!Kt(a.active,l.active)||a.point&&(!l.point||!a.point.eq(l.point)))return!1;if(a.to>n)return!0;a.next(),l.next()}}static spans(t,e,i,n,r=-1){var s;let o=new Nt(t,null,r,null===(s=n.filterPoint)||void 0===s?void 0:s.bind(n)).goto(e),a=e,l=o.openStart;for(;;){let t=Math.min(o.to,i);if(o.point?(n.point(a,t,o.point,o.activeForPoint(o.to),l),l=o.openEnd(t)+(o.to>t?1:0)):t>a&&(n.span(a,t,o.active,l),l=o.openEnd(t)),o.to>i)break;a=o.to,o.next()}return l}static of(t,e=!1){let i=new qt;for(let n of t instanceof Dt?[t]:e?function(t){if(t.length>1)for(let e=t[0],i=1;i<t.length;i++){let n=t[i];if(Mt(e,n)>0)return t.slice().sort(Mt);e=n}return t}(t):t)i.add(n.from,n.to,n.value);return i.finish()}}It.empty=new It([],[],null,-1),It.empty.nextLayer=It.empty;class qt{constructor(){this.chunks=[],this.chunkPos=[],this.chunkStart=-1,this.last=null,this.lastFrom=-1e9,this.lastTo=-1e9,this.from=[],this.to=[],this.value=[],this.maxPoint=-1,this.setMaxPoint=-1,this.nextLayer=null}finishChunk(t){this.chunks.push(new At(this.from,this.to,this.value,this.maxPoint)),this.chunkPos.push(this.chunkStart),this.chunkStart=-1,this.setMaxPoint=Math.max(this.setMaxPoint,this.maxPoint),this.maxPoint=-1,t&&(this.from=[],this.to=[],this.value=[])}add(t,e,i){this.addInner(t,e,i)||(this.nextLayer||(this.nextLayer=new qt)).add(t,e,i)}addInner(t,e,i){let n=t-this.lastTo||i.startSide-this.last.endSide;if(n<=0&&(t-this.lastFrom||i.startSide-this.last.startSide)<0)throw new Error("Ranges must be added sorted by `from` position and `startSide`");return!(n<0)&&(250==this.from.length&&this.finishChunk(!0),this.chunkStart<0&&(this.chunkStart=t),this.from.push(t-this.chunkStart),this.to.push(e-this.chunkStart),this.last=i,this.lastFrom=t,this.lastTo=e,this.value.push(i),i.point&&(this.maxPoint=Math.max(this.maxPoint,e-t)),!0)}addChunk(t,e){if((t-this.lastTo||e.value[0].startSide-this.last.endSide)<0)return!1;this.from.length&&this.finishChunk(!0),this.setMaxPoint=Math.max(this.setMaxPoint,e.maxPoint),this.chunks.push(e),this.chunkPos.push(t);let i=e.value.length-1;return this.last=e.value[i],this.lastFrom=e.from[i]+t,this.lastTo=e.to[i]+t,!0}finish(){return this.finishInner(It.empty)}finishInner(t){if(this.from.length&&this.finishChunk(!1),0==this.chunks.length)return t;let e=new It(this.chunkPos,this.chunks,this.nextLayer?this.nextLayer.finishInner(t):t,this.setMaxPoint);return this.from=null,e}}function zt(t,e,i){let n=new Map;for(let e of t)for(let t=0;t<e.chunk.length;t++)e.chunk[t].maxPoint<=0&&n.set(e.chunk[t],e.chunkPos[t]);let r=new Set;for(let t of e)for(let e=0;e<t.chunk.length;e++){let s=n.get(t.chunk[e]);null==s||(i?i.mapPos(s):s)!=t.chunkPos[e]||(null==i?void 0:i.touchesRange(s,s+t.chunk[e].length))||r.add(t.chunk[e])}return r}class Et{constructor(t,e,i,n=0){this.layer=t,this.skip=e,this.minPoint=i,this.rank=n}get startSide(){return this.value?this.value.startSide:0}get endSide(){return this.value?this.value.endSide:0}goto(t,e=-1e9){return this.chunkIndex=this.rangeIndex=0,this.gotoInner(t,e,!1),this}gotoInner(t,e,i){for(;this.chunkIndex<this.layer.chunk.length;){let e=this.layer.chunk[this.chunkIndex];if(!(this.skip&&this.skip.has(e)||this.layer.chunkEnd(this.chunkIndex)<t||e.maxPoint<this.minPoint))break;this.chunkIndex++,i=!1}if(this.chunkIndex<this.layer.chunk.length){let n=this.layer.chunk[this.chunkIndex].findIndex(t-this.layer.chunkPos[this.chunkIndex],e,!0);(!i||this.rangeIndex<n)&&this.setRangeIndex(n)}this.next()}forward(t,e){(this.to-t||this.endSide-e)<0&&this.gotoInner(t,e,!0)}next(){for(;;){if(this.chunkIndex==this.layer.chunk.length){this.from=this.to=1e9,this.value=null;break}{let t=this.layer.chunkPos[this.chunkIndex],e=this.layer.chunk[this.chunkIndex],i=t+e.from[this.rangeIndex];if(this.from=i,this.to=t+e.to[this.rangeIndex],this.value=e.value[this.rangeIndex],this.setRangeIndex(this.rangeIndex+1),this.minPoint<0||this.value.point&&this.to-this.from>=this.minPoint)break}}}setRangeIndex(t){if(t==this.layer.chunk[this.chunkIndex].value.length){if(this.chunkIndex++,this.skip)for(;this.chunkIndex<this.layer.chunk.length&&this.skip.has(this.layer.chunk[this.chunkIndex]);)this.chunkIndex++;this.rangeIndex=0}else this.rangeIndex=t}nextChunk(){this.chunkIndex++,this.rangeIndex=0,this.next()}compare(t){return this.from-t.from||this.startSide-t.startSide||this.rank-t.rank||this.to-t.to||this.endSide-t.endSide}}class Bt{constructor(t){this.heap=t}static from(t,e=null,i=-1){let n=[];for(let r=0;r<t.length;r++)for(let s=t[r];!s.isEmpty;s=s.nextLayer)s.maxPoint>=i&&n.push(new Et(s,e,i,r));return 1==n.length?n[0]:new Bt(n)}get startSide(){return this.value?this.value.startSide:0}goto(t,e=-1e9){for(let i of this.heap)i.goto(t,e);for(let t=this.heap.length>>1;t>=0;t--)Ft(this.heap,t);return this.next(),this}forward(t,e){for(let i of this.heap)i.forward(t,e);for(let t=this.heap.length>>1;t>=0;t--)Ft(this.heap,t);(this.to-t||this.value.endSide-e)<0&&this.next()}next(){if(0==this.heap.length)this.from=this.to=1e9,this.value=null,this.rank=-1;else{let t=this.heap[0];this.from=t.from,this.to=t.to,this.value=t.value,this.rank=t.rank,t.value&&t.next(),Ft(this.heap,0)}}}function Ft(t,e){for(let i=t[e];;){let n=1+(e<<1);if(n>=t.length)break;let r=t[n];if(n+1<t.length&&r.compare(t[n+1])>=0&&(r=t[n+1],n++),i.compare(r)<0)break;t[n]=i,t[e]=r,e=n}}class Nt{constructor(t,e,i,n=(()=>!0)){this.minPoint=i,this.filterPoint=n,this.active=[],this.activeTo=[],this.activeRank=[],this.minActive=-1,this.point=null,this.pointFrom=0,this.pointRank=0,this.to=-1e9,this.endSide=0,this.openStart=-1,this.cursor=Bt.from(t,e,i)}goto(t,e=-1e9){return this.cursor.goto(t,e),this.active.length=this.activeTo.length=this.activeRank.length=0,this.minActive=-1,this.to=t,this.endSide=e,this.openStart=-1,this.next(),this}forward(t,e){for(;this.minActive>-1&&(this.activeTo[this.minActive]-t||this.active[this.minActive].endSide-e)<0;)this.removeActive(this.minActive);this.cursor.forward(t,e)}removeActive(t){Ht(this.active,t),Ht(this.activeTo,t),Ht(this.activeRank,t),this.minActive=ee(this.active,this.activeTo)}addActive(t){let e=0,{value:i,to:n,rank:r}=this.cursor;for(;e<this.activeRank.length&&this.activeRank[e]<=r;)e++;te(this.active,e,i),te(this.activeTo,e,n),te(this.activeRank,e,r),t&&te(t,e,this.cursor.from),this.minActive=ee(this.active,this.activeTo)}next(){let t=this.to,e=this.point;this.point=null;let i=this.openStart<0?[]:null,n=0;for(;;){let r=this.minActive;if(r>-1&&(this.activeTo[r]-this.cursor.from||this.active[r].endSide-this.cursor.startSide)<0){if(this.activeTo[r]>t){this.to=this.activeTo[r],this.endSide=this.active[r].endSide;break}this.removeActive(r),i&&Ht(i,r)}else{if(!this.cursor.value){this.to=this.endSide=1e9;break}if(this.cursor.from>t){this.to=this.cursor.from,this.endSide=this.cursor.startSide;break}{let r=this.cursor.value;if(r.point)if(e&&this.cursor.to==this.to&&this.cursor.from<this.cursor.to)this.cursor.next();else{if(this.filterPoint(this.cursor.from,this.cursor.to,this.cursor.value,this.cursor.rank)){this.point=r,this.pointFrom=this.cursor.from,this.pointRank=this.cursor.rank,this.to=this.cursor.to,this.endSide=r.endSide,this.cursor.from<t&&(n=1),this.cursor.next(),this.forward(this.to,this.endSide);break}this.cursor.next()}else this.addActive(i),this.cursor.next()}}}if(i){let e=0;for(;e<i.length&&i[e]<t;)e++;this.openStart=e+n}}activeForPoint(t){if(!this.active.length)return this.active;let e=[];for(let i=this.active.length-1;i>=0&&!(this.activeRank[i]<this.pointRank);i--)(this.activeTo[i]>t||this.activeTo[i]==t&&this.active[i].endSide>=this.point.endSide)&&e.push(this.active[i]);return e.reverse()}openEnd(t){let e=0;for(let i=this.activeTo.length-1;i>=0&&this.activeTo[i]>t;i--)e++;return e}}function Lt(t,e,i,n,r,s){t.goto(e),i.goto(n);let o=n+r,a=n,l=n-e;for(;;){let e=t.to+l-i.to||t.endSide-i.endSide,n=e<0?t.to+l:i.to,r=Math.min(n,o);if(t.point||i.point?t.point&&i.point&&(t.point==i.point||t.point.eq(i.point))&&Kt(t.activeForPoint(t.to+l),i.activeForPoint(i.to))||s.comparePoint(a,r,t.point,i.point):r>a&&!Kt(t.active,i.active)&&s.compareRange(a,r,t.active,i.active),n>o)break;a=n,e<=0&&t.next(),e>=0&&i.next()}}function Kt(t,e){if(t.length!=e.length)return!1;for(let i=0;i<t.length;i++)if(t[i]!=e[i]&&!t[i].eq(e[i]))return!1;return!0}function Ht(t,e){for(let i=e,n=t.length-1;i<n;i++)t[i]=t[i+1];t.pop()}function te(t,e,i){for(let i=t.length-1;i>=e;i--)t[i+1]=t[i];t[e]=i}function ee(t,e){let i=-1,n=1e9;for(let r=0;r<e.length;r++)(e[r]-n||t[r].endSide-t[i].endSide)<0&&(i=r,n=e[r]);return i}for(var ie={8:"Backspace",9:"Tab",10:"Enter",12:"NumLock",13:"Enter",16:"Shift",17:"Control",18:"Alt",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",44:"PrintScreen",45:"Insert",46:"Delete",59:";",61:"=",91:"Meta",92:"Meta",106:"*",107:"+",108:",",109:"-",110:".",111:"/",144:"NumLock",145:"ScrollLock",160:"Shift",161:"Shift",162:"Control",163:"Control",164:"Alt",165:"Alt",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'",229:"q"},ne={48:")",49:"!",50:"@",51:"#",52:"$",53:"%",54:"^",55:"&",56:"*",57:"(",59:":",61:"+",173:"_",186:":",187:"+",188:"<",189:"_",190:">",191:"?",192:"~",219:"{",220:"|",221:"}",222:'"',229:"Q"},re="undefined"!=typeof navigator&&/Chrome\/(\d+)/.exec(navigator.userAgent),se="undefined"!=typeof navigator&&/Apple Computer/.test(navigator.vendor),oe="undefined"!=typeof navigator&&/Gecko\/\d+/.test(navigator.userAgent),ae="undefined"!=typeof navigator&&/Mac/.test(navigator.platform),le="undefined"!=typeof navigator&&/MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent),he=re&&(ae||+re[1]<57)||oe&&ae,Oe=0;Oe<10;Oe++)ie[48+Oe]=ie[96+Oe]=String(Oe);for(Oe=1;Oe<=24;Oe++)ie[Oe+111]="F"+Oe;for(Oe=65;Oe<=90;Oe++)ie[Oe]=String.fromCharCode(Oe+32),ne[Oe]=String.fromCharCode(Oe);for(var ce in ie)ne.hasOwnProperty(ce)||(ne[ce]=ie[ce]);function ue(t){let e;return e=11==t.nodeType?t.getSelection?t:t.ownerDocument:t,e.getSelection()}function de(t,e){return!!e&&(t==e||t.contains(1!=e.nodeType?e.parentNode:e))}function $e(t,e){if(!e.anchorNode)return!1;try{return de(t,e.anchorNode)}catch(t){return!1}}function fe(t){return 3==t.nodeType?ke(t,0,t.nodeValue.length).getClientRects():1==t.nodeType?t.getClientRects():[]}function _e(t,e,i,n){return!!i&&(me(t,e,i,n,-1)||me(t,e,i,n,1))}function pe(t){for(var e=0;;e++)if(!(t=t.previousSibling))return e}function me(t,e,i,n,r){for(;;){if(t==i&&e==n)return!0;if(e==(r<0?0:ge(t))){if("DIV"==t.nodeName)return!1;let i=t.parentNode;if(!i||1!=i.nodeType)return!1;e=pe(t)+(r<0?0:1),t=i}else{if(1!=t.nodeType)return!1;if(1==(t=t.childNodes[e+(r<0?-1:0)]).nodeType&&"false"==t.contentEditable)return!1;e=r<0?ge(t):0}}}function ge(t){return 3==t.nodeType?t.nodeValue.length:t.childNodes.length}const Te={left:0,right:0,top:0,bottom:0};function be(t,e){let i=e?t.left:t.right;return{left:i,right:i,top:t.top,bottom:t.bottom}}function Qe(t){return{left:0,right:t.innerWidth,top:0,bottom:t.innerHeight}}class Ze{constructor(){this.anchorNode=null,this.anchorOffset=0,this.focusNode=null,this.focusOffset=0}eq(t){return this.anchorNode==t.anchorNode&&this.anchorOffset==t.anchorOffset&&this.focusNode==t.focusNode&&this.focusOffset==t.focusOffset}setRange(t){this.set(t.anchorNode,t.anchorOffset,t.focusNode,t.focusOffset)}set(t,e,i,n){this.anchorNode=t,this.anchorOffset=e,this.focusNode=i,this.focusOffset=n}}let Se,ve=null;function xe(t){if(t.setActive)return t.setActive();if(ve)return t.focus(ve);let e=[];for(let i=t;i&&(e.push(i,i.scrollTop,i.scrollLeft),i!=i.ownerDocument);i=i.parentNode);if(t.focus(null==ve?{get preventScroll(){return ve={preventScroll:!0},!0}}:void 0),!ve){ve=!1;for(let t=0;t<e.length;){let i=e[t++],n=e[t++],r=e[t++];i.scrollTop!=n&&(i.scrollTop=n),i.scrollLeft!=r&&(i.scrollLeft=r)}}}function ke(t,e,i=e){let n=Se||(Se=document.createRange());return n.setEnd(t,i),n.setStart(t,e),n}function we(t,e,i){let n={key:e,code:e,keyCode:i,which:i,cancelable:!0},r=new KeyboardEvent("keydown",n);r.synthetic=!0,t.dispatchEvent(r);let s=new KeyboardEvent("keyup",n);return s.synthetic=!0,t.dispatchEvent(s),r.defaultPrevented||s.defaultPrevented}function ye(t){for(;t.attributes.length;)t.removeAttributeNode(t.attributes[0])}class Pe{constructor(t,e,i=!0){this.node=t,this.offset=e,this.precise=i}static before(t,e){return new Pe(t.parentNode,pe(t),e)}static after(t,e){return new Pe(t.parentNode,pe(t)+1,e)}}const Xe=[];class Re{constructor(){this.parent=null,this.dom=null,this.dirty=2}get editorView(){if(!this.parent)throw new Error("Accessing view in orphan content view");return this.parent.editorView}get overrideDOMText(){return null}get posAtStart(){return this.parent?this.parent.posBefore(this):0}get posAtEnd(){return this.posAtStart+this.length}posBefore(t){let e=this.posAtStart;for(let i of this.children){if(i==t)return e;e+=i.length+i.breakAfter}throw new RangeError("Invalid child in posBefore")}posAfter(t){return this.posBefore(t)+t.length}coordsAt(t,e){return null}sync(t){if(2&this.dirty){let e,i=this.dom,n=null;for(let r of this.children){if(r.dirty){if(!r.dom&&(e=n?n.nextSibling:i.firstChild)){let t=Re.get(e);t&&(t.parent||t.constructor!=r.constructor)||r.reuseDOM(e)}r.sync(t),r.dirty=0}if(e=n?n.nextSibling:i.firstChild,t&&!t.written&&t.node==i&&e!=r.dom&&(t.written=!0),r.dom.parentNode==i)for(;e&&e!=r.dom;)e=We(e);else i.insertBefore(r.dom,e);n=r.dom}for(e=n?n.nextSibling:i.firstChild,e&&t&&t.node==i&&(t.written=!0);e;)e=We(e)}else if(1&this.dirty)for(let e of this.children)e.dirty&&(e.sync(t),e.dirty=0)}reuseDOM(t){}localPosFromDOM(t,e){let i;if(t==this.dom)i=this.dom.childNodes[e];else{let n=0==ge(t)?0:0==e?-1:1;for(;;){let e=t.parentNode;if(e==this.dom)break;0==n&&e.firstChild!=e.lastChild&&(n=t==e.firstChild?-1:1),t=e}i=n<0?t:t.nextSibling}if(i==this.dom.firstChild)return 0;for(;i&&!Re.get(i);)i=i.nextSibling;if(!i)return this.length;for(let t=0,e=0;;t++){let n=this.children[t];if(n.dom==i)return e;e+=n.length+n.breakAfter}}domBoundsAround(t,e,i=0){let n=-1,r=-1,s=-1,o=-1;for(let a=0,l=i,h=i;a<this.children.length;a++){let i=this.children[a],O=l+i.length;if(l<t&&O>e)return i.domBoundsAround(t,e,l);if(O>=t&&-1==n&&(n=a,r=l),l>e&&i.dom.parentNode==this.dom){s=a,o=h;break}h=O,l=O+i.breakAfter}return{from:r,to:o<0?i+this.length:o,startDOM:(n?this.children[n-1].dom.nextSibling:null)||this.dom.firstChild,endDOM:s<this.children.length&&s>=0?this.children[s].dom:null}}markDirty(t=!1){this.dirty|=2,this.markParentsDirty(t)}markParentsDirty(t){for(let e=this.parent;e;e=e.parent){if(t&&(e.dirty|=2),1&e.dirty)return;e.dirty|=1,t=!1}}setParent(t){this.parent!=t&&(this.parent=t,this.dirty&&this.markParentsDirty(!0))}setDOM(t){this.dom&&(this.dom.cmView=null),this.dom=t,t.cmView=this}get rootView(){for(let t=this;;){let e=t.parent;if(!e)return t;t=e}}replaceChildren(t,e,i=Xe){this.markDirty();for(let i=t;i<e;i++){let t=this.children[i];t.parent==this&&t.destroy()}this.children.splice(t,e-t,...i);for(let t=0;t<i.length;t++)i[t].setParent(this)}ignoreMutation(t){return!1}ignoreEvent(t){return!1}childCursor(t=this.length){return new Ye(this.children,t,this.children.length)}childPos(t,e=1){return this.childCursor().findPos(t,e)}toString(){let t=this.constructor.name.replace("View","");return t+(this.children.length?"("+this.children.join()+")":this.length?"["+("Text"==t?this.text:this.length)+"]":"")+(this.breakAfter?"#":"")}static get(t){return t.cmView}get isEditable(){return!0}merge(t,e,i,n,r,s){return!1}become(t){return!1}getSide(){return 0}destroy(){this.parent=null}}function We(t){let e=t.nextSibling;return t.parentNode.removeChild(t),e}Re.prototype.breakAfter=0;class Ye{constructor(t,e,i){this.children=t,this.pos=e,this.i=i,this.off=0}findPos(t,e=1){for(;;){if(t>this.pos||t==this.pos&&(e>0||0==this.i||this.children[this.i-1].breakAfter))return this.off=t-this.pos,this;let i=this.children[--this.i];this.pos-=i.length+i.breakAfter}}}function Ce(t,e,i,n,r,s,o,a,l){let{children:h}=t,O=h.length?h[e]:null,c=s.length?s[s.length-1]:null,u=c?c.breakAfter:o;if(!(e==n&&O&&!o&&!u&&s.length<2&&O.merge(i,r,s.length?c:null,0==i,a,l))){if(n<h.length){let t=h[n];t&&r<t.length?(e==n&&(t=t.split(r),r=0),!u&&c&&t.merge(0,r,c,!0,0,l)?s[s.length-1]=t:(r&&t.merge(0,r,null,!1,0,l),s.push(t))):(null==t?void 0:t.breakAfter)&&(c?c.breakAfter=1:o=1),n++}for(O&&(O.breakAfter=o,i>0&&(!o&&s.length&&O.merge(i,O.length,s[0],!1,a,0)?O.breakAfter=s.shift().breakAfter:(i<O.length||O.children.length&&0==O.children[O.children.length-1].length)&&O.merge(i,O.length,null,!1,a,0),e++));e<n&&s.length;)if(h[n-1].become(s[s.length-1]))n--,s.pop(),l=s.length?0:a;else{if(!h[e].become(s[0]))break;e++,s.shift(),a=s.length?0:l}!s.length&&e&&n<h.length&&!h[e-1].breakAfter&&h[n].merge(0,0,h[e-1],!1,a,l)&&e--,(e<n||s.length)&&t.replaceChildren(e,n,s)}}function Ve(t,e,i,n,r,s){let o=t.childCursor(),{i:a,off:l}=o.findPos(i,1),{i:h,off:O}=o.findPos(e,-1),c=e-i;for(let t of n)c+=t.length;t.length+=c,Ce(t,h,O,a,l,n,0,r,s)}let je="undefined"!=typeof navigator?navigator:{userAgent:"",vendor:"",platform:""},Ue="undefined"!=typeof document?document:{documentElement:{style:{}}};const Je=/Edge\/(\d+)/.exec(je.userAgent),Ge=/MSIE \d/.test(je.userAgent),De=/Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(je.userAgent),Me=!!(Ge||De||Je),Ae=!Me&&/gecko\/(\d+)/i.test(je.userAgent),Ie=!Me&&/Chrome\/(\d+)/.exec(je.userAgent),qe="webkitFontSmoothing"in Ue.documentElement.style,ze=!Me&&/Apple Computer/.test(je.vendor),Ee=ze&&(/Mobile\/\w+/.test(je.userAgent)||je.maxTouchPoints>2);var Be={mac:Ee||/Mac/.test(je.platform),windows:/Win/.test(je.platform),linux:/Linux|X11/.test(je.platform),ie:Me,ie_version:Ge?Ue.documentMode||6:De?+De[1]:Je?+Je[1]:0,gecko:Ae,gecko_version:Ae?+(/Firefox\/(\d+)/.exec(je.userAgent)||[0,0])[1]:0,chrome:!!Ie,chrome_version:Ie?+Ie[1]:0,ios:Ee,android:/Android\b/.test(je.userAgent),webkit:qe,safari:ze,webkit_version:qe?+(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent)||[0,0])[1]:0,tabSize:null!=Ue.documentElement.style.tabSize?"tab-size":"-moz-tab-size"};class Fe extends Re{constructor(t){super(),this.text=t}get length(){return this.text.length}createDOM(t){this.setDOM(t||document.createTextNode(this.text))}sync(t){this.dom||this.createDOM(),this.dom.nodeValue!=this.text&&(t&&t.node==this.dom&&(t.written=!0),this.dom.nodeValue=this.text)}reuseDOM(t){3==t.nodeType&&this.createDOM(t)}merge(t,e,i){return(!i||i instanceof Fe&&!(this.length-(e-t)+i.length>256))&&(this.text=this.text.slice(0,t)+(i?i.text:"")+this.text.slice(e),this.markDirty(),!0)}split(t){let e=new Fe(this.text.slice(t));return this.text=this.text.slice(0,t),this.markDirty(),e}localPosFromDOM(t,e){return t==this.dom?e:e?this.text.length:0}domAtPos(t){return new Pe(this.dom,t)}domBoundsAround(t,e,i){return{from:i,to:i+this.length,startDOM:this.dom,endDOM:this.dom.nextSibling}}coordsAt(t,e){return Le(this.dom,t,e)}}class Ne extends Re{constructor(t,e=[],i=0){super(),this.mark=t,this.children=e,this.length=i;for(let t of e)t.setParent(this)}setAttrs(t){if(ye(t),this.mark.class&&(t.className=this.mark.class),this.mark.attrs)for(let e in this.mark.attrs)t.setAttribute(e,this.mark.attrs[e]);return t}reuseDOM(t){t.nodeName==this.mark.tagName.toUpperCase()&&(this.setDOM(t),this.dirty|=6)}sync(t){this.dom?4&this.dirty&&this.setAttrs(this.dom):this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))),super.sync(t)}merge(t,e,i,n,r,s){return(!i||!(!(i instanceof Ne&&i.mark.eq(this.mark))||t&&r<=0||e<this.length&&s<=0))&&(Ve(this,t,e,i?i.children:[],r-1,s-1),this.markDirty(),!0)}split(t){let e=[],i=0,n=-1,r=0;for(let s of this.children){let o=i+s.length;o>t&&e.push(i<t?s.split(t-i):s),n<0&&i>=t&&(n=r),i=o,r++}let s=this.length-t;return this.length=t,n>-1&&(this.children.length=n,this.markDirty()),new Ne(this.mark,e,s)}domAtPos(t){return ni(this.dom,this.children,t)}coordsAt(t,e){return si(this,t,e)}}function Le(t,e,i){let n=t.nodeValue.length;e>n&&(e=n);let r=e,s=e,o=0;0==e&&i<0||e==n&&i>=0?Be.chrome||Be.gecko||(e?(r--,o=1):(s++,o=-1)):i<0?r--:s++;let a=ke(t,r,s).getClientRects();if(!a.length)return Te;let l=a[(o?o<0:i>=0)?0:a.length-1];return Be.safari&&!o&&0==l.width&&(l=Array.prototype.find.call(a,(t=>t.width))||l),o?be(l,o<0):l||null}class Ke extends Re{constructor(t,e,i){super(),this.widget=t,this.length=e,this.side=i,this.prevWidget=null}static create(t,e,i){return new(t.customView||Ke)(t,e,i)}split(t){let e=Ke.create(this.widget,this.length-t,this.side);return this.length-=t,e}sync(){this.dom&&this.widget.updateDOM(this.dom)||(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}getSide(){return this.side}merge(t,e,i,n,r,s){return!(i&&(!(i instanceof Ke&&this.widget.compare(i.widget))||t>0&&r<=0||e<this.length&&s<=0))&&(this.length=t+(i?i.length:0)+(this.length-e),!0)}become(t){return t.length==this.length&&t instanceof Ke&&t.side==this.side&&this.widget.constructor==t.widget.constructor&&(this.widget.eq(t.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=t.widget,!0)}ignoreMutation(){return!0}ignoreEvent(t){return this.widget.ignoreEvent(t)}get overrideDOMText(){if(0==this.length)return d.empty;let t=this;for(;t.parent;)t=t.parent;let e=t.editorView,i=e&&e.state.doc,n=this.posAtStart;return i?i.slice(n,n+this.length):d.empty}domAtPos(t){return 0==t?Pe.before(this.dom):Pe.after(this.dom,t==this.length)}domBoundsAround(){return null}coordsAt(t,e){let i=this.dom.getClientRects(),n=null;if(!i.length)return Te;for(let e=t>0?i.length-1:0;n=i[e],!(t>0?0==e:e==i.length-1||n.top<n.bottom);e+=t>0?-1:1);return 0==t&&e>0||t==this.length&&e<=0?n:be(n,0==t)}get isEditable(){return!1}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class He extends Ke{domAtPos(t){let{topView:e,text:i}=this.widget;return e?ti(t,0,e,i,((t,e)=>t.domAtPos(e)),(t=>new Pe(i,Math.min(t,i.nodeValue.length)))):new Pe(i,Math.min(t,i.nodeValue.length))}sync(){this.setDOM(this.widget.toDOM())}localPosFromDOM(t,e){let{topView:i,text:n}=this.widget;return i?ei(t,e,i,n):Math.min(e,this.length)}ignoreMutation(){return!1}get overrideDOMText(){return null}coordsAt(t,e){let{topView:i,text:n}=this.widget;return i?ti(t,e,i,n,((t,e,i)=>t.coordsAt(e,i)),((t,e)=>Le(n,t,e))):Le(n,t,e)}destroy(){var t;super.destroy(),null===(t=this.widget.topView)||void 0===t||t.destroy()}get isEditable(){return!0}}function ti(t,e,i,n,r,s){if(i instanceof Ne){for(let o of i.children){let i=de(o.dom,n),a=i?n.nodeValue.length:o.length;if(t<a||t==a&&o.getSide()<=0)return i?ti(t,e,o,n,r,s):r(o,t,e);t-=a}return r(i,i.length,-1)}return i.dom==n?s(t,e):r(i,t,e)}function ei(t,e,i,n){if(i instanceof Ne)for(let r of i.children){let i=0,s=de(r.dom,n);if(de(r.dom,t))return i+(s?ei(t,e,r,n):r.localPosFromDOM(t,e));i+=s?n.nodeValue.length:r.length}else if(i.dom==n)return Math.min(e,n.nodeValue.length);return i.localPosFromDOM(t,e)}class ii extends Re{constructor(t){super(),this.side=t}get length(){return 0}merge(){return!1}become(t){return t instanceof ii&&t.side==this.side}split(){return new ii(this.side)}sync(){if(!this.dom){let t=document.createElement("img");t.className="cm-widgetBuffer",t.setAttribute("aria-hidden","true"),this.setDOM(t)}}getSide(){return this.side}domAtPos(t){return Pe.before(this.dom)}localPosFromDOM(){return 0}domBoundsAround(){return null}coordsAt(t){let e=this.dom.getBoundingClientRect(),i=function(t,e){let i=t.parent,n=i?i.children.indexOf(t):-1;for(;i&&n>=0;)if(e<0?n>0:n<i.children.length){let t=i.children[n+e];if(t instanceof Fe){let i=t.coordsAt(e<0?t.length:0,e);if(i)return i}n+=e}else{if(!(i instanceof Ne&&i.parent)){let t=i.dom.lastChild;if(t&&"BR"==t.nodeName)return t.getClientRects()[0];break}n=i.parent.children.indexOf(i)+(e<0?0:1),i=i.parent}return}(this,this.side>0?-1:1);return i&&i.top<e.bottom&&i.bottom>e.top?{left:e.left,right:e.right,top:i.top,bottom:i.bottom}:e}get overrideDOMText(){return d.empty}}function ni(t,e,i){let n=0;for(let r=0;n<e.length;n++){let s=e[n],o=r+s.length;if(!(o==r&&s.getSide()<=0)){if(i>r&&i<o&&s.dom.parentNode==t)return s.domAtPos(i-r);if(i<=r)break;r=o}}for(;n>0;n--){let i=e[n-1].dom;if(i.parentNode==t)return Pe.after(i)}return new Pe(t,0)}function ri(t,e,i){let n,{children:r}=t;i>0&&e instanceof Ne&&r.length&&(n=r[r.length-1])instanceof Ne&&n.mark.eq(e.mark)?ri(n,e.children[0],i-1):(r.push(e),e.setParent(t)),t.length+=e.length}function si(t,e,i){for(let n=0,r=0;r<t.children.length;r++){let s,o=t.children[r],a=n+o.length;if((i<=0||a==t.length||o.getSide()>0?a>=e:a>e)&&(e<a||r+1==t.children.length||(s=t.children[r+1]).length||s.getSide()>0)){let t=0;if(a==n){if(o.getSide()<=0)continue;t=i=-o.getSide()}let r=o.coordsAt(Math.max(0,e-n),i);return t&&r?be(r,i<0):r}n=a}let n=t.dom.lastChild;if(!n)return t.dom.getBoundingClientRect();let r=fe(n);return r[r.length-1]||null}function oi(t,e){for(let i in t)"class"==i&&e.class?e.class+=" "+t.class:"style"==i&&e.style?e.style+=";"+t.style:e[i]=t[i];return e}function ai(t,e){if(t==e)return!0;if(!t||!e)return!1;let i=Object.keys(t),n=Object.keys(e);if(i.length!=n.length)return!1;for(let r of i)if(-1==n.indexOf(r)||t[r]!==e[r])return!1;return!0}function li(t,e,i){if(e)for(let n in e)i&&n in i||t.removeAttribute(n);if(i)for(let n in i)e&&e[n]==i[n]||t.setAttribute(n,i[n])}Fe.prototype.children=Ke.prototype.children=ii.prototype.children=Xe;class hi{eq(t){return!1}updateDOM(t){return!1}compare(t){return this==t||this.constructor==t.constructor&&this.eq(t)}get estimatedHeight(){return-1}ignoreEvent(t){return!0}get customView(){return null}destroy(t){}}var Oi=function(t){return t[t.Text=0]="Text",t[t.WidgetBefore=1]="WidgetBefore",t[t.WidgetAfter=2]="WidgetAfter",t[t.WidgetRange=3]="WidgetRange",t}(Oi||(Oi={}));class ci extends Gt{constructor(t,e,i,n){super(),this.startSide=t,this.endSide=e,this.widget=i,this.spec=n}get heightRelevant(){return!1}static mark(t){return new ui(t)}static widget(t){let e=t.side||0,i=!!t.block;return e+=i?e>0?3e8:-4e8:e>0?1e8:-1e8,new $i(t,e,e,i,t.widget||null,!1)}static replace(t){let e,i,n=!!t.block;if(t.isBlockGap)e=-5e8,i=4e8;else{let{start:r,end:s}=fi(t,n);e=(r?n?-3e8:-1:5e8)-1,i=1+(s?n?2e8:1:-6e8)}return new $i(t,e,i,n,t.widget||null,!0)}static line(t){return new di(t)}static set(t,e=!1){return It.of(t,e)}hasHeight(){return!!this.widget&&this.widget.estimatedHeight>-1}}ci.none=It.empty;class ui extends ci{constructor(t){let{start:e,end:i}=fi(t);super(e?-1:5e8,i?1:-6e8,null,t),this.tagName=t.tagName||"span",this.class=t.class||"",this.attrs=t.attributes||null}eq(t){return this==t||t instanceof ui&&this.tagName==t.tagName&&this.class==t.class&&ai(this.attrs,t.attrs)}range(t,e=t){if(t>=e)throw new RangeError("Mark decorations may not be empty");return super.range(t,e)}}ui.prototype.point=!1;class di extends ci{constructor(t){super(-2e8,-2e8,null,t)}eq(t){return t instanceof di&&ai(this.spec.attributes,t.spec.attributes)}range(t,e=t){if(e!=t)throw new RangeError("Line decoration ranges must be zero-length");return super.range(t,e)}}di.prototype.mapMode=Z.TrackBefore,di.prototype.point=!0;class $i extends ci{constructor(t,e,i,n,r,s){super(e,i,r,t),this.block=n,this.isReplace=s,this.mapMode=n?e<=0?Z.TrackBefore:Z.TrackAfter:Z.TrackDel}get type(){return this.startSide<this.endSide?Oi.WidgetRange:this.startSide<=0?Oi.WidgetBefore:Oi.WidgetAfter}get heightRelevant(){return this.block||!!this.widget&&this.widget.estimatedHeight>=5}eq(t){return t instanceof $i&&(e=this.widget,i=t.widget,e==i||!!(e&&i&&e.compare(i)))&&this.block==t.block&&this.startSide==t.startSide&&this.endSide==t.endSide;var e,i}range(t,e=t){if(this.isReplace&&(t>e||t==e&&this.startSide>0&&this.endSide<=0))throw new RangeError("Invalid range for replacement decoration");if(!this.isReplace&&e!=t)throw new RangeError("Widget decorations can only have zero-length ranges");return super.range(t,e)}}function fi(t,e=!1){let{inclusiveStart:i,inclusiveEnd:n}=t;return null==i&&(i=t.inclusive),null==n&&(n=t.inclusive),{start:null!=i?i:e,end:null!=n?n:e}}function _i(t,e,i,n=0){let r=i.length-1;r>=0&&i[r]+n>=t?i[r]=Math.max(i[r],e):i.push(t,e)}$i.prototype.point=!0;class pi extends Re{constructor(){super(...arguments),this.children=[],this.length=0,this.prevAttrs=void 0,this.attrs=null,this.breakAfter=0}merge(t,e,i,n,r,s){if(i){if(!(i instanceof pi))return!1;this.dom||i.transferDOM(this)}return n&&this.setDeco(i?i.attrs:null),Ve(this,t,e,i?i.children:[],r,s),!0}split(t){let e=new pi;if(e.breakAfter=this.breakAfter,0==this.length)return e;let{i:i,off:n}=this.childPos(t);n&&(e.append(this.children[i].split(n),0),this.children[i].merge(n,this.children[i].length,null,!1,0,0),i++);for(let t=i;t<this.children.length;t++)e.append(this.children[t],0);for(;i>0&&0==this.children[i-1].length;)this.children[--i].destroy();return this.children.length=i,this.markDirty(),this.length=t,e}transferDOM(t){this.dom&&(t.setDOM(this.dom),t.prevAttrs=void 0===this.prevAttrs?this.attrs:this.prevAttrs,this.prevAttrs=void 0,this.dom=null)}setDeco(t){ai(this.attrs,t)||(this.dom&&(this.prevAttrs=this.attrs,this.markDirty()),this.attrs=t)}append(t,e){ri(this,t,e)}addLineDeco(t){let e=t.spec.attributes,i=t.spec.class;e&&(this.attrs=oi(e,this.attrs||{})),i&&(this.attrs=oi({class:i},this.attrs||{}))}domAtPos(t){return ni(this.dom,this.children,t)}reuseDOM(t){"DIV"==t.nodeName&&(this.setDOM(t),this.dirty|=6)}sync(t){var e;this.dom?4&this.dirty&&(ye(this.dom),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0):(this.setDOM(document.createElement("div")),this.dom.className="cm-line",this.prevAttrs=this.attrs?null:void 0),void 0!==this.prevAttrs&&(li(this.dom,this.prevAttrs,this.attrs),this.dom.classList.add("cm-line"),this.prevAttrs=void 0),super.sync(t);let i=this.dom.lastChild;for(;i&&Re.get(i)instanceof Ne;)i=i.lastChild;if(!(i&&this.length&&("BR"==i.nodeName||0!=(null===(e=Re.get(i))||void 0===e?void 0:e.isEditable)||Be.ios&&this.children.some((t=>t instanceof Fe))))){let t=document.createElement("BR");t.cmIgnore=!0,this.dom.appendChild(t)}}measureTextSize(){if(0==this.children.length||this.length>20)return null;let t=0;for(let e of this.children){if(!(e instanceof Fe))return null;let i=fe(e.dom);if(1!=i.length)return null;t+=i[0].width}return{lineHeight:this.dom.getBoundingClientRect().height,charWidth:t/this.length}}coordsAt(t,e){return si(this,t,e)}become(t){return!1}get type(){return Oi.Text}static find(t,e){for(let i=0,n=0;i<t.children.length;i++){let r=t.children[i],s=n+r.length;if(s>=e){if(r instanceof pi)return r;if(s>e)break}n=s+r.breakAfter}return null}}class mi extends Re{constructor(t,e,i){super(),this.widget=t,this.length=e,this.type=i,this.breakAfter=0,this.prevWidget=null}merge(t,e,i,n,r,s){return!(i&&(!(i instanceof mi&&this.widget.compare(i.widget))||t>0&&r<=0||e<this.length&&s<=0))&&(this.length=t+(i?i.length:0)+(this.length-e),!0)}domAtPos(t){return 0==t?Pe.before(this.dom):Pe.after(this.dom,t==this.length)}split(t){let e=this.length-t;this.length=t;let i=new mi(this.widget,e,this.type);return i.breakAfter=this.breakAfter,i}get children(){return Xe}sync(){this.dom&&this.widget.updateDOM(this.dom)||(this.dom&&this.prevWidget&&this.prevWidget.destroy(this.dom),this.prevWidget=null,this.setDOM(this.widget.toDOM(this.editorView)),this.dom.contentEditable="false")}get overrideDOMText(){return this.parent?this.parent.view.state.doc.slice(this.posAtStart,this.posAtEnd):d.empty}domBoundsAround(){return null}become(t){return t instanceof mi&&t.type==this.type&&t.widget.constructor==this.widget.constructor&&(t.widget.eq(this.widget)||this.markDirty(!0),this.dom&&!this.prevWidget&&(this.prevWidget=this.widget),this.widget=t.widget,this.length=t.length,this.breakAfter=t.breakAfter,!0)}ignoreMutation(){return!0}ignoreEvent(t){return this.widget.ignoreEvent(t)}destroy(){super.destroy(),this.dom&&this.widget.destroy(this.dom)}}class gi{constructor(t,e,i,n){this.doc=t,this.pos=e,this.end=i,this.disallowBlockEffectsBelow=n,this.content=[],this.curLine=null,this.breakAtStart=0,this.pendingBuffer=0,this.atCursorPos=!0,this.openStart=-1,this.openEnd=-1,this.text="",this.textOff=0,this.cursor=t.iter(),this.skip=e}posCovered(){if(0==this.content.length)return!this.breakAtStart&&this.doc.lineAt(this.pos).from!=this.pos;let t=this.content[this.content.length-1];return!(t.breakAfter||t instanceof mi&&t.type==Oi.WidgetBefore)}getLine(){return this.curLine||(this.content.push(this.curLine=new pi),this.atCursorPos=!0),this.curLine}flushBuffer(t){this.pendingBuffer&&(this.curLine.append(Ti(new ii(-1),t),t.length),this.pendingBuffer=0)}addBlockWidget(t){this.flushBuffer([]),this.curLine=null,this.content.push(t)}finish(t){t?this.pendingBuffer=0:this.flushBuffer([]),this.posCovered()||this.getLine()}buildText(t,e,i){for(;t>0;){if(this.textOff==this.text.length){let{value:e,lineBreak:i,done:n}=this.cursor.next(this.skip);if(this.skip=0,n)throw new Error("Ran out of text content when drawing inline views");if(i){this.posCovered()||this.getLine(),this.content.length?this.content[this.content.length-1].breakAfter=1:this.breakAtStart=1,this.flushBuffer([]),this.curLine=null,t--;continue}this.text=e,this.textOff=0}let n=Math.min(this.text.length-this.textOff,t,512);this.flushBuffer(e.slice(0,i)),this.getLine().append(Ti(new Fe(this.text.slice(this.textOff,this.textOff+n)),e),i),this.atCursorPos=!0,this.textOff+=n,t-=n,i=0}}span(t,e,i,n){this.buildText(e-t,i,n),this.pos=e,this.openStart<0&&(this.openStart=n)}point(t,e,i,n,r){let s=e-t;if(i instanceof $i)if(i.block){let{type:t}=i;t!=Oi.WidgetAfter||this.posCovered()||this.getLine(),this.addBlockWidget(new mi(i.widget||new bi("div"),s,t))}else{let o=Ke.create(i.widget||new bi("span"),s,i.startSide),a=this.atCursorPos&&!o.isEditable&&r<=n.length&&(t<e||i.startSide>0),l=!o.isEditable&&(t<e||i.startSide<=0),h=this.getLine();2!=this.pendingBuffer||a||(this.pendingBuffer=0),this.flushBuffer(n),a&&(h.append(Ti(new ii(1),n),r),r=n.length+Math.max(0,r-n.length)),h.append(Ti(o,n),r),this.atCursorPos=l,this.pendingBuffer=l?t<e?1:2:0}else this.doc.lineAt(this.pos).from==this.pos&&this.getLine().addLineDeco(i);s&&(this.textOff+s<=this.text.length?this.textOff+=s:(this.skip+=s-(this.text.length-this.textOff),this.text="",this.textOff=0),this.pos=e),this.openStart<0&&(this.openStart=r)}filterPoint(t,e,i,n){if(n<this.disallowBlockEffectsBelow&&i instanceof $i){if(i.block)throw new RangeError("Block decorations may not be specified via plugins");if(e>this.doc.lineAt(this.pos).to)throw new RangeError("Decorations that replace line breaks may not be specified via plugins")}return!0}static build(t,e,i,n,r){let s=new gi(t,e,i,r);return s.openEnd=It.spans(n,e,i,s),s.openStart<0&&(s.openStart=s.openEnd),s.finish(s.openEnd),s}}function Ti(t,e){for(let i of e)t=new Ne(i,[t],t.length);return t}class bi extends hi{constructor(t){super(),this.tag=t}eq(t){return t.tag==this.tag}toDOM(){return document.createElement(this.tag)}updateDOM(t){return t.nodeName.toLowerCase()==this.tag}}const Qi=[],Zi=j.define(),Si=j.define(),vi=j.define(),xi=j.define(),ki=j.define(),wi=j.define(),yi=dt.define({map:(t,e)=>t.map(e)}),Pi=dt.define({map:(t,e)=>t.map(e)});class Xi{constructor(t,e="nearest",i="nearest",n=5,r=5){this.range=t,this.y=e,this.x=i,this.yMargin=n,this.xMargin=r}map(t){return t.empty?this:new Xi(this.range.map(t),this.y,this.x,this.yMargin,this.xMargin)}}const Ri=dt.define({map:(t,e)=>t.map(e)});function Wi(t,e,i){let n=t.facet(xi);n.length?n[0](e):window.onerror?window.onerror(String(e),i,void 0,void 0,e):i?console.error(i+":",e):console.error(e)}const Yi=j.define({combine:t=>!t.length||t[0]});class Ci{constructor(t,e){this.field=t,this.get=e}}class Vi{from(t){return new Ci(this,t)}static define(){return new Vi}}Vi.decorations=Vi.define(),Vi.atomicRanges=Vi.define(),Vi.scrollMargins=Vi.define();let ji=0;const Ui=j.define();class Ji{constructor(t,e,i){this.id=t,this.create=e,this.fields=i,this.extension=Ui.of(this)}static define(t,e){let{eventHandlers:i,provide:n,decorations:r}=e||{},s=[];if(n)for(let t of Array.isArray(n)?n:[n])s.push(t);return i&&s.push(Gi.from((t=>({plugin:t,handlers:i})))),r&&s.push(Vi.decorations.from(r)),new Ji(ji++,t,s)}static fromClass(t,e){return Ji.define((e=>new t(e)),e)}}const Gi=Vi.define();class Di{constructor(t){this.spec=t,this.mustUpdate=null,this.value=null}takeField(t,e){if(this.spec)for(let{field:i,get:n}of this.spec.fields)i==t&&e.push(n(this.value))}update(t){if(this.value){if(this.mustUpdate){let t=this.mustUpdate;if(this.mustUpdate=null,this.value.update)try{this.value.update(t)}catch(e){if(Wi(t.state,e,"CodeMirror plugin crashed"),this.value.destroy)try{this.value.destroy()}catch(t){}this.deactivate()}}}else if(this.spec)try{this.value=this.spec.create(t)}catch(e){Wi(t.state,e,"CodeMirror plugin crashed"),this.deactivate()}return this}destroy(t){var e;if(null===(e=this.value)||void 0===e?void 0:e.destroy)try{this.value.destroy()}catch(e){Wi(t.state,e,"CodeMirror plugin crashed")}}deactivate(){this.spec=this.value=null}}const Mi=j.define(),Ai=j.define(),Ii=j.define(),qi=j.define();class zi{constructor(t,e,i,n){this.fromA=t,this.toA=e,this.fromB=i,this.toB=n}join(t){return new zi(Math.min(this.fromA,t.fromA),Math.max(this.toA,t.toA),Math.min(this.fromB,t.fromB),Math.max(this.toB,t.toB))}addToSet(t){let e=t.length,i=this;for(;e>0;e--){let n=t[e-1];if(!(n.fromA>i.toA)){if(n.toA<i.fromA)break;i=i.join(n),t.splice(e-1,1)}}return t.splice(e,0,i),t}static extendWithRanges(t,e){if(0==e.length)return t;let i=[];for(let n=0,r=0,s=0,o=0;;n++){let a=n==t.length?null:t[n],l=s-o,h=a?a.fromB:1e9;for(;r<e.length&&e[r]<h;){let t=e[r],n=e[r+1],s=Math.max(o,t),a=Math.min(h,n);if(s<=a&&new zi(s+l,a+l,s,a).addToSet(i),n>h)break;r+=2}if(!a)return i;new zi(a.fromA,a.toA,a.fromB,a.toB).addToSet(i),s=a.toA,o=a.toB}}}class Ei{constructor(t,e,i=Qi){this.view=t,this.state=e,this.transactions=i,this.flags=0,this.startState=t.state,this.changes=v.empty(this.startState.doc.length);for(let t of i)this.changes=this.changes.compose(t.changes);let n=[];this.changes.iterChangedRanges(((t,e,i,r)=>n.push(new zi(t,e,i,r)))),this.changedRanges=n;let r=t.hasFocus;r!=t.inputState.notifiedFocused&&(t.inputState.notifiedFocused=r,this.flags|=1)}get viewportChanged(){return(4&this.flags)>0}get heightChanged(){return(2&this.flags)>0}get geometryChanged(){return this.docChanged||(10&this.flags)>0}get focusChanged(){return(1&this.flags)>0}get docChanged(){return!this.changes.empty}get selectionSet(){return this.transactions.some((t=>t.selection))}get empty(){return 0==this.flags&&0==this.transactions.length}}var Bi=function(t){return t[t.LTR=0]="LTR",t[t.RTL=1]="RTL",t}(Bi||(Bi={}));const Fi=Bi.LTR,Ni=Bi.RTL;function Li(t){let e=[];for(let i=0;i<t.length;i++)e.push(1<<+t[i]);return e}const Ki=Li("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"),Hi=Li("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"),tn=Object.create(null),en=[];for(let t of["()","[]","{}"]){let e=t.charCodeAt(0),i=t.charCodeAt(1);tn[e]=i,tn[i]=-e}const nn=/[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;class rn{constructor(t,e,i){this.from=t,this.to=e,this.level=i}get dir(){return this.level%2?Ni:Fi}side(t,e){return this.dir==e==t?this.to:this.from}static find(t,e,i,n){let r=-1;for(let s=0;s<t.length;s++){let o=t[s];if(o.from<=e&&o.to>=e){if(o.level==i)return s;(r<0||(0!=n?n<0?o.from<e:o.to>e:t[r].level>o.level))&&(r=s)}}if(r<0)throw new RangeError("Index out of range");return r}}const sn=[];function on(t){return[new rn(0,t,0)]}let an="";function ln(t,e,i,r,s){var o;let a=r.head-t.from,l=-1;if(0==a){if(!s||!t.length)return null;e[0].level!=i&&(a=e[0].side(!1,i),l=0)}else if(a==t.length){if(s)return null;let t=e[e.length-1];t.level!=i&&(a=t.side(!0,i),l=e.length-1)}l<0&&(l=rn.find(e,a,null!==(o=r.bidiLevel)&&void 0!==o?o:-1,r.assoc));let h=e[l];a==h.side(s,i)&&(h=e[l+=s?1:-1],a=h.side(!s,i));let O=s==(h.dir==i),c=n(t.text,a,O);if(an=t.text.slice(Math.min(a,c),Math.max(a,c)),c!=h.side(s,i))return W.cursor(c+t.from,O?-1:1,h.level);let u=l==(s?e.length-1:0)?null:e[l+(s?1:-1)];return u||h.level==i?u&&u.level<h.level?W.cursor(u.side(!s,i)+t.from,s?1:-1,u.level):W.cursor(c+t.from,s?-1:1,h.level):W.cursor(s?t.to:t.from,s?-1:1,i)}const hn="\uffff";class On{constructor(t,e){this.points=t,this.text="",this.lineSeparator=e.facet(vt.lineSeparator)}append(t){this.text+=t}lineBreak(){this.text+=hn}readRange(t,e){if(!t)return this;let i=t.parentNode;for(let n=t;;){this.findPointBefore(i,n),this.readNode(n);let t=n.nextSibling;if(t==e)break;let r=Re.get(n),s=Re.get(t);(r&&s?r.breakAfter:(r?r.breakAfter:cn(n))||cn(t)&&("BR"!=n.nodeName||n.cmIgnore))&&this.lineBreak(),n=t}return this.findPointBefore(i,e),this}readTextNode(t){let e=t.nodeValue;for(let i of this.points)i.node==t&&(i.pos=this.text.length+Math.min(i.offset,e.length));for(let i=0,n=this.lineSeparator?null:/\r\n?|\n/g;;){let r,s=-1,o=1;if(this.lineSeparator?(s=e.indexOf(this.lineSeparator,i),o=this.lineSeparator.length):(r=n.exec(e))&&(s=r.index,o=r[0].length),this.append(e.slice(i,s<0?e.length:s)),s<0)break;if(this.lineBreak(),o>1)for(let e of this.points)e.node==t&&e.pos>this.text.length&&(e.pos-=o-1);i=s+o}}readNode(t){if(t.cmIgnore)return;let e=Re.get(t),i=e&&e.overrideDOMText;if(null!=i){this.findPointInside(t,i.length);for(let t=i.iter();!t.next().done;)t.lineBreak?this.lineBreak():this.append(t.value)}else 3==t.nodeType?this.readTextNode(t):"BR"==t.nodeName?t.nextSibling&&this.lineBreak():1==t.nodeType&&this.readRange(t.firstChild,null)}findPointBefore(t,e){for(let i of this.points)i.node==t&&t.childNodes[i.offset]==e&&(i.pos=this.text.length)}findPointInside(t,e){for(let i of this.points)(3==t.nodeType?i.node==t:t.contains(i.node))&&(i.pos=this.text.length+Math.min(e,i.offset))}}function cn(t){return 1==t.nodeType&&/^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName)}class un{constructor(t,e){this.node=t,this.offset=e,this.pos=-1}}class dn extends Re{constructor(t){super(),this.view=t,this.compositionDeco=ci.none,this.decorations=[],this.pluginDecorationLength=0,this.minWidth=0,this.minWidthFrom=0,this.minWidthTo=0,this.impreciseAnchor=null,this.impreciseHead=null,this.forceSelection=!1,this.lastUpdate=Date.now(),this.setDOM(t.contentDOM),this.children=[new pi],this.children[0].setParent(this),this.updateDeco(),this.updateInner([new zi(0,0,0,t.state.doc.length)],0)}get root(){return this.view.root}get editorView(){return this.view}get length(){return this.view.state.doc.length}update(t){let e=t.changedRanges;this.minWidth>0&&e.length&&(e.every((({fromA:t,toA:e})=>e<this.minWidthFrom||t>this.minWidthTo))?(this.minWidthFrom=t.changes.mapPos(this.minWidthFrom,1),this.minWidthTo=t.changes.mapPos(this.minWidthTo,1)):this.minWidth=this.minWidthFrom=this.minWidthTo=0),this.view.inputState.composing<0?this.compositionDeco=ci.none:(t.transactions.length||this.dirty)&&(this.compositionDeco=function(t,e){let i=fn(t);if(!i)return ci.none;let{from:n,to:r,node:s,text:o}=i,a=e.mapPos(n,1),l=Math.max(a,e.mapPos(r,-1)),{state:h}=t,O=3==s.nodeType?s.nodeValue:new On([],h).readRange(s.firstChild,null).text;if(l-a<O.length)if(h.doc.sliceString(a,Math.min(h.doc.length,a+O.length),hn)==O)l=a+O.length;else{if(h.doc.sliceString(Math.max(0,l-O.length),l,hn)!=O)return ci.none;a=l-O.length}else if(h.doc.sliceString(a,l,hn)!=O)return ci.none;let c=Re.get(s);c instanceof He?c=c.widget.topView:c&&(c.parent=null);return ci.set(ci.replace({widget:new _n(s,o,c)}).range(a,l))}(this.view,t.changes)),(Be.ie||Be.chrome)&&!this.compositionDeco.size&&t&&t.state.doc.lines!=t.startState.doc.lines&&(this.forceSelection=!0);let i=function(t,e,i){let n=new mn;return It.compare(t,e,i,n),n.changes}(this.decorations,this.updateDeco(),t.changes);return e=zi.extendWithRanges(e,i),(0!=this.dirty||0!=e.length)&&(this.updateInner(e,t.startState.doc.length),t.transactions.length&&(this.lastUpdate=Date.now()),!0)}updateInner(t,e){this.view.viewState.mustMeasureContent=!0,this.updateChildren(t,e);let{observer:i}=this.view;i.ignore((()=>{this.dom.style.height=this.view.viewState.contentHeight+"px",this.dom.style.minWidth=this.minWidth?this.minWidth+"px":"";let t=Be.chrome||Be.ios?{node:i.selectionRange.focusNode,written:!1}:void 0;this.sync(t),this.dirty=0,t&&(t.written||i.selectionRange.focusNode!=t.node)&&(this.forceSelection=!0),this.dom.style.height=""}));let n=[];if(this.view.viewport.from||this.view.viewport.to<this.view.state.doc.length)for(let t of this.children)t instanceof mi&&t.widget instanceof $n&&n.push(t.dom);i.updateGaps(n)}updateChildren(t,e){let i=this.childCursor(e);for(let e=t.length-1;;e--){let n=e>=0?t[e]:null;if(!n)break;let{fromA:r,toA:s,fromB:o,toB:a}=n,{content:l,breakAtStart:h,openStart:O,openEnd:c}=gi.build(this.view.state.doc,o,a,this.decorations,this.pluginDecorationLength),{i:u,off:d}=i.findPos(s,1),{i:$,off:f}=i.findPos(r,-1);Ce(this,$,f,u,d,l,h,O,c)}}updateSelection(t=!1,e=!1){if(t&&this.view.observer.readSelectionRange(),!e&&!this.mayControlSelection()||Be.ios&&this.view.inputState.rapidCompositionStart)return;let i=this.forceSelection;this.forceSelection=!1;let n=this.view.state.selection.main,r=this.domAtPos(n.anchor),s=n.empty?r:this.domAtPos(n.head);if(Be.gecko&&n.empty&&(1==(o=r).node.nodeType&&o.node.firstChild&&(0==o.offset||"false"==o.node.childNodes[o.offset-1].contentEditable)&&(o.offset==o.node.childNodes.length||"false"==o.node.childNodes[o.offset].contentEditable))){let t=document.createTextNode("");this.view.observer.ignore((()=>r.node.insertBefore(t,r.node.childNodes[r.offset]||null))),r=s=new Pe(t,0),i=!0}var o;let a=this.view.observer.selectionRange;!i&&a.focusNode&&_e(r.node,r.offset,a.anchorNode,a.anchorOffset)&&_e(s.node,s.offset,a.focusNode,a.focusOffset)||(this.view.observer.ignore((()=>{Be.android&&Be.chrome&&this.dom.contains(a.focusNode)&&function(t,e){for(let i=t;i&&i!=e;i=i.assignedSlot||i.parentNode)if(1==i.nodeType&&"false"==i.contentEditable)return!0;return!1}(a.focusNode,this.dom)&&(this.dom.blur(),this.dom.focus({preventScroll:!0}));let t=ue(this.root);if(n.empty){if(Be.gecko){let t=(e=r.node,i=r.offset,1!=e.nodeType?0:(i&&"false"==e.childNodes[i-1].contentEditable?1:0)|(i<e.childNodes.length&&"false"==e.childNodes[i].contentEditable?2:0));if(t&&3!=t){let e=pn(r.node,r.offset,1==t?1:-1);e&&(r=new Pe(e,1==t?0:e.nodeValue.length))}}t.collapse(r.node,r.offset),null!=n.bidiLevel&&null!=a.cursorBidiLevel&&(a.cursorBidiLevel=n.bidiLevel)}else if(t.extend)t.collapse(r.node,r.offset),t.extend(s.node,s.offset);else{let e=document.createRange();n.anchor>n.head&&([r,s]=[s,r]),e.setEnd(s.node,s.offset),e.setStart(r.node,r.offset),t.removeAllRanges(),t.addRange(e)}var e,i})),this.view.observer.setSelectionRange(r,s)),this.impreciseAnchor=r.precise?null:new Pe(a.anchorNode,a.anchorOffset),this.impreciseHead=s.precise?null:new Pe(a.focusNode,a.focusOffset)}enforceCursorAssoc(){if(this.compositionDeco.size)return;let t=this.view.state.selection.main,e=ue(this.root);if(!t.empty||!t.assoc||!e.modify)return;let i=pi.find(this,t.head);if(!i)return;let n=i.posAtStart;if(t.head==n||t.head==n+i.length)return;let r=this.coordsAt(t.head,-1),s=this.coordsAt(t.head,1);if(!r||!s||r.bottom>s.top)return;let o=this.domAtPos(t.head+t.assoc);e.collapse(o.node,o.offset),e.modify("move",t.assoc<0?"forward":"backward","lineboundary")}mayControlSelection(){return this.view.state.facet(Yi)?this.root.activeElement==this.dom:$e(this.dom,this.view.observer.selectionRange)}nearest(t){for(let e=t;e;){let t=Re.get(e);if(t&&t.rootView==this)return t;e=e.parentNode}return null}posFromDOM(t,e){let i=this.nearest(t);if(!i)throw new RangeError("Trying to find position for a DOM position outside of the document");return i.localPosFromDOM(t,e)+i.posAtStart}domAtPos(t){let{i:e,off:i}=this.childCursor().findPos(t,-1);for(;e<this.children.length-1;){let t=this.children[e];if(i<t.length||t instanceof pi)break;e++,i=0}return this.children[e].domAtPos(i)}coordsAt(t,e){for(let i=this.length,n=this.children.length-1;;n--){let r=this.children[n],s=i-r.breakAfter-r.length;if(t>s||t==s&&r.type!=Oi.WidgetBefore&&r.type!=Oi.WidgetAfter&&(!n||2==e||this.children[n-1].breakAfter||this.children[n-1].type==Oi.WidgetBefore&&e>-2))return r.coordsAt(t-s,e);i=s}}measureVisibleLineHeights(){let t=[],{from:e,to:i}=this.view.viewState.viewport,n=this.view.contentDOM.clientWidth,r=n>Math.max(this.view.scrollDOM.clientWidth,this.minWidth)+1,s=-1;for(let o=0,a=0;a<this.children.length;a++){let l=this.children[a],h=o+l.length;if(h>i)break;if(o>=e){let e=l.dom.getBoundingClientRect();if(t.push(e.height),r){let t=l.dom.lastChild,i=t?fe(t):[];if(i.length){let t=i[i.length-1],r=this.view.textDirection==Bi.LTR?t.right-e.left:e.right-t.left;r>s&&(s=r,this.minWidth=n,this.minWidthFrom=o,this.minWidthTo=h)}}}o=h+l.breakAfter}return t}measureTextSize(){for(let t of this.children)if(t instanceof pi){let e=t.measureTextSize();if(e)return e}let t,e,i=document.createElement("div");return i.className="cm-line",i.textContent="abc def ghi jkl mno pqr stu",this.view.observer.ignore((()=>{this.dom.appendChild(i);let n=fe(i.firstChild)[0];t=i.getBoundingClientRect().height,e=n?n.width/27:7,i.remove()})),{lineHeight:t,charWidth:e}}childCursor(t=this.length){let e=this.children.length;return e&&(t-=this.children[--e].length),new Ye(this.children,t,e)}computeBlockGapDeco(){let t=[],e=this.view.viewState;for(let i=0,n=0;;n++){let r=n==e.viewports.length?null:e.viewports[n],s=r?r.from-1:this.length;if(s>i){let n=e.lineBlockAt(s).bottom-e.lineBlockAt(i).top;t.push(ci.replace({widget:new $n(n),block:!0,inclusive:!0,isBlockGap:!0}).range(i,s))}if(!r)break;i=r.to+1}return ci.set(t)}updateDeco(){let t=this.view.pluginField(Vi.decorations);return this.pluginDecorationLength=t.length,this.decorations=[...t,...this.view.state.facet(Ii),this.compositionDeco,this.computeBlockGapDeco(),this.view.viewState.lineGapDeco]}scrollIntoView(t){let e,{range:i}=t,n=this.coordsAt(i.head,i.empty?i.assoc:i.head>i.anchor?-1:1);if(!n)return;!i.empty&&(e=this.coordsAt(i.anchor,i.anchor>i.head?-1:1))&&(n={left:Math.min(n.left,e.left),top:Math.min(n.top,e.top),right:Math.max(n.right,e.right),bottom:Math.max(n.bottom,e.bottom)});let r=0,s=0,o=0,a=0;for(let t of this.view.pluginField(Vi.scrollMargins))if(t){let{left:e,right:i,top:n,bottom:l}=t;null!=e&&(r=Math.max(r,e)),null!=i&&(s=Math.max(s,i)),null!=n&&(o=Math.max(o,n)),null!=l&&(a=Math.max(a,l))}let l={left:n.left-r,top:n.top-o,right:n.right+s,bottom:n.bottom+a};!function(t,e,i,n,r,s,o,a){let l=t.ownerDocument,h=l.defaultView;for(let O=t;O;)if(1==O.nodeType){let t,c=O==l.body;if(c)t=Qe(h);else{if(O.scrollHeight<=O.clientHeight&&O.scrollWidth<=O.clientWidth){O=O.parentNode;continue}let e=O.getBoundingClientRect();t={left:e.left,right:e.left+O.clientWidth,top:e.top,bottom:e.top+O.clientHeight}}let u=0,d=0;if("nearest"==r)e.top<t.top?(d=-(t.top-e.top+o),i>0&&e.bottom>t.bottom+d&&(d=e.bottom-t.bottom+d+o)):e.bottom>t.bottom&&(d=e.bottom-t.bottom+o,i<0&&e.top-d<t.top&&(d=-(t.top+d-e.top+o)));else{let n=e.bottom-e.top,s=t.bottom-t.top;d=("center"==r&&n<=s?e.top+n/2-s/2:"start"==r||"center"==r&&i<0?e.top-o:e.bottom-s+o)-t.top}if("nearest"==n?e.left<t.left?(u=-(t.left-e.left+s),i>0&&e.right>t.right+u&&(u=e.right-t.right+u+s)):e.right>t.right&&(u=e.right-t.right+s,i<0&&e.left<t.left+u&&(u=-(t.left+u-e.left+s))):u=("center"==n?e.left+(e.right-e.left)/2-(t.right-t.left)/2:"start"==n==a?e.left-s:e.right-(t.right-t.left)+s)-t.left,u||d)if(c)h.scrollBy(u,d);else{if(d){let t=O.scrollTop;O.scrollTop+=d,d=O.scrollTop-t}if(u){let t=O.scrollLeft;O.scrollLeft+=u,u=O.scrollLeft-t}e={left:e.left-u,top:e.top-d,right:e.right-u,bottom:e.bottom-d}}if(c)break;O=O.assignedSlot||O.parentNode,n=r="nearest"}else{if(11!=O.nodeType)break;O=O.host}}(this.view.scrollDOM,l,i.head<i.anchor?-1:1,t.x,t.y,t.xMargin,t.yMargin,this.view.textDirection==Bi.LTR)}}class $n extends hi{constructor(t){super(),this.height=t}toDOM(){let t=document.createElement("div");return this.updateDOM(t),t}eq(t){return t.height==this.height}updateDOM(t){return t.style.height=this.height+"px",!0}get estimatedHeight(){return this.height}}function fn(t){let e=t.observer.selectionRange,i=e.focusNode&&pn(e.focusNode,e.focusOffset,0);if(!i)return null;let n=t.docView.nearest(i);if(!n)return null;if(n instanceof pi){let t=i;for(;t.parentNode!=n.dom;)t=t.parentNode;let e=t.previousSibling;for(;e&&!Re.get(e);)e=e.previousSibling;let r=e?Re.get(e).posAtEnd:n.posAtStart;return{from:r,to:r,node:t,text:i}}{for(;;){let{parent:t}=n;if(!t)return null;if(t instanceof pi)break;n=t}let t=n.posAtStart;return{from:t,to:t+n.length,node:n.dom,text:i}}}class _n extends hi{constructor(t,e,i){super(),this.top=t,this.text=e,this.topView=i}eq(t){return this.top==t.top&&this.text==t.text}toDOM(){return this.top}ignoreEvent(){return!1}get customView(){return He}}function pn(t,e,i){for(;;){if(3==t.nodeType)return t;if(1==t.nodeType&&e>0&&i<=0)e=ge(t=t.childNodes[e-1]);else{if(!(1==t.nodeType&&e<t.childNodes.length&&i>=0))return null;t=t.childNodes[e],e=0}}}class mn{constructor(){this.changes=[]}compareRange(t,e){_i(t,e,this.changes)}comparePoint(t,e){_i(t,e,this.changes)}}function gn(t,e){return e.left>t?e.left-t:Math.max(0,t-e.right)}function Tn(t,e){return e.top>t?e.top-t:Math.max(0,t-e.bottom)}function bn(t,e){return t.top<e.bottom-1&&t.bottom>e.top+1}function Qn(t,e){return e<t.top?{top:e,left:t.left,right:t.right,bottom:t.bottom}:t}function Zn(t,e){return e>t.bottom?{top:t.top,left:t.left,right:t.right,bottom:e}:t}function Sn(t,e,i){let n,r,s,o,a,l,h,O;for(let c=t.firstChild;c;c=c.nextSibling){let t=fe(c);for(let u=0;u<t.length;u++){let d=t[u];r&&bn(r,d)&&(d=Qn(Zn(d,r.bottom),r.top));let $=gn(e,d),f=Tn(i,d);if(0==$&&0==f)return 3==c.nodeType?vn(c,e,i):Sn(c,e,i);(!n||o>f||o==f&&s>$)&&(n=c,r=d,s=$,o=f),0==$?i>d.bottom&&(!h||h.bottom<d.bottom)?(a=c,h=d):i<d.top&&(!O||O.top>d.top)&&(l=c,O=d):h&&bn(h,d)?h=Zn(h,d.bottom):O&&bn(O,d)&&(O=Qn(O,d.top))}}if(h&&h.bottom>=i?(n=a,r=h):O&&O.top<=i&&(n=l,r=O),!n)return{node:t,offset:0};let c=Math.max(r.left,Math.min(r.right,e));return 3==n.nodeType?vn(n,c,i):s||"true"!=n.contentEditable?{node:t,offset:Array.prototype.indexOf.call(t.childNodes,n)+(e>=(r.left+r.right)/2?1:0)}:Sn(n,c,i)}function vn(t,e,i){let n=t.nodeValue.length,r=-1,s=1e9,o=0;for(let a=0;a<n;a++){let n=ke(t,a,a+1).getClientRects();for(let l=0;l<n.length;l++){let h=n[l];if(h.top==h.bottom)continue;o||(o=e-h.left);let O=(h.top>i?h.top-i:i-h.bottom)-1;if(h.left-1<=e&&h.right+1>=e&&O<s){let i=e>=(h.left+h.right)/2,n=i;if(Be.chrome||Be.gecko){ke(t,a).getBoundingClientRect().left==h.right&&(n=!i)}if(O<=0)return{node:t,offset:a+(n?1:0)};r=a+(n?1:0),s=O}}}return{node:t,offset:r>-1?r:o>0?t.nodeValue.length:0}}function xn(t,{x:e,y:i},n,r=-1){var s;let o,a=t.contentDOM.getBoundingClientRect(),l=a.top+t.viewState.paddingTop,{docHeight:h}=t.viewState,O=i-l;if(O<0)return 0;if(O>h)return t.state.doc.length;for(let e=t.defaultLineHeight/2,i=!1;o=t.elementAtHeight(O),o.type!=Oi.Text;)for(;O=r>0?o.bottom+e:o.top-e,!(O>=0&&O<=h);){if(i)return n?null:0;i=!0,r=-r}i=l+O;let c=o.from;if(c<t.viewport.from)return 0==t.viewport.from?0:n?null:kn(t,a,o,e,i);if(c>t.viewport.to)return t.viewport.to==t.state.doc.length?t.state.doc.length:n?null:kn(t,a,o,e,i);let u=t.dom.ownerDocument,d=t.root.elementFromPoint?t.root:u,$=d.elementFromPoint(e,i);$&&!t.contentDOM.contains($)&&($=null),$||(e=Math.max(a.left+1,Math.min(a.right-1,e)),$=d.elementFromPoint(e,i),$&&!t.contentDOM.contains($)&&($=null));let f,_=-1;if($&&0!=(null===(s=t.docView.nearest($))||void 0===s?void 0:s.isEditable))if(u.caretPositionFromPoint){let t=u.caretPositionFromPoint(e,i);t&&({offsetNode:f,offset:_}=t)}else if(u.caretRangeFromPoint){let t=u.caretRangeFromPoint(e,i);t&&(({startContainer:f,startOffset:_}=t),Be.safari&&function(t,e,i){let n;if(3!=t.nodeType||e!=(n=t.nodeValue.length))return!1;for(let e=t.nextSibling;e;e=e.nextSibling)if(1!=e.nodeType||"BR"!=e.nodeName)return!1;return ke(t,n-1,n).getBoundingClientRect().left>i}(f,_,e)&&(f=void 0))}if(!f||!t.docView.dom.contains(f)){let n=pi.find(t.docView,c);if(!n)return O>o.top+o.height/2?o.to:o.from;({node:f,offset:_}=Sn(n.dom,e,i))}return t.docView.posFromDOM(f,_)}function kn(t,e,i,n,r){let s=Math.round((n-e.left)*t.defaultCharacterWidth);if(t.lineWrapping&&i.height>1.5*t.defaultLineHeight){s+=Math.floor((r-i.top)/t.defaultLineHeight)*t.viewState.heightOracle.lineLength}let o=t.state.sliceDoc(i.from,i.to);return i.from+u(o,s,t.state.tabSize)}function wn(t,e,i,n){let r=t.state.doc.lineAt(e.head),s=t.bidiSpans(r);for(let o=e,a=null;;){let e=ln(r,s,t.textDirection,o,i),l=an;if(!e){if(r.number==(i?t.state.doc.lines:1))return o;l="\n",r=t.state.doc.line(r.number+(i?1:-1)),s=t.bidiSpans(r),e=W.cursor(i?r.from:r.to)}if(a){if(!a(l))return o}else{if(!n)return e;a=n(l)}o=e}}function yn(t,e,i){let n=t.pluginField(Vi.atomicRanges);for(;;){let t=!1;for(let r of n)r.between(i.from-1,i.from+1,((n,r,s)=>{i.from>n&&i.from<r&&(i=e.from>i.from?W.cursor(n,1):W.cursor(r,-1),t=!0)}));if(!t)return i}}class Pn{constructor(t){this.lastKeyCode=0,this.lastKeyTime=0,this.pendingIOSKey=void 0,this.lastSelectionOrigin=null,this.lastSelectionTime=0,this.lastEscPress=0,this.lastContextMenu=0,this.scrollHandlers=[],this.registeredEvents=[],this.customHandlers=[],this.composing=-1,this.compositionFirstChange=null,this.compositionEndedAt=0,this.rapidCompositionStart=!1,this.mouseSelection=null;for(let e in Cn){let i=Cn[e];t.contentDOM.addEventListener(e,(n=>{Yn(t,n)&&!this.ignoreDuringComposition(n)&&("keydown"==e&&this.keydown(t,n)||(this.mustFlushObserver(n)&&t.observer.forceFlush(),this.runCustomHandlers(e,t,n)?n.preventDefault():i(t,n)))})),this.registeredEvents.push(e)}this.notifiedFocused=t.hasFocus,this.ensureHandlers(t),Be.safari&&t.contentDOM.addEventListener("input",(()=>null))}setSelectionOrigin(t){this.lastSelectionOrigin=t,this.lastSelectionTime=Date.now()}ensureHandlers(t){let e=this.customHandlers=t.pluginField(Gi);for(let i of e)for(let e in i.handlers)this.registeredEvents.indexOf(e)<0&&"scroll"!=e&&(this.registeredEvents.push(e),t.contentDOM.addEventListener(e,(i=>{Yn(t,i)&&this.runCustomHandlers(e,t,i)&&i.preventDefault()})))}runCustomHandlers(t,e,i){for(let n of this.customHandlers){let r=n.handlers[t];if(r)try{if(r.call(n.plugin,i,e)||i.defaultPrevented)return!0}catch(t){Wi(e.state,t)}}return!1}runScrollHandlers(t,e){for(let i of this.customHandlers){let n=i.handlers.scroll;if(n)try{n.call(i.plugin,e,t)}catch(e){Wi(t.state,e)}}}keydown(t,e){if(this.lastKeyCode=e.keyCode,this.lastKeyTime=Date.now(),9==e.keyCode&&Date.now()<this.lastEscPress+2e3)return!0;if(Be.android&&Be.chrome&&!e.synthetic&&(13==e.keyCode||8==e.keyCode))return t.observer.delayAndroidKey(e.key,e.keyCode),!0;let i;return!(!Be.ios||!(i=Xn.find((t=>t.keyCode==e.keyCode)))||e.ctrlKey||e.altKey||e.metaKey||e.synthetic)&&(this.pendingIOSKey=i,setTimeout((()=>this.flushIOSKey(t)),250),!0)}flushIOSKey(t){let e=this.pendingIOSKey;return!!e&&(this.pendingIOSKey=void 0,we(t.contentDOM,e.key,e.keyCode))}ignoreDuringComposition(t){return!!/^key/.test(t.type)&&(this.composing>0||!!(Be.safari&&Date.now()-this.compositionEndedAt<500)&&(this.compositionEndedAt=0,!0))}mustFlushObserver(t){return"keydown"==t.type&&229!=t.keyCode||"compositionend"==t.type&&!Be.ios}startMouseSelection(t){this.mouseSelection&&this.mouseSelection.destroy(),this.mouseSelection=t}update(t){this.mouseSelection&&this.mouseSelection.update(t),t.transactions.length&&(this.lastKeyCode=this.lastSelectionTime=0)}destroy(){this.mouseSelection&&this.mouseSelection.destroy()}}const Xn=[{key:"Backspace",keyCode:8,inputType:"deleteContentBackward"},{key:"Enter",keyCode:13,inputType:"insertParagraph"},{key:"Delete",keyCode:46,inputType:"deleteContentForward"}],Rn=[16,17,18,20,91,92,224,225];class Wn{constructor(t,e,i,n){this.view=t,this.style=i,this.mustSelect=n,this.lastEvent=e;let r=t.contentDOM.ownerDocument;r.addEventListener("mousemove",this.move=this.move.bind(this)),r.addEventListener("mouseup",this.up=this.up.bind(this)),this.extend=e.shiftKey,this.multiple=t.state.facet(vt.allowMultipleSelections)&&function(t,e){let i=t.state.facet(Zi);return i.length?i[0](e):Be.mac?e.metaKey:e.ctrlKey}(t,e),this.dragMove=function(t,e){let i=t.state.facet(Si);return i.length?i[0](e):Be.mac?!e.altKey:!e.ctrlKey}(t,e),this.dragging=!(!function(t,e){let{main:i}=t.state.selection;if(i.empty)return!1;let n=ue(t.root);if(0==n.rangeCount)return!0;let r=n.getRangeAt(0).getClientRects();for(let t=0;t<r.length;t++){let i=r[t];if(i.left<=e.clientX&&i.right>=e.clientX&&i.top<=e.clientY&&i.bottom>=e.clientY)return!0}return!1}(t,e)||1!=Bn(e))&&null,!1===this.dragging&&(e.preventDefault(),this.select(e))}move(t){if(0==t.buttons)return this.destroy();!1===this.dragging&&this.select(this.lastEvent=t)}up(t){null==this.dragging&&this.select(this.lastEvent),this.dragging||t.preventDefault(),this.destroy()}destroy(){let t=this.view.contentDOM.ownerDocument;t.removeEventListener("mousemove",this.move),t.removeEventListener("mouseup",this.up),this.view.inputState.mouseSelection=null}select(t){let e=this.style.get(t,this.extend,this.multiple);!this.mustSelect&&e.eq(this.view.state.selection)&&e.main.assoc==this.view.state.selection.main.assoc||this.view.dispatch({selection:e,userEvent:"select.pointer",scrollIntoView:!0}),this.mustSelect=!1}update(t){t.docChanged&&this.dragging&&(this.dragging=this.dragging.map(t.changes)),this.style.update(t)&&setTimeout((()=>this.select(this.lastEvent)),20)}}function Yn(t,e){if(!e.bubbles)return!0;if(e.defaultPrevented)return!1;for(let i,n=e.target;n!=t.contentDOM;n=n.parentNode)if(!n||11==n.nodeType||(i=Re.get(n))&&i.ignoreEvent(e))return!1;return!0}const Cn=Object.create(null),Vn=Be.ie&&Be.ie_version<15||Be.ios&&Be.webkit_version<604;function jn(t,e){let i,{state:n}=t,r=1,s=n.toText(e),o=s.lines==n.selection.ranges.length;if(null!=Nn&&n.selection.ranges.every((t=>t.empty))&&Nn==s.toString()){let t=-1;i=n.changeByRange((i=>{let a=n.doc.lineAt(i.from);if(a.from==t)return{range:i};t=a.from;let l=n.toText((o?s.line(r++).text:e)+n.lineBreak);return{changes:{from:a.from,insert:l},range:W.cursor(i.from+l.length)}}))}else i=o?n.changeByRange((t=>{let e=s.line(r++);return{changes:{from:t.from,to:t.to,insert:e.text},range:W.cursor(t.from+e.length)}})):n.replaceSelection(s);t.dispatch(i,{userEvent:"input.paste",scrollIntoView:!0})}Cn.keydown=(t,e)=>{t.inputState.setSelectionOrigin("select"),27==e.keyCode?t.inputState.lastEscPress=Date.now():Rn.indexOf(e.keyCode)<0&&(t.inputState.lastEscPress=0)};let Un=0;function Jn(t,e,i,r){if(1==r)return W.cursor(e,i);if(2==r)return function(t,e,i=1){let r=t.charCategorizer(e),s=t.doc.lineAt(e),o=e-s.from;if(0==s.length)return W.cursor(e);0==o?i=1:o==s.length&&(i=-1);let a=o,l=o;i<0?a=n(s.text,o,!1):l=n(s.text,o);let h=r(s.text.slice(a,l));for(;a>0;){let t=n(s.text,a,!1);if(r(s.text.slice(t,a))!=h)break;a=t}for(;l<s.length;){let t=n(s.text,l);if(r(s.text.slice(l,t))!=h)break;l=t}return W.range(a+s.from,l+s.from)}(t.state,e,i);{let i=pi.find(t.docView,e),n=t.state.doc.lineAt(i?i.posAtEnd:e),r=i?i.posAtStart:n.from,s=i?i.posAtEnd:n.to;return s<t.state.doc.length&&s==n.to&&s++,W.range(r,s)}}Cn.touchstart=(t,e)=>{Un=Date.now(),t.inputState.setSelectionOrigin("select.pointer")},Cn.touchmove=t=>{t.inputState.setSelectionOrigin("select.pointer")},Cn.mousedown=(t,e)=>{if(t.observer.flush(),Un>Date.now()-2e3&&1==Bn(e))return;let i=null;for(let n of t.state.facet(vi))if(i=n(t,e),i)break;if(i||0!=e.button||(i=function(t,e){let i=An(t,e),n=Bn(e),r=t.state.selection,s=i,o=e;return{update(t){t.docChanged&&(i&&(i.pos=t.changes.mapPos(i.pos)),r=r.map(t.changes),o=null)},get(e,a,l){let h;if(o&&e.clientX==o.clientX&&e.clientY==o.clientY?h=s:(h=s=An(t,e),o=e),!h||!i)return r;let O=Jn(t,h.pos,h.bias,n);if(i.pos!=h.pos&&!a){let e=Jn(t,i.pos,i.bias,n),r=Math.min(e.from,O.from),s=Math.max(e.to,O.to);O=r<O.from?W.range(r,s):W.range(s,r)}return a?r.replaceRange(r.main.extend(O.from,O.to)):l?r.addRange(O):W.create([O])}}}(t,e)),i){let n=t.root.activeElement!=t.contentDOM;n&&t.observer.ignore((()=>xe(t.contentDOM))),t.inputState.startMouseSelection(new Wn(t,e,i,n))}};let Gn=(t,e)=>t>=e.top&&t<=e.bottom,Dn=(t,e,i)=>Gn(e,i)&&t>=i.left&&t<=i.right;function Mn(t,e,i,n){let r=pi.find(t.docView,e);if(!r)return 1;let s=e-r.posAtStart;if(0==s)return 1;if(s==r.length)return-1;let o=r.coordsAt(s,-1);if(o&&Dn(i,n,o))return-1;let a=r.coordsAt(s,1);return a&&Dn(i,n,a)?1:o&&Gn(n,o)?-1:1}function An(t,e){let i=t.posAtCoords({x:e.clientX,y:e.clientY},!1);return{pos:i,bias:Mn(t,i,e.clientX,e.clientY)}}const In=Be.ie&&Be.ie_version<=11;let qn=null,zn=0,En=0;function Bn(t){if(!In)return t.detail;let e=qn,i=En;return qn=t,En=Date.now(),zn=!e||i>Date.now()-400&&Math.abs(e.clientX-t.clientX)<2&&Math.abs(e.clientY-t.clientY)<2?(zn+1)%3:1}function Fn(t,e,i,n){if(!i)return;let r=t.posAtCoords({x:e.clientX,y:e.clientY},!1);e.preventDefault();let{mouseSelection:s}=t.inputState,o=n&&s&&s.dragging&&s.dragMove?{from:s.dragging.from,to:s.dragging.to}:null,a={from:r,insert:i},l=t.state.changes(o?[o,a]:a);t.focus(),t.dispatch({changes:l,selection:{anchor:l.mapPos(r,-1),head:l.mapPos(r,1)},userEvent:o?"move.drop":"input.drop"})}Cn.dragstart=(t,e)=>{let{selection:{main:i}}=t.state,{mouseSelection:n}=t.inputState;n&&(n.dragging=i),e.dataTransfer&&(e.dataTransfer.setData("Text",t.state.sliceDoc(i.from,i.to)),e.dataTransfer.effectAllowed="copyMove")},Cn.drop=(t,e)=>{if(!e.dataTransfer)return;if(t.state.readOnly)return e.preventDefault();let i=e.dataTransfer.files;if(i&&i.length){e.preventDefault();let n=Array(i.length),r=0,s=()=>{++r==i.length&&Fn(t,e,n.filter((t=>null!=t)).join(t.state.lineBreak),!1)};for(let t=0;t<i.length;t++){let e=new FileReader;e.onerror=s,e.onload=()=>{/[\x00-\x08\x0e-\x1f]{2}/.test(e.result)||(n[t]=e.result),s()},e.readAsText(i[t])}}else Fn(t,e,e.dataTransfer.getData("Text"),!0)},Cn.paste=(t,e)=>{if(t.state.readOnly)return e.preventDefault();t.observer.flush();let i=Vn?null:e.clipboardData;i?(jn(t,i.getData("text/plain")),e.preventDefault()):function(t){let e=t.dom.parentNode;if(!e)return;let i=e.appendChild(document.createElement("textarea"));i.style.cssText="position: fixed; left: -10000px; top: 10px",i.focus(),setTimeout((()=>{t.focus(),i.remove(),jn(t,i.value)}),50)}(t)};let Nn=null;function Ln(t,e){if(t.docView.compositionDeco.size){t.inputState.rapidCompositionStart=e;try{t.update([])}finally{t.inputState.rapidCompositionStart=!1}}}Cn.copy=Cn.cut=(t,e)=>{let{text:i,ranges:n,linewise:r}=function(t){let e=[],i=[],n=!1;for(let n of t.selection.ranges)n.empty||(e.push(t.sliceDoc(n.from,n.to)),i.push(n));if(!e.length){let r=-1;for(let{from:n}of t.selection.ranges){let s=t.doc.lineAt(n);s.number>r&&(e.push(s.text),i.push({from:s.from,to:Math.min(t.doc.length,s.to+1)})),r=s.number}n=!0}return{text:e.join(t.lineBreak),ranges:i,linewise:n}}(t.state);if(!i&&!r)return;Nn=r?i:null;let s=Vn?null:e.clipboardData;s?(e.preventDefault(),s.clearData(),s.setData("text/plain",i)):function(t,e){let i=t.dom.parentNode;if(!i)return;let n=i.appendChild(document.createElement("textarea"));n.style.cssText="position: fixed; left: -10000px; top: 10px",n.value=e,n.focus(),n.selectionEnd=e.length,n.selectionStart=0,setTimeout((()=>{n.remove(),t.focus()}),50)}(t,i),"cut"!=e.type||t.state.readOnly||t.dispatch({changes:n,scrollIntoView:!0,userEvent:"delete.cut"})},Cn.focus=Cn.blur=t=>{setTimeout((()=>{t.hasFocus!=t.inputState.notifiedFocused&&t.update([])}),10)},Cn.compositionstart=Cn.compositionupdate=t=>{null==t.inputState.compositionFirstChange&&(t.inputState.compositionFirstChange=!0),t.inputState.composing<0&&(t.inputState.composing=0,t.docView.compositionDeco.size&&(t.observer.flush(),Ln(t,!0)))},Cn.compositionend=t=>{t.inputState.composing=-1,t.inputState.compositionEndedAt=Date.now(),t.inputState.compositionFirstChange=null,setTimeout((()=>{t.inputState.composing<0&&Ln(t,!1)}),50)},Cn.contextmenu=t=>{t.inputState.lastContextMenu=Date.now()},Cn.beforeinput=(t,e)=>{var i;let n;if(Be.chrome&&Be.android&&(n=Xn.find((t=>t.inputType==e.inputType)))&&(t.observer.delayAndroidKey(n.key,n.keyCode),"Backspace"==n.key||"Delete"==n.key)){let e=(null===(i=window.visualViewport)||void 0===i?void 0:i.height)||0;setTimeout((()=>{var i;((null===(i=window.visualViewport)||void 0===i?void 0:i.height)||0)>e+10&&t.hasFocus&&(t.contentDOM.blur(),t.focus())}),100)}};const Kn=["pre-wrap","normal","pre-line","break-spaces"];class Hn{constructor(){this.doc=d.empty,this.lineWrapping=!1,this.direction=Bi.LTR,this.heightSamples={},this.lineHeight=14,this.charWidth=7,this.lineLength=30,this.heightChanged=!1}heightForGap(t,e){let i=this.doc.lineAt(e).number-this.doc.lineAt(t).number+1;return this.lineWrapping&&(i+=Math.ceil((e-t-i*this.lineLength*.5)/this.lineLength)),this.lineHeight*i}heightForLine(t){if(!this.lineWrapping)return this.lineHeight;return(1+Math.max(0,Math.ceil((t-this.lineLength)/(this.lineLength-5))))*this.lineHeight}setDoc(t){return this.doc=t,this}mustRefreshForStyle(t,e){return Kn.indexOf(t)>-1!=this.lineWrapping||this.direction!=e}mustRefreshForHeights(t){let e=!1;for(let i=0;i<t.length;i++){let n=t[i];n<0?i++:this.heightSamples[Math.floor(10*n)]||(e=!0,this.heightSamples[Math.floor(10*n)]=!0)}return e}refresh(t,e,i,n,r,s){let o=Kn.indexOf(t)>-1,a=Math.round(i)!=Math.round(this.lineHeight)||this.lineWrapping!=o||this.direction!=e;if(this.lineWrapping=o,this.direction=e,this.lineHeight=i,this.charWidth=n,this.lineLength=r,a){this.heightSamples={};for(let t=0;t<s.length;t++){let e=s[t];e<0?t++:this.heightSamples[Math.floor(10*e)]=!0}}return a}}class tr{constructor(t,e){this.from=t,this.heights=e,this.index=0}get more(){return this.index<this.heights.length}}class er{constructor(t,e,i,n,r){this.from=t,this.length=e,this.top=i,this.height=n,this.type=r}get to(){return this.from+this.length}get bottom(){return this.top+this.height}join(t){let e=(Array.isArray(this.type)?this.type:[this]).concat(Array.isArray(t.type)?t.type:[t]);return new er(this.from,this.length+t.length,this.top,this.height+t.height,e)}moveY(t){return t?new er(this.from,this.length,this.top+t,this.height,Array.isArray(this.type)?this.type.map((e=>e.moveY(t))):this.type):this}}var ir=function(t){return t[t.ByPos=0]="ByPos",t[t.ByHeight=1]="ByHeight",t[t.ByPosNoHeight=2]="ByPosNoHeight",t}(ir||(ir={}));const nr=.001;class rr{constructor(t,e,i=2){this.length=t,this.height=e,this.flags=i}get outdated(){return(2&this.flags)>0}set outdated(t){this.flags=(t?2:0)|-3&this.flags}setHeight(t,e){this.height!=e&&(Math.abs(this.height-e)>nr&&(t.heightChanged=!0),this.height=e)}replace(t,e,i){return rr.of(i)}decomposeLeft(t,e){e.push(this)}decomposeRight(t,e){e.push(this)}applyChanges(t,e,i,n){let r=this;for(let s=n.length-1;s>=0;s--){let{fromA:o,toA:a,fromB:l,toB:h}=n[s],O=r.lineAt(o,ir.ByPosNoHeight,e,0,0),c=O.to>=a?O:r.lineAt(a,ir.ByPosNoHeight,e,0,0);for(h+=c.to-a,a=c.to;s>0&&O.from<=n[s-1].toA;)o=n[s-1].fromA,l=n[s-1].fromB,s--,o<O.from&&(O=r.lineAt(o,ir.ByPosNoHeight,e,0,0));l+=O.from-o,o=O.from;let u=Or.build(i,t,l,h);r=r.replace(o,a,u)}return r.updateHeight(i,0)}static empty(){return new or(0,0)}static of(t){if(1==t.length)return t[0];let e=0,i=t.length,n=0,r=0;for(;;)if(e==i)if(n>2*r){let r=t[e-1];r.break?t.splice(--e,1,r.left,null,r.right):t.splice(--e,1,r.left,r.right),i+=1+r.break,n-=r.size}else{if(!(r>2*n))break;{let e=t[i];e.break?t.splice(i,1,e.left,null,e.right):t.splice(i,1,e.left,e.right),i+=2+e.break,r-=e.size}}else if(n<r){let i=t[e++];i&&(n+=i.size)}else{let e=t[--i];e&&(r+=e.size)}let s=0;return null==t[e-1]?(s=1,e--):null==t[e]&&(s=1,i++),new lr(rr.of(t.slice(0,e)),s,rr.of(t.slice(i)))}}rr.prototype.size=1;class sr extends rr{constructor(t,e,i){super(t,e),this.type=i}blockAt(t,e,i,n){return new er(n,this.length,i,this.height,this.type)}lineAt(t,e,i,n,r){return this.blockAt(0,i,n,r)}forEachLine(t,e,i,n,r,s){s(this.blockAt(0,i,n,r))}updateHeight(t,e=0,i=!1,n){return n&&n.from<=e&&n.more&&this.setHeight(t,n.heights[n.index++]),this.outdated=!1,this}toString(){return`block(${this.length})`}}class or extends sr{constructor(t,e){super(t,e,Oi.Text),this.collapsed=0,this.widgetHeight=0}replace(t,e,i){let n=i[0];return 1==i.length&&(n instanceof or||n instanceof ar&&4&n.flags)&&Math.abs(this.length-n.length)<10?(n instanceof ar?n=new or(n.length,this.height):n.height=this.height,this.outdated||(n.outdated=!1),n):rr.of(i)}updateHeight(t,e=0,i=!1,n){return n&&n.from<=e&&n.more?this.setHeight(t,n.heights[n.index++]):(i||this.outdated)&&this.setHeight(t,Math.max(this.widgetHeight,t.heightForLine(this.length-this.collapsed))),this.outdated=!1,this}toString(){return`line(${this.length}${this.collapsed?-this.collapsed:""}${this.widgetHeight?":"+this.widgetHeight:""})`}}class ar extends rr{constructor(t){super(t,0)}lines(t,e){let i=t.lineAt(e).number,n=t.lineAt(e+this.length).number;return{firstLine:i,lastLine:n,lineHeight:this.height/(n-i+1)}}blockAt(t,e,i,n){let{firstLine:r,lastLine:s,lineHeight:o}=this.lines(e,n),a=Math.max(0,Math.min(s-r,Math.floor((t-i)/o))),{from:l,length:h}=e.line(r+a);return new er(l,h,i+o*a,o,Oi.Text)}lineAt(t,e,i,n,r){if(e==ir.ByHeight)return this.blockAt(t,i,n,r);if(e==ir.ByPosNoHeight){let{from:e,to:n}=i.lineAt(t);return new er(e,n-e,0,0,Oi.Text)}let{firstLine:s,lineHeight:o}=this.lines(i,r),{from:a,length:l,number:h}=i.lineAt(t);return new er(a,l,n+o*(h-s),o,Oi.Text)}forEachLine(t,e,i,n,r,s){let{firstLine:o,lineHeight:a}=this.lines(i,r);for(let l=Math.max(t,r),h=Math.min(r+this.length,e);l<=h;){let e=i.lineAt(l);l==t&&(n+=a*(e.number-o)),s(new er(e.from,e.length,n,a,Oi.Text)),n+=a,l=e.to+1}}replace(t,e,i){let n=this.length-e;if(n>0){let t=i[i.length-1];t instanceof ar?i[i.length-1]=new ar(t.length+n):i.push(null,new ar(n-1))}if(t>0){let e=i[0];e instanceof ar?i[0]=new ar(t+e.length):i.unshift(new ar(t-1),null)}return rr.of(i)}decomposeLeft(t,e){e.push(new ar(t-1),null)}decomposeRight(t,e){e.push(null,new ar(this.length-t-1))}updateHeight(t,e=0,i=!1,n){let r=e+this.length;if(n&&n.from<=e+this.length&&n.more){let i=[],s=Math.max(e,n.from),o=-1,a=t.heightChanged;for(n.from>e&&i.push(new ar(n.from-e-1).updateHeight(t,e));s<=r&&n.more;){let e=t.doc.lineAt(s).length;i.length&&i.push(null);let r=n.heights[n.index++];-1==o?o=r:Math.abs(r-o)>=nr&&(o=-2);let a=new or(e,r);a.outdated=!1,i.push(a),s+=e+1}s<=r&&i.push(null,new ar(r-s).updateHeight(t,s));let l=rr.of(i);return t.heightChanged=a||o<0||Math.abs(l.height-this.height)>=nr||Math.abs(o-this.lines(t.doc,e).lineHeight)>=nr,l}return(i||this.outdated)&&(this.setHeight(t,t.heightForGap(e,e+this.length)),this.outdated=!1),this}toString(){return`gap(${this.length})`}}class lr extends rr{constructor(t,e,i){super(t.length+e+i.length,t.height+i.height,e|(t.outdated||i.outdated?2:0)),this.left=t,this.right=i,this.size=t.size+i.size}get break(){return 1&this.flags}blockAt(t,e,i,n){let r=i+this.left.height;return t<r?this.left.blockAt(t,e,i,n):this.right.blockAt(t,e,r,n+this.left.length+this.break)}lineAt(t,e,i,n,r){let s=n+this.left.height,o=r+this.left.length+this.break,a=e==ir.ByHeight?t<s:t<o,l=a?this.left.lineAt(t,e,i,n,r):this.right.lineAt(t,e,i,s,o);if(this.break||(a?l.to<o:l.from>o))return l;let h=e==ir.ByPosNoHeight?ir.ByPosNoHeight:ir.ByPos;return a?l.join(this.right.lineAt(o,h,i,s,o)):this.left.lineAt(o,h,i,n,r).join(l)}forEachLine(t,e,i,n,r,s){let o=n+this.left.height,a=r+this.left.length+this.break;if(this.break)t<a&&this.left.forEachLine(t,e,i,n,r,s),e>=a&&this.right.forEachLine(t,e,i,o,a,s);else{let l=this.lineAt(a,ir.ByPos,i,n,r);t<l.from&&this.left.forEachLine(t,l.from-1,i,n,r,s),l.to>=t&&l.from<=e&&s(l),e>l.to&&this.right.forEachLine(l.to+1,e,i,o,a,s)}}replace(t,e,i){let n=this.left.length+this.break;if(e<n)return this.balanced(this.left.replace(t,e,i),this.right);if(t>this.left.length)return this.balanced(this.left,this.right.replace(t-n,e-n,i));let r=[];t>0&&this.decomposeLeft(t,r);let s=r.length;for(let t of i)r.push(t);if(t>0&&hr(r,s-1),e<this.length){let t=r.length;this.decomposeRight(e,r),hr(r,t)}return rr.of(r)}decomposeLeft(t,e){let i=this.left.length;if(t<=i)return this.left.decomposeLeft(t,e);e.push(this.left),this.break&&(i++,t>=i&&e.push(null)),t>i&&this.right.decomposeLeft(t-i,e)}decomposeRight(t,e){let i=this.left.length,n=i+this.break;if(t>=n)return this.right.decomposeRight(t-n,e);t<i&&this.left.decomposeRight(t,e),this.break&&t<n&&e.push(null),e.push(this.right)}balanced(t,e){return t.size>2*e.size||e.size>2*t.size?rr.of(this.break?[t,null,e]:[t,e]):(this.left=t,this.right=e,this.height=t.height+e.height,this.outdated=t.outdated||e.outdated,this.size=t.size+e.size,this.length=t.length+this.break+e.length,this)}updateHeight(t,e=0,i=!1,n){let{left:r,right:s}=this,o=e+r.length+this.break,a=null;return n&&n.from<=e+r.length&&n.more?a=r=r.updateHeight(t,e,i,n):r.updateHeight(t,e,i),n&&n.from<=o+s.length&&n.more?a=s=s.updateHeight(t,o,i,n):s.updateHeight(t,o,i),a?this.balanced(r,s):(this.height=this.left.height+this.right.height,this.outdated=!1,this)}toString(){return this.left+(this.break?" ":"-")+this.right}}function hr(t,e){let i,n;null==t[e]&&(i=t[e-1])instanceof ar&&(n=t[e+1])instanceof ar&&t.splice(e-1,3,new ar(i.length+1+n.length))}class Or{constructor(t,e){this.pos=t,this.oracle=e,this.nodes=[],this.lineStart=-1,this.lineEnd=-1,this.covering=null,this.writtenTo=t}get isCovered(){return this.covering&&this.nodes[this.nodes.length-1]==this.covering}span(t,e){if(this.lineStart>-1){let t=Math.min(e,this.lineEnd),i=this.nodes[this.nodes.length-1];i instanceof or?i.length+=t-this.pos:(t>this.pos||!this.isCovered)&&this.nodes.push(new or(t-this.pos,-1)),this.writtenTo=t,e>t&&(this.nodes.push(null),this.writtenTo++,this.lineStart=-1)}this.pos=e}point(t,e,i){if(t<e||i.heightRelevant){let n=i.widget?i.widget.estimatedHeight:0;n<0&&(n=this.oracle.lineHeight);let r=e-t;i.block?this.addBlock(new sr(r,n,i.type)):(r||n>=5)&&this.addLineDeco(n,r)}else e>t&&this.span(t,e);this.lineEnd>-1&&this.lineEnd<this.pos&&(this.lineEnd=this.oracle.doc.lineAt(this.pos).to)}enterLine(){if(this.lineStart>-1)return;let{from:t,to:e}=this.oracle.doc.lineAt(this.pos);this.lineStart=t,this.lineEnd=e,this.writtenTo<t&&((this.writtenTo<t-1||null==this.nodes[this.nodes.length-1])&&this.nodes.push(this.blankContent(this.writtenTo,t-1)),this.nodes.push(null)),this.pos>t&&this.nodes.push(new or(this.pos-t,-1)),this.writtenTo=this.pos}blankContent(t,e){let i=new ar(e-t);return this.oracle.doc.lineAt(t).to==e&&(i.flags|=4),i}ensureLine(){this.enterLine();let t=this.nodes.length?this.nodes[this.nodes.length-1]:null;if(t instanceof or)return t;let e=new or(0,-1);return this.nodes.push(e),e}addBlock(t){this.enterLine(),t.type!=Oi.WidgetAfter||this.isCovered||this.ensureLine(),this.nodes.push(t),this.writtenTo=this.pos=this.pos+t.length,t.type!=Oi.WidgetBefore&&(this.covering=t)}addLineDeco(t,e){let i=this.ensureLine();i.length+=e,i.collapsed+=e,i.widgetHeight=Math.max(i.widgetHeight,t),this.writtenTo=this.pos=this.pos+e}finish(t){let e=0==this.nodes.length?null:this.nodes[this.nodes.length-1];!(this.lineStart>-1)||e instanceof or||this.isCovered?(this.writtenTo<this.pos||null==e)&&this.nodes.push(this.blankContent(this.writtenTo,this.pos)):this.nodes.push(new or(0,-1));let i=t;for(let t of this.nodes)t instanceof or&&t.updateHeight(this.oracle,i),i+=t?t.length:1;return this.nodes}static build(t,e,i,n){let r=new Or(i,t);return It.spans(e,i,n,r,0),r.finish(i)}}class cr{constructor(){this.changes=[]}compareRange(){}comparePoint(t,e,i,n){(t<e||i&&i.heightRelevant||n&&n.heightRelevant)&&_i(t,e,this.changes,5)}}function ur(t,e){let i=t.getBoundingClientRect(),n=Math.max(0,i.left),r=Math.min(innerWidth,i.right),s=Math.max(0,i.top),o=Math.min(innerHeight,i.bottom),a=t.ownerDocument.body;for(let e=t.parentNode;e&&e!=a;)if(1==e.nodeType){let t=e,i=window.getComputedStyle(t);if((t.scrollHeight>t.clientHeight||t.scrollWidth>t.clientWidth)&&"visible"!=i.overflow){let e=t.getBoundingClientRect();n=Math.max(n,e.left),r=Math.min(r,e.right),s=Math.max(s,e.top),o=Math.min(o,e.bottom)}e="absolute"==i.position||"fixed"==i.position?t.offsetParent:t.parentNode}else{if(11!=e.nodeType)break;e=e.host}return{left:n-i.left,right:Math.max(n,r)-i.left,top:s-(i.top+e),bottom:Math.max(s,o)-(i.top+e)}}function dr(t,e){let i=t.getBoundingClientRect();return{left:0,right:i.right-i.left,top:e,bottom:i.bottom-(i.top+e)}}class $r{constructor(t,e,i){this.from=t,this.to=e,this.size=i}static same(t,e){if(t.length!=e.length)return!1;for(let i=0;i<t.length;i++){let n=t[i],r=e[i];if(n.from!=r.from||n.to!=r.to||n.size!=r.size)return!1}return!0}draw(t){return ci.replace({widget:new fr(this.size,t)}).range(this.from,this.to)}}class fr extends hi{constructor(t,e){super(),this.size=t,this.vertical=e}eq(t){return t.size==this.size&&t.vertical==this.vertical}toDOM(){let t=document.createElement("div");return this.vertical?t.style.height=this.size+"px":(t.style.width=this.size+"px",t.style.height="2px",t.style.display="inline-block"),t}get estimatedHeight(){return this.vertical?this.size:-1}}class _r{constructor(t){this.state=t,this.pixelViewport={left:0,right:window.innerWidth,top:0,bottom:0},this.inView=!0,this.paddingTop=0,this.paddingBottom=0,this.contentDOMWidth=0,this.contentDOMHeight=0,this.editorHeight=0,this.editorWidth=0,this.heightOracle=new Hn,this.scaler=Zr,this.scrollTarget=null,this.printing=!1,this.mustMeasureContent=!0,this.visibleRanges=[],this.mustEnforceCursorAssoc=!1,this.heightMap=rr.empty().applyChanges(t.facet(Ii),d.empty,this.heightOracle.setDoc(t.doc),[new zi(0,0,0,t.doc.length)]),this.viewport=this.getViewport(0,null),this.updateViewportLines(),this.updateForViewport(),this.lineGaps=this.ensureLineGaps([]),this.lineGapDeco=ci.set(this.lineGaps.map((t=>t.draw(!1)))),this.computeVisibleRanges()}updateForViewport(){let t=[this.viewport],{main:e}=this.state.selection;for(let i=0;i<=1;i++){let n=i?e.head:e.anchor;if(!t.some((({from:t,to:e})=>n>=t&&n<=e))){let{from:e,to:i}=this.lineBlockAt(n);t.push(new pr(e,i))}}this.viewports=t.sort(((t,e)=>t.from-e.from)),this.scaler=this.heightMap.height<=7e6?Zr:new Sr(this.heightOracle.doc,this.heightMap,this.viewports)}updateViewportLines(){this.viewportLines=[],this.heightMap.forEachLine(this.viewport.from,this.viewport.to,this.state.doc,0,0,(t=>{this.viewportLines.push(1==this.scaler.scale?t:vr(t,this.scaler))}))}update(t,e=null){let i=this.state;this.state=t.state;let n=this.state.facet(Ii),r=t.changedRanges,s=zi.extendWithRanges(r,function(t,e,i){let n=new cr;return It.compare(t,e,i,n,0),n.changes}(t.startState.facet(Ii),n,t?t.changes:v.empty(this.state.doc.length))),o=this.heightMap.height;this.heightMap=this.heightMap.applyChanges(n,i.doc,this.heightOracle.setDoc(this.state.doc),s),this.heightMap.height!=o&&(t.flags|=2);let a=s.length?this.mapViewport(this.viewport,t.changes):this.viewport;(e&&(e.range.head<a.from||e.range.head>a.to)||!this.viewportIsAppropriate(a))&&(a=this.getViewport(0,e));let l=!t.changes.empty||2&t.flags||a.from!=this.viewport.from||a.to!=this.viewport.to;this.viewport=a,this.updateForViewport(),l&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps,t.changes))),t.flags|=this.computeVisibleRanges(),e&&(this.scrollTarget=e),!this.mustEnforceCursorAssoc&&t.selectionSet&&t.view.lineWrapping&&t.state.selection.main.empty&&t.state.selection.main.assoc&&(this.mustEnforceCursorAssoc=!0)}measure(t){let e=t.contentDOM,i=window.getComputedStyle(e),n=this.heightOracle,r=i.whiteSpace,s="rtl"==i.direction?Bi.RTL:Bi.LTR,o=this.heightOracle.mustRefreshForStyle(r,s),a=o||this.mustMeasureContent||this.contentDOMHeight!=e.clientHeight,l=0,h=0;if(this.editorWidth!=t.scrollDOM.clientWidth&&(n.lineWrapping&&(a=!0),this.editorWidth=t.scrollDOM.clientWidth,l|=8),a){this.mustMeasureContent=!1,this.contentDOMHeight=e.clientHeight;let t=parseInt(i.paddingTop)||0,n=parseInt(i.paddingBottom)||0;this.paddingTop==t&&this.paddingBottom==n||(l|=8,this.paddingTop=t,this.paddingBottom=n)}let O=(this.printing?dr:ur)(e,this.paddingTop),c=O.top-this.pixelViewport.top,u=O.bottom-this.pixelViewport.bottom;this.pixelViewport=O;let d=this.pixelViewport.bottom>this.pixelViewport.top&&this.pixelViewport.right>this.pixelViewport.left;if(d!=this.inView&&(this.inView=d,d&&(a=!0)),!this.inView)return 0;let $=e.clientWidth;if(this.contentDOMWidth==$&&this.editorHeight==t.scrollDOM.clientHeight||(this.contentDOMWidth=$,this.editorHeight=t.scrollDOM.clientHeight,l|=8),a){let e=t.docView.measureVisibleLineHeights();if(n.mustRefreshForHeights(e)&&(o=!0),o||n.lineWrapping&&Math.abs($-this.contentDOMWidth)>n.charWidth){let{lineHeight:i,charWidth:a}=t.docView.measureTextSize();o=n.refresh(r,s,i,a,$/a,e),o&&(t.docView.minWidth=0,l|=8)}c>0&&u>0?h=Math.max(c,u):c<0&&u<0&&(h=Math.min(c,u)),n.heightChanged=!1,this.heightMap=this.heightMap.updateHeight(n,0,o,new tr(this.viewport.from,e)),n.heightChanged&&(l|=2)}let f=!this.viewportIsAppropriate(this.viewport,h)||this.scrollTarget&&(this.scrollTarget.range.head<this.viewport.from||this.scrollTarget.range.head>this.viewport.to);return f&&(this.viewport=this.getViewport(h,this.scrollTarget)),this.updateForViewport(),(2&l||f)&&this.updateViewportLines(),(this.lineGaps.length||this.viewport.to-this.viewport.from>4e3)&&this.updateLineGaps(this.ensureLineGaps(o?[]:this.lineGaps)),l|=this.computeVisibleRanges(),this.mustEnforceCursorAssoc&&(this.mustEnforceCursorAssoc=!1,t.docView.enforceCursorAssoc()),l}get visibleTop(){return this.scaler.fromDOM(this.pixelViewport.top)}get visibleBottom(){return this.scaler.fromDOM(this.pixelViewport.bottom)}getViewport(t,e){let i=.5-Math.max(-.5,Math.min(.5,t/1e3/2)),n=this.heightMap,r=this.state.doc,{visibleTop:s,visibleBottom:o}=this,a=new pr(n.lineAt(s-1e3*i,ir.ByHeight,r,0,0).from,n.lineAt(o+1e3*(1-i),ir.ByHeight,r,0,0).to);if(e){let{head:t}=e.range;if(t<a.from||t>a.to){let i,s=Math.min(this.editorHeight,this.pixelViewport.bottom-this.pixelViewport.top),o=n.lineAt(t,ir.ByPos,r,0,0);i="center"==e.y?(o.top+o.bottom)/2-s/2:"start"==e.y||"nearest"==e.y&&t<a.from?o.top:o.bottom-s,a=new pr(n.lineAt(i-500,ir.ByHeight,r,0,0).from,n.lineAt(i+s+500,ir.ByHeight,r,0,0).to)}}return a}mapViewport(t,e){let i=e.mapPos(t.from,-1),n=e.mapPos(t.to,1);return new pr(this.heightMap.lineAt(i,ir.ByPos,this.state.doc,0,0).from,this.heightMap.lineAt(n,ir.ByPos,this.state.doc,0,0).to)}viewportIsAppropriate({from:t,to:e},i=0){if(!this.inView)return!0;let{top:n}=this.heightMap.lineAt(t,ir.ByPos,this.state.doc,0,0),{bottom:r}=this.heightMap.lineAt(e,ir.ByPos,this.state.doc,0,0),{visibleTop:s,visibleBottom:o}=this;return(0==t||n<=s-Math.max(10,Math.min(-i,250)))&&(e==this.state.doc.length||r>=o+Math.max(10,Math.min(i,250)))&&n>s-2e3&&r<o+2e3}mapLineGaps(t,e){if(!t.length||e.empty)return t;let i=[];for(let n of t)e.touchesRange(n.from,n.to)||i.push(new $r(e.mapPos(n.from),e.mapPos(n.to),n.size));return i}ensureLineGaps(t){let e=[];if(this.heightOracle.direction!=Bi.LTR)return e;for(let i of this.viewportLines){if(i.length<4e3)continue;let n,r,s=mr(i.from,i.to,this.state);if(s.total<4e3)continue;if(this.heightOracle.lineWrapping){let t=2e3/this.heightOracle.lineLength*this.heightOracle.lineHeight;n=gr(s,(this.visibleTop-i.top-t)/i.height),r=gr(s,(this.visibleBottom-i.top+t)/i.height)}else{let t=s.total*this.heightOracle.charWidth,e=2e3*this.heightOracle.charWidth;n=gr(s,(this.pixelViewport.left-e)/t),r=gr(s,(this.pixelViewport.right+e)/t)}let o=[];n>i.from&&o.push({from:i.from,to:n}),r<i.to&&o.push({from:r,to:i.to});let a=this.state.selection.main;a.from>=i.from&&a.from<=i.to&&br(o,a.from-10,a.from+10),!a.empty&&a.to>=i.from&&a.to<=i.to&&br(o,a.to-10,a.to+10);for(let{from:n,to:r}of o)r-n>1e3&&e.push(Qr(t,(t=>t.from>=i.from&&t.to<=i.to&&Math.abs(t.from-n)<1e3&&Math.abs(t.to-r)<1e3))||new $r(n,r,this.gapSize(i,n,r,s)))}return e}gapSize(t,e,i,n){let r=Tr(n,i)-Tr(n,e);return this.heightOracle.lineWrapping?t.height*r:n.total*this.heightOracle.charWidth*r}updateLineGaps(t){$r.same(t,this.lineGaps)||(this.lineGaps=t,this.lineGapDeco=ci.set(t.map((t=>t.draw(this.heightOracle.lineWrapping)))))}computeVisibleRanges(){let t=this.state.facet(Ii);this.lineGaps.length&&(t=t.concat(this.lineGapDeco));let e=[];It.spans(t,this.viewport.from,this.viewport.to,{span(t,i){e.push({from:t,to:i})},point(){}},20);let i=e.length!=this.visibleRanges.length||this.visibleRanges.some(((t,i)=>t.from!=e[i].from||t.to!=e[i].to));return this.visibleRanges=e,i?4:0}lineBlockAt(t){return t>=this.viewport.from&&t<=this.viewport.to&&this.viewportLines.find((e=>e.from<=t&&e.to>=t))||vr(this.heightMap.lineAt(t,ir.ByPos,this.state.doc,0,0),this.scaler)}lineBlockAtHeight(t){return vr(this.heightMap.lineAt(this.scaler.fromDOM(t),ir.ByHeight,this.state.doc,0,0),this.scaler)}elementAtHeight(t){return vr(this.heightMap.blockAt(this.scaler.fromDOM(t),this.state.doc,0,0),this.scaler)}get docHeight(){return this.scaler.toDOM(this.heightMap.height)}get contentHeight(){return this.docHeight+this.paddingTop+this.paddingBottom}}class pr{constructor(t,e){this.from=t,this.to=e}}function mr(t,e,i){let n=[],r=t,s=0;return It.spans(i.facet(Ii),t,e,{span(){},point(t,e){t>r&&(n.push({from:r,to:t}),s+=t-r),r=e}},20),r<e&&(n.push({from:r,to:e}),s+=e-r),{total:s,ranges:n}}function gr({total:t,ranges:e},i){if(i<=0)return e[0].from;if(i>=1)return e[e.length-1].to;let n=Math.floor(t*i);for(let t=0;;t++){let{from:i,to:r}=e[t],s=r-i;if(n<=s)return i+n;n-=s}}function Tr(t,e){let i=0;for(let{from:n,to:r}of t.ranges){if(e<=r){i+=e-n;break}i+=r-n}return i/t.total}function br(t,e,i){for(let n=0;n<t.length;n++){let r=t[n];if(r.from<i&&r.to>e){let s=[];r.from<e&&s.push({from:r.from,to:e}),r.to>i&&s.push({from:i,to:r.to}),t.splice(n,1,...s),n+=s.length-1}}}function Qr(t,e){for(let i of t)if(e(i))return i}const Zr={toDOM:t=>t,fromDOM:t=>t,scale:1};class Sr{constructor(t,e,i){let n=0,r=0,s=0;this.viewports=i.map((({from:i,to:r})=>{let s=e.lineAt(i,ir.ByPos,t,0,0).top,o=e.lineAt(r,ir.ByPos,t,0,0).bottom;return n+=o-s,{from:i,to:r,top:s,bottom:o,domTop:0,domBottom:0}})),this.scale=(7e6-n)/(e.height-n);for(let t of this.viewports)t.domTop=s+(t.top-r)*this.scale,s=t.domBottom=t.domTop+(t.bottom-t.top),r=t.bottom}toDOM(t){for(let e=0,i=0,n=0;;e++){let r=e<this.viewports.length?this.viewports[e]:null;if(!r||t<r.top)return n+(t-i)*this.scale;if(t<=r.bottom)return r.domTop+(t-r.top);i=r.bottom,n=r.domBottom}}fromDOM(t){for(let e=0,i=0,n=0;;e++){let r=e<this.viewports.length?this.viewports[e]:null;if(!r||t<r.domTop)return i+(t-n)/this.scale;if(t<=r.domBottom)return r.top+(t-r.domTop);i=r.bottom,n=r.domBottom}}}function vr(t,e){if(1==e.scale)return t;let i=e.toDOM(t.top),n=e.toDOM(t.bottom);return new er(t.from,t.length,i,n-i,Array.isArray(t.type)?t.type.map((t=>vr(t,e))):t.type)}const xr=j.define({combine:t=>t.join(" ")}),kr=j.define({combine:t=>t.indexOf(!0)>-1}),wr=jt.newName(),yr=jt.newName(),Pr=jt.newName(),Xr={"&light":"."+yr,"&dark":"."+Pr};function Rr(t,e,i){return new jt(e,{finish:e=>/&/.test(e)?e.replace(/&\w*/,(e=>{if("&"==e)return t;if(!i||!i[e])throw new RangeError(`Unsupported selector: ${e}`);return i[e]})):t+" "+e})}const Wr=Rr("."+wr,{"&.cm-editor":{position:"relative !important",boxSizing:"border-box","&.cm-focused":{outline:"1px dotted #212121"},display:"flex !important",flexDirection:"column"},".cm-scroller":{display:"flex !important",alignItems:"flex-start !important",fontFamily:"monospace",lineHeight:1.4,height:"100%",overflowX:"auto",position:"relative",zIndex:0},".cm-content":{margin:0,flexGrow:2,minHeight:"100%",display:"block",whiteSpace:"pre",wordWrap:"normal",boxSizing:"border-box",padding:"4px 0",outline:"none","&[contenteditable=true]":{WebkitUserModify:"read-write-plaintext-only"}},".cm-lineWrapping":{whiteSpace_fallback:"pre-wrap",whiteSpace:"break-spaces",wordBreak:"break-word",overflowWrap:"anywhere"},"&light .cm-content":{caretColor:"black"},"&dark .cm-content":{caretColor:"white"},".cm-line":{display:"block",padding:"0 2px 0 4px"},".cm-selectionLayer":{zIndex:-1,contain:"size style"},".cm-selectionBackground":{position:"absolute"},"&light .cm-selectionBackground":{background:"#d9d9d9"},"&dark .cm-selectionBackground":{background:"#222"},"&light.cm-focused .cm-selectionBackground":{background:"#d7d4f0"},"&dark.cm-focused .cm-selectionBackground":{background:"#233"},".cm-cursorLayer":{zIndex:100,contain:"size style",pointerEvents:"none"},"&.cm-focused .cm-cursorLayer":{animation:"steps(1) cm-blink 1.2s infinite"},"@keyframes cm-blink":{"0%":{},"50%":{visibility:"hidden"},"100%":{}},"@keyframes cm-blink2":{"0%":{},"50%":{visibility:"hidden"},"100%":{}},".cm-cursor, .cm-dropCursor":{position:"absolute",borderLeft:"1.2px solid black",marginLeft:"-0.6px",pointerEvents:"none"},".cm-cursor":{display:"none"},"&dark .cm-cursor":{borderLeftColor:"#444"},"&.cm-focused .cm-cursor":{display:"block"},"&light .cm-activeLine":{backgroundColor:"#f3f9ff"},"&dark .cm-activeLine":{backgroundColor:"#223039"},"&light .cm-specialChar":{color:"red"},"&dark .cm-specialChar":{color:"#f78"},".cm-tab":{display:"inline-block",overflow:"hidden",verticalAlign:"bottom"},".cm-widgetBuffer":{verticalAlign:"text-top",height:"1em",display:"inline"},".cm-placeholder":{color:"#888",display:"inline-block",verticalAlign:"top"},".cm-button":{verticalAlign:"middle",color:"inherit",fontSize:"70%",padding:".2em 1em",borderRadius:"1px"},"&light .cm-button":{backgroundImage:"linear-gradient(#eff1f5, #d9d9df)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#b4b4b4, #d0d3d6)"}},"&dark .cm-button":{backgroundImage:"linear-gradient(#393939, #111)",border:"1px solid #888","&:active":{backgroundImage:"linear-gradient(#111, #333)"}},".cm-textfield":{verticalAlign:"middle",color:"inherit",fontSize:"70%",border:"1px solid silver",padding:".2em .5em"},"&light .cm-textfield":{backgroundColor:"white"},"&dark .cm-textfield":{border:"1px solid #555",backgroundColor:"inherit"}},Xr),Yr={childList:!0,characterData:!0,subtree:!0,attributes:!0,characterDataOldValue:!0},Cr=Be.ie&&Be.ie_version<=11;class Vr{constructor(t,e,i){this.view=t,this.onChange=e,this.onScrollChanged=i,this.active=!1,this.selectionRange=new Ze,this.selectionChanged=!1,this.delayedFlush=-1,this.resizeTimeout=-1,this.queue=[],this.delayedAndroidKey=null,this.scrollTargets=[],this.intersection=null,this.resize=null,this.intersecting=!1,this.gapIntersection=null,this.gaps=[],this.parentCheck=-1,this.dom=t.contentDOM,this.observer=new MutationObserver((e=>{for(let t of e)this.queue.push(t);(Be.ie&&Be.ie_version<=11||Be.ios&&t.composing)&&e.some((t=>"childList"==t.type&&t.removedNodes.length||"characterData"==t.type&&t.oldValue.length>t.target.nodeValue.length))?this.flushSoon():this.flush()})),Cr&&(this.onCharData=t=>{this.queue.push({target:t.target,type:"characterData",oldValue:t.prevValue}),this.flushSoon()}),this.onSelectionChange=this.onSelectionChange.bind(this),window.addEventListener("resize",this.onResize=this.onResize.bind(this)),"function"==typeof ResizeObserver&&(this.resize=new ResizeObserver((()=>{this.view.docView.lastUpdate<Date.now()-75&&this.onResize()})),this.resize.observe(t.scrollDOM)),window.addEventListener("beforeprint",this.onPrint=this.onPrint.bind(this)),this.start(),window.addEventListener("scroll",this.onScroll=this.onScroll.bind(this)),"function"==typeof IntersectionObserver&&(this.intersection=new IntersectionObserver((t=>{this.parentCheck<0&&(this.parentCheck=setTimeout(this.listenForScroll.bind(this),1e3)),t.length>0&&t[t.length-1].intersectionRatio>0!=this.intersecting&&(this.intersecting=!this.intersecting,this.intersecting!=this.view.inView&&this.onScrollChanged(document.createEvent("Event")))}),{}),this.intersection.observe(this.dom),this.gapIntersection=new IntersectionObserver((t=>{t.length>0&&t[t.length-1].intersectionRatio>0&&this.onScrollChanged(document.createEvent("Event"))}),{})),this.listenForScroll(),this.readSelectionRange(),this.dom.ownerDocument.addEventListener("selectionchange",this.onSelectionChange)}onScroll(t){this.intersecting&&this.flush(!1),this.onScrollChanged(t)}onResize(){this.resizeTimeout<0&&(this.resizeTimeout=setTimeout((()=>{this.resizeTimeout=-1,this.view.requestMeasure()}),50))}onPrint(){this.view.viewState.printing=!0,this.view.measure(),setTimeout((()=>{this.view.viewState.printing=!1,this.view.requestMeasure()}),500)}updateGaps(t){if(this.gapIntersection&&(t.length!=this.gaps.length||this.gaps.some(((e,i)=>e!=t[i])))){this.gapIntersection.disconnect();for(let e of t)this.gapIntersection.observe(e);this.gaps=t}}onSelectionChange(t){if(!this.readSelectionRange()||this.delayedAndroidKey)return;let{view:e}=this,i=this.selectionRange;if(e.state.facet(Yi)?e.root.activeElement!=this.dom:!$e(e.dom,i))return;let n=i.anchorNode&&e.docView.nearest(i.anchorNode);n&&n.ignoreEvent(t)||((Be.ie&&Be.ie_version<=11||Be.android&&Be.chrome)&&!e.state.selection.main.empty&&i.focusNode&&_e(i.focusNode,i.focusOffset,i.anchorNode,i.anchorOffset)?this.flushSoon():this.flush(!1))}readSelectionRange(){let{root:t}=this.view,e=ue(t),i=Be.safari&&11==t.nodeType&&function(){let t=document.activeElement;for(;t&&t.shadowRoot;)t=t.shadowRoot.activeElement;return t}()==this.view.contentDOM&&function(t){let e=null;function i(t){t.preventDefault(),t.stopImmediatePropagation(),e=t.getTargetRanges()[0]}if(t.contentDOM.addEventListener("beforeinput",i,!0),document.execCommand("indent"),t.contentDOM.removeEventListener("beforeinput",i,!0),!e)return null;let n=e.startContainer,r=e.startOffset,s=e.endContainer,o=e.endOffset,a=t.docView.domAtPos(t.state.selection.main.anchor);_e(a.node,a.offset,s,o)&&([n,r,s,o]=[s,o,n,r]);return{anchorNode:n,anchorOffset:r,focusNode:s,focusOffset:o}}(this.view)||e;return!this.selectionRange.eq(i)&&(this.selectionRange.setRange(i),this.selectionChanged=!0)}setSelectionRange(t,e){this.selectionRange.set(t.node,t.offset,e.node,e.offset),this.selectionChanged=!1}listenForScroll(){this.parentCheck=-1;let t=0,e=null;for(let i=this.dom;i;)if(1==i.nodeType)!e&&t<this.scrollTargets.length&&this.scrollTargets[t]==i?t++:e||(e=this.scrollTargets.slice(0,t)),e&&e.push(i),i=i.assignedSlot||i.parentNode;else{if(11!=i.nodeType)break;i=i.host}if(t<this.scrollTargets.length&&!e&&(e=this.scrollTargets.slice(0,t)),e){for(let t of this.scrollTargets)t.removeEventListener("scroll",this.onScroll);for(let t of this.scrollTargets=e)t.addEventListener("scroll",this.onScroll)}}ignore(t){if(!this.active)return t();try{return this.stop(),t()}finally{this.start(),this.clear()}}start(){this.active||(this.observer.observe(this.dom,Yr),Cr&&this.dom.addEventListener("DOMCharacterDataModified",this.onCharData),this.active=!0)}stop(){this.active&&(this.active=!1,this.observer.disconnect(),Cr&&this.dom.removeEventListener("DOMCharacterDataModified",this.onCharData))}clear(){this.processRecords(),this.queue.length=0,this.selectionChanged=!1}delayAndroidKey(t,e){this.delayedAndroidKey||requestAnimationFrame((()=>{let t=this.delayedAndroidKey;this.delayedAndroidKey=null;let e=this.view.state;we(this.view.contentDOM,t.key,t.keyCode)?this.processRecords():this.flush(),this.view.state==e&&this.view.update([])})),this.delayedAndroidKey&&"Enter"!=t||(this.delayedAndroidKey={key:t,keyCode:e})}flushSoon(){this.delayedFlush<0&&(this.delayedFlush=window.setTimeout((()=>{this.delayedFlush=-1,this.flush()}),20))}forceFlush(){this.delayedFlush>=0&&(window.clearTimeout(this.delayedFlush),this.delayedFlush=-1,this.flush())}processRecords(){let t=this.queue;for(let e of this.observer.takeRecords())t.push(e);t.length&&(this.queue=[]);let e=-1,i=-1,n=!1;for(let r of t){let t=this.readMutation(r);t&&(t.typeOver&&(n=!0),-1==e?({from:e,to:i}=t):(e=Math.min(t.from,e),i=Math.max(t.to,i)))}return{from:e,to:i,typeOver:n}}flush(t=!0){if(this.delayedFlush>=0||this.delayedAndroidKey)return;t&&this.readSelectionRange();let{from:e,to:i,typeOver:n}=this.processRecords(),r=this.selectionChanged&&$e(this.dom,this.selectionRange);if(e<0&&!r)return;this.selectionChanged=!1;let s=this.view.state;this.onChange(e,i,n),this.view.state==s&&this.view.update([])}readMutation(t){let e=this.view.docView.nearest(t.target);if(!e||e.ignoreMutation(t))return null;if(e.markDirty("attributes"==t.type),"attributes"==t.type&&(e.dirty|=4),"childList"==t.type){let i=jr(e,t.previousSibling||t.target.previousSibling,-1),n=jr(e,t.nextSibling||t.target.nextSibling,1);return{from:i?e.posAfter(i):e.posAtStart,to:n?e.posBefore(n):e.posAtEnd,typeOver:!1}}return"characterData"==t.type?{from:e.posAtStart,to:e.posAtEnd,typeOver:t.target.nodeValue==t.oldValue}:null}destroy(){var t,e,i;this.stop(),null===(t=this.intersection)||void 0===t||t.disconnect(),null===(e=this.gapIntersection)||void 0===e||e.disconnect(),null===(i=this.resize)||void 0===i||i.disconnect();for(let t of this.scrollTargets)t.removeEventListener("scroll",this.onScroll);window.removeEventListener("scroll",this.onScroll),window.removeEventListener("resize",this.onResize),window.removeEventListener("beforeprint",this.onPrint),this.dom.ownerDocument.removeEventListener("selectionchange",this.onSelectionChange),clearTimeout(this.parentCheck),clearTimeout(this.resizeTimeout)}}function jr(t,e,i){for(;e;){let n=Re.get(e);if(n&&n.parent==t)return n;let r=e.parentNode;e=r!=t.dom?r:i>0?e.nextSibling:e.previousSibling}return null}function Ur(t,e,i,n){let r,s,o=t.state.selection.main;if(e>-1){let n=t.docView.domBoundsAround(e,i,0);if(!n||t.state.readOnly)return;let{from:a,to:l}=n,h=t.docView.impreciseHead||t.docView.impreciseAnchor?[]:function(t){let e=[];if(t.root.activeElement!=t.contentDOM)return e;let{anchorNode:i,anchorOffset:n,focusNode:r,focusOffset:s}=t.observer.selectionRange;i&&(e.push(new un(i,n)),r==i&&s==n||e.push(new un(r,s)));return e}(t),O=new On(h,t.state);O.readRange(n.startDOM,n.endDOM);let c=o.from,u=null;(8===t.inputState.lastKeyCode&&t.inputState.lastKeyTime>Date.now()-100||Be.android&&O.text.length<l-a)&&(c=o.to,u="end");let $=function(t,e,i,n){let r=Math.min(t.length,e.length),s=0;for(;s<r&&t.charCodeAt(s)==e.charCodeAt(s);)s++;if(s==r&&t.length==e.length)return null;let o=t.length,a=e.length;for(;o>0&&a>0&&t.charCodeAt(o-1)==e.charCodeAt(a-1);)o--,a--;if("end"==n){i-=o+Math.max(0,s-Math.min(o,a))-s}if(o<s&&t.length<e.length){s-=i<=s&&i>=o?s-i:0,a=s+(a-o),o=s}else if(a<s){s-=i<=s&&i>=a?s-i:0,o=s+(o-a),a=s}return{from:s,toA:o,toB:a}}(t.state.doc.sliceString(a,l,hn),O.text,c-a,u);$&&(Be.chrome&&13==t.inputState.lastKeyCode&&$.toB==$.from+2&&"\uffff\uffff"==O.text.slice($.from,$.toB)&&$.toB--,r={from:a+$.from,to:a+$.toA,insert:d.of(O.text.slice($.from,$.toB).split(hn))}),s=function(t,e){if(0==t.length)return null;let i=t[0].pos,n=2==t.length?t[1].pos:i;return i>-1&&n>-1?W.single(i+e,n+e):null}(h,a)}else if(t.hasFocus||!t.state.facet(Yi)){let e=t.observer.selectionRange,{impreciseHead:i,impreciseAnchor:n}=t.docView,r=i&&i.node==e.focusNode&&i.offset==e.focusOffset||!de(t.contentDOM,e.focusNode)?t.state.selection.main.head:t.docView.posFromDOM(e.focusNode,e.focusOffset),a=n&&n.node==e.anchorNode&&n.offset==e.anchorOffset||!de(t.contentDOM,e.anchorNode)?t.state.selection.main.anchor:t.docView.posFromDOM(e.anchorNode,e.anchorOffset);r==o.head&&a==o.anchor||(s=W.single(a,r))}if(r||s)if(!r&&n&&!o.empty&&s&&s.main.empty?r={from:o.from,to:o.to,insert:t.state.doc.slice(o.from,o.to)}:r&&r.from>=o.from&&r.to<=o.to&&(r.from!=o.from||r.to!=o.to)&&o.to-o.from-(r.to-r.from)<=4&&(r={from:o.from,to:o.to,insert:t.state.doc.slice(o.from,r.from).append(r.insert).append(t.state.doc.slice(r.to,o.to))}),r){let e=t.state;if(Be.ios&&t.inputState.flushIOSKey(t))return;if(Be.android&&(r.from==o.from&&r.to==o.to&&1==r.insert.length&&2==r.insert.lines&&we(t.contentDOM,"Enter",13)||r.from==o.from-1&&r.to==o.to&&0==r.insert.length&&we(t.contentDOM,"Backspace",8)||r.from==o.from&&r.to==o.to+1&&0==r.insert.length&&we(t.contentDOM,"Delete",46)))return;let i,n=r.insert.toString();if(t.state.facet(wi).some((e=>e(t,r.from,r.to,n))))return;if(t.inputState.composing>=0&&t.inputState.composing++,r.from>=o.from&&r.to<=o.to&&r.to-r.from>=(o.to-o.from)/3&&(!s||s.main.empty&&s.main.from==r.from+r.insert.length)&&t.inputState.composing<0){let n=o.from<r.from?e.sliceDoc(o.from,r.from):"",s=o.to>r.to?e.sliceDoc(r.to,o.to):"";i=e.replaceSelection(t.state.toText(n+r.insert.sliceString(0,void 0,t.state.lineBreak)+s))}else{let n=e.changes(r),a=s&&!e.selection.main.eq(s.main)&&s.main.to<=n.newLength?s.main:void 0;if(e.selection.ranges.length>1&&t.inputState.composing>=0&&r.to<=o.to&&r.to>=o.to-10){let s=t.state.sliceDoc(r.from,r.to),l=fn(t)||t.state.doc.lineAt(o.head),h=o.to-r.to,O=o.to-o.from;i=e.changeByRange((i=>{if(i.from==o.from&&i.to==o.to)return{changes:n,range:a||i.map(n)};let c=i.to-h,u=c-s.length;if(i.to-i.from!=O||t.state.sliceDoc(u,c)!=s||l&&i.to>=l.from&&i.from<=l.to)return{range:i};let d=e.changes({from:u,to:c,insert:r.insert}),$=i.to-o.to;return{changes:d,range:a?W.range(Math.max(0,a.anchor+$),Math.max(0,a.head+$)):i.map(d)}}))}else i={changes:n,selection:a&&e.selection.replaceRange(a)}}let a="input.type";t.composing&&(a+=".compose",t.inputState.compositionFirstChange&&(a+=".start",t.inputState.compositionFirstChange=!1)),t.dispatch(i,{scrollIntoView:!0,userEvent:a})}else if(s&&!s.main.eq(o)){let e=!1,i="select";t.inputState.lastSelectionTime>Date.now()-50&&("select"==t.inputState.lastSelectionOrigin&&(e=!0),i=t.inputState.lastSelectionOrigin),t.dispatch({selection:s,scrollIntoView:e,userEvent:i})}}class Jr{constructor(t={}){this.plugins=[],this.pluginMap=new Map,this.editorAttrs={},this.contentAttrs={},this.bidiCache=[],this.destroyed=!1,this.updateState=2,this.measureScheduled=-1,this.measureRequests=[],this.contentDOM=document.createElement("div"),this.scrollDOM=document.createElement("div"),this.scrollDOM.tabIndex=-1,this.scrollDOM.className="cm-scroller",this.scrollDOM.appendChild(this.contentDOM),this.announceDOM=document.createElement("div"),this.announceDOM.style.cssText="position: absolute; top: -10000px",this.announceDOM.setAttribute("aria-live","polite"),this.dom=document.createElement("div"),this.dom.appendChild(this.announceDOM),this.dom.appendChild(this.scrollDOM),this._dispatch=t.dispatch||(t=>this.update([t])),this.dispatch=this.dispatch.bind(this),this.root=t.root||function(t){for(;t;){if(t&&(9==t.nodeType||11==t.nodeType&&t.host))return t;t=t.assignedSlot||t.parentNode}return null}(t.parent)||document,this.viewState=new _r(t.state||vt.create()),this.plugins=this.state.facet(Ui).map((t=>new Di(t)));for(let t of this.plugins)t.update(this);this.observer=new Vr(this,((t,e,i)=>{Ur(this,t,e,i)}),(t=>{this.inputState.runScrollHandlers(this,t),this.observer.intersecting&&this.measure()})),this.inputState=new Pn(this),this.docView=new dn(this),this.mountStyles(),this.updateAttrs(),this.updateState=0,this.requestMeasure(),t.parent&&t.parent.appendChild(this.dom)}get state(){return this.viewState.state}get viewport(){return this.viewState.viewport}get visibleRanges(){return this.viewState.visibleRanges}get inView(){return this.viewState.inView}get composing(){return this.inputState.composing>0}get compositionStarted(){return this.inputState.composing>=0}dispatch(...t){this._dispatch(1==t.length&&t[0]instanceof $t?t[0]:this.state.update(...t))}update(t){if(0!=this.updateState)throw new Error("Calls to EditorView.update are not allowed while an update is in progress");let e,i=!1,n=this.state;for(let e of t){if(e.startState!=n)throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");n=e.state}if(this.destroyed)return void(this.viewState.state=n);if(n.facet(vt.phrases)!=this.state.facet(vt.phrases))return this.setState(n);e=new Ei(this,n,t);let r=this.viewState.scrollTarget;try{this.updateState=2;for(let e of t){if(r&&(r=r.map(e.changes)),e.scrollIntoView){let{main:t}=e.state.selection;r=new Xi(t.empty?t:W.cursor(t.head,t.head>t.anchor?-1:1))}for(let t of e.effects)t.is(yi)?r=new Xi(t.value):t.is(Pi)?r=new Xi(t.value,"center"):t.is(Ri)&&(r=t.value)}this.viewState.update(e,r),this.bidiCache=Ar.update(this.bidiCache,e.changes),e.empty||(this.updatePlugins(e),this.inputState.update(e)),i=this.docView.update(e),this.state.facet(qi)!=this.styleModules&&this.mountStyles(),this.updateAttrs(),this.showAnnouncements(t),this.docView.updateSelection(i,t.some((t=>t.isUserEvent("select.pointer"))))}finally{this.updateState=0}if(e.startState.facet(xr)!=e.state.facet(xr)&&(this.viewState.mustMeasureContent=!0),(i||r||this.viewState.mustEnforceCursorAssoc||this.viewState.mustMeasureContent)&&this.requestMeasure(),!e.empty)for(let t of this.state.facet(ki))t(e)}setState(t){if(0!=this.updateState)throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");if(this.destroyed)return void(this.viewState.state=t);this.updateState=2;let e=this.hasFocus;try{for(let t of this.plugins)t.destroy(this);this.viewState=new _r(t),this.plugins=t.facet(Ui).map((t=>new Di(t))),this.pluginMap.clear();for(let t of this.plugins)t.update(this);this.docView=new dn(this),this.inputState.ensureHandlers(this),this.mountStyles(),this.updateAttrs(),this.bidiCache=[]}finally{this.updateState=0}e&&this.focus(),this.requestMeasure()}updatePlugins(t){let e=t.startState.facet(Ui),i=t.state.facet(Ui);if(e!=i){let n=[];for(let r of i){let i=e.indexOf(r);if(i<0)n.push(new Di(r));else{let e=this.plugins[i];e.mustUpdate=t,n.push(e)}}for(let e of this.plugins)e.mustUpdate!=t&&e.destroy(this);this.plugins=n,this.pluginMap.clear(),this.inputState.ensureHandlers(this)}else for(let e of this.plugins)e.mustUpdate=t;for(let t=0;t<this.plugins.length;t++)this.plugins[t].update(this)}measure(t=!0){if(this.destroyed)return;this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.measureScheduled=0,t&&this.observer.flush();let e=null;try{for(let t=0;;t++){this.updateState=1;let i=this.viewport,n=this.viewState.measure(this);if(!n&&!this.measureRequests.length&&null==this.viewState.scrollTarget)break;if(t>5){console.warn(this.measureRequests.length?"Measure loop restarted more than 5 times":"Viewport failed to stabilize");break}let r=[];4&n||([this.measureRequests,r]=[r,this.measureRequests]);let s=r.map((t=>{try{return t.read(this)}catch(t){return Wi(this.state,t),Mr}})),o=new Ei(this,this.state),a=!1,l=!1;o.flags|=n,e?e.flags|=n:e=o,this.updateState=2,o.empty||(this.updatePlugins(o),this.inputState.update(o),this.updateAttrs(),a=this.docView.update(o));for(let t=0;t<r.length;t++)if(s[t]!=Mr)try{let e=r[t];e.write&&e.write(s[t],this)}catch(t){Wi(this.state,t)}if(this.viewState.scrollTarget&&(this.docView.scrollIntoView(this.viewState.scrollTarget),this.viewState.scrollTarget=null,l=!0),a&&this.docView.updateSelection(!0),this.viewport.from==i.from&&this.viewport.to==i.to&&!l&&0==this.measureRequests.length)break}}finally{this.updateState=0,this.measureScheduled=-1}if(e&&!e.empty)for(let t of this.state.facet(ki))t(e)}get themeClasses(){return wr+" "+(this.state.facet(kr)?Pr:yr)+" "+this.state.facet(xr)}updateAttrs(){let t=Ir(this,Mi,{class:"cm-editor"+(this.hasFocus?" cm-focused ":" ")+this.themeClasses}),e={spellcheck:"false",autocorrect:"off",autocapitalize:"off",translate:"no",contenteditable:this.state.facet(Yi)?"true":"false",class:"cm-content",style:`${Be.tabSize}: ${this.state.tabSize}`,role:"textbox","aria-multiline":"true"};this.state.readOnly&&(e["aria-readonly"]="true"),Ir(this,Ai,e),this.observer.ignore((()=>{li(this.contentDOM,this.contentAttrs,e),li(this.dom,this.editorAttrs,t)})),this.editorAttrs=t,this.contentAttrs=e}showAnnouncements(t){let e=!0;for(let i of t)for(let t of i.effects)if(t.is(Jr.announce)){e&&(this.announceDOM.textContent=""),e=!1,this.announceDOM.appendChild(document.createElement("div")).textContent=t.value}}mountStyles(){this.styleModules=this.state.facet(qi),jt.mount(this.root,this.styleModules.concat(Wr).reverse())}readMeasured(){if(2==this.updateState)throw new Error("Reading the editor layout isn't allowed during an update");0==this.updateState&&this.measureScheduled>-1&&this.measure(!1)}requestMeasure(t){if(this.measureScheduled<0&&(this.measureScheduled=requestAnimationFrame((()=>this.measure()))),t){if(null!=t.key)for(let e=0;e<this.measureRequests.length;e++)if(this.measureRequests[e].key===t.key)return void(this.measureRequests[e]=t);this.measureRequests.push(t)}}pluginField(t){let e=[];for(let i of this.plugins)i.update(this).takeField(t,e);return e}plugin(t){let e=this.pluginMap.get(t);return(void 0===e||e&&e.spec!=t)&&this.pluginMap.set(t,e=this.plugins.find((e=>e.spec==t))||null),e&&e.update(this).value}get documentTop(){return this.contentDOM.getBoundingClientRect().top+this.viewState.paddingTop}get documentPadding(){return{top:this.viewState.paddingTop,bottom:this.viewState.paddingBottom}}blockAtHeight(t,e){let i=Dr(e,this);return this.elementAtHeight(t-i).moveY(i)}elementAtHeight(t){return this.readMeasured(),this.viewState.elementAtHeight(t)}visualLineAtHeight(t,e){let i=Dr(e,this);return this.lineBlockAtHeight(t-i).moveY(i)}lineBlockAtHeight(t){return this.readMeasured(),this.viewState.lineBlockAtHeight(t)}viewportLines(t,e){let i=Dr(e,this);for(let e of this.viewportLineBlocks)t(e.moveY(i))}get viewportLineBlocks(){return this.viewState.viewportLines}visualLineAt(t,e=0){return this.lineBlockAt(t).moveY(e+this.viewState.paddingTop)}lineBlockAt(t){return this.viewState.lineBlockAt(t)}get contentHeight(){return this.viewState.contentHeight}moveByChar(t,e,i){return yn(this,t,wn(this,t,e,i))}moveByGroup(t,e){return yn(this,t,wn(this,t,e,(e=>function(t,e,i){let n=t.state.charCategorizer(e),r=n(i);return t=>{let e=n(t);return r==bt.Space&&(r=e),r==e}}(this,t.head,e))))}moveToLineBoundary(t,e,i=!0){return function(t,e,i,n){let r=t.state.doc.lineAt(e.head),s=n&&t.lineWrapping?t.coordsAtPos(e.assoc<0&&e.head>r.from?e.head-1:e.head):null;if(s){let e=t.dom.getBoundingClientRect(),n=t.posAtCoords({x:i==(t.textDirection==Bi.LTR)?e.right-1:e.left+1,y:(s.top+s.bottom)/2});if(null!=n)return W.cursor(n,i?-1:1)}let o=pi.find(t.docView,e.head),a=o?i?o.posAtEnd:o.posAtStart:i?r.to:r.from;return W.cursor(a,i?-1:1)}(this,t,e,i)}moveVertically(t,e,i){return yn(this,t,function(t,e,i,n){let r=e.head,s=i?1:-1;if(r==(i?t.state.doc.length:0))return W.cursor(r,e.assoc);let o,a=e.goalColumn,l=t.contentDOM.getBoundingClientRect(),h=t.coordsAtPos(r),O=t.documentTop;if(h)null==a&&(a=h.left-l.left),o=s<0?h.top:h.bottom;else{let e=t.viewState.lineBlockAt(r-O);null==a&&(a=Math.min(l.right-l.left,t.defaultCharacterWidth*(r-e.from))),o=(s<0?e.top:e.bottom)+O}let c=l.left+a,u=null!=n?n:t.defaultLineHeight>>1;for(let i=0;;i+=10){let n=o+(u+i)*s,h=xn(t,{x:c,y:n},!1,s);if(n<l.top||n>l.bottom||(s<0?h<r:h>r))return W.cursor(h,e.assoc,void 0,a)}}(this,t,e,i))}scrollPosIntoView(t){this.dispatch({effects:yi.of(W.cursor(t))})}domAtPos(t){return this.docView.domAtPos(t)}posAtDOM(t,e=0){return this.docView.posFromDOM(t,e)}posAtCoords(t,e=!0){return this.readMeasured(),xn(this,t,e)}coordsAtPos(t,e=1){this.readMeasured();let i=this.docView.coordsAt(t,e);if(!i||i.left==i.right)return i;let n=this.state.doc.lineAt(t),r=this.bidiSpans(n);return be(i,r[rn.find(r,t-n.from,-1,e)].dir==Bi.LTR==e>0)}get defaultCharacterWidth(){return this.viewState.heightOracle.charWidth}get defaultLineHeight(){return this.viewState.heightOracle.lineHeight}get textDirection(){return this.viewState.heightOracle.direction}get lineWrapping(){return this.viewState.heightOracle.lineWrapping}bidiSpans(t){if(t.length>Gr)return on(t.length);let e=this.textDirection;for(let i of this.bidiCache)if(i.from==t.from&&i.dir==e)return i.order;let i=function(t,e){let i=t.length,n=e==Fi?1:2,r=e==Fi?2:1;if(!t||1==n&&!nn.test(t))return on(i);for(let e=0,r=n,o=n;e<i;e++){let i=(s=t.charCodeAt(e))<=247?Ki[s]:1424<=s&&s<=1524?2:1536<=s&&s<=1785?Hi[s-1536]:1774<=s&&s<=2220?4:8192<=s&&s<=8203||8204==s?256:1;512==i?i=r:8==i&&4==o&&(i=16),sn[e]=4==i?2:i,7&i&&(o=i),r=i}var s;for(let t=0,e=n,r=n;t<i;t++){let n=sn[t];if(128==n)t<i-1&&e==sn[t+1]&&24&e?n=sn[t]=e:sn[t]=256;else if(64==n){let n=t+1;for(;n<i&&64==sn[n];)n++;let s=t&&8==e||n<i&&8==sn[n]?1==r?1:8:256;for(let e=t;e<n;e++)sn[e]=s;t=n-1}else 8==n&&1==r&&(sn[t]=1);e=n,7&n&&(r=n)}for(let e,s,o,a=0,l=0,h=0;a<i;a++)if(s=tn[e=t.charCodeAt(a)])if(s<0){for(let t=l-3;t>=0;t-=3)if(en[t+1]==-s){let e=en[t+2],i=2&e?n:4&e?1&e?r:n:0;i&&(sn[a]=sn[en[t]]=i),l=t;break}}else{if(189==en.length)break;en[l++]=a,en[l++]=e,en[l++]=h}else if(2==(o=sn[a])||1==o){let t=o==n;h=t?0:1;for(let e=l-3;e>=0;e-=3){let i=en[e+2];if(2&i)break;if(t)en[e+2]|=2;else{if(4&i)break;en[e+2]|=4}}}for(let t=0;t<i;t++)if(256==sn[t]){let e=t+1;for(;e<i&&256==sn[e];)e++;let r=1==(t?sn[t-1]:n),s=r==(1==(e<i?sn[e]:n))?r?1:2:n;for(let i=t;i<e;i++)sn[i]=s;t=e-1}let o=[];if(1==n)for(let t=0;t<i;){let e=t,n=1!=sn[t++];for(;t<i&&n==(1!=sn[t]);)t++;if(n)for(let i=t;i>e;){let t=i,n=2!=sn[--i];for(;i>e&&n==(2!=sn[i-1]);)i--;o.push(new rn(i,t,n?2:1))}else o.push(new rn(e,t,0))}else for(let t=0;t<i;){let e=t,n=2==sn[t++];for(;t<i&&n==(2==sn[t]);)t++;o.push(new rn(e,t,n?1:2))}return o}(t.text,this.textDirection);return this.bidiCache.push(new Ar(t.from,t.to,e,i)),i}get hasFocus(){var t;return(document.hasFocus()||Be.safari&&(null===(t=this.inputState)||void 0===t?void 0:t.lastContextMenu)>Date.now()-3e4)&&this.root.activeElement==this.contentDOM}focus(){this.observer.ignore((()=>{xe(this.contentDOM),this.docView.updateSelection()}))}destroy(){for(let t of this.plugins)t.destroy(this);this.plugins=[],this.inputState.destroy(),this.dom.remove(),this.observer.destroy(),this.measureScheduled>-1&&cancelAnimationFrame(this.measureScheduled),this.destroyed=!0}static scrollIntoView(t,e={}){return Ri.of(new Xi("number"==typeof t?W.cursor(t):t,e.y,e.x,e.yMargin,e.xMargin))}static domEventHandlers(t){return Ji.define((()=>({})),{eventHandlers:t})}static theme(t,e){let i=jt.newName(),n=[xr.of(i),qi.of(Rr(`.${i}`,t))];return e&&e.dark&&n.push(kr.of(!0)),n}static baseTheme(t){return N.lowest(qi.of(Rr("."+wr,t,Xr)))}}Jr.scrollTo=yi,Jr.centerOn=Pi,Jr.styleModule=qi,Jr.inputHandler=wi,Jr.exceptionSink=xi,Jr.updateListener=ki,Jr.editable=Yi,Jr.mouseSelectionStyle=vi,Jr.dragMovesSelection=Si,Jr.clickAddsSelectionRange=Zi,Jr.decorations=Ii,Jr.darkTheme=kr,Jr.contentAttributes=Ai,Jr.editorAttributes=Mi,Jr.lineWrapping=Jr.contentAttributes.of({class:"cm-lineWrapping"}),Jr.announce=dt.define();const Gr=4096;function Dr(t,e){return(null==t?e.contentDOM.getBoundingClientRect().top:t)+e.viewState.paddingTop}const Mr={};class Ar{constructor(t,e,i,n){this.from=t,this.to=e,this.dir=i,this.order=n}static update(t,e){if(e.empty)return t;let i=[],n=t.length?t[t.length-1].dir:Bi.LTR;for(let r=Math.max(0,t.length-10);r<t.length;r++){let s=t[r];s.dir!=n||e.touchesRange(s.from,s.to)||i.push(new Ar(e.mapPos(s.from,1),e.mapPos(s.to,-1),s.dir,s.order))}return i}}function Ir(t,e,i){for(let n=t.state.facet(e),r=n.length-1;r>=0;r--){let e=n[r],s="function"==typeof e?e(t):e;s&&oi(s,i)}return i}const qr=Be.mac?"mac":Be.windows?"win":Be.linux?"linux":"key";function zr(t,e,i){return e.altKey&&(t="Alt-"+t),e.ctrlKey&&(t="Ctrl-"+t),e.metaKey&&(t="Meta-"+t),!1!==i&&e.shiftKey&&(t="Shift-"+t),t}const Er=Jr.domEventHandlers({keydown:(t,e)=>Kr(Nr(e.state),t,e,"editor")}),Br=j.define({enables:Er}),Fr=new WeakMap;function Nr(t){let e=t.facet(Br),i=Fr.get(e);return i||Fr.set(e,i=function(t,e=qr){let i=Object.create(null),n=Object.create(null),r=(t,e)=>{let i=n[t];if(null==i)n[t]=e;else if(i!=e)throw new Error("Key binding "+t+" is used both as a regular binding and as a multi-stroke prefix")},s=(t,n,s,o)=>{let a=i[t]||(i[t]=Object.create(null)),l=n.split(/ (?!$)/).map((t=>function(t,e){const i=t.split(/-(?!$)/);let n,r,s,o,a=i[i.length-1];"Space"==a&&(a=" ");for(let t=0;t<i.length-1;++t){const a=i[t];if(/^(cmd|meta|m)$/i.test(a))o=!0;else if(/^a(lt)?$/i.test(a))n=!0;else if(/^(c|ctrl|control)$/i.test(a))r=!0;else if(/^s(hift)?$/i.test(a))s=!0;else{if(!/^mod$/i.test(a))throw new Error("Unrecognized modifier name: "+a);"mac"==e?o=!0:r=!0}}return n&&(a="Alt-"+a),r&&(a="Ctrl-"+a),o&&(a="Meta-"+a),s&&(a="Shift-"+a),a}(t,e)));for(let e=1;e<l.length;e++){let i=l.slice(0,e).join(" ");r(i,!0),a[i]||(a[i]={preventDefault:!0,commands:[e=>{let n=Lr={view:e,prefix:i,scope:t};return setTimeout((()=>{Lr==n&&(Lr=null)}),4e3),!0}]})}let h=l.join(" ");r(h,!1);let O=a[h]||(a[h]={preventDefault:!1,commands:[]});O.commands.push(s),o&&(O.preventDefault=!0)};for(let i of t){let t=i[e]||i.key;if(t)for(let e of i.scope?i.scope.split(" "):["editor"])s(e,t,i.run,i.preventDefault),i.shift&&s(e,"Shift-"+t,i.shift,i.preventDefault)}return i}(e.reduce(((t,e)=>t.concat(e)),[]))),i}let Lr=null;function Kr(t,e,i,n){let r=function(t){var e=!(he&&(t.ctrlKey||t.altKey||t.metaKey)||(se||le)&&t.shiftKey&&t.key&&1==t.key.length)&&t.key||(t.shiftKey?ne:ie)[t.keyCode]||t.key||"Unidentified";return"Esc"==e&&(e="Escape"),"Del"==e&&(e="Delete"),"Left"==e&&(e="ArrowLeft"),"Up"==e&&(e="ArrowUp"),"Right"==e&&(e="ArrowRight"),"Down"==e&&(e="ArrowDown"),e}(e),s=1==r.length&&" "!=r,o="",a=!1;Lr&&Lr.view==i&&Lr.scope==n&&(o=Lr.prefix+" ",(a=Rn.indexOf(e.keyCode)<0)&&(Lr=null));let l,h=t=>{if(t){for(let e of t.commands)if(e(i))return!0;t.preventDefault&&(a=!0)}return!1},O=t[n];if(O){if(h(O[o+zr(r,e,!s)]))return!0;if(s&&(e.shiftKey||e.altKey||e.metaKey)&&(l=ie[e.keyCode])&&l!=r){if(h(O[o+zr(l,e,!0)]))return!0}else if(s&&e.shiftKey&&h(O[o+zr(r,e,!0)]))return!0}return a}const Hr=!Be.ios,ts=j.define({combine:t=>xt(t,{cursorBlinkRate:1200,drawRangeCursor:!0},{cursorBlinkRate:(t,e)=>Math.min(t,e),drawRangeCursor:(t,e)=>t||e})});function es(t={}){return[ts.of(t),ns,ss]}class is{constructor(t,e,i,n,r){this.left=t,this.top=e,this.width=i,this.height=n,this.className=r}draw(){let t=document.createElement("div");return t.className=this.className,this.adjust(t),t}adjust(t){t.style.left=this.left+"px",t.style.top=this.top+"px",this.width>=0&&(t.style.width=this.width+"px"),t.style.height=this.height+"px"}eq(t){return this.left==t.left&&this.top==t.top&&this.width==t.width&&this.height==t.height&&this.className==t.className}}const ns=Ji.fromClass(class{constructor(t){this.view=t,this.rangePieces=[],this.cursors=[],this.measureReq={read:this.readPos.bind(this),write:this.drawSel.bind(this)},this.selectionLayer=t.scrollDOM.appendChild(document.createElement("div")),this.selectionLayer.className="cm-selectionLayer",this.selectionLayer.setAttribute("aria-hidden","true"),this.cursorLayer=t.scrollDOM.appendChild(document.createElement("div")),this.cursorLayer.className="cm-cursorLayer",this.cursorLayer.setAttribute("aria-hidden","true"),t.requestMeasure(this.measureReq),this.setBlinkRate()}setBlinkRate(){this.cursorLayer.style.animationDuration=this.view.state.facet(ts).cursorBlinkRate+"ms"}update(t){let e=t.startState.facet(ts)!=t.state.facet(ts);(e||t.selectionSet||t.geometryChanged||t.viewportChanged)&&this.view.requestMeasure(this.measureReq),t.transactions.some((t=>t.scrollIntoView))&&(this.cursorLayer.style.animationName="cm-blink"==this.cursorLayer.style.animationName?"cm-blink2":"cm-blink"),e&&this.setBlinkRate()}readPos(){let{state:t}=this.view,e=t.facet(ts),i=t.selection.ranges.map((t=>t.empty?[]:function(t,e){if(e.to<=t.viewport.from||e.from>=t.viewport.to)return[];let i=Math.max(e.from,t.viewport.from),n=Math.min(e.to,t.viewport.to),r=t.textDirection==Bi.LTR,s=t.contentDOM,o=s.getBoundingClientRect(),a=os(t),l=window.getComputedStyle(s.firstChild),h=o.left+parseInt(l.paddingLeft)+Math.min(0,parseInt(l.textIndent)),O=o.right-parseInt(l.paddingRight),c=ls(t,i),u=ls(t,n),d=c.type==Oi.Text?c:null,$=u.type==Oi.Text?u:null;t.lineWrapping&&(d&&(d=as(t,i,d)),$&&($=as(t,n,$)));if(d&&$&&d.from==$.from)return _(p(e.from,e.to,d));{let i=d?p(e.from,null,d):m(c,!1),n=$?p(null,e.to,$):m(u,!0),r=[];return(d||c).to<($||u).from-1?r.push(f(h,i.bottom,O,n.top)):i.bottom<n.top&&t.elementAtHeight((i.bottom+n.top)/2).type==Oi.Text&&(i.bottom=n.top=(i.bottom+n.top)/2),_(i).concat(r).concat(_(n))}function f(t,e,i,n){return new is(t-a.left,e-a.top-.01,i-t,n-e+.01,"cm-selectionBackground")}function _({top:t,bottom:e,horizontal:i}){let n=[];for(let r=0;r<i.length;r+=2)n.push(f(i[r],t,i[r+1],e));return n}function p(e,i,n){let s=1e9,o=-1e9,a=[];function l(e,i,l,c,u){let d=t.coordsAtPos(e,e==n.to?-2:2),$=t.coordsAtPos(l,l==n.from?2:-2);s=Math.min(d.top,$.top,s),o=Math.max(d.bottom,$.bottom,o),u==Bi.LTR?a.push(r&&i?h:d.left,r&&c?O:$.right):a.push(!r&&c?h:$.left,!r&&i?O:d.right)}let c=null!=e?e:n.from,u=null!=i?i:n.to;for(let n of t.visibleRanges)if(n.to>c&&n.from<u)for(let r=Math.max(n.from,c),s=Math.min(n.to,u);;){let n=t.state.doc.lineAt(r);for(let o of t.bidiSpans(n)){let t=o.from+n.from,a=o.to+n.from;if(t>=s)break;a>r&&l(Math.max(t,r),null==e&&t<=c,Math.min(a,s),null==i&&a>=u,o.dir)}if(r=n.to+1,r>=s)break}return 0==a.length&&l(c,null==e,u,null==i,t.textDirection),{top:s,bottom:o,horizontal:a}}function m(t,e){let i=o.top+(e?t.top:t.bottom);return{top:i,bottom:i,horizontal:[]}}}(this.view,t))).reduce(((t,e)=>t.concat(e))),n=[];for(let i of t.selection.ranges){let r=i==t.selection.main;if(i.empty?!r||Hr:e.drawRangeCursor){let t=hs(this.view,i,r);t&&n.push(t)}}return{rangePieces:i,cursors:n}}drawSel({rangePieces:t,cursors:e}){if(t.length!=this.rangePieces.length||t.some(((t,e)=>!t.eq(this.rangePieces[e])))){this.selectionLayer.textContent="";for(let e of t)this.selectionLayer.appendChild(e.draw());this.rangePieces=t}if(e.length!=this.cursors.length||e.some(((t,e)=>!t.eq(this.cursors[e])))){let t=this.cursorLayer.children;if(t.length!==e.length){this.cursorLayer.textContent="";for(const t of e)this.cursorLayer.appendChild(t.draw())}else e.forEach(((e,i)=>e.adjust(t[i])));this.cursors=e}}destroy(){this.selectionLayer.remove(),this.cursorLayer.remove()}}),rs={".cm-line":{"& ::selection":{backgroundColor:"transparent !important"},"&::selection":{backgroundColor:"transparent !important"}}};Hr&&(rs[".cm-line"].caretColor="transparent !important");const ss=N.highest(Jr.theme(rs));function os(t){let e=t.scrollDOM.getBoundingClientRect();return{left:(t.textDirection==Bi.LTR?e.left:e.right-t.scrollDOM.clientWidth)-t.scrollDOM.scrollLeft,top:e.top-t.scrollDOM.scrollTop}}function as(t,e,i){let n=W.cursor(e);return{from:Math.max(i.from,t.moveToLineBoundary(n,!1,!0).from),to:Math.min(i.to,t.moveToLineBoundary(n,!0,!0).from),type:Oi.Text}}function ls(t,e){let i=t.lineBlockAt(e);if(Array.isArray(i.type))for(let t of i.type)if(t.to>e||t.to==e&&(t.to==i.to||t.type==Oi.Text))return t;return i}function hs(t,e,i){let n=t.coordsAtPos(e.head,e.assoc||1);if(!n)return null;let r=os(t);return new is(n.left-r.left,n.top-r.top,-1,n.bottom-n.top,i?"cm-cursor cm-cursor-primary":"cm-cursor cm-cursor-secondary")}const Os=dt.define({map:(t,e)=>null==t?null:e.mapPos(t)}),cs=A.define({create:()=>null,update:(t,e)=>(null!=t&&(t=e.changes.mapPos(t)),e.effects.reduce(((t,e)=>e.is(Os)?e.value:t),t))}),us=Ji.fromClass(class{constructor(t){this.view=t,this.cursor=null,this.measureReq={read:this.readPos.bind(this),write:this.drawCursor.bind(this)}}update(t){var e;let i=t.state.field(cs);null==i?null!=this.cursor&&(null===(e=this.cursor)||void 0===e||e.remove(),this.cursor=null):(this.cursor||(this.cursor=this.view.scrollDOM.appendChild(document.createElement("div")),this.cursor.className="cm-dropCursor"),(t.startState.field(cs)!=i||t.docChanged||t.geometryChanged)&&this.view.requestMeasure(this.measureReq))}readPos(){let t=this.view.state.field(cs),e=null!=t&&this.view.coordsAtPos(t);if(!e)return null;let i=this.view.scrollDOM.getBoundingClientRect();return{left:e.left-i.left+this.view.scrollDOM.scrollLeft,top:e.top-i.top+this.view.scrollDOM.scrollTop,height:e.bottom-e.top}}drawCursor(t){this.cursor&&(t?(this.cursor.style.left=t.left+"px",this.cursor.style.top=t.top+"px",this.cursor.style.height=t.height+"px"):this.cursor.style.left="-100000px")}destroy(){this.cursor&&this.cursor.remove()}setDropPos(t){this.view.state.field(cs)!=t&&this.view.dispatch({effects:Os.of(t)})}},{eventHandlers:{dragover(t){this.setDropPos(this.view.posAtCoords({x:t.clientX,y:t.clientY}))},dragleave(t){t.target!=this.view.contentDOM&&this.view.contentDOM.contains(t.relatedTarget)||this.setDropPos(null)},dragend(){this.setDropPos(null)},drop(){this.setDropPos(null)}}});function ds(){return[cs,us]}function $s(t,e,i,n,r){e.lastIndex=0;for(let s,o=t.iterRange(i,n),a=i;!o.next().done;a+=o.value.length)if(!o.lineBreak)for(;s=e.exec(o.value);)r(a+s.index,a+s.index+s[0].length,s)}class fs{constructor(t){let{regexp:e,decoration:i,boundary:n,maxLength:r=1e3}=t;if(!e.global)throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");this.regexp=e,this.getDeco="function"==typeof i?i:()=>i,this.boundary=n,this.maxLength=r}createDeco(t){let e=new qt;for(let{from:i,to:n}of function(t,e){let i=t.visibleRanges;if(1==i.length&&i[0].from==t.viewport.from&&i[0].to==t.viewport.to)return i;let n=[];for(let{from:r,to:s}of i)r=Math.max(t.state.doc.lineAt(r).from,r-e),s=Math.min(t.state.doc.lineAt(s).to,s+e),n.length&&n[n.length-1].to>=r?n[n.length-1].to=s:n.push({from:r,to:s});return n}(t,this.maxLength))$s(t.state.doc,this.regexp,i,n,((i,n,r)=>e.add(i,n,this.getDeco(r,t,i))));return e.finish()}updateDeco(t,e){let i=1e9,n=-1;return t.docChanged&&t.changes.iterChanges(((e,r,s,o)=>{o>t.view.viewport.from&&s<t.view.viewport.to&&(i=Math.min(s,i),n=Math.max(o,n))})),t.viewportChanged||n-i>1e3?this.createDeco(t.view):n>-1?this.updateRange(t.view,e.map(t.changes),i,n):e}updateRange(t,e,i,n){for(let r of t.visibleRanges){let s=Math.max(r.from,i),o=Math.min(r.to,n);if(o>s){let i=t.state.doc.lineAt(s),n=i.to<o?t.state.doc.lineAt(o):i,a=Math.max(r.from,i.from),l=Math.min(r.to,n.to);if(this.boundary){for(;s>i.from;s--)if(this.boundary.test(i.text[s-1-i.from])){a=s;break}for(;o<n.to;o++)if(this.boundary.test(n.text[o-n.from])){l=o;break}}let h,O=[];if(i==n)for(this.regexp.lastIndex=a-i.from;(h=this.regexp.exec(i.text))&&h.index<l-i.from;){let e=h.index+i.from;O.push(this.getDeco(h,t,e).range(e,e+h[0].length))}else $s(t.state.doc,this.regexp,a,l,((e,i,n)=>O.push(this.getDeco(n,t,e).range(e,i))));e=e.update({filterFrom:a,filterTo:l,filter:(t,e)=>t<a||e>l,add:O})}}return e}}const _s=null!=/x/.unicode?"gu":"g",ps=new RegExp("[\0-\b\n-\x1f\x7f-\x9f\xad\u061c\u200b\u200e\u200f\u2028\u2029\u202d\u202e\ufeff\ufff9-\ufffc]",_s),ms={0:"null",7:"bell",8:"backspace",10:"newline",11:"vertical tab",13:"carriage return",27:"escape",8203:"zero width space",8204:"zero width non-joiner",8205:"zero width joiner",8206:"left-to-right mark",8207:"right-to-left mark",8232:"line separator",8237:"left-to-right override",8238:"right-to-left override",8233:"paragraph separator",65279:"zero width no-break space",65532:"object replacement"};let gs=null;const Ts=j.define({combine(t){let e=xt(t,{render:null,specialChars:ps,addSpecialChars:null});return(e.replaceTabs=!function(){var t;if(null==gs&&"undefined"!=typeof document&&document.body){let e=document.body.style;gs=null!=(null!==(t=e.tabSize)&&void 0!==t?t:e.MozTabSize)}return gs||!1}())&&(e.specialChars=new RegExp("\t|"+e.specialChars.source,_s)),e.addSpecialChars&&(e.specialChars=new RegExp(e.specialChars.source+"|"+e.addSpecialChars.source,_s)),e}});function bs(t={}){return[Ts.of(t),Qs||(Qs=Ji.fromClass(class{constructor(t){this.view=t,this.decorations=ci.none,this.decorationCache=Object.create(null),this.decorator=this.makeDecorator(t.state.facet(Ts)),this.decorations=this.decorator.createDeco(t)}makeDecorator(t){return new fs({regexp:t.specialChars,decoration:(e,i,n)=>{let{doc:r}=i.state,s=l(e[0],0);if(9==s){let t=r.lineAt(n),e=i.state.tabSize,s=c(t.text,e,n-t.from);return ci.replace({widget:new Ss((e-s%e)*this.view.defaultCharacterWidth)})}return this.decorationCache[s]||(this.decorationCache[s]=ci.replace({widget:new Zs(t,s)}))},boundary:t.replaceTabs?void 0:/[^]/})}update(t){let e=t.state.facet(Ts);t.startState.facet(Ts)!=e?(this.decorator=this.makeDecorator(e),this.decorations=this.decorator.createDeco(t.view)):this.decorations=this.decorator.updateDeco(t,this.decorations)}},{decorations:t=>t.decorations}))]}let Qs=null;class Zs extends hi{constructor(t,e){super(),this.options=t,this.code=e}eq(t){return t.code==this.code}toDOM(t){let e=function(t){return t>=32?"\u2022":10==t?"\u2424":String.fromCharCode(9216+t)}(this.code),i=t.state.phrase("Control character")+" "+(ms[this.code]||"0x"+this.code.toString(16)),n=this.options.render&&this.options.render(this.code,i,e);if(n)return n;let r=document.createElement("span");return r.textContent=e,r.title=i,r.setAttribute("aria-label",i),r.className="cm-specialChar",r}ignoreEvent(){return!1}}class Ss extends hi{constructor(t){super(),this.width=t}eq(t){return t.width==this.width}toDOM(){let t=document.createElement("span");return t.textContent="\t",t.className="cm-tab",t.style.width=this.width+"px",t}ignoreEvent(){return!1}}const vs=ci.line({class:"cm-activeLine"}),xs=Ji.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.docChanged||t.selectionSet)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=-1,i=[];for(let n of t.state.selection.ranges){if(!n.empty)return ci.none;let r=t.lineBlockAt(n.head);r.from>e&&(i.push(vs.range(r.from)),e=r.from)}return ci.set(i)}},{decorations:t=>t.decorations}),ks=Ot.define(),ws=Ot.define(),ys=j.define(),Ps=j.define({combine:t=>xt(t,{minDepth:100,newGroupDelay:500},{minDepth:Math.max,newGroupDelay:Math.min})});const Xs=A.define({create:()=>Es.empty,update(t,e){let i=e.state.facet(Ps),n=e.annotation(ks);if(n){let r=e.docChanged?W.single(function(t){let e=0;return t.iterChangedRanges(((t,i)=>e=i)),e}(e.changes)):void 0,s=Us.fromTransaction(e,r),o=n.side,a=0==o?t.undone:t.done;return a=s?Js(a,a.length,i.minDepth,s):Ms(a,e.startState.selection),new Es(0==o?n.rest:a,0==o?a:n.rest)}let r=e.annotation(ws);if("full"!=r&&"before"!=r||(t=t.isolate()),!1===e.annotation($t.addToHistory))return e.changes.empty?t:t.addMapping(e.changes.desc);let s=Us.fromTransaction(e),o=e.annotation($t.time),a=e.annotation($t.userEvent);return s?t=t.addChanges(s,o,a,i.newGroupDelay,i.minDepth):e.selection&&(t=t.addSelection(e.startState.selection,o,a,i.newGroupDelay)),"full"!=r&&"after"!=r||(t=t.isolate()),t},toJSON:t=>({done:t.done.map((t=>t.toJSON())),undone:t.undone.map((t=>t.toJSON()))}),fromJSON:t=>new Es(t.done.map(Us.fromJSON),t.undone.map(Us.fromJSON))});function Rs(t={}){return[Xs,Ps.of(t),Jr.domEventHandlers({beforeinput(t,e){let i="historyUndo"==t.inputType?Ys:"historyRedo"==t.inputType?Cs:null;return!!i&&(t.preventDefault(),i(e))}})]}function Ws(t,e){return function({state:i,dispatch:n}){if(!e&&i.readOnly)return!1;let r=i.field(Xs,!1);if(!r)return!1;let s=r.pop(t,i,e);return!!s&&(n(s),!0)}}const Ys=Ws(0,!1),Cs=Ws(1,!1),Vs=Ws(0,!0),js=Ws(1,!0);class Us{constructor(t,e,i,n,r){this.changes=t,this.effects=e,this.mapped=i,this.startSelection=n,this.selectionsAfter=r}setSelAfter(t){return new Us(this.changes,this.effects,this.mapped,this.startSelection,t)}toJSON(){var t,e,i;return{changes:null===(t=this.changes)||void 0===t?void 0:t.toJSON(),mapped:null===(e=this.mapped)||void 0===e?void 0:e.toJSON(),startSelection:null===(i=this.startSelection)||void 0===i?void 0:i.toJSON(),selectionsAfter:this.selectionsAfter.map((t=>t.toJSON()))}}static fromJSON(t){return new Us(t.changes&&v.fromJSON(t.changes),[],t.mapped&&S.fromJSON(t.mapped),t.startSelection&&W.fromJSON(t.startSelection),t.selectionsAfter.map(W.fromJSON))}static fromTransaction(t,e){let i=Ds;for(let e of t.startState.facet(ys)){let n=e(t);n.length&&(i=i.concat(n))}return!i.length&&t.changes.empty?null:new Us(t.changes.invert(t.startState.doc),i,void 0,e||t.startState.selection,Ds)}static selection(t){return new Us(void 0,Ds,void 0,void 0,t)}}function Js(t,e,i,n){let r=e+1>i+20?e-i-1:0,s=t.slice(r,e);return s.push(n),s}function Gs(t,e){return t.length?e.length?t.concat(e):t:e}const Ds=[];function Ms(t,e){if(t.length){let i=t[t.length-1],n=i.selectionsAfter.slice(Math.max(0,i.selectionsAfter.length-200));return n.length&&n[n.length-1].eq(e)?t:(n.push(e),Js(t,t.length-1,1e9,i.setSelAfter(n)))}return[Us.selection([e])]}function As(t){let e=t[t.length-1],i=t.slice();return i[t.length-1]=e.setSelAfter(e.selectionsAfter.slice(0,e.selectionsAfter.length-1)),i}function Is(t,e){if(!t.length)return t;let i=t.length,n=Ds;for(;i;){let r=qs(t[i-1],e,n);if(r.changes&&!r.changes.empty||r.effects.length){let e=t.slice(0,i);return e[i-1]=r,e}e=r.mapped,i--,n=r.selectionsAfter}return n.length?[Us.selection(n)]:Ds}function qs(t,e,i){let n=Gs(t.selectionsAfter.length?t.selectionsAfter.map((t=>t.map(e))):Ds,i);if(!t.changes)return Us.selection(n);let r=t.changes.map(e),s=e.mapDesc(t.changes,!0),o=t.mapped?t.mapped.composeDesc(s):s;return new Us(r,dt.mapEffects(t.effects,e),o,t.startSelection.map(s),n)}const zs=/^(input\.type|delete)($|\.)/;class Es{constructor(t,e,i=0,n){this.done=t,this.undone=e,this.prevTime=i,this.prevUserEvent=n}isolate(){return this.prevTime?new Es(this.done,this.undone):this}addChanges(t,e,i,n,r){let s=this.done,o=s[s.length-1];return s=o&&o.changes&&!o.changes.empty&&t.changes&&(!i||zs.test(i))&&(!o.selectionsAfter.length&&e-this.prevTime<n&&function(t,e){let i=[],n=!1;return t.iterChangedRanges(((t,e)=>i.push(t,e))),e.iterChangedRanges(((t,e,r,s)=>{for(let t=0;t<i.length;){let e=i[t++],o=i[t++];s>=e&&r<=o&&(n=!0)}})),n}(o.changes,t.changes)||"input.type.compose"==i)?Js(s,s.length-1,r,new Us(t.changes.compose(o.changes),Gs(t.effects,o.effects),o.mapped,o.startSelection,Ds)):Js(s,s.length,r,t),new Es(s,Ds,e,i)}addSelection(t,e,i,n){let r=this.done.length?this.done[this.done.length-1].selectionsAfter:Ds;return r.length>0&&e-this.prevTime<n&&i==this.prevUserEvent&&i&&/^select($|\.)/.test(i)&&(s=r[r.length-1],o=t,s.ranges.length==o.ranges.length&&0===s.ranges.filter(((t,e)=>t.empty!=o.ranges[e].empty)).length)?this:new Es(Ms(this.done,t),this.undone,e,i);var s,o}addMapping(t){return new Es(Is(this.done,t),Is(this.undone,t),this.prevTime,this.prevUserEvent)}pop(t,e,i){let n=0==t?this.done:this.undone;if(0==n.length)return null;let r=n[n.length-1];if(i&&r.selectionsAfter.length)return e.update({selection:r.selectionsAfter[r.selectionsAfter.length-1],annotations:ks.of({side:t,rest:As(n)}),userEvent:0==t?"select.undo":"select.redo",scrollIntoView:!0});if(r.changes){let i=1==n.length?Ds:n.slice(0,n.length-1);return r.mapped&&(i=Is(i,r.mapped)),e.update({changes:r.changes,selection:r.startSelection,effects:r.effects,annotations:ks.of({side:t,rest:i}),filter:!1,userEvent:0==t?"undo":"redo",scrollIntoView:!0})}return null}}Es.empty=new Es(Ds,Ds);const Bs=[{key:"Mod-z",run:Ys,preventDefault:!0},{key:"Mod-y",mac:"Mod-Shift-z",run:Cs,preventDefault:!0},{key:"Mod-u",run:Vs,preventDefault:!0},{key:"Alt-u",mac:"Mod-Shift-u",run:js,preventDefault:!0}],Fs=1024;let Ns=0;class Ls{constructor(t,e){this.from=t,this.to=e}}class Ks{constructor(t={}){this.id=Ns++,this.perNode=!!t.perNode,this.deserialize=t.deserialize||(()=>{throw new Error("This node type doesn't define a deserialize function")})}add(t){if(this.perNode)throw new RangeError("Can't add per-node props to node types");return"function"!=typeof t&&(t=eo.match(t)),e=>{let i=t(e);return void 0===i?null:[this,i]}}}Ks.closedBy=new Ks({deserialize:t=>t.split(" ")}),Ks.openedBy=new Ks({deserialize:t=>t.split(" ")}),Ks.group=new Ks({deserialize:t=>t.split(" ")}),Ks.contextHash=new Ks({perNode:!0}),Ks.lookAhead=new Ks({perNode:!0}),Ks.mounted=new Ks({perNode:!0});class Hs{constructor(t,e,i){this.tree=t,this.overlay=e,this.parser=i}}const to=Object.create(null);class eo{constructor(t,e,i,n=0){this.name=t,this.props=e,this.id=i,this.flags=n}static define(t){let e=t.props&&t.props.length?Object.create(null):to,i=(t.top?1:0)|(t.skipped?2:0)|(t.error?4:0)|(null==t.name?8:0),n=new eo(t.name||"",e,t.id,i);if(t.props)for(let i of t.props)if(Array.isArray(i)||(i=i(n)),i){if(i[0].perNode)throw new RangeError("Can't store a per-node prop on a node type");e[i[0].id]=i[1]}return n}prop(t){return this.props[t.id]}get isTop(){return(1&this.flags)>0}get isSkipped(){return(2&this.flags)>0}get isError(){return(4&this.flags)>0}get isAnonymous(){return(8&this.flags)>0}is(t){if("string"==typeof t){if(this.name==t)return!0;let e=this.prop(Ks.group);return!!e&&e.indexOf(t)>-1}return this.id==t}static match(t){let e=Object.create(null);for(let i in t)for(let n of i.split(" "))e[n]=t[i];return t=>{for(let i=t.prop(Ks.group),n=-1;n<(i?i.length:0);n++){let r=e[n<0?t.name:i[n]];if(r)return r}}}}eo.none=new eo("",Object.create(null),0,8);class io{constructor(t){this.types=t;for(let e=0;e<t.length;e++)if(t[e].id!=e)throw new RangeError("Node type ids should correspond to array positions when creating a node set")}extend(...t){let e=[];for(let i of this.types){let n=null;for(let e of t){let t=e(i);t&&(n||(n=Object.assign({},i.props)),n[t[0].id]=t[1])}e.push(n?new eo(i.name,n,i.id,i.flags):i)}return new io(e)}}const no=new WeakMap,ro=new WeakMap;class so{constructor(t,e,i,n,r){if(this.type=t,this.children=e,this.positions=i,this.length=n,this.props=null,r&&r.length){this.props=Object.create(null);for(let[t,e]of r)this.props["number"==typeof t?t:t.id]=e}}toString(){let t=this.prop(Ks.mounted);if(t&&!t.overlay)return t.tree.toString();let e="";for(let t of this.children){let i=t.toString();i&&(e&&(e+=","),e+=i)}return this.type.name?(/\W/.test(this.type.name)&&!this.type.isError?JSON.stringify(this.type.name):this.type.name)+(e.length?"("+e+")":""):e}cursor(t,e=0){let i=null!=t&&no.get(this)||this.topNode,n=new _o(i);return null!=t&&(n.moveTo(t,e),no.set(this,n._tree)),n}fullCursor(){return new _o(this.topNode,1)}get topNode(){return new co(this,0,0,null)}resolve(t,e=0){let i=Oo(no.get(this)||this.topNode,t,e,!1);return no.set(this,i),i}resolveInner(t,e=0){let i=Oo(ro.get(this)||this.topNode,t,e,!0);return ro.set(this,i),i}iterate(t){let{enter:e,leave:i,from:n=0,to:r=this.length}=t;for(let t=this.cursor(),s=()=>t.node;;){let o=!1;if(t.from<=r&&t.to>=n&&(t.type.isAnonymous||!1!==e(t.type,t.from,t.to,s))){if(t.firstChild())continue;t.type.isAnonymous||(o=!0)}for(;o&&i&&i(t.type,t.from,t.to,s),o=t.type.isAnonymous,!t.nextSibling();){if(!t.parent())return;o=!0}}}prop(t){return t.perNode?this.props?this.props[t.id]:void 0:this.type.prop(t)}get propValues(){let t=[];if(this.props)for(let e in this.props)t.push([+e,this.props[e]]);return t}balance(t={}){return this.children.length<=8?this:To(eo.none,this.children,this.positions,0,this.children.length,0,this.length,((t,e,i)=>new so(this.type,t,e,i,this.propValues)),t.makeTree||((t,e,i)=>new so(eo.none,t,e,i)))}static build(t){return function(t){var e;let{buffer:i,nodeSet:n,maxBufferLength:r=Fs,reused:s=[],minRepeatType:o=n.types.length}=t,a=Array.isArray(i)?new oo(i,i.length):i,l=n.types,h=0,O=0;function c(t,e,i,p,m){let{id:g,start:T,end:b,size:Q}=a,Z=O;for(;Q<0;){if(a.next(),-1==Q){let e=s[g];return i.push(e),void p.push(T-t)}if(-3==Q)return void(h=g);if(-4==Q)return void(O=g);throw new RangeError(`Unrecognized record size: ${Q}`)}let S,v,x=l[g],k=T-t;if(b-T<=r&&(v=f(a.pos-e,m))){let e=new Uint16Array(v.size-v.skip),i=a.pos-v.size,r=e.length;for(;a.pos>i;)r=_(v.start,e,r);S=new ao(e,b-v.start,n),k=v.start-t}else{let t=a.pos-Q;a.next();let e=[],i=[],n=g>=o?g:-1,s=0,l=b;for(;a.pos>t;)n>=0&&a.id==n&&a.size>=0?(a.end<=l-r&&(d(e,i,T,s,a.end,l,n,Z),s=e.length,l=a.end),a.next()):c(T,t,e,i,n);if(n>=0&&s>0&&s<e.length&&d(e,i,T,s,T,l,n,Z),e.reverse(),i.reverse(),n>-1&&s>0){let t=u(x);S=To(x,e,i,0,e.length,0,b-T,t,t)}else S=$(x,e,i,b-T,Z-b)}i.push(S),p.push(k)}function u(t){return(e,i,n)=>{let r,s,o=0,a=e.length-1;if(a>=0&&(r=e[a])instanceof so){if(!a&&r.type==t&&r.length==n)return r;(s=r.prop(Ks.lookAhead))&&(o=i[a]+r.length+s)}return $(t,e,i,n,o)}}function d(t,e,i,r,s,o,a,l){let h=[],O=[];for(;t.length>r;)h.push(t.pop()),O.push(e.pop()+i-s);t.push($(n.types[a],h,O,o-s,l-o)),e.push(s-i)}function $(t,e,i,n,r=0,s){if(h){let t=[Ks.contextHash,h];s=s?[t].concat(s):[t]}if(r>25){let t=[Ks.lookAhead,r];s=s?[t].concat(s):[t]}return new so(t,e,i,n,s)}function f(t,e){let i=a.fork(),n=0,s=0,l=0,h=i.end-r,O={size:0,start:0,skip:0};t:for(let r=i.pos-t;i.pos>r;){let t=i.size;if(i.id==e&&t>=0){O.size=n,O.start=s,O.skip=l,l+=4,n+=4,i.next();continue}let a=i.pos-t;if(t<0||a<r||i.start<h)break;let c=i.id>=o?4:0,u=i.start;for(i.next();i.pos>a;){if(i.size<0){if(-3!=i.size)break t;c+=4}else i.id>=o&&(c+=4);i.next()}s=u,n+=t,l+=c}return(e<0||n==t)&&(O.size=n,O.start=s,O.skip=l),O.size>4?O:void 0}function _(t,e,i){let{id:n,start:r,end:s,size:l}=a;if(a.next(),l>=0&&n<o){let o=i;if(l>4){let n=a.pos-(l-4);for(;a.pos>n;)i=_(t,e,i)}e[--i]=o,e[--i]=s-t,e[--i]=r-t,e[--i]=n}else-3==l?h=n:-4==l&&(O=n);return i}let p=[],m=[];for(;a.pos>0;)c(t.start||0,t.bufferStart||0,p,m,-1);let g=null!==(e=t.length)&&void 0!==e?e:p.length?m[0]+p[0].length:0;return new so(l[t.topID],p.reverse(),m.reverse(),g)}(t)}}so.empty=new so(eo.none,[],[],0);class oo{constructor(t,e){this.buffer=t,this.index=e}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}get pos(){return this.index}next(){this.index-=4}fork(){return new oo(this.buffer,this.index)}}class ao{constructor(t,e,i){this.buffer=t,this.length=e,this.set=i}get type(){return eo.none}toString(){let t=[];for(let e=0;e<this.buffer.length;)t.push(this.childString(e)),e=this.buffer[e+3];return t.join(",")}childString(t){let e=this.buffer[t],i=this.buffer[t+3],n=this.set.types[e],r=n.name;if(/\W/.test(r)&&!n.isError&&(r=JSON.stringify(r)),i==(t+=4))return r;let s=[];for(;t<i;)s.push(this.childString(t)),t=this.buffer[t+3];return r+"("+s.join(",")+")"}findChild(t,e,i,n,r){let{buffer:s}=this,o=-1;for(let a=t;a!=e&&!(lo(r,n,s[a+1],s[a+2])&&(o=a,i>0));a=s[a+3]);return o}slice(t,e,i,n){let r=this.buffer,s=new Uint16Array(e-t);for(let n=t,o=0;n<e;)s[o++]=r[n++],s[o++]=r[n++]-i,s[o++]=r[n++]-i,s[o++]=r[n++]-t;return new ao(s,n-i,this.set)}}function lo(t,e,i,n){switch(t){case-2:return i<e;case-1:return n>=e&&i<e;case 0:return i<e&&n>e;case 1:return i<=e&&n>e;case 2:return n>e;case 4:return!0}}function ho(t,e){let i=t.childBefore(e);for(;i;){let e=i.lastChild;if(!e||e.to!=i.to)break;e.type.isError&&e.from==e.to?(t=i,i=e.prevSibling):i=e}return t}function Oo(t,e,i,n){for(var r;t.from==t.to||(i<1?t.from>=e:t.from>e)||(i>-1?t.to<=e:t.to<e);){let e=!n&&t instanceof co&&t.index<0?null:t.parent;if(!e)return t;t=e}if(n)for(let n=t,s=n.parent;s;n=s,s=n.parent)n instanceof co&&n.index<0&&(null===(r=s.enter(e,i,!0))||void 0===r?void 0:r.from)!=n.from&&(t=s);for(;;){let r=t.enter(e,i,n);if(!r)return t;t=r}}class co{constructor(t,e,i,n){this.node=t,this._from=e,this.index=i,this._parent=n}get type(){return this.node.type}get name(){return this.node.type.name}get from(){return this._from}get to(){return this._from+this.node.length}nextChild(t,e,i,n,r=0){for(let s=this;;){for(let{children:o,positions:a}=s.node,l=e>0?o.length:-1;t!=l;t+=e){let l=o[t],h=a[t]+s._from;if(lo(n,i,h,h+l.length))if(l instanceof ao){if(2&r)continue;let o=l.findChild(0,l.buffer.length,e,i-h,n);if(o>-1)return new fo(new $o(s,l,t,h),null,o)}else if(1&r||!l.type.isAnonymous||po(l)){let o;if(!(1&r)&&l.props&&(o=l.prop(Ks.mounted))&&!o.overlay)return new co(o.tree,h,t,s);let a=new co(l,h,t,s);return 1&r||!a.type.isAnonymous?a:a.nextChild(e<0?l.children.length-1:0,e,i,n)}}if(1&r||!s.type.isAnonymous)return null;if(t=s.index>=0?s.index+e:e<0?-1:s._parent.node.children.length,s=s._parent,!s)return null}}get firstChild(){return this.nextChild(0,1,0,4)}get lastChild(){return this.nextChild(this.node.children.length-1,-1,0,4)}childAfter(t){return this.nextChild(0,1,t,2)}childBefore(t){return this.nextChild(this.node.children.length-1,-1,t,-2)}enter(t,e,i=!0,n=!0){let r;if(i&&(r=this.node.prop(Ks.mounted))&&r.overlay){let i=t-this.from;for(let{from:t,to:n}of r.overlay)if((e>0?t<=i:t<i)&&(e<0?n>=i:n>i))return new co(r.tree,r.overlay[0].from+this.from,-1,this)}return this.nextChild(0,1,t,e,n?0:2)}nextSignificantParent(){let t=this;for(;t.type.isAnonymous&&t._parent;)t=t._parent;return t}get parent(){return this._parent?this._parent.nextSignificantParent():null}get nextSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index+1,1,0,4):null}get prevSibling(){return this._parent&&this.index>=0?this._parent.nextChild(this.index-1,-1,0,4):null}get cursor(){return new _o(this)}get tree(){return this.node}toTree(){return this.node}resolve(t,e=0){return Oo(this,t,e,!1)}resolveInner(t,e=0){return Oo(this,t,e,!0)}enterUnfinishedNodesBefore(t){return ho(this,t)}getChild(t,e=null,i=null){let n=uo(this,t,e,i);return n.length?n[0]:null}getChildren(t,e=null,i=null){return uo(this,t,e,i)}toString(){return this.node.toString()}}function uo(t,e,i,n){let r=t.cursor,s=[];if(!r.firstChild())return s;if(null!=i)for(;!r.type.is(i);)if(!r.nextSibling())return s;for(;;){if(null!=n&&r.type.is(n))return s;if(r.type.is(e)&&s.push(r.node),!r.nextSibling())return null==n?s:[]}}class $o{constructor(t,e,i,n){this.parent=t,this.buffer=e,this.index=i,this.start=n}}class fo{constructor(t,e,i){this.context=t,this._parent=e,this.index=i,this.type=t.buffer.set.types[t.buffer.buffer[i]]}get name(){return this.type.name}get from(){return this.context.start+this.context.buffer.buffer[this.index+1]}get to(){return this.context.start+this.context.buffer.buffer[this.index+2]}child(t,e,i){let{buffer:n}=this.context,r=n.findChild(this.index+4,n.buffer[this.index+3],t,e-this.context.start,i);return r<0?null:new fo(this.context,this,r)}get firstChild(){return this.child(1,0,4)}get lastChild(){return this.child(-1,0,4)}childAfter(t){return this.child(1,t,2)}childBefore(t){return this.child(-1,t,-2)}enter(t,e,i,n=!0){if(!n)return null;let{buffer:r}=this.context,s=r.findChild(this.index+4,r.buffer[this.index+3],e>0?1:-1,t-this.context.start,e);return s<0?null:new fo(this.context,this,s)}get parent(){return this._parent||this.context.parent.nextSignificantParent()}externalSibling(t){return this._parent?null:this.context.parent.nextChild(this.context.index+t,t,0,4)}get nextSibling(){let{buffer:t}=this.context,e=t.buffer[this.index+3];return e<(this._parent?t.buffer[this._parent.index+3]:t.buffer.length)?new fo(this.context,this._parent,e):this.externalSibling(1)}get prevSibling(){let{buffer:t}=this.context,e=this._parent?this._parent.index+4:0;return this.index==e?this.externalSibling(-1):new fo(this.context,this._parent,t.findChild(e,this.index,-1,0,4))}get cursor(){return new _o(this)}get tree(){return null}toTree(){let t=[],e=[],{buffer:i}=this.context,n=this.index+4,r=i.buffer[this.index+3];if(r>n){let s=i.buffer[this.index+1],o=i.buffer[this.index+2];t.push(i.slice(n,r,s,o)),e.push(0)}return new so(this.type,t,e,this.to-this.from)}resolve(t,e=0){return Oo(this,t,e,!1)}resolveInner(t,e=0){return Oo(this,t,e,!0)}enterUnfinishedNodesBefore(t){return ho(this,t)}toString(){return this.context.buffer.childString(this.index)}getChild(t,e=null,i=null){let n=uo(this,t,e,i);return n.length?n[0]:null}getChildren(t,e=null,i=null){return uo(this,t,e,i)}}class _o{constructor(t,e=0){if(this.mode=e,this.buffer=null,this.stack=[],this.index=0,this.bufferNode=null,t instanceof co)this.yieldNode(t);else{this._tree=t.context.parent,this.buffer=t.context;for(let e=t._parent;e;e=e._parent)this.stack.unshift(e.index);this.bufferNode=t,this.yieldBuf(t.index)}}get name(){return this.type.name}yieldNode(t){return!!t&&(this._tree=t,this.type=t.type,this.from=t.from,this.to=t.to,!0)}yieldBuf(t,e){this.index=t;let{start:i,buffer:n}=this.buffer;return this.type=e||n.set.types[n.buffer[t]],this.from=i+n.buffer[t+1],this.to=i+n.buffer[t+2],!0}yield(t){return!!t&&(t instanceof co?(this.buffer=null,this.yieldNode(t)):(this.buffer=t.context,this.yieldBuf(t.index,t.type)))}toString(){return this.buffer?this.buffer.buffer.childString(this.index):this._tree.toString()}enterChild(t,e,i){if(!this.buffer)return this.yield(this._tree.nextChild(t<0?this._tree.node.children.length-1:0,t,e,i,this.mode));let{buffer:n}=this.buffer,r=n.findChild(this.index+4,n.buffer[this.index+3],t,e-this.buffer.start,i);return!(r<0)&&(this.stack.push(this.index),this.yieldBuf(r))}firstChild(){return this.enterChild(1,0,4)}lastChild(){return this.enterChild(-1,0,4)}childAfter(t){return this.enterChild(1,t,2)}childBefore(t){return this.enterChild(-1,t,-2)}enter(t,e,i=!0,n=!0){return this.buffer?!!n&&this.enterChild(1,t,e):this.yield(this._tree.enter(t,e,i&&!(1&this.mode),n))}parent(){if(!this.buffer)return this.yieldNode(1&this.mode?this._tree._parent:this._tree.parent);if(this.stack.length)return this.yieldBuf(this.stack.pop());let t=1&this.mode?this.buffer.parent:this.buffer.parent.nextSignificantParent();return this.buffer=null,this.yieldNode(t)}sibling(t){if(!this.buffer)return!!this._tree._parent&&this.yield(this._tree.index<0?null:this._tree._parent.nextChild(this._tree.index+t,t,0,4,this.mode));let{buffer:e}=this.buffer,i=this.stack.length-1;if(t<0){let t=i<0?0:this.stack[i]+4;if(this.index!=t)return this.yieldBuf(e.findChild(t,this.index,-1,0,4))}else{let t=e.buffer[this.index+3];if(t<(i<0?e.buffer.length:e.buffer[this.stack[i]+3]))return this.yieldBuf(t)}return i<0&&this.yield(this.buffer.parent.nextChild(this.buffer.index+t,t,0,4,this.mode))}nextSibling(){return this.sibling(1)}prevSibling(){return this.sibling(-1)}atLastNode(t){let e,i,{buffer:n}=this;if(n){if(t>0){if(this.index<n.buffer.buffer.length)return!1}else for(let t=0;t<this.index;t++)if(n.buffer.buffer[t+3]<this.index)return!1;({index:e,parent:i}=n)}else({index:e,_parent:i}=this._tree);for(;i;({index:e,_parent:i}=i))if(e>-1)for(let n=e+t,r=t<0?-1:i.node.children.length;n!=r;n+=t){let t=i.node.children[n];if(1&this.mode||t instanceof ao||!t.type.isAnonymous||po(t))return!1}return!0}move(t,e){if(e&&this.enterChild(t,0,4))return!0;for(;;){if(this.sibling(t))return!0;if(this.atLastNode(t)||!this.parent())return!1}}next(t=!0){return this.move(1,t)}prev(t=!0){return this.move(-1,t)}moveTo(t,e=0){for(;(this.from==this.to||(e<1?this.from>=t:this.from>t)||(e>-1?this.to<=t:this.to<t))&&this.parent(););for(;this.enterChild(1,t,e););return this}get node(){if(!this.buffer)return this._tree;let t=this.bufferNode,e=null,i=0;if(t&&t.context==this.buffer)t:for(let n=this.index,r=this.stack.length;r>=0;){for(let s=t;s;s=s._parent)if(s.index==n){if(n==this.index)return s;e=s,i=r+1;break t}n=this.stack[--r]}for(let t=i;t<this.stack.length;t++)e=new fo(this.buffer,e,this.stack[t]);return this.bufferNode=new fo(this.buffer,e,this.index)}get tree(){return this.buffer?null:this._tree.node}}function po(t){return t.children.some((t=>t instanceof ao||!t.type.isAnonymous||po(t)))}const mo=new WeakMap;function go(t,e){if(!t.isAnonymous||e instanceof ao||e.type!=t)return 1;let i=mo.get(e);if(null==i){i=1;for(let n of e.children){if(n.type!=t||!(n instanceof so)){i=1;break}i+=go(t,n)}mo.set(e,i)}return i}function To(t,e,i,n,r,s,o,a,l){let h=0;for(let i=n;i<r;i++)h+=go(t,e[i]);let O=Math.ceil(1.5*h/8),c=[],u=[];return function e(i,n,r,o,a){for(let h=r;h<o;){let r=h,d=n[h],$=go(t,i[h]);for(h++;h<o;h++){let e=go(t,i[h]);if($+e>=O)break;$+=e}if(h==r+1){if($>O){let t=i[r];e(t.children,t.positions,0,t.children.length,n[r]+a);continue}c.push(i[r])}else{let e=n[h-1]+i[h-1].length-d;c.push(To(t,i,n,r,h,d,e,null,l))}u.push(d+a-s)}}(e,i,n,r,0),(a||l)(c,u,o)}class bo{constructor(t,e,i,n,r=!1,s=!1){this.from=t,this.to=e,this.tree=i,this.offset=n,this.open=(r?1:0)|(s?2:0)}get openStart(){return(1&this.open)>0}get openEnd(){return(2&this.open)>0}static addTree(t,e=[],i=!1){let n=[new bo(0,t.length,t,0,!1,i)];for(let i of e)i.to>t.length&&n.push(i);return n}static applyChanges(t,e,i=128){if(!e.length)return t;let n=[],r=1,s=t.length?t[0]:null;for(let o=0,a=0,l=0;;o++){let h=o<e.length?e[o]:null,O=h?h.fromA:1e9;if(O-a>=i)for(;s&&s.from<O;){let e=s;if(a>=e.from||O<=e.to||l){let t=Math.max(e.from,a)-l,i=Math.min(e.to,O)-l;e=t>=i?null:new bo(t,i,e.tree,e.offset+l,o>0,!!h)}if(e&&n.push(e),s.to>O)break;s=r<t.length?t[r++]:null}if(!h)break;a=h.toA,l=h.toA-h.toB}return n}}class Qo{startParse(t,e,i){return"string"==typeof t&&(t=new Zo(t)),i=i?i.length?i.map((t=>new Ls(t.from,t.to))):[new Ls(0,0)]:[new Ls(0,t.length)],this.createParse(t,e||[],i)}parse(t,e,i){let n=this.startParse(t,e,i);for(;;){let t=n.advance();if(t)return t}}}class Zo{constructor(t){this.string=t}get length(){return this.string.length}chunk(t){return this.string.slice(t)}get lineChunks(){return!1}read(t,e){return this.string.slice(t,e)}}function So(t){return(e,i,n,r)=>new wo(e,t,i,n,r)}class vo{constructor(t,e,i,n,r){this.parser=t,this.parse=e,this.overlay=i,this.target=n,this.ranges=r}}class xo{constructor(t,e,i,n,r,s,o){this.parser=t,this.predicate=e,this.mounts=i,this.index=n,this.start=r,this.target=s,this.prev=o,this.depth=0,this.ranges=[]}}const ko=new Ks({perNode:!0});class wo{constructor(t,e,i,n,r){this.nest=e,this.input=i,this.fragments=n,this.ranges=r,this.inner=[],this.innerDone=0,this.baseTree=null,this.stoppedAt=null,this.baseParse=t}advance(){if(this.baseParse){let t=this.baseParse.advance();if(!t)return null;if(this.baseParse=null,this.baseTree=t,this.startInner(),null!=this.stoppedAt)for(let t of this.inner)t.parse.stopAt(this.stoppedAt)}if(this.innerDone==this.inner.length){let t=this.baseTree;return null!=this.stoppedAt&&(t=new so(t.type,t.children,t.positions,t.length,t.propValues.concat([[ko,this.stoppedAt]]))),t}let t=this.inner[this.innerDone],e=t.parse.advance();if(e){this.innerDone++;let i=Object.assign(Object.create(null),t.target.props);i[Ks.mounted.id]=new Hs(e,t.overlay,t.parser),t.target.props=i}return null}get parsedPos(){if(this.baseParse)return 0;let t=this.input.length;for(let e=this.innerDone;e<this.inner.length;e++)this.inner[e].ranges[0].from<t&&(t=Math.min(t,this.inner[e].parse.parsedPos));return t}stopAt(t){if(this.stoppedAt=t,this.baseParse)this.baseParse.stopAt(t);else for(let e=this.innerDone;e<this.inner.length;e++)this.inner[e].parse.stopAt(t)}startInner(){let t=new Wo(this.fragments),e=null,i=null,n=new _o(new co(this.baseTree,this.ranges[0].from,0,null),1);t:for(let r,s;null==this.stoppedAt||n.from<this.stoppedAt;){let o,a=!0;if(t.hasNode(n)){if(e){let t=e.mounts.find((t=>t.frag.from<=n.from&&t.frag.to>=n.to&&t.mount.overlay));if(t)for(let i of t.mount.overlay){let r=i.from+t.pos,s=i.to+t.pos;r>=n.from&&s<=n.to&&!e.ranges.some((t=>t.from<s&&t.to>r))&&e.ranges.push({from:r,to:s})}}a=!1}else if(i&&(s=yo(i.ranges,n.from,n.to)))a=2!=s;else if(!n.type.isAnonymous&&n.from<n.to&&(r=this.nest(n,this.input))){n.tree||Xo(n);let s=t.findMounts(n.from,r.parser);if("function"==typeof r.overlay)e=new xo(r.parser,r.overlay,s,this.inner.length,n.from,n.tree,e);else{let t=Yo(this.ranges,r.overlay||[new Ls(n.from,n.to)]);t.length&&this.inner.push(new vo(r.parser,r.parser.startParse(this.input,Vo(s,t),t),r.overlay?r.overlay.map((t=>new Ls(t.from-n.from,t.to-n.from))):null,n.tree,t)),r.overlay?t.length&&(i={ranges:t,depth:0,prev:i}):a=!1}}else e&&(o=e.predicate(n))&&(!0===o&&(o=new Ls(n.from,n.to)),o.from<o.to&&e.ranges.push(o));if(a&&n.firstChild())e&&e.depth++,i&&i.depth++;else for(;!n.nextSibling();){if(!n.parent())break t;if(e&&!--e.depth){let t=Yo(this.ranges,e.ranges);t.length&&this.inner.splice(e.index,0,new vo(e.parser,e.parser.startParse(this.input,Vo(e.mounts,t),t),e.ranges.map((t=>new Ls(t.from-e.start,t.to-e.start))),e.target,t)),e=e.prev}i&&!--i.depth&&(i=i.prev)}}}}function yo(t,e,i){for(let n of t){if(n.from>=i)break;if(n.to>e)return n.from<=e&&n.to>=i?2:1}return 0}function Po(t,e,i,n,r,s){if(e<i){let o=t.buffer[e+1],a=t.buffer[i-2];n.push(t.slice(e,i,o,a)),r.push(o-s)}}function Xo(t){let{node:e}=t,i=0;do{t.parent(),i++}while(!t.tree);let n=0,r=t.tree,s=0;for(;s=r.positions[n]+t.from,!(s<=e.from&&s+r.children[n].length>=e.to);n++);let o=r.children[n],a=o.buffer;r.children[n]=function t(i,n,r,l,h){let O=i;for(;a[O+2]+s<=e.from;)O=a[O+3];let c=[],u=[];Po(o,i,O,c,u,l);let d=a[O+1],$=a[O+2],f=d+s==e.from&&$+s==e.to&&a[O]==e.type.id;return c.push(f?e.toTree():t(O+4,a[O+3],o.set.types[a[O]],d,$-d)),u.push(d-l),Po(o,a[O+3],n,c,u,l),new so(r,c,u,h)}(0,a.length,eo.none,0,o.length);for(let n=0;n<=i;n++)t.childAfter(e.from)}class Ro{constructor(t,e){this.offset=e,this.done=!1,this.cursor=t.fullCursor()}moveTo(t){let{cursor:e}=this,i=t-this.offset;for(;!this.done&&e.from<i;)e.to>=t&&e.enter(i,1,!1,!1)||e.next(!1)||(this.done=!0)}hasNode(t){if(this.moveTo(t.from),!this.done&&this.cursor.from+this.offset==t.from&&this.cursor.tree)for(let e=this.cursor.tree;;){if(e==t.tree)return!0;if(!(e.children.length&&0==e.positions[0]&&e.children[0]instanceof so))break;e=e.children[0]}return!1}}class Wo{constructor(t){var e;if(this.fragments=t,this.curTo=0,this.fragI=0,t.length){let i=this.curFrag=t[0];this.curTo=null!==(e=i.tree.prop(ko))&&void 0!==e?e:i.to,this.inner=new Ro(i.tree,-i.offset)}else this.curFrag=this.inner=null}hasNode(t){for(;this.curFrag&&t.from>=this.curTo;)this.nextFrag();return this.curFrag&&this.curFrag.from<=t.from&&this.curTo>=t.to&&this.inner.hasNode(t)}nextFrag(){var t;if(this.fragI++,this.fragI==this.fragments.length)this.curFrag=this.inner=null;else{let e=this.curFrag=this.fragments[this.fragI];this.curTo=null!==(t=e.tree.prop(ko))&&void 0!==t?t:e.to,this.inner=new Ro(e.tree,-e.offset)}}findMounts(t,e){var i;let n=[];if(this.inner){this.inner.cursor.moveTo(t,1);for(let t=this.inner.cursor.node;t;t=t.parent){let r=null===(i=t.tree)||void 0===i?void 0:i.prop(Ks.mounted);if(r&&r.parser==e)for(let e=this.fragI;e<this.fragments.length;e++){let i=this.fragments[e];if(i.from>=t.to)break;i.tree==this.curFrag.tree&&n.push({frag:i,pos:t.from-i.offset,mount:r})}}}return n}}function Yo(t,e){let i=null,n=e;for(let r=1,s=0;r<t.length;r++){let o=t[r-1].to,a=t[r].from;for(;s<n.length;s++){let t=n[s];if(t.from>=a)break;t.to<=o||(i||(n=i=e.slice()),t.from<o?(i[s]=new Ls(t.from,o),t.to>a&&i.splice(s+1,0,new Ls(a,t.to))):t.to>a?i[s--]=new Ls(a,t.to):i.splice(s--,1))}}return n}function Co(t,e,i,n){let r=0,s=0,o=!1,a=!1,l=-1e9,h=[];for(;;){let O=r==t.length?1e9:o?t[r].to:t[r].from,c=s==e.length?1e9:a?e[s].to:e[s].from;if(o!=a){let t=Math.max(l,i),e=Math.min(O,c,n);t<e&&h.push(new Ls(t,e))}if(l=Math.min(O,c),1e9==l)break;O==l&&(o?(o=!1,r++):o=!0),c==l&&(a?(a=!1,s++):a=!0)}return h}function Vo(t,e){let i=[];for(let{pos:n,mount:r,frag:s}of t){let t=n+(r.overlay?r.overlay[0].from:0),o=t+r.tree.length,a=Math.max(s.from,t),l=Math.min(s.to,o);if(r.overlay){let o=Co(e,r.overlay.map((t=>new Ls(t.from+n,t.to+n))),a,l);for(let e=0,n=a;;e++){let a=e==o.length,h=a?l:o[e].from;if(h>n&&i.push(new bo(n,h,r.tree,-t,s.from>=n,s.to<=h)),a)break;n=o[e].to}}else i.push(new bo(a,l,r.tree,-t,s.from>=t,s.to<=o))}return i}var jo;const Uo=new Ks;function Jo(t){return j.define({combine:t?e=>e.concat(t):void 0})}class Go{constructor(t,e,i,n=[]){this.data=t,this.topNode=i,vt.prototype.hasOwnProperty("tree")||Object.defineProperty(vt.prototype,"tree",{get(){return Ao(this)}}),this.parser=e,this.extension=[Ko.of(this),vt.languageData.of(((t,e,i)=>t.facet(Do(t,e,i))))].concat(n)}isActiveAt(t,e,i=-1){return Do(t,e,i)==this.data}findRegions(t){let e=t.facet(Ko);if((null==e?void 0:e.data)==this.data)return[{from:0,to:t.doc.length}];if(!e||!e.allowsNesting)return[];let i=[],n=(t,e)=>{if(t.prop(Uo)==this.data)return void i.push({from:e,to:e+t.length});let r=t.prop(Ks.mounted);if(r){if(r.tree.prop(Uo)==this.data){if(r.overlay)for(let t of r.overlay)i.push({from:t.from+e,to:t.to+e});else i.push({from:e,to:e+t.length});return}if(r.overlay){let t=i.length;if(n(r.tree,r.overlay[0].from+e),i.length>t)return}}for(let i=0;i<t.children.length;i++){let r=t.children[i];r instanceof so&&n(r,t.positions[i]+e)}};return n(Ao(t),0),i}get allowsNesting(){return!0}}function Do(t,e,i){let n=t.facet(Ko);if(!n)return null;let r=n.data;if(n.allowsNesting)for(let n=Ao(t).topNode;n;n=n.enter(e,i,!0,!1))r=n.type.prop(Uo)||r;return r}Go.setState=dt.define();class Mo extends Go{constructor(t,e){super(t,e,e.topNode),this.parser=e}static define(t){let e=Jo(t.languageData);return new Mo(e,t.parser.configure({props:[Uo.add((t=>t.isTop?e:void 0))]}))}configure(t){return new Mo(this.data,this.parser.configure(t))}get allowsNesting(){return this.parser.wrappers.length>0}}function Ao(t){let e=t.field(Go.state,!1);return e?e.tree:so.empty}class Io{constructor(t,e=t.length){this.doc=t,this.length=e,this.cursorPos=0,this.string="",this.cursor=t.iter()}syncTo(t){return this.string=this.cursor.next(t-this.cursorPos).value,this.cursorPos=t+this.string.length,this.cursorPos-this.string.length}chunk(t){return this.syncTo(t),this.string}get lineChunks(){return!0}read(t,e){let i=this.cursorPos-this.string.length;return t<i||e>=this.cursorPos?this.doc.sliceString(t,e):this.string.slice(t-i,e-i)}}let qo=null;class zo{constructor(t,e,i=[],n,r,s,o,a){this.parser=t,this.state=e,this.fragments=i,this.tree=n,this.treeLen=r,this.viewport=s,this.skipped=o,this.scheduleOn=a,this.parse=null,this.tempSkipped=[]}startParse(){return this.parser.startParse(new Io(this.state.doc),this.fragments)}work(t,e){return null!=e&&e>=this.state.doc.length&&(e=void 0),this.tree!=so.empty&&this.isDone(null!=e?e:this.state.doc.length)?(this.takeTree(),!0):this.withContext((()=>{var i;if("number"==typeof t){let e=Date.now()+t;t=()=>Date.now()>e}for(this.parse||(this.parse=this.startParse()),null!=e&&(null==this.parse.stoppedAt||this.parse.stoppedAt>e)&&e<this.state.doc.length&&this.parse.stopAt(e);;){let n=this.parse.advance();if(n){if(this.fragments=this.withoutTempSkipped(bo.addTree(n,this.fragments,null!=this.parse.stoppedAt)),this.treeLen=null!==(i=this.parse.stoppedAt)&&void 0!==i?i:this.state.doc.length,this.tree=n,this.parse=null,!(this.treeLen<(null!=e?e:this.state.doc.length)))return!0;this.parse=this.startParse()}if(t())return!1}}))}takeTree(){let t,e;this.parse&&(t=this.parse.parsedPos)>=this.treeLen&&((null==this.parse.stoppedAt||this.parse.stoppedAt>t)&&this.parse.stopAt(t),this.withContext((()=>{for(;!(e=this.parse.advance()););})),this.treeLen=t,this.tree=e,this.fragments=this.withoutTempSkipped(bo.addTree(this.tree,this.fragments,!0)),this.parse=null)}withContext(t){let e=qo;qo=this;try{return t()}finally{qo=e}}withoutTempSkipped(t){for(let e;e=this.tempSkipped.pop();)t=Eo(t,e.from,e.to);return t}changes(t,e){let{fragments:i,tree:n,treeLen:r,viewport:s,skipped:o}=this;if(this.takeTree(),!t.empty){let e=[];if(t.iterChangedRanges(((t,i,n,r)=>e.push({fromA:t,toA:i,fromB:n,toB:r}))),i=bo.applyChanges(i,e),n=so.empty,r=0,s={from:t.mapPos(s.from,-1),to:t.mapPos(s.to,1)},this.skipped.length){o=[];for(let e of this.skipped){let i=t.mapPos(e.from,1),n=t.mapPos(e.to,-1);i<n&&o.push({from:i,to:n})}}}return new zo(this.parser,e,i,n,r,s,o,this.scheduleOn)}updateViewport(t){if(this.viewport.from==t.from&&this.viewport.to==t.to)return!1;this.viewport=t;let e=this.skipped.length;for(let e=0;e<this.skipped.length;e++){let{from:i,to:n}=this.skipped[e];i<t.to&&n>t.from&&(this.fragments=Eo(this.fragments,i,n),this.skipped.splice(e--,1))}return!(this.skipped.length>=e)&&(this.reset(),!0)}reset(){this.parse&&(this.takeTree(),this.parse=null)}skipUntilInView(t,e){this.skipped.push({from:t,to:e})}static getSkippingParser(t){return new class extends Qo{createParse(e,i,n){let r=n[0].from,s=n[n.length-1].to;return{parsedPos:r,advance(){let e=qo;if(e){for(let t of n)e.tempSkipped.push(t);t&&(e.scheduleOn=e.scheduleOn?Promise.all([e.scheduleOn,t]):t)}return this.parsedPos=s,new so(eo.none,[],[],s-r)},stoppedAt:null,stopAt(){}}}}}isDone(t){t=Math.min(t,this.state.doc.length);let e=this.fragments;return this.treeLen>=t&&e.length&&0==e[0].from&&e[0].to>=t}static get(){return qo}}function Eo(t,e,i){return bo.applyChanges(t,[{fromA:e,toA:i,fromB:e,toB:i}])}class Bo{constructor(t){this.context=t,this.tree=t.tree}apply(t){if(!t.docChanged&&this.tree==this.context.tree)return this;let e=this.context.changes(t.changes,t.state),i=this.context.treeLen==t.startState.doc.length?void 0:Math.max(t.changes.mapPos(this.context.treeLen),e.viewport.to);return e.work(20,i)||e.takeTree(),new Bo(e)}static init(t){let e=Math.min(3e3,t.doc.length),i=new zo(t.facet(Ko).parser,t,[],so.empty,0,{from:0,to:e},[],null);return i.work(20,e)||i.takeTree(),new Bo(i)}}Go.state=A.define({create:Bo.init,update(t,e){for(let t of e.effects)if(t.is(Go.setState))return t.value;return e.startState.facet(Ko)!=e.state.facet(Ko)?Bo.init(e.state):t.apply(e)}});let Fo=t=>{let e=setTimeout((()=>t()),500);return()=>clearTimeout(e)};"undefined"!=typeof requestIdleCallback&&(Fo=t=>{let e=-1,i=setTimeout((()=>{e=requestIdleCallback(t,{timeout:400})}),100);return()=>e<0?clearTimeout(i):cancelIdleCallback(e)});const No="undefined"!=typeof navigator&&(null===(jo=navigator.scheduling)||void 0===jo?void 0:jo.isInputPending)?()=>navigator.scheduling.isInputPending():null,Lo=Ji.fromClass(class{constructor(t){this.view=t,this.working=null,this.workScheduled=0,this.chunkEnd=-1,this.chunkBudget=-1,this.work=this.work.bind(this),this.scheduleWork()}update(t){let e=this.view.state.field(Go.state).context;(e.updateViewport(t.view.viewport)||this.view.viewport.to>e.treeLen)&&this.scheduleWork(),t.docChanged&&(this.view.hasFocus&&(this.chunkBudget+=50),this.scheduleWork()),this.checkAsyncSchedule(e)}scheduleWork(){if(this.working)return;let{state:t}=this.view,e=t.field(Go.state);e.tree==e.context.tree&&e.context.isDone(t.doc.length)||(this.working=Fo(this.work))}work(t){this.working=null;let e=Date.now();if(this.chunkEnd<e&&(this.chunkEnd<0||this.view.hasFocus)&&(this.chunkEnd=e+3e4,this.chunkBudget=3e3),this.chunkBudget<=0)return;let{state:i,viewport:{to:n}}=this.view,r=i.field(Go.state);if(r.tree==r.context.tree&&r.context.isDone(n+1e5))return;let s=Date.now()+Math.min(this.chunkBudget,100,t&&!No?Math.max(25,t.timeRemaining()-5):1e9),o=r.context.treeLen<n&&i.doc.length>n+1e3,a=r.context.work((()=>No&&No()||Date.now()>s),n+(o?0:1e5));this.chunkBudget-=Date.now()-e,(a||this.chunkBudget<=0)&&(r.context.takeTree(),this.view.dispatch({effects:Go.setState.of(new Bo(r.context))})),this.chunkBudget>0&&(!a||o)&&this.scheduleWork(),this.checkAsyncSchedule(r.context)}checkAsyncSchedule(t){t.scheduleOn&&(this.workScheduled++,t.scheduleOn.then((()=>this.scheduleWork())).catch((t=>Wi(this.view.state,t))).then((()=>this.workScheduled--)),t.scheduleOn=null)}destroy(){this.working&&this.working()}isWorking(){return!!(this.working||this.workScheduled>0)}},{eventHandlers:{focus(){this.scheduleWork()}}}),Ko=j.define({combine:t=>t.length?t[0]:null,enables:[Go.state,Lo]});class Ho{constructor(t,e=[]){this.language=t,this.support=e,this.extension=[t,e]}}class ta{constructor(t,e,i,n,r,s){this.name=t,this.alias=e,this.extensions=i,this.filename=n,this.loadFunc=r,this.support=s,this.loading=null}load(){return this.loading||(this.loading=this.loadFunc().then((t=>this.support=t),(t=>{throw this.loading=null,t})))}static of(t){let{load:e,support:i}=t;if(!e){if(!i)throw new RangeError("Must pass either 'load' or 'support' to LanguageDescription.of");e=()=>Promise.resolve(i)}return new ta(t.name,(t.alias||[]).concat(t.name).map((t=>t.toLowerCase())),t.extensions||[],t.filename,e,i)}static matchFilename(t,e){for(let i of t)if(i.filename&&i.filename.test(e))return i;let i=/\.([^.]+)$/.exec(e);if(i)for(let e of t)if(e.extensions.indexOf(i[1])>-1)return e;return null}static matchLanguageName(t,e,i=!0){e=e.toLowerCase();for(let i of t)if(i.alias.some((t=>t==e)))return i;if(i)for(let i of t)for(let t of i.alias){let n=e.indexOf(t);if(n>-1&&(t.length>2||!/\w/.test(e[n-1])&&!/\w/.test(e[n+t.length])))return i}return null}}const ea=j.define(),ia=j.define({combine:t=>{if(!t.length)return"  ";if(!/^(?: +|\t+)$/.test(t[0]))throw new Error("Invalid indent unit: "+JSON.stringify(t[0]));return t[0]}});function na(t){let e=t.facet(ia);return 9==e.charCodeAt(0)?t.tabSize*e.length:e.length}function ra(t,e){let i="",n=t.tabSize;if(9==t.facet(ia).charCodeAt(0))for(;e>=n;)i+="\t",e-=n;for(let t=0;t<e;t++)i+=" ";return i}function sa(t,e){t instanceof vt&&(t=new oa(t));for(let i of t.state.facet(ea)){let n=i(t,e);if(null!=n)return n}let i=Ao(t.state);return i?function(t,e,i){return ha(e.resolveInner(i).enterUnfinishedNodesBefore(i),i,t)}(t,i,e):null}class oa{constructor(t,e={}){this.state=t,this.options=e,this.unit=na(t)}lineAt(t,e=1){let i=this.state.doc.lineAt(t),{simulateBreak:n,simulateDoubleBreak:r}=this.options;return null!=n&&n>=i.from&&n<=i.to?r&&n==t?{text:"",from:t}:(e<0?n<t:n<=t)?{text:i.text.slice(n-i.from),from:n}:{text:i.text.slice(0,n-i.from),from:i.from}:i}textAfterPos(t,e=1){if(this.options.simulateDoubleBreak&&t==this.options.simulateBreak)return"";let{text:i,from:n}=this.lineAt(t,e);return i.slice(t-n,Math.min(i.length,t+100-n))}column(t,e=1){let{text:i,from:n}=this.lineAt(t,e),r=this.countColumn(i,t-n),s=this.options.overrideIndentation?this.options.overrideIndentation(n):-1;return s>-1&&(r+=s-this.countColumn(i,i.search(/\S|$/))),r}countColumn(t,e=t.length){return c(t,this.state.tabSize,e)}lineIndent(t,e=1){let{text:i,from:n}=this.lineAt(t,e),r=this.options.overrideIndentation;if(r){let t=r(n);if(t>-1)return t}return this.countColumn(i,i.search(/\S|$/))}get simulatedBreak(){return this.options.simulateBreak||null}}const aa=new Ks;function la(t){let e=t.type.prop(aa);if(e)return e;let i,n=t.firstChild;if(n&&(i=n.type.prop(Ks.closedBy))){let e=t.lastChild,n=e&&i.indexOf(e.name)>-1;return t=>$a(t,!0,1,void 0,n&&!function(t){return t.pos==t.options.simulateBreak&&t.options.simulateDoubleBreak}(t)?e.from:void 0)}return null==t.parent?Oa:null}function ha(t,e,i){for(;t;t=t.parent){let n=la(t);if(n)return n(new ca(i,e,t))}return null}function Oa(){return 0}class ca extends oa{constructor(t,e,i){super(t.state,t.options),this.base=t,this.pos=e,this.node=i}get textAfter(){return this.textAfterPos(this.pos)}get baseIndent(){let t=this.state.doc.lineAt(this.node.from);for(;;){let e=this.node.resolve(t.from);for(;e.parent&&e.parent.from==e.from;)e=e.parent;if(ua(e,this.node))break;t=this.state.doc.lineAt(e.from)}return this.lineIndent(t.from)}continue(){let t=this.node.parent;return t?ha(t,this.pos,this.base):0}}function ua(t,e){for(let i=e;i;i=i.parent)if(t==i)return!0;return!1}function da({closing:t,align:e=!0,units:i=1}){return n=>$a(n,e,i,t)}function $a(t,e,i,n,r){let s=t.textAfter,o=s.match(/^\s*/)[0].length,a=n&&s.slice(o,o+n.length)==n||r==t.pos+o,l=e?function(t){let e=t.node,i=e.childAfter(e.from),n=e.lastChild;if(!i)return null;let r=t.options.simulateBreak,s=t.state.doc.lineAt(i.from),o=null==r||r<=s.from?s.to:Math.min(s.to,r);for(let t=i.to;;){let r=e.childAfter(t);if(!r||r==n)return null;if(!r.type.isSkipped)return r.from<o?i:null;t=r.to}}(t):null;return l?a?t.column(l.from):t.column(l.to):t.baseIndent+(a?0:t.unit*i)}function fa({except:t,units:e=1}={}){return i=>{let n=t&&t.test(i.textAfter);return i.baseIndent+(n?0:e*i.unit)}}function _a(){return vt.transactionFilter.of((t=>{if(!t.docChanged||!t.isUserEvent("input.type")&&!t.isUserEvent("input.complete"))return t;let e=t.startState.languageDataAt("indentOnInput",t.startState.selection.main.head);if(!e.length)return t;let i=t.newDoc,{head:n}=t.newSelection.main,r=i.lineAt(n);if(n>r.from+200)return t;let s=i.sliceString(r.from,n);if(!e.some((t=>t.test(s))))return t;let{state:o}=t,a=-1,l=[];for(let{head:t}of o.selection.ranges){let e=o.doc.lineAt(t);if(e.from==a)continue;a=e.from;let i=sa(o,e.from);if(null==i)continue;let n=/^\s*/.exec(e.text)[0],r=ra(o,i);n!=r&&l.push({from:e.from,to:e.from+n.length,insert:r})}return l.length?[t,{changes:l,sequential:!0}]:t}))}const pa=j.define(),ma=new Ks;function ga(t){let e=t.firstChild,i=t.lastChild;return e&&e.to<i.from?{from:e.to,to:i.type.isError?t.to:i.from}:null}function Ta(t){let e=t.lastChild;return e&&e.to==t.to&&e.type.isError}function ba(t,e,i){for(let n of t.facet(pa)){let r=n(t,e,i);if(r)return r}return function(t,e,i){let n=Ao(t);if(0==n.length)return null;let r=null;for(let s=n.resolveInner(i);s;s=s.parent){if(s.to<=i||s.from>i)continue;if(r&&s.from<e)break;let o=s.type.prop(ma);if(o&&(s.to<n.length-50||n.length==t.doc.length||!Ta(s))){let n=o(s,t);n&&n.from<=i&&n.from>=e&&n.to>i&&(r=n)}}return r}(t,e,i)}class Qa extends Gt{compare(t){return this==t||this.constructor==t.constructor&&this.eq(t)}eq(t){return!1}destroy(t){}}Qa.prototype.elementClass="",Qa.prototype.toDOM=void 0,Qa.prototype.mapMode=Z.TrackBefore,Qa.prototype.startSide=Qa.prototype.endSide=-1,Qa.prototype.point=!0;const Za=j.define(),Sa={class:"",renderEmptyElements:!1,elementStyle:"",markers:()=>It.empty,lineMarker:()=>null,lineMarkerChange:null,initialSpacer:null,updateSpacer:null,domEventHandlers:{}},va=j.define();function xa(t){return[ya(),va.of(Object.assign(Object.assign({},Sa),t))]}const ka=Jr.baseTheme({".cm-gutters":{display:"flex",height:"100%",boxSizing:"border-box",left:0,zIndex:200},"&light .cm-gutters":{backgroundColor:"#f5f5f5",color:"#999",borderRight:"1px solid #ddd"},"&dark .cm-gutters":{backgroundColor:"#333338",color:"#ccc"},".cm-gutter":{display:"flex !important",flexDirection:"column",flexShrink:0,boxSizing:"border-box",minHeight:"100%",overflow:"hidden"},".cm-gutterElement":{boxSizing:"border-box"},".cm-lineNumbers .cm-gutterElement":{padding:"0 3px 0 5px",minWidth:"20px",textAlign:"right",whiteSpace:"nowrap"},"&light .cm-activeLineGutter":{backgroundColor:"#e2f2ff"},"&dark .cm-activeLineGutter":{backgroundColor:"#222227"}}),wa=j.define({combine:t=>t.some((t=>t))});function ya(t){let e=[Pa,ka];return t&&!1===t.fixed&&e.push(wa.of(!0)),e}const Pa=Ji.fromClass(class{constructor(t){this.view=t,this.prevViewport=t.viewport,this.dom=document.createElement("div"),this.dom.className="cm-gutters",this.dom.setAttribute("aria-hidden","true"),this.dom.style.minHeight=this.view.contentHeight+"px",this.gutters=t.state.facet(va).map((e=>new Ya(t,e)));for(let t of this.gutters)this.dom.appendChild(t.dom);this.fixed=!t.state.facet(wa),this.fixed&&(this.dom.style.position="sticky"),this.syncGutters(!1),t.scrollDOM.insertBefore(this.dom,t.contentDOM)}update(t){if(this.updateGutters(t)){let e=this.prevViewport,i=t.view.viewport,n=Math.min(e.to,i.to)-Math.max(e.from,i.from);this.syncGutters(n<.8*(i.to-i.from))}t.geometryChanged&&(this.dom.style.minHeight=this.view.contentHeight+"px"),this.view.state.facet(wa)!=!this.fixed&&(this.fixed=!this.fixed,this.dom.style.position=this.fixed?"sticky":""),this.prevViewport=t.view.viewport}syncGutters(t){let e=this.dom.nextSibling;t&&this.dom.remove();let i=It.iter(this.view.state.facet(Za),this.view.viewport.from),n=[],r=this.gutters.map((t=>new Wa(t,this.view.viewport,-this.view.documentPadding.top)));for(let t of this.view.viewportLineBlocks){let e;if(Array.isArray(t.type)){for(let i of t.type)if(i.type==Oi.Text){e=i;break}}else e=t.type==Oi.Text?t:void 0;if(e){n.length&&(n=[]),Ra(i,n,t.from);for(let t of r)t.line(this.view,e,n)}}for(let t of r)t.finish();t&&this.view.scrollDOM.insertBefore(this.dom,e)}updateGutters(t){let e=t.startState.facet(va),i=t.state.facet(va),n=t.docChanged||t.heightChanged||t.viewportChanged||!It.eq(t.startState.facet(Za),t.state.facet(Za),t.view.viewport.from,t.view.viewport.to);if(e==i)for(let e of this.gutters)e.update(t)&&(n=!0);else{n=!0;let r=[];for(let n of i){let i=e.indexOf(n);i<0?r.push(new Ya(this.view,n)):(this.gutters[i].update(t),r.push(this.gutters[i]))}for(let t of this.gutters)t.dom.remove(),r.indexOf(t)<0&&t.destroy();for(let t of r)this.dom.appendChild(t.dom);this.gutters=r}return n}destroy(){for(let t of this.gutters)t.destroy();this.dom.remove()}},{provide:Vi.scrollMargins.from((t=>0!=t.gutters.length&&t.fixed?t.view.textDirection==Bi.LTR?{left:t.dom.offsetWidth}:{right:t.dom.offsetWidth}:null))});function Xa(t){return Array.isArray(t)?t:[t]}function Ra(t,e,i){for(;t.value&&t.from<=i;)t.from==i&&e.push(t.value),t.next()}class Wa{constructor(t,e,i){this.gutter=t,this.height=i,this.localMarkers=[],this.i=0,this.cursor=It.iter(t.markers,e.from)}line(t,e,i){this.localMarkers.length&&(this.localMarkers=[]),Ra(this.cursor,this.localMarkers,e.from);let n=i.length?this.localMarkers.concat(i):this.localMarkers,r=this.gutter.config.lineMarker(t,e,n);r&&n.unshift(r);let s=this.gutter;if(0==n.length&&!s.config.renderEmptyElements)return;let o=e.top-this.height;if(this.i==s.elements.length){let i=new Ca(t,e.height,o,n);s.elements.push(i),s.dom.appendChild(i.dom)}else s.elements[this.i].update(t,e.height,o,n);this.height=e.bottom,this.i++}finish(){let t=this.gutter;for(;t.elements.length>this.i;){let e=t.elements.pop();t.dom.removeChild(e.dom),e.destroy()}}}class Ya{constructor(t,e){this.view=t,this.config=e,this.elements=[],this.spacer=null,this.dom=document.createElement("div"),this.dom.className="cm-gutter"+(this.config.class?" "+this.config.class:"");for(let i in e.domEventHandlers)this.dom.addEventListener(i,(n=>{let r=t.lineBlockAtHeight(n.clientY-t.documentTop);e.domEventHandlers[i](t,r,n)&&n.preventDefault()}));this.markers=Xa(e.markers(t)),e.initialSpacer&&(this.spacer=new Ca(t,0,0,[e.initialSpacer(t)]),this.dom.appendChild(this.spacer.dom),this.spacer.dom.style.cssText+="visibility: hidden; pointer-events: none")}update(t){let e=this.markers;if(this.markers=Xa(this.config.markers(t.view)),this.spacer&&this.config.updateSpacer){let e=this.config.updateSpacer(this.spacer.markers[0],t);e!=this.spacer.markers[0]&&this.spacer.update(t.view,0,0,[e])}let i=t.view.viewport;return!It.eq(this.markers,e,i.from,i.to)||!!this.config.lineMarkerChange&&this.config.lineMarkerChange(t)}destroy(){for(let t of this.elements)t.destroy()}}class Ca{constructor(t,e,i,n){this.height=-1,this.above=0,this.markers=[],this.dom=document.createElement("div"),this.update(t,e,i,n)}update(t,e,i,n){this.height!=e&&(this.dom.style.height=(this.height=e)+"px"),this.above!=i&&(this.dom.style.marginTop=(this.above=i)?i+"px":""),function(t,e){if(t.length!=e.length)return!1;for(let i=0;i<t.length;i++)if(!t[i].compare(e[i]))return!1;return!0}(this.markers,n)||this.setMarkers(t,n)}setMarkers(t,e){let i="cm-gutterElement",n=this.dom.firstChild;for(let r=0,s=0;;){let o=s,a=r<e.length?e[r++]:null,l=!1;if(a){let t=a.elementClass;t&&(i+=" "+t);for(let t=s;t<this.markers.length;t++)if(this.markers[t].compare(a)){o=t,l=!0;break}}else o=this.markers.length;for(;s<o;){let t=this.markers[s++];if(t.toDOM){t.destroy(n);let e=n.nextSibling;n.remove(),n=e}}if(!a)break;a.toDOM&&(l?n=n.nextSibling:this.dom.insertBefore(a.toDOM(t),n)),l&&s++}this.dom.className=i,this.markers=e}destroy(){this.setMarkers(null,[])}}const Va=j.define(),ja=j.define({combine:t=>xt(t,{formatNumber:String,domEventHandlers:{}},{domEventHandlers(t,e){let i=Object.assign({},t);for(let t in e){let n=i[t],r=e[t];i[t]=n?(t,e,i)=>n(t,e,i)||r(t,e,i):r}return i}})});class Ua extends Qa{constructor(t){super(),this.number=t}eq(t){return this.number==t.number}toDOM(){return document.createTextNode(this.number)}}function Ja(t,e){return t.state.facet(ja).formatNumber(e,t.state)}const Ga=va.compute([ja],(t=>({class:"cm-lineNumbers",renderEmptyElements:!1,markers:t=>t.state.facet(Va),lineMarker:(t,e,i)=>i.some((t=>t.toDOM))?null:new Ua(Ja(t,t.state.doc.lineAt(e.from).number)),lineMarkerChange:t=>t.startState.facet(ja)!=t.state.facet(ja),initialSpacer:t=>new Ua(Ja(t,Da(t.state.doc.lines))),updateSpacer(t,e){let i=Ja(e.view,Da(e.view.state.doc.lines));return i==t.number?t:new Ua(i)},domEventHandlers:t.facet(ja).domEventHandlers})));function Da(t){let e=9;for(;e<t;)e=10*e+9;return e}const Ma=new class extends Qa{constructor(){super(...arguments),this.elementClass="cm-activeLineGutter"}},Aa=Za.compute(["selection"],(t=>{let e=[],i=-1;for(let n of t.selection.ranges)if(n.empty){let r=t.doc.lineAt(n.head).from;r>i&&(i=r,e.push(Ma.range(r)))}return It.of(e)}));function Ia(t,e){let i=e.mapPos(t.from,1),n=e.mapPos(t.to,-1);return i>=n?void 0:{from:i,to:n}}const qa=dt.define({map:Ia}),za=dt.define({map:Ia});function Ea(t){let e=[];for(let{head:i}of t.state.selection.ranges)e.some((t=>t.from<=i&&t.to>=i))||e.push(t.lineBlockAt(i));return e}const Ba=A.define({create:()=>ci.none,update(t,e){t=t.map(e.changes);for(let i of e.effects)i.is(qa)&&!Na(t,i.value.from,i.value.to)?t=t.update({add:[nl.range(i.value.from,i.value.to)]}):i.is(za)&&(t=t.update({filter:(t,e)=>i.value.from!=t||i.value.to!=e,filterFrom:i.value.from,filterTo:i.value.to}));if(e.selection){let i=!1,{head:n}=e.selection.main;t.between(n,n,((t,e)=>{t<n&&e>n&&(i=!0)})),i&&(t=t.update({filterFrom:n,filterTo:n,filter:(t,e)=>e<=n||t>=n}))}return t},provide:t=>Jr.decorations.from(t)});function Fa(t,e,i){var n;let r=null;return null===(n=t.field(Ba,!1))||void 0===n||n.between(e,i,((t,e)=>{(!r||r.from>t)&&(r={from:t,to:e})})),r}function Na(t,e,i){let n=!1;return t.between(e,e,((t,r)=>{t==e&&r==i&&(n=!0)})),n}function La(t,e){return t.field(Ba,!1)?e:e.concat(dt.appendConfig.of(il()))}function Ka(t,e,i=!0){let n=t.state.doc.lineAt(e.from).number,r=t.state.doc.lineAt(e.to).number;return Jr.announce.of(`${t.state.phrase(i?"Folded lines":"Unfolded lines")} ${n} ${t.state.phrase("to")} ${r}.`)}const Ha=[{key:"Ctrl-Shift-[",mac:"Cmd-Alt-[",run:t=>{for(let e of Ea(t)){let i=ba(t.state,e.from,e.to);if(i)return t.dispatch({effects:La(t.state,[qa.of(i),Ka(t,i)])}),!0}return!1}},{key:"Ctrl-Shift-]",mac:"Cmd-Alt-]",run:t=>{if(!t.state.field(Ba,!1))return!1;let e=[];for(let i of Ea(t)){let n=Fa(t.state,i.from,i.to);n&&e.push(za.of(n),Ka(t,n,!1))}return e.length&&t.dispatch({effects:e}),e.length>0}},{key:"Ctrl-Alt-[",run:t=>{let{state:e}=t,i=[];for(let n=0;n<e.doc.length;){let r=t.lineBlockAt(n),s=ba(e,r.from,r.to);s&&i.push(qa.of(s)),n=(s?t.lineBlockAt(s.to):r).to+1}return i.length&&t.dispatch({effects:La(t.state,i)}),!!i.length}},{key:"Ctrl-Alt-]",run:t=>{let e=t.state.field(Ba,!1);if(!e||!e.size)return!1;let i=[];return e.between(0,t.state.doc.length,((t,e)=>{i.push(za.of({from:t,to:e}))})),t.dispatch({effects:i}),!0}}],tl={placeholderDOM:null,placeholderText:"\u2026"},el=j.define({combine:t=>xt(t,tl)});function il(t){let e=[Ba,ol];return t&&e.push(el.of(t)),e}const nl=ci.replace({widget:new class extends hi{toDOM(t){let{state:e}=t,i=e.facet(el),n=e=>{let i=t.lineBlockAt(t.posAtDOM(e.target)),n=Fa(t.state,i.from,i.to);n&&t.dispatch({effects:za.of(n)}),e.preventDefault()};if(i.placeholderDOM)return i.placeholderDOM(t,n);let r=document.createElement("span");return r.textContent=i.placeholderText,r.setAttribute("aria-label",e.phrase("folded code")),r.title=e.phrase("unfold"),r.className="cm-foldPlaceholder",r.onclick=n,r}}}),rl={openText:"\u2304",closedText:"\u203a",markerDOM:null,domEventHandlers:{}};class sl extends Qa{constructor(t,e){super(),this.config=t,this.open=e}eq(t){return this.config==t.config&&this.open==t.open}toDOM(t){if(this.config.markerDOM)return this.config.markerDOM(this.open);let e=document.createElement("span");return e.textContent=this.open?this.config.openText:this.config.closedText,e.title=t.state.phrase(this.open?"Fold line":"Unfold line"),e}}const ol=Jr.baseTheme({".cm-foldPlaceholder":{backgroundColor:"#eee",border:"1px solid #ddd",color:"#888",borderRadius:".2em",margin:"0 1px",padding:"0 1px",cursor:"pointer"},".cm-foldGutter span":{padding:"0 1px",cursor:"pointer"}}),al=Jr.baseTheme({"&.cm-focused .cm-matchingBracket":{backgroundColor:"#328c8252"},"&.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),ll="()[]{}",hl=j.define({combine:t=>xt(t,{afterCursor:!0,brackets:ll,maxScanDistance:1e4})}),Ol=ci.mark({class:"cm-matchingBracket"}),cl=ci.mark({class:"cm-nonmatchingBracket"}),ul=A.define({create:()=>ci.none,update(t,e){if(!e.docChanged&&!e.selection)return t;let i=[],n=e.state.facet(hl);for(let t of e.state.selection.ranges){if(!t.empty)continue;let r=_l(e.state,t.head,-1,n)||t.head>0&&_l(e.state,t.head-1,1,n)||n.afterCursor&&(_l(e.state,t.head,1,n)||t.head<e.state.doc.length&&_l(e.state,t.head+1,-1,n));if(!r)continue;let s=r.matched?Ol:cl;i.push(s.range(r.start.from,r.start.to)),r.end&&i.push(s.range(r.end.from,r.end.to))}return ci.set(i,!0)},provide:t=>Jr.decorations.from(t)}),dl=[ul,al];function $l(t={}){return[hl.of(t),dl]}function fl(t,e,i){let n=t.prop(e<0?Ks.openedBy:Ks.closedBy);if(n)return n;if(1==t.name.length){let n=i.indexOf(t.name);if(n>-1&&n%2==(e<0?1:0))return[i[n+e]]}return null}function _l(t,e,i,n={}){let r=n.maxScanDistance||1e4,s=n.brackets||ll,o=Ao(t),a=o.resolveInner(e,i);for(let n=a;n;n=n.parent){let r=fl(n.type,i,s);if(r&&n.from<n.to)return pl(t,e,i,n,r,s)}return function(t,e,i,n,r,s,o){let a=i<0?t.sliceDoc(e-1,e):t.sliceDoc(e,e+1),l=o.indexOf(a);if(l<0||l%2==0!=i>0)return null;let h={from:i<0?e-1:e,to:i>0?e+1:e},O=t.doc.iterRange(e,i>0?t.doc.length:0),c=0;for(let t=0;!O.next().done&&t<=s;){let s=O.value;i<0&&(t+=s.length);let a=e+t*i;for(let t=i>0?0:s.length-1,e=i>0?s.length:-1;t!=e;t+=i){let e=o.indexOf(s[t]);if(!(e<0||n.resolve(a+t,1).type!=r))if(e%2==0==i>0)c++;else{if(1==c)return{start:h,end:{from:a+t,to:a+t+1},matched:e>>1==l>>1};c--}}i>0&&(t+=s.length)}return O.done?{start:h,matched:!1}:null}(t,e,i,o,a.type,r,s)}function pl(t,e,i,n,r,s){let o=n.parent,a={from:n.from,to:n.to},l=0,h=null==o?void 0:o.cursor;if(h&&(i<0?h.childBefore(n.from):h.childAfter(n.to)))do{if(i<0?h.to<=n.from:h.from>=n.to){if(0==l&&r.indexOf(h.type.name)>-1&&h.from<h.to)return{start:a,end:{from:h.from,to:h.to},matched:!0};if(fl(h.type,i,s))l++;else if(fl(h.type,-i,s)&&(l--,0==l))return{start:a,end:h.from==h.to?void 0:{from:h.from,to:h.to},matched:!1}}}while(i<0?h.prevSibling():h.nextSibling());return{start:a,matched:!1}}function ml(t,e){return W.create(t.ranges.map(e),t.mainIndex)}function gl(t,e){return t.update({selection:e,scrollIntoView:!0,userEvent:"select"})}function Tl({state:t,dispatch:e},i){let n=ml(t.selection,i);return!n.eq(t.selection)&&(e(gl(t,n)),!0)}function bl(t,e){return W.cursor(e?t.to:t.from)}function Ql(t,e){return Tl(t,(i=>i.empty?t.moveByChar(i,e):bl(i,e)))}const Zl=t=>Ql(t,t.textDirection!=Bi.LTR),Sl=t=>Ql(t,t.textDirection==Bi.LTR);function vl(t,e){return Tl(t,(i=>i.empty?t.moveByGroup(i,e):bl(i,e)))}function xl(t,e,i){if(e.type.prop(i))return!0;let n=e.to-e.from;return n&&(n>2||/[^\s,.;:]/.test(t.sliceDoc(e.from,e.to)))||e.firstChild}function kl(t,e,i){let n,r,s=Ao(t).resolveInner(e.head),o=i?Ks.closedBy:Ks.openedBy;for(let n=e.head;;){let e=i?s.childAfter(n):s.childBefore(n);if(!e)break;xl(t,e,o)?s=e:n=i?e.to:e.from}return r=s.type.prop(o)&&(n=i?_l(t,s.from,1):_l(t,s.to,-1))&&n.matched?i?n.end.to:n.end.from:i?s.to:s.from,W.cursor(r,i?-1:1)}function wl(t,e){return Tl(t,(i=>{if(!i.empty)return bl(i,e);let n=t.moveVertically(i,e);return n.head!=i.head?n:t.moveToLineBoundary(i,e)}))}const yl=t=>wl(t,!1),Pl=t=>wl(t,!0);function Xl(t,e){let{state:i}=t,n=ml(i.selection,(i=>i.empty?t.moveVertically(i,e,t.dom.clientHeight):bl(i,e)));if(n.eq(i.selection))return!1;let r=t.coordsAtPos(i.selection.main.head),s=t.scrollDOM.getBoundingClientRect();return t.dispatch(gl(i,n),{effects:r&&r.top>s.top&&r.bottom<s.bottom?Jr.scrollIntoView(n.main.head,{y:"start",yMargin:r.top-s.top}):void 0}),!0}const Rl=t=>Xl(t,!1),Wl=t=>Xl(t,!0);function Yl(t,e,i){let n=t.lineBlockAt(e.head),r=t.moveToLineBoundary(e,i);if(r.head==e.head&&r.head!=(i?n.to:n.from)&&(r=t.moveToLineBoundary(e,i,!1)),!i&&r.head==n.from&&n.length){let i=/^\s*/.exec(t.state.sliceDoc(n.from,Math.min(n.from+100,n.to)))[0].length;i&&e.head!=n.from+i&&(r=W.cursor(n.from+i))}return r}const Cl=t=>Tl(t,(e=>Yl(t,e,!0))),Vl=t=>Tl(t,(e=>Yl(t,e,!1)));function jl(t,e){let i=ml(t.state.selection,(t=>{let i=e(t);return W.range(t.anchor,i.head,i.goalColumn)}));return!i.eq(t.state.selection)&&(t.dispatch(gl(t.state,i)),!0)}function Ul(t,e){return jl(t,(i=>t.moveByChar(i,e)))}const Jl=t=>Ul(t,t.textDirection!=Bi.LTR),Gl=t=>Ul(t,t.textDirection==Bi.LTR);function Dl(t,e){return jl(t,(i=>t.moveByGroup(i,e)))}function Ml(t,e){return jl(t,(i=>t.moveVertically(i,e)))}const Al=t=>Ml(t,!1),Il=t=>Ml(t,!0);function ql(t,e){return jl(t,(i=>t.moveVertically(i,e,t.dom.clientHeight)))}const zl=t=>ql(t,!1),El=t=>ql(t,!0),Bl=t=>jl(t,(e=>Yl(t,e,!0))),Fl=t=>jl(t,(e=>Yl(t,e,!1))),Nl=({state:t,dispatch:e})=>(e(gl(t,{anchor:0})),!0),Ll=({state:t,dispatch:e})=>(e(gl(t,{anchor:t.doc.length})),!0),Kl=({state:t,dispatch:e})=>(e(gl(t,{anchor:t.selection.main.anchor,head:0})),!0),Hl=({state:t,dispatch:e})=>(e(gl(t,{anchor:t.selection.main.anchor,head:t.doc.length})),!0);function th({state:t,dispatch:e},i){if(t.readOnly)return!1;let n="delete.selection",r=t.changeByRange((t=>{let{from:e,to:r}=t;if(e==r){let t=i(e);t<e?n="delete.backward":t>e&&(n="delete.forward"),e=Math.min(e,t),r=Math.max(r,t)}return e==r?{range:t}:{changes:{from:e,to:r},range:W.cursor(e)}}));return!r.changes.empty&&(e(t.update(r,{scrollIntoView:!0,userEvent:n})),!0)}function eh(t,e,i){if(t instanceof Jr)for(let n of t.pluginField(Vi.atomicRanges))n.between(e,e,((t,n)=>{t<e&&n>e&&(e=i?n:t)}));return e}const ih=(t,e)=>th(t,(i=>{let r,s,{state:o}=t,a=o.doc.lineAt(i);if(!e&&i>a.from&&i<a.from+200&&!/[^ \t]/.test(r=a.text.slice(0,i-a.from))){if("\t"==r[r.length-1])return i-1;let t=c(r,o.tabSize)%na(o)||na(o);for(let e=0;e<t&&" "==r[r.length-1-e];e++)i--;s=i}else s=n(a.text,i-a.from,e,e)+a.from,s==i&&a.number!=(e?o.doc.lines:1)&&(s+=e?1:-1);return eh(t,s,e)})),nh=t=>ih(t,!1),rh=t=>ih(t,!0),sh=(t,e)=>th(t,(i=>{let r=i,{state:s}=t,o=s.doc.lineAt(r),a=s.charCategorizer(r);for(let t=null;;){if(r==(e?o.to:o.from)){r==i&&o.number!=(e?s.doc.lines:1)&&(r+=e?1:-1);break}let l=n(o.text,r-o.from,e)+o.from,h=o.text.slice(Math.min(r,l)-o.from,Math.max(r,l)-o.from),O=a(h);if(null!=t&&O!=t)break;" "==h&&r==i||(t=O),r=l}return eh(t,r,e)})),oh=t=>sh(t,!1),ah=t=>th(t,(e=>{let i=t.lineBlockAt(e).to;return eh(t,e<i?i:Math.min(t.state.doc.length,e+1),!0)}));function lh(t){let e=[],i=-1;for(let n of t.selection.ranges){let r=t.doc.lineAt(n.from),s=t.doc.lineAt(n.to);if(n.empty||n.to!=s.from||(s=t.doc.lineAt(n.to-1)),i>=r.number){let t=e[e.length-1];t.to=s.to,t.ranges.push(n)}else e.push({from:r.from,to:s.to,ranges:[n]});i=s.number+1}return e}function hh(t,e,i){if(t.readOnly)return!1;let n=[],r=[];for(let e of lh(t)){if(i?e.to==t.doc.length:0==e.from)continue;let s=t.doc.lineAt(i?e.to+1:e.from-1),o=s.length+1;if(i){n.push({from:e.to,to:s.to},{from:e.from,insert:s.text+t.lineBreak});for(let i of e.ranges)r.push(W.range(Math.min(t.doc.length,i.anchor+o),Math.min(t.doc.length,i.head+o)))}else{n.push({from:s.from,to:e.from},{from:e.to,insert:t.lineBreak+s.text});for(let t of e.ranges)r.push(W.range(t.anchor-o,t.head-o))}}return!!n.length&&(e(t.update({changes:n,scrollIntoView:!0,selection:W.create(r,t.selection.mainIndex),userEvent:"move.line"})),!0)}function Oh(t,e,i){if(t.readOnly)return!1;let n=[];for(let e of lh(t))i?n.push({from:e.from,insert:t.doc.slice(e.from,e.to)+t.lineBreak}):n.push({from:e.to,insert:t.lineBreak+t.doc.slice(e.from,e.to)});return e(t.update({changes:n,scrollIntoView:!0,userEvent:"input.copyline"})),!0}const ch=uh(!1);function uh(t){return({state:e,dispatch:i})=>{if(e.readOnly)return!1;let n=e.changeByRange((i=>{let{from:n,to:r}=i,s=e.doc.lineAt(n),o=!t&&n==r&&function(t,e){if(/\(\)|\[\]|\{\}/.test(t.sliceDoc(e-1,e+1)))return{from:e,to:e};let i,n=Ao(t).resolveInner(e),r=n.childBefore(e),s=n.childAfter(e);return r&&s&&r.to<=e&&s.from>=e&&(i=r.type.prop(Ks.closedBy))&&i.indexOf(s.name)>-1&&t.doc.lineAt(r.to).from==t.doc.lineAt(s.from).from?{from:r.to,to:s.from}:null}(e,n);t&&(n=r=(r<=s.to?s:e.doc.lineAt(r)).to);let a=new oa(e,{simulateBreak:n,simulateDoubleBreak:!!o}),l=sa(a,n);for(null==l&&(l=/^\s*/.exec(e.doc.lineAt(n).text)[0].length);r<s.to&&/\s/.test(s.text[r-s.from]);)r++;o?({from:n,to:r}=o):n>s.from&&n<s.from+100&&!/\S/.test(s.text.slice(0,n))&&(n=s.from);let h=["",ra(e,l)];return o&&h.push(ra(e,a.lineIndent(s.from,-1))),{changes:{from:n,to:r,insert:d.of(h)},range:W.cursor(n+1+h[1].length)}}));return i(e.update(n,{scrollIntoView:!0,userEvent:"input"})),!0}}function dh(t,e){let i=-1;return t.changeByRange((n=>{let r=[];for(let s=n.from;s<=n.to;){let o=t.doc.lineAt(s);o.number>i&&(n.empty||n.to>o.from)&&(e(o,r,n),i=o.number),s=o.to+1}let s=t.changes(r);return{changes:r,range:W.range(s.mapPos(n.anchor,1),s.mapPos(n.head,1))}}))}const $h=({state:t,dispatch:e})=>!t.readOnly&&(e(t.update(dh(t,((e,i)=>{i.push({from:e.from,insert:t.facet(ia)})})),{userEvent:"input.indent"})),!0),fh=({state:t,dispatch:e})=>!t.readOnly&&(e(t.update(dh(t,((e,i)=>{let n=/^\s*/.exec(e.text)[0];if(!n)return;let r=c(n,t.tabSize),s=0,o=ra(t,Math.max(0,r-na(t)));for(;s<n.length&&s<o.length&&n.charCodeAt(s)==o.charCodeAt(s);)s++;i.push({from:e.from+s,to:e.from+n.length,insert:o.slice(s)})})),{userEvent:"delete.dedent"})),!0),_h=[{key:"Alt-ArrowLeft",mac:"Ctrl-ArrowLeft",run:t=>Tl(t,(e=>kl(t.state,e,t.textDirection!=Bi.LTR))),shift:t=>jl(t,(e=>kl(t.state,e,t.textDirection!=Bi.LTR)))},{key:"Alt-ArrowRight",mac:"Ctrl-ArrowRight",run:t=>Tl(t,(e=>kl(t.state,e,t.textDirection==Bi.LTR))),shift:t=>jl(t,(e=>kl(t.state,e,t.textDirection==Bi.LTR)))},{key:"Alt-ArrowUp",run:({state:t,dispatch:e})=>hh(t,e,!1)},{key:"Shift-Alt-ArrowUp",run:({state:t,dispatch:e})=>Oh(t,e,!1)},{key:"Alt-ArrowDown",run:({state:t,dispatch:e})=>hh(t,e,!0)},{key:"Shift-Alt-ArrowDown",run:({state:t,dispatch:e})=>Oh(t,e,!0)},{key:"Escape",run:({state:t,dispatch:e})=>{let i=t.selection,n=null;return i.ranges.length>1?n=W.create([i.main]):i.main.empty||(n=W.create([W.cursor(i.main.head)])),!!n&&(e(gl(t,n)),!0)}},{key:"Mod-Enter",run:uh(!0)},{key:"Alt-l",mac:"Ctrl-l",run:({state:t,dispatch:e})=>{let i=lh(t).map((({from:e,to:i})=>W.range(e,Math.min(i+1,t.doc.length))));return e(t.update({selection:W.create(i),userEvent:"select"})),!0}},{key:"Mod-i",run:({state:t,dispatch:e})=>{let i=ml(t.selection,(e=>{var i;let n=Ao(t).resolveInner(e.head,1);for(;!(n.from<e.from&&n.to>=e.to||n.to>e.to&&n.from<=e.from)&&(null===(i=n.parent)||void 0===i?void 0:i.parent);)n=n.parent;return W.range(n.to,n.from)}));return e(gl(t,i)),!0},preventDefault:!0},{key:"Mod-[",run:fh},{key:"Mod-]",run:$h},{key:"Mod-Alt-\\",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=Object.create(null),n=new oa(t,{overrideIndentation:t=>{let e=i[t];return null==e?-1:e}}),r=dh(t,((e,r,s)=>{let o=sa(n,e.from);if(null==o)return;/\S/.test(e.text)||(o=0);let a=/^\s*/.exec(e.text)[0],l=ra(t,o);(a!=l||s.from<e.from+a.length)&&(i[e.from]=o,r.push({from:e.from,to:e.from+a.length,insert:l}))}));return r.changes.empty||e(t.update(r,{userEvent:"indent"})),!0}},{key:"Shift-Mod-k",run:t=>{if(t.state.readOnly)return!1;let{state:e}=t,i=e.changes(lh(e).map((({from:t,to:i})=>(t>0?t--:i<e.doc.length&&i++,{from:t,to:i})))),n=ml(e.selection,(e=>t.moveVertically(e,!0))).map(i);return t.dispatch({changes:i,selection:n,scrollIntoView:!0,userEvent:"delete.line"}),!0}},{key:"Shift-Mod-\\",run:({state:t,dispatch:e})=>function(t,e,i){let n=!1,r=ml(t.selection,(e=>{let r=_l(t,e.head,-1)||_l(t,e.head,1)||e.head>0&&_l(t,e.head-1,1)||e.head<t.doc.length&&_l(t,e.head+1,-1);if(!r||!r.end)return e;n=!0;let s=r.start.from==e.head?r.end.to:r.end.from;return i?W.range(e.anchor,s):W.cursor(s)}));return!!n&&(e(gl(t,r)),!0)}(t,e,!1)}].concat([{key:"ArrowLeft",run:Zl,shift:Jl,preventDefault:!0},{key:"Mod-ArrowLeft",mac:"Alt-ArrowLeft",run:t=>vl(t,t.textDirection!=Bi.LTR),shift:t=>Dl(t,t.textDirection!=Bi.LTR)},{mac:"Cmd-ArrowLeft",run:Vl,shift:Fl},{key:"ArrowRight",run:Sl,shift:Gl,preventDefault:!0},{key:"Mod-ArrowRight",mac:"Alt-ArrowRight",run:t=>vl(t,t.textDirection==Bi.LTR),shift:t=>Dl(t,t.textDirection==Bi.LTR)},{mac:"Cmd-ArrowRight",run:Cl,shift:Bl},{key:"ArrowUp",run:yl,shift:Al,preventDefault:!0},{mac:"Cmd-ArrowUp",run:Nl,shift:Kl},{mac:"Ctrl-ArrowUp",run:Rl,shift:zl},{key:"ArrowDown",run:Pl,shift:Il,preventDefault:!0},{mac:"Cmd-ArrowDown",run:Ll,shift:Hl},{mac:"Ctrl-ArrowDown",run:Wl,shift:El},{key:"PageUp",run:Rl,shift:zl},{key:"PageDown",run:Wl,shift:El},{key:"Home",run:Vl,shift:Fl},{key:"Mod-Home",run:Nl,shift:Kl},{key:"End",run:Cl,shift:Bl},{key:"Mod-End",run:Ll,shift:Hl},{key:"Enter",run:ch},{key:"Mod-a",run:({state:t,dispatch:e})=>(e(t.update({selection:{anchor:0,head:t.doc.length},userEvent:"select"})),!0)},{key:"Backspace",run:nh,shift:nh},{key:"Delete",run:rh},{key:"Mod-Backspace",mac:"Alt-Backspace",run:oh},{key:"Mod-Delete",mac:"Alt-Delete",run:t=>sh(t,!0)},{mac:"Mod-Backspace",run:t=>th(t,(e=>{let i=t.lineBlockAt(e).from;return eh(t,e>i?i:Math.max(0,e-1),!1)}))},{mac:"Mod-Delete",run:ah}].concat([{key:"Ctrl-b",run:Zl,shift:Jl,preventDefault:!0},{key:"Ctrl-f",run:Sl,shift:Gl},{key:"Ctrl-p",run:yl,shift:Al},{key:"Ctrl-n",run:Pl,shift:Il},{key:"Ctrl-a",run:t=>Tl(t,(e=>W.cursor(t.lineBlockAt(e.head).from,1))),shift:t=>jl(t,(e=>W.cursor(t.lineBlockAt(e.head).from)))},{key:"Ctrl-e",run:t=>Tl(t,(e=>W.cursor(t.lineBlockAt(e.head).to,-1))),shift:t=>jl(t,(e=>W.cursor(t.lineBlockAt(e.head).to)))},{key:"Ctrl-d",run:rh},{key:"Ctrl-h",run:nh},{key:"Ctrl-k",run:ah},{key:"Ctrl-Alt-h",run:oh},{key:"Ctrl-o",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=t.changeByRange((t=>({changes:{from:t.from,to:t.to,insert:d.of(["",""])},range:W.cursor(t.from)})));return e(t.update(i,{scrollIntoView:!0,userEvent:"input"})),!0}},{key:"Ctrl-t",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=t.changeByRange((e=>{if(!e.empty||0==e.from||e.from==t.doc.length)return{range:e};let i=e.from,r=t.doc.lineAt(i),s=i==r.from?i-1:n(r.text,i-r.from,!1)+r.from,o=i==r.to?i+1:n(r.text,i-r.from,!0)+r.from;return{changes:{from:s,to:o,insert:t.doc.slice(i,o).append(t.doc.slice(s,i))},range:W.cursor(o)}}));return!i.changes.empty&&(e(t.update(i,{scrollIntoView:!0,userEvent:"move.character"})),!0)}},{key:"Ctrl-v",run:Wl}].map((t=>({mac:t.key,run:t.run,shift:t.shift}))))),ph={key:"Tab",run:$h,shift:fh},mh={brackets:["(","[","{","'",'"'],before:")]}:;>"},gh=dt.define({map(t,e){let i=e.mapPos(t,-1,Z.TrackAfter);return null==i?void 0:i}}),Th=dt.define({map:(t,e)=>e.mapPos(t)}),bh=new class extends Gt{};bh.startSide=1,bh.endSide=-1;const Qh=A.define({create:()=>It.empty,update(t,e){if(e.selection){let i=e.state.doc.lineAt(e.selection.main.head).from,n=e.startState.doc.lineAt(e.startState.selection.main.head).from;i!=e.changes.mapPos(n,-1)&&(t=It.empty)}t=t.map(e.changes);for(let i of e.effects)i.is(gh)?t=t.update({add:[bh.range(i.value,i.value+1)]}):i.is(Th)&&(t=t.update({filter:t=>t!=i.value}));return t}});function Zh(){return[wh,Qh]}const Sh="()[]{}<>";function vh(t){for(let e=0;e<Sh.length;e+=2)if(Sh.charCodeAt(e)==t)return Sh.charAt(e+1);return h(t<128?t:t+1)}function xh(t,e){return t.languageDataAt("closeBrackets",e)[0]||mh}const kh="object"==typeof navigator&&/Android\b/.test(navigator.userAgent),wh=Jr.inputHandler.of(((t,e,i,n)=>{if((kh?t.composing:t.compositionStarted)||t.state.readOnly)return!1;let r=t.state.selection.main;if(n.length>2||2==n.length&&1==O(l(n,0))||e!=r.from||i!=r.to)return!1;let s=function(t,e){let i=xh(t,t.selection.main.head),n=i.brackets||mh.brackets;for(let r of n){let s=vh(l(r,0));if(e==r)return s==r?Yh(t,r,n.indexOf(r+r+r)>-1):Rh(t,r,s,i.before||mh.before);if(e==s&&Ph(t,t.selection.main.from))return Wh(t,r,s)}return null}(t.state,n);return!!s&&(t.dispatch(s),!0)})),yh=[{key:"Backspace",run:({state:t,dispatch:e})=>{if(t.readOnly)return!1;let i=xh(t,t.selection.main.head).brackets||mh.brackets,n=null,r=t.changeByRange((e=>{if(e.empty){let n=function(t,e){let i=t.sliceString(e-2,e);return O(l(i,0))==i.length?i:i.slice(1)}(t.doc,e.head);for(let r of i)if(r==n&&Xh(t.doc,e.head)==vh(l(r,0)))return{changes:{from:e.head-r.length,to:e.head+r.length},range:W.cursor(e.head-r.length),userEvent:"delete.backward"}}return{range:n=e}}));return n||e(t.update(r,{scrollIntoView:!0})),!n}}];function Ph(t,e){let i=!1;return t.field(Qh).between(0,t.doc.length,(t=>{t==e&&(i=!0)})),i}function Xh(t,e){let i=t.sliceString(e,e+2);return i.slice(0,O(l(i,0)))}function Rh(t,e,i,n){let r=null,s=t.changeByRange((s=>{if(!s.empty)return{changes:[{insert:e,from:s.from},{insert:i,from:s.to}],effects:gh.of(s.to+e.length),range:W.range(s.anchor+e.length,s.head+e.length)};let o=Xh(t.doc,s.head);return!o||/\s/.test(o)||n.indexOf(o)>-1?{changes:{insert:e+i,from:s.head},effects:gh.of(s.head+e.length),range:W.cursor(s.head+e.length)}:{range:r=s}}));return r?null:t.update(s,{scrollIntoView:!0,userEvent:"input.type"})}function Wh(t,e,i){let n=null,r=t.selection.ranges.map((e=>e.empty&&Xh(t.doc,e.head)==i?W.cursor(e.head+i.length):n=e));return n?null:t.update({selection:W.create(r,t.selection.mainIndex),scrollIntoView:!0,effects:t.selection.ranges.map((({from:t})=>Th.of(t)))})}function Yh(t,e,i){let n=null,r=t.changeByRange((r=>{if(!r.empty)return{changes:[{insert:e,from:r.from},{insert:e,from:r.to}],effects:gh.of(r.to+e.length),range:W.range(r.anchor+e.length,r.head+e.length)};let s=r.head,o=Xh(t.doc,s);if(o==e){if(Ch(t,s))return{changes:{insert:e+e,from:s},effects:gh.of(s+e.length),range:W.cursor(s+e.length)};if(Ph(t,s)){let n=i&&t.sliceDoc(s,s+3*e.length)==e+e+e;return{range:W.cursor(s+e.length*(n?3:1)),effects:Th.of(s)}}}else{if(i&&t.sliceDoc(s-2*e.length,s)==e+e&&Ch(t,s-2*e.length))return{changes:{insert:e+e+e+e,from:s},effects:gh.of(s+e.length),range:W.cursor(s+e.length)};if(t.charCategorizer(s)(o)!=bt.Word){let i=t.sliceDoc(s-1,s);if(i!=e&&t.charCategorizer(s)(i)!=bt.Word&&!function(t,e,i){let n=Ao(t).resolveInner(e,-1);for(let r=0;r<5;r++){if(t.sliceDoc(n.from,n.from+i.length)==i)return!0;let r=n.to==e&&n.parent;if(!r)break;n=r}return!1}(t,s,e))return{changes:{insert:e+e,from:s},effects:gh.of(s+e.length),range:W.cursor(s+e.length)}}}return{range:n=r}}));return n?null:t.update(r,{scrollIntoView:!0,userEvent:"input.type"})}function Ch(t,e){let i=Ao(t).resolveInner(e+1);return i.parent&&i.from==e}const Vh=j.define({combine(t){let e,i;for(let n of t)e=e||n.topContainer,i=i||n.bottomContainer;return{topContainer:e,bottomContainer:i}}});function jh(t,e){let i=t.plugin(Uh),n=i?i.specs.indexOf(e):-1;return n>-1?i.panels[n]:null}const Uh=Ji.fromClass(class{constructor(t){this.input=t.state.facet(Mh),this.specs=this.input.filter((t=>t)),this.panels=this.specs.map((e=>e(t)));let e=t.state.facet(Vh);this.top=new Jh(t,!0,e.topContainer),this.bottom=new Jh(t,!1,e.bottomContainer),this.top.sync(this.panels.filter((t=>t.top))),this.bottom.sync(this.panels.filter((t=>!t.top)));for(let t of this.panels)t.dom.classList.add("cm-panel"),t.mount&&t.mount()}update(t){let e=t.state.facet(Vh);this.top.container!=e.topContainer&&(this.top.sync([]),this.top=new Jh(t.view,!0,e.topContainer)),this.bottom.container!=e.bottomContainer&&(this.bottom.sync([]),this.bottom=new Jh(t.view,!1,e.bottomContainer)),this.top.syncClasses(),this.bottom.syncClasses();let i=t.state.facet(Mh);if(i!=this.input){let e=i.filter((t=>t)),n=[],r=[],s=[],o=[];for(let i of e){let e,a=this.specs.indexOf(i);a<0?(e=i(t.view),o.push(e)):(e=this.panels[a],e.update&&e.update(t)),n.push(e),(e.top?r:s).push(e)}this.specs=e,this.panels=n,this.top.sync(r),this.bottom.sync(s);for(let t of o)t.dom.classList.add("cm-panel"),t.mount&&t.mount()}else for(let e of this.panels)e.update&&e.update(t)}destroy(){this.top.sync([]),this.bottom.sync([])}},{provide:Vi.scrollMargins.from((t=>({top:t.top.scrollMargin(),bottom:t.bottom.scrollMargin()})))});class Jh{constructor(t,e,i){this.view=t,this.top=e,this.container=i,this.dom=void 0,this.classes="",this.panels=[],this.syncClasses()}sync(t){for(let e of this.panels)e.destroy&&t.indexOf(e)<0&&e.destroy();this.panels=t,this.syncDOM()}syncDOM(){if(0==this.panels.length)return void(this.dom&&(this.dom.remove(),this.dom=void 0));if(!this.dom){this.dom=document.createElement("div"),this.dom.className=this.top?"cm-panels cm-panels-top":"cm-panels cm-panels-bottom",this.dom.style[this.top?"top":"bottom"]="0";let t=this.container||this.view.dom;t.insertBefore(this.dom,this.top?t.firstChild:null)}let t=this.dom.firstChild;for(let e of this.panels)if(e.dom.parentNode==this.dom){for(;t!=e.dom;)t=Gh(t);t=t.nextSibling}else this.dom.insertBefore(e.dom,t);for(;t;)t=Gh(t)}scrollMargin(){return!this.dom||this.container?0:Math.max(0,this.top?this.dom.getBoundingClientRect().bottom-Math.max(0,this.view.scrollDOM.getBoundingClientRect().top):Math.min(innerHeight,this.view.scrollDOM.getBoundingClientRect().bottom)-this.dom.getBoundingClientRect().top)}syncClasses(){if(this.container&&this.classes!=this.view.themeClasses){for(let t of this.classes.split(" "))t&&this.container.classList.remove(t);for(let t of(this.classes=this.view.themeClasses).split(" "))t&&this.container.classList.add(t)}}}function Gh(t){let e=t.nextSibling;return t.remove(),e}const Dh=Jr.baseTheme({".cm-panels":{boxSizing:"border-box",position:"sticky",left:0,right:0},"&light .cm-panels":{backgroundColor:"#f5f5f5",color:"black"},"&light .cm-panels-top":{borderBottom:"1px solid #ddd"},"&light .cm-panels-bottom":{borderTop:"1px solid #ddd"},"&dark .cm-panels":{backgroundColor:"#333338",color:"white"}}),Mh=j.define({enables:[Uh,Dh]});function Ah(){var t=arguments[0];"string"==typeof t&&(t=document.createElement(t));var e=1,i=arguments[1];if(i&&"object"==typeof i&&null==i.nodeType&&!Array.isArray(i)){for(var n in i)if(Object.prototype.hasOwnProperty.call(i,n)){var r=i[n];"string"==typeof r?t.setAttribute(n,r):null!=r&&(t[n]=r)}e++}for(;e<arguments.length;e++)Ih(t,arguments[e]);return t}function Ih(t,e){if("string"==typeof e)t.appendChild(document.createTextNode(e));else if(null==e);else if(null!=e.nodeType)t.appendChild(e);else{if(!Array.isArray(e))throw new RangeError("Unsupported child node: "+e);for(var i=0;i<e.length;i++)Ih(t,e[i])}}const qh="function"==typeof String.prototype.normalize?t=>t.normalize("NFKD"):t=>t;class zh{constructor(t,e,i=0,n=t.length,r){this.value={from:0,to:0},this.done=!1,this.matches=[],this.buffer="",this.bufferPos=0,this.iter=t.iterRange(i,n),this.bufferStart=i,this.normalize=r?t=>r(qh(t)):qh,this.query=this.normalize(e)}peek(){if(this.bufferPos==this.buffer.length){if(this.bufferStart+=this.buffer.length,this.iter.next(),this.iter.done)return-1;this.bufferPos=0,this.buffer=this.iter.value}return l(this.buffer,this.bufferPos)}next(){for(;this.matches.length;)this.matches.pop();return this.nextOverlapping()}nextOverlapping(){for(;;){let t=this.peek();if(t<0)return this.done=!0,this;let e=h(t),i=this.bufferStart+this.bufferPos;this.bufferPos+=O(t);let n=this.normalize(e);for(let t=0,r=i;;t++){let s=n.charCodeAt(t),o=this.match(s,r);if(o)return this.value=o,this;if(t==n.length-1)break;r==i&&t<e.length&&e.charCodeAt(t)==s&&r++}}}match(t,e){let i=null;for(let n=0;n<this.matches.length;n+=2){let r=this.matches[n],s=!1;this.query.charCodeAt(r)==t&&(r==this.query.length-1?i={from:this.matches[n+1],to:e+1}:(this.matches[n]++,s=!0)),s||(this.matches.splice(n,2),n-=2)}return this.query.charCodeAt(0)==t&&(1==this.query.length?i={from:e,to:e+1}:this.matches.push(1,e)),i}}"undefined"!=typeof Symbol&&(zh.prototype[Symbol.iterator]=function(){return this});const Eh={from:-1,to:-1,match:/.*/.exec("")},Bh="gm"+(null==/x/.unicode?"":"u");class Fh{constructor(t,e,i,n=0,r=t.length){if(this.to=r,this.curLine="",this.done=!1,this.value=Eh,/\\[sWDnr]|\n|\r|\[\^/.test(e))return new Kh(t,e,i,n,r);this.re=new RegExp(e,Bh+((null==i?void 0:i.ignoreCase)?"i":"")),this.iter=t.iter();let s=t.lineAt(n);this.curLineStart=s.from,this.matchPos=n,this.getLine(this.curLineStart)}getLine(t){this.iter.next(t),this.iter.lineBreak?this.curLine="":(this.curLine=this.iter.value,this.curLineStart+this.curLine.length>this.to&&(this.curLine=this.curLine.slice(0,this.to-this.curLineStart)),this.iter.next())}nextLine(){this.curLineStart=this.curLineStart+this.curLine.length+1,this.curLineStart>this.to?this.curLine="":this.getLine(0)}next(){for(let t=this.matchPos-this.curLineStart;;){this.re.lastIndex=t;let e=this.matchPos<=this.to&&this.re.exec(this.curLine);if(e){let i=this.curLineStart+e.index,n=i+e[0].length;if(this.matchPos=n+(i==n?1:0),i==this.curLine.length&&this.nextLine(),i<n||i>this.value.to)return this.value={from:i,to:n,match:e},this;t=this.matchPos-this.curLineStart}else{if(!(this.curLineStart+this.curLine.length<this.to))return this.done=!0,this;this.nextLine(),t=0}}}}const Nh=new WeakMap;class Lh{constructor(t,e){this.from=t,this.text=e}get to(){return this.from+this.text.length}static get(t,e,i){let n=Nh.get(t);if(!n||n.from>=i||n.to<=e){let n=new Lh(e,t.sliceString(e,i));return Nh.set(t,n),n}if(n.from==e&&n.to==i)return n;let{text:r,from:s}=n;return s>e&&(r=t.sliceString(e,s)+r,s=e),n.to<i&&(r+=t.sliceString(n.to,i)),Nh.set(t,new Lh(s,r)),new Lh(e,r.slice(e-s,i-s))}}class Kh{constructor(t,e,i,n,r){this.text=t,this.to=r,this.done=!1,this.value=Eh,this.matchPos=n,this.re=new RegExp(e,Bh+((null==i?void 0:i.ignoreCase)?"i":"")),this.flat=Lh.get(t,n,this.chunkEnd(n+5e3))}chunkEnd(t){return t>=this.to?this.to:this.text.lineAt(t).to}next(){for(;;){let t=this.re.lastIndex=this.matchPos-this.flat.from,e=this.re.exec(this.flat.text);if(e&&!e[0]&&e.index==t&&(this.re.lastIndex=t+1,e=this.re.exec(this.flat.text)),e&&this.flat.to<this.to&&e.index+e[0].length>this.flat.text.length-10&&(e=null),e){let t=this.flat.from+e.index,i=t+e[0].length;return this.value={from:t,to:i,match:e},this.matchPos=i+(t==i?1:0),this}if(this.flat.to==this.to)return this.done=!0,this;this.flat=Lh.get(this.text,this.flat.from,this.chunkEnd(this.flat.from+2*this.flat.text.length))}}}function Hh(t){let e=Ah("input",{class:"cm-textfield",name:"line"});function i(){let i=/^([+-])?(\d+)?(:\d+)?(%)?$/.exec(e.value);if(!i)return;let{state:n}=t,r=n.doc.lineAt(n.selection.main.head),[,s,o,a,l]=i,h=a?+a.slice(1):0,O=o?+o:r.number;if(o&&l){let t=O/100;s&&(t=t*("-"==s?-1:1)+r.number/n.doc.lines),O=Math.round(n.doc.lines*t)}else o&&s&&(O=O*("-"==s?-1:1)+r.number);let c=n.doc.line(Math.max(1,Math.min(n.doc.lines,O)));t.dispatch({effects:tO.of(!1),selection:W.cursor(c.from+Math.max(0,Math.min(h,c.length))),scrollIntoView:!0}),t.focus()}return{dom:Ah("form",{class:"cm-gotoLine",onkeydown:e=>{27==e.keyCode?(e.preventDefault(),t.dispatch({effects:tO.of(!1)}),t.focus()):13==e.keyCode&&(e.preventDefault(),i())},onsubmit:t=>{t.preventDefault(),i()}},Ah("label",t.state.phrase("Go to line"),": ",e)," ",Ah("button",{class:"cm-button",type:"submit"},t.state.phrase("go"))),pos:-10}}"undefined"!=typeof Symbol&&(Fh.prototype[Symbol.iterator]=Kh.prototype[Symbol.iterator]=function(){return this});const tO=dt.define(),eO=A.define({create:()=>!0,update(t,e){for(let i of e.effects)i.is(tO)&&(t=i.value);return t},provide:t=>Mh.from(t,(t=>t?Hh:null))}),iO=Jr.baseTheme({".cm-panel.cm-gotoLine":{padding:"2px 6px 4px","& label":{fontSize:"80%"}}}),nO={highlightWordAroundCursor:!1,minSelectionLength:1,maxMatches:100,wholeWords:!0},rO=j.define({combine:t=>xt(t,nO,{highlightWordAroundCursor:(t,e)=>t||e,minSelectionLength:Math.min,maxMatches:Math.min})});const sO=ci.mark({class:"cm-selectionMatch"}),oO=ci.mark({class:"cm-selectionMatch cm-selectionMatch-main"});function aO(t,e,i,n){return!(0!=i&&t(e.sliceDoc(i-1,i))==bt.Word||n!=e.doc.length&&t(e.sliceDoc(n,n+1))==bt.Word)}const lO=Ji.fromClass(class{constructor(t){this.decorations=this.getDeco(t)}update(t){(t.selectionSet||t.docChanged||t.viewportChanged)&&(this.decorations=this.getDeco(t.view))}getDeco(t){let e=t.state.facet(rO),{state:i}=t,n=i.selection;if(n.ranges.length>1)return ci.none;let r,s=n.main,o=null;if(s.empty){if(!e.highlightWordAroundCursor)return ci.none;let t=i.wordAt(s.head);if(!t)return ci.none;o=i.charCategorizer(s.head),r=i.sliceDoc(t.from,t.to)}else{let t=s.to-s.from;if(t<e.minSelectionLength||t>200)return ci.none;if(e.wholeWords){if(r=i.sliceDoc(s.from,s.to),o=i.charCategorizer(s.head),!aO(o,i,s.from,s.to)||!function(t,e,i,n){return t(e.sliceDoc(i,i+1))==bt.Word&&t(e.sliceDoc(n-1,n))==bt.Word}(o,i,s.from,s.to))return ci.none}else if(r=i.sliceDoc(s.from,s.to).trim(),!r)return ci.none}let a=[];for(let n of t.visibleRanges){let t=new zh(i.doc,r,n.from,n.to);for(;!t.next().done;){let{from:n,to:r}=t.value;if((!o||aO(o,i,n,r))&&(s.empty&&n<=s.from&&r>=s.to?a.push(oO.range(n,r)):(n>=s.to||r<=s.from)&&a.push(sO.range(n,r)),a.length>e.maxMatches))return ci.none}}return ci.set(a)}},{decorations:t=>t.decorations}),hO=Jr.baseTheme({".cm-selectionMatch":{backgroundColor:"#99ff7780"},".cm-searchMatch .cm-selectionMatch":{backgroundColor:"transparent"}});const OO=j.define({combine(t){var e;return{top:t.reduce(((t,e)=>null!=t?t:e.top),void 0)||!1,caseSensitive:t.reduce(((t,e)=>null!=t?t:e.caseSensitive||e.matchCase),void 0)||!1,createPanel:(null===(e=t.find((t=>t.createPanel)))||void 0===e?void 0:e.createPanel)||(t=>new CO(t))}}});class cO{constructor(t){this.search=t.search,this.caseSensitive=!!t.caseSensitive,this.regexp=!!t.regexp,this.replace=t.replace||"",this.valid=!!this.search&&(!this.regexp||function(t){try{return new RegExp(t,Bh),!0}catch(t){return!1}}(this.search)),this.unquoted=this.search.replace(/\\([nrt\\])/g,((t,e)=>"n"==e?"\n":"r"==e?"\r":"t"==e?"\t":"\\"))}eq(t){return this.search==t.search&&this.replace==t.replace&&this.caseSensitive==t.caseSensitive&&this.regexp==t.regexp}create(){return this.regexp?new _O(this):new $O(this)}getCursor(t,e=0,i=t.length){return this.regexp?fO(this,t,e,i):dO(this,t,e,i)}}class uO{constructor(t){this.spec=t}}function dO(t,e,i,n){return new zh(e,t.unquoted,i,n,t.caseSensitive?void 0:t=>t.toLowerCase())}class $O extends uO{constructor(t){super(t)}nextMatch(t,e,i){let n=dO(this.spec,t,i,t.length).nextOverlapping();return n.done&&(n=dO(this.spec,t,0,e).nextOverlapping()),n.done?null:n.value}prevMatchInRange(t,e,i){for(let n=i;;){let i=Math.max(e,n-1e4-this.spec.unquoted.length),r=dO(this.spec,t,i,n),s=null;for(;!r.nextOverlapping().done;)s=r.value;if(s)return s;if(i==e)return null;n-=1e4}}prevMatch(t,e,i){return this.prevMatchInRange(t,0,e)||this.prevMatchInRange(t,i,t.length)}getReplacement(t){return this.spec.replace}matchAll(t,e){let i=dO(this.spec,t,0,t.length),n=[];for(;!i.next().done;){if(n.length>=e)return null;n.push(i.value)}return n}highlight(t,e,i,n){let r=dO(this.spec,t,Math.max(0,e-this.spec.unquoted.length),Math.min(i+this.spec.unquoted.length,t.length));for(;!r.next().done;)n(r.value.from,r.value.to)}}function fO(t,e,i,n){return new Fh(e,t.search,t.caseSensitive?void 0:{ignoreCase:!0},i,n)}class _O extends uO{nextMatch(t,e,i){let n=fO(this.spec,t,i,t.length).next();return n.done&&(n=fO(this.spec,t,0,e).next()),n.done?null:n.value}prevMatchInRange(t,e,i){for(let n=1;;n++){let r=Math.max(e,i-1e4*n),s=fO(this.spec,t,r,i),o=null;for(;!s.next().done;)o=s.value;if(o&&(r==e||o.from>r+10))return o;if(r==e)return null}}prevMatch(t,e,i){return this.prevMatchInRange(t,0,e)||this.prevMatchInRange(t,i,t.length)}getReplacement(t){return this.spec.replace.replace(/\$([$&\d+])/g,((e,i)=>"$"==i?"$":"&"==i?t.match[0]:"0"!=i&&+i<t.match.length?t.match[i]:e))}matchAll(t,e){let i=fO(this.spec,t,0,t.length),n=[];for(;!i.next().done;){if(n.length>=e)return null;n.push(i.value)}return n}highlight(t,e,i,n){let r=fO(this.spec,t,Math.max(0,e-250),Math.min(i+250,t.length));for(;!r.next().done;)n(r.value.from,r.value.to)}}const pO=dt.define(),mO=dt.define(),gO=A.define({create:t=>new TO(XO(t).create(),null),update(t,e){for(let i of e.effects)i.is(pO)?t=new TO(i.value.create(),t.panel):i.is(mO)&&(t=new TO(t.query,i.value?PO:null));return t},provide:t=>Mh.from(t,(t=>t.panel))});class TO{constructor(t,e){this.query=t,this.panel=e}}const bO=ci.mark({class:"cm-searchMatch"}),QO=ci.mark({class:"cm-searchMatch cm-searchMatch-selected"}),ZO=Ji.fromClass(class{constructor(t){this.view=t,this.decorations=this.highlight(t.state.field(gO))}update(t){let e=t.state.field(gO);(e!=t.startState.field(gO)||t.docChanged||t.selectionSet)&&(this.decorations=this.highlight(e))}highlight({query:t,panel:e}){if(!e||!t.spec.valid)return ci.none;let{view:i}=this,n=new qt;for(let e=0,r=i.visibleRanges,s=r.length;e<s;e++){let{from:o,to:a}=r[e];for(;e<s-1&&a>r[e+1].from-500;)a=r[++e].to;t.highlight(i.state.doc,o,a,((t,e)=>{let r=i.state.selection.ranges.some((i=>i.from==t&&i.to==e));n.add(t,e,r?QO:bO)}))}return n.finish()}},{decorations:t=>t.decorations});function SO(t){return e=>{let i=e.state.field(gO,!1);return i&&i.query.spec.valid?t(e,i):RO(e)}}const vO=SO(((t,{query:e})=>{let{from:i,to:n}=t.state.selection.main,r=e.nextMatch(t.state.doc,i,n);return!(!r||r.from==i&&r.to==n)&&(t.dispatch({selection:{anchor:r.from,head:r.to},scrollIntoView:!0,effects:UO(t,r),userEvent:"select.search"}),!0)})),xO=SO(((t,{query:e})=>{let{state:i}=t,{from:n,to:r}=i.selection.main,s=e.prevMatch(i.doc,n,r);return!!s&&(t.dispatch({selection:{anchor:s.from,head:s.to},scrollIntoView:!0,effects:UO(t,s),userEvent:"select.search"}),!0)})),kO=SO(((t,{query:e})=>{let i=e.matchAll(t.state.doc,1e3);return!(!i||!i.length)&&(t.dispatch({selection:W.create(i.map((t=>W.range(t.from,t.to)))),userEvent:"select.search.matches"}),!0)})),wO=SO(((t,{query:e})=>{let{state:i}=t,{from:n,to:r}=i.selection.main;if(i.readOnly)return!1;let s=e.nextMatch(i.doc,n,n);if(!s)return!1;let o,a,l=[];if(s.from==n&&s.to==r&&(a=i.toText(e.getReplacement(s)),l.push({from:s.from,to:s.to,insert:a}),s=e.nextMatch(i.doc,s.from,s.to)),s){let t=0==l.length||l[0].from>=s.to?0:s.to-s.from-a.length;o={anchor:s.from-t,head:s.to-t}}return t.dispatch({changes:l,selection:o,scrollIntoView:!!o,effects:s?UO(t,s):void 0,userEvent:"input.replace"}),!0})),yO=SO(((t,{query:e})=>{if(t.state.readOnly)return!1;let i=e.matchAll(t.state.doc,1e9).map((t=>{let{from:i,to:n}=t;return{from:i,to:n,insert:e.getReplacement(t)}}));return!!i.length&&(t.dispatch({changes:i,userEvent:"input.replace.all"}),!0)}));function PO(t){return t.state.facet(OO).createPanel(t)}function XO(t,e){var i;let n=t.selection.main,r=n.empty||n.to>n.from+100?"":t.sliceDoc(n.from,n.to),s=null!==(i=null==e?void 0:e.caseSensitive)&&void 0!==i?i:t.facet(OO).caseSensitive;return e&&!r?e:new cO({search:r.replace(/\n/g,"\\n"),caseSensitive:s})}const RO=t=>{let e=t.state.field(gO,!1);if(e&&e.panel){let i=jh(t,PO);if(!i)return!1;let n=i.dom.querySelector("[name=search]");if(n!=t.root.activeElement){let i=XO(t.state,e.query.spec);i.valid&&t.dispatch({effects:pO.of(i)}),n.focus(),n.select()}}else t.dispatch({effects:[mO.of(!0),e?pO.of(XO(t.state,e.query.spec)):dt.appendConfig.of(GO)]});return!0},WO=t=>{let e=t.state.field(gO,!1);if(!e||!e.panel)return!1;let i=jh(t,PO);return i&&i.dom.contains(t.root.activeElement)&&t.focus(),t.dispatch({effects:mO.of(!1)}),!0},YO=[{key:"Mod-f",run:RO,scope:"editor search-panel"},{key:"F3",run:vO,shift:xO,scope:"editor search-panel",preventDefault:!0},{key:"Mod-g",run:vO,shift:xO,scope:"editor search-panel",preventDefault:!0},{key:"Escape",run:WO,scope:"editor search-panel"},{key:"Mod-Shift-l",run:({state:t,dispatch:e})=>{let i=t.selection;if(i.ranges.length>1||i.main.empty)return!1;let{from:n,to:r}=i.main,s=[],o=0;for(let e=new zh(t.doc,t.sliceDoc(n,r));!e.next().done;){if(s.length>1e3)return!1;e.value.from==n&&(o=s.length),s.push(W.range(e.value.from,e.value.to))}return e(t.update({selection:W.create(s,o),userEvent:"select.search.matches"})),!0}},{key:"Alt-g",run:t=>{let e=jh(t,Hh);if(!e){let i=[tO.of(!0)];null==t.state.field(eO,!1)&&i.push(dt.appendConfig.of([eO,iO])),t.dispatch({effects:i}),e=jh(t,Hh)}return e&&e.dom.querySelector("input").focus(),!0}},{key:"Mod-d",run:({state:t,dispatch:e})=>{let{ranges:i}=t.selection;if(i.some((t=>t.from===t.to)))return(({state:t,dispatch:e})=>{let{selection:i}=t,n=W.create(i.ranges.map((e=>t.wordAt(e.head)||W.cursor(e.head))),i.mainIndex);return!n.eq(i)&&(e(t.update({selection:n})),!0)})({state:t,dispatch:e});let n=t.sliceDoc(i[0].from,i[0].to);if(t.selection.ranges.some((e=>t.sliceDoc(e.from,e.to)!=n)))return!1;let r=function(t,e){let{main:i,ranges:n}=t.selection,r=t.wordAt(i.head),s=r&&r.from==i.from&&r.to==i.to;for(let i=!1,r=new zh(t.doc,e,n[n.length-1].to);;){if(r.next(),!r.done){if(i&&n.some((t=>t.from==r.value.from)))continue;if(s){let e=t.wordAt(r.value.from);if(!e||e.from!=r.value.from||e.to!=r.value.to)continue}return r.value}if(i)return null;r=new zh(t.doc,e,0,Math.max(0,n[n.length-1].from-1)),i=!0}}(t,n);return!!r&&(e(t.update({selection:t.selection.addRange(W.range(r.from,r.to),!1),effects:Jr.scrollIntoView(r.to)})),!0)},preventDefault:!0}];class CO{constructor(t){this.view=t;let e=this.query=t.state.field(gO).query.spec;function i(t,e,i){return Ah("button",{class:"cm-button",name:t,onclick:e,type:"button"},i)}this.commit=this.commit.bind(this),this.searchField=Ah("input",{value:e.search,placeholder:VO(t,"Find"),"aria-label":VO(t,"Find"),class:"cm-textfield",name:"search",onchange:this.commit,onkeyup:this.commit}),this.replaceField=Ah("input",{value:e.replace,placeholder:VO(t,"Replace"),"aria-label":VO(t,"Replace"),class:"cm-textfield",name:"replace",onchange:this.commit,onkeyup:this.commit}),this.caseField=Ah("input",{type:"checkbox",name:"case",checked:e.caseSensitive,onchange:this.commit}),this.reField=Ah("input",{type:"checkbox",name:"re",checked:e.regexp,onchange:this.commit}),this.dom=Ah("div",{onkeydown:t=>this.keydown(t),class:"cm-search"},[this.searchField,i("next",(()=>vO(t)),[VO(t,"next")]),i("prev",(()=>xO(t)),[VO(t,"previous")]),i("select",(()=>kO(t)),[VO(t,"all")]),Ah("label",null,[this.caseField,VO(t,"match case")]),Ah("label",null,[this.reField,VO(t,"regexp")]),...t.state.readOnly?[]:[Ah("br"),this.replaceField,i("replace",(()=>wO(t)),[VO(t,"replace")]),i("replaceAll",(()=>yO(t)),[VO(t,"replace all")]),Ah("button",{name:"close",onclick:()=>WO(t),"aria-label":VO(t,"close"),type:"button"},["\xd7"])]])}commit(){let t=new cO({search:this.searchField.value,caseSensitive:this.caseField.checked,regexp:this.reField.checked,replace:this.replaceField.value});t.eq(this.query)||(this.query=t,this.view.dispatch({effects:pO.of(t)}))}keydown(t){var e,i,n;e=this.view,i=t,n="search-panel",Kr(Nr(e.state),i,e,n)?t.preventDefault():13==t.keyCode&&t.target==this.searchField?(t.preventDefault(),(t.shiftKey?xO:vO)(this.view)):13==t.keyCode&&t.target==this.replaceField&&(t.preventDefault(),wO(this.view))}update(t){for(let e of t.transactions)for(let t of e.effects)t.is(pO)&&!t.value.eq(this.query)&&this.setQuery(t.value)}setQuery(t){this.query=t,this.searchField.value=t.search,this.replaceField.value=t.replace,this.caseField.checked=t.caseSensitive,this.reField.checked=t.regexp}mount(){this.searchField.select()}get pos(){return 80}get top(){return this.view.state.facet(OO).top}}function VO(t,e){return t.state.phrase(e)}const jO=/[\s\.,:;?!]/;function UO(t,{from:e,to:i}){let n=t.state.doc.lineAt(e).from,r=t.state.doc.lineAt(i).to,s=Math.max(n,e-30),o=Math.min(r,i+30),a=t.state.sliceDoc(s,o);if(s!=n)for(let t=0;t<30;t++)if(!jO.test(a[t+1])&&jO.test(a[t])){a=a.slice(t);break}if(o!=r)for(let t=a.length-1;t>a.length-30;t--)if(!jO.test(a[t-1])&&jO.test(a[t])){a=a.slice(0,t);break}return Jr.announce.of(`${t.state.phrase("current match")}. ${a} ${t.state.phrase("on line")} ${t.state.doc.lineAt(e).number}`)}const JO=Jr.baseTheme({".cm-panel.cm-search":{padding:"2px 6px 4px",position:"relative","& [name=close]":{position:"absolute",top:"0",right:"4px",backgroundColor:"inherit",border:"none",font:"inherit",padding:0,margin:0},"& input, & button, & label":{margin:".2em .6em .2em 0"},"& input[type=checkbox]":{marginRight:".2em"},"& label":{fontSize:"80%",whiteSpace:"pre"}},"&light .cm-searchMatch":{backgroundColor:"#ffff0054"},"&dark .cm-searchMatch":{backgroundColor:"#00ffff8a"},"&light .cm-searchMatch-selected":{backgroundColor:"#ff6a0054"},"&dark .cm-searchMatch-selected":{backgroundColor:"#ff00ff8a"}}),GO=[gO,N.lowest(ZO),JO],DO="undefined"!=typeof navigator&&!/Edge\/(\d+)/.exec(navigator.userAgent)&&/Apple Computer/.test(navigator.vendor)&&(/Mobile\/\w+/.test(navigator.userAgent)||navigator.maxTouchPoints>2),MO="-10000px";class AO{constructor(t,e,i){this.facet=e,this.createTooltipView=i,this.input=t.state.facet(e),this.tooltips=this.input.filter((t=>t)),this.tooltipViews=this.tooltips.map(i)}update(t){let e=t.state.facet(this.facet),i=e.filter((t=>t));if(e===this.input){for(let e of this.tooltipViews)e.update&&e.update(t);return!1}let n=[];for(let e=0;e<i.length;e++){let r=i[e],s=-1;if(r){for(let t=0;t<this.tooltips.length;t++){let e=this.tooltips[t];e&&e.create==r.create&&(s=t)}if(s<0)n[e]=this.createTooltipView(r);else{let i=n[e]=this.tooltipViews[s];i.update&&i.update(t)}}}for(let t of this.tooltipViews)n.indexOf(t)<0&&t.dom.remove();return this.input=e,this.tooltips=i,this.tooltipViews=n,!0}}function IO(){return{top:0,left:0,bottom:innerHeight,right:innerWidth}}const qO=j.define({combine:t=>{var e,i,n;return{position:DO?"absolute":(null===(e=t.find((t=>t.position)))||void 0===e?void 0:e.position)||"fixed",parent:(null===(i=t.find((t=>t.parent)))||void 0===i?void 0:i.parent)||null,tooltipSpace:(null===(n=t.find((t=>t.tooltipSpace)))||void 0===n?void 0:n.tooltipSpace)||IO}}}),zO=Ji.fromClass(class{constructor(t){var e;this.view=t,this.inView=!0,this.lastTransaction=0,this.measureTimeout=-1;let i=t.state.facet(qO);this.position=i.position,this.parent=i.parent,this.classes=t.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.manager=new AO(t,FO,(t=>this.createTooltip(t))),this.intersectionObserver="function"==typeof IntersectionObserver?new IntersectionObserver((t=>{Date.now()>this.lastTransaction-50&&t.length>0&&t[t.length-1].intersectionRatio<1&&this.measureSoon()}),{threshold:[1]}):null,this.observeIntersection(),null===(e=t.dom.ownerDocument.defaultView)||void 0===e||e.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let t of this.manager.tooltipViews)this.intersectionObserver.observe(t.dom)}}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout((()=>{this.measureTimeout=-1,this.maybeMeasure()}),50))}update(t){t.transactions.length&&(this.lastTransaction=Date.now());let e=this.manager.update(t);e&&this.observeIntersection();let i=e||t.geometryChanged,n=t.state.facet(qO);if(n.position!=this.position){this.position=n.position;for(let t of this.manager.tooltipViews)t.dom.style.position=this.position;i=!0}if(n.parent!=this.parent){this.parent&&this.container.remove(),this.parent=n.parent,this.createContainer();for(let t of this.manager.tooltipViews)this.container.appendChild(t.dom);i=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);i&&this.maybeMeasure()}createTooltip(t){let e=t.create(this.view);if(e.dom.classList.add("cm-tooltip"),t.arrow&&!e.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")){let t=document.createElement("div");t.className="cm-tooltip-arrow",e.dom.appendChild(t)}return e.dom.style.position=this.position,e.dom.style.top=MO,this.container.appendChild(e.dom),e.mount&&e.mount(this.view),e}destroy(){var t,e;null===(t=this.view.dom.ownerDocument.defaultView)||void 0===t||t.removeEventListener("resize",this.measureSoon);for(let{dom:t}of this.manager.tooltipViews)t.remove();null===(e=this.intersectionObserver)||void 0===e||e.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let t=this.view.dom.getBoundingClientRect();return{editor:t,parent:this.parent?this.container.getBoundingClientRect():t,pos:this.manager.tooltips.map(((t,e)=>{let i=this.manager.tooltipViews[e];return i.getCoords?i.getCoords(t.pos):this.view.coordsAtPos(t.pos)})),size:this.manager.tooltipViews.map((({dom:t})=>t.getBoundingClientRect())),space:this.view.state.facet(qO).tooltipSpace(this.view)}}writeMeasure(t){let{editor:e,space:i}=t,n=[];for(let r=0;r<this.manager.tooltips.length;r++){let s=this.manager.tooltips[r],o=this.manager.tooltipViews[r],{dom:a}=o,l=t.pos[r],h=t.size[r];if(!l||l.bottom<=Math.max(e.top,i.top)||l.top>=Math.min(e.bottom,i.bottom)||l.right<Math.max(e.left,i.left)-.1||l.left>Math.min(e.right,i.right)+.1){a.style.top=MO;continue}let O=s.arrow?o.dom.querySelector(".cm-tooltip-arrow"):null,c=O?7:0,u=h.right-h.left,d=h.bottom-h.top,$=o.offset||BO,f=this.view.textDirection==Bi.LTR,_=h.width>i.right-i.left?f?i.left:i.right-h.width:f?Math.min(l.left-(O?14:0)+$.x,i.right-u):Math.max(i.left,l.left-u+(O?14:0)-$.x),p=!!s.above;!s.strictSide&&(p?l.top-(h.bottom-h.top)-$.y<i.top:l.bottom+(h.bottom-h.top)+$.y>i.bottom)&&p==i.bottom-l.bottom>l.top-i.top&&(p=!p);let m=p?l.top-d-c-$.y:l.bottom+c+$.y,g=_+u;if(!0!==o.overlap)for(let t of n)t.left<g&&t.right>_&&t.top<m+d&&t.bottom>m&&(m=p?t.top-d-2-c:t.bottom+c+2);"absolute"==this.position?(a.style.top=m-t.parent.top+"px",a.style.left=_-t.parent.left+"px"):(a.style.top=m+"px",a.style.left=_+"px"),O&&(O.style.left=l.left+(f?$.x:-$.x)-(_+14-7)+"px"),!0!==o.overlap&&n.push({left:_,top:m,right:g,bottom:m+d}),a.classList.toggle("cm-tooltip-above",p),a.classList.toggle("cm-tooltip-below",!p),o.positioned&&o.positioned()}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let t of this.manager.tooltipViews)t.dom.style.top=MO}},{eventHandlers:{scroll(){this.maybeMeasure()}}}),EO=Jr.baseTheme({".cm-tooltip":{zIndex:100},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:"7px",width:"14px",position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:"7px solid transparent",borderRight:"7px solid transparent"},".cm-tooltip-above &":{bottom:"-7px","&:before":{borderTop:"7px solid #bbb"},"&:after":{borderTop:"7px solid #f5f5f5",bottom:"1px"}},".cm-tooltip-below &":{top:"-7px","&:before":{borderBottom:"7px solid #bbb"},"&:after":{borderBottom:"7px solid #f5f5f5",top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),BO={x:0,y:0},FO=j.define({enables:[zO,EO]}),NO=j.define();class LO{constructor(t){this.view=t,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new AO(t,NO,(t=>this.createHostedView(t)))}static create(t){return new LO(t)}createHostedView(t){let e=t.create(this.view);return e.dom.classList.add("cm-tooltip-section"),this.dom.appendChild(e.dom),this.mounted&&e.mount&&e.mount(this.view),e}mount(t){for(let e of this.manager.tooltipViews)e.mount&&e.mount(t);this.mounted=!0}positioned(){for(let t of this.manager.tooltipViews)t.positioned&&t.positioned()}update(t){this.manager.update(t)}}const KO=FO.compute([NO],(t=>{let e=t.facet(NO).filter((t=>t));return 0===e.length?null:{pos:Math.min(...e.map((t=>t.pos))),end:Math.max(...e.filter((t=>null!=t.end)).map((t=>t.end))),create:LO.create,above:e[0].above,arrow:e.some((t=>t.arrow))}}));class HO{constructor(t,e,i,n,r){this.view=t,this.source=e,this.field=i,this.setHover=n,this.hoverTime=r,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:t.dom,time:0},this.checkHover=this.checkHover.bind(this),t.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),t.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout((()=>this.startHover()),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active)return;let t=Date.now()-this.lastMove.time;t<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-t):this.startHover()}startHover(){var t;clearTimeout(this.restartTimeout);let{lastMove:e}=this,i=this.view.contentDOM.contains(e.target)?this.view.posAtCoords(e):null;if(null==i)return;let n=this.view.coordsAtPos(i);if(null==n||e.y<n.top||e.y>n.bottom||e.x<n.left-this.view.defaultCharacterWidth||e.x>n.right+this.view.defaultCharacterWidth)return;let r=this.view.bidiSpans(this.view.state.doc.lineAt(i)).find((t=>t.from<=i&&t.to>=i)),s=r&&r.dir==Bi.RTL?-1:1,o=this.source(this.view,i,e.x<n.left?-s:s);if(null===(t=o)||void 0===t?void 0:t.then){let t=this.pending={pos:i};o.then((e=>{this.pending==t&&(this.pending=null,e&&this.view.dispatch({effects:this.setHover.of(e)}))}),(t=>Wi(this.view.state,t,"hover tooltip")))}else o&&this.view.dispatch({effects:this.setHover.of(o)})}mousemove(t){var e;this.lastMove={x:t.clientX,y:t.clientY,target:t.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let i=this.active;if(i&&!function(t){for(let e=t;e;e=e.parentNode)if(1==e.nodeType&&e.classList.contains("cm-tooltip"))return!0;return!1}(this.lastMove.target)||this.pending){let{pos:n}=i||this.pending,r=null!==(e=null==i?void 0:i.end)&&void 0!==e?e:n;(n==r?this.view.posAtCoords(this.lastMove)==n:function(t,e,i,n,r,s){let o=document.createRange(),a=t.domAtPos(e),l=t.domAtPos(i);o.setEnd(l.node,l.offset),o.setStart(a.node,a.offset);let h=o.getClientRects();o.detach();for(let t=0;t<h.length;t++){let e=h[t];if(Math.max(e.top-r,r-e.bottom,e.left-n,n-e.right)<=s)return!0}return!1}(this.view,n,r,t.clientX,t.clientY,6))||(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1,this.active&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}function tc(t,e={}){let i=dt.define(),n=A.define({create:()=>null,update(t,n){if(t&&e.hideOnChange&&(n.docChanged||n.selection))return null;for(let t of n.effects){if(t.is(i))return t.value;if(t.is(ec))return null}if(t&&n.docChanged){let e=n.changes.mapPos(t.pos,-1,Z.TrackDel);if(null==e)return null;let i=Object.assign(Object.create(null),t);return i.pos=e,null!=t.end&&(i.end=n.changes.mapPos(t.end)),i}return t},provide:t=>NO.from(t)});return[n,Ji.define((r=>new HO(r,t,n,i,e.hoverTime||300))),KO]}const ec=dt.define();class ic{constructor(t,e,i){this.state=t,this.pos=e,this.explicit=i,this.abortListeners=[]}tokenBefore(t){let e=Ao(this.state).resolveInner(this.pos,-1);for(;e&&t.indexOf(e.name)<0;)e=e.parent;return e?{from:e.from,to:this.pos,text:this.state.sliceDoc(e.from,this.pos),type:e.type}:null}matchBefore(t){let e=this.state.doc.lineAt(this.pos),i=Math.max(e.from,this.pos-250),n=e.text.slice(i-e.from,this.pos-e.from),r=n.search(ac(t,!1));return r<0?null:{from:i+r,to:this.pos,text:n.slice(r)}}get aborted(){return null==this.abortListeners}addEventListener(t,e){"abort"==t&&this.abortListeners&&this.abortListeners.push(e)}}function nc(t){let e=Object.keys(t).join(""),i=/\w/.test(e);return i&&(e=e.replace(/\w/g,"")),`[${i?"\\w":""}${e.replace(/[^\w\s]/g,"\\$&")}]`}function rc(t){let e=t.map((t=>"string"==typeof t?{label:t}:t)),[i,n]=e.every((t=>/^\w+$/.test(t.label)))?[/\w*$/,/\w+$/]:function(t){let e=Object.create(null),i=Object.create(null);for(let{label:n}of t){e[n[0]]=!0;for(let t=1;t<n.length;t++)i[n[t]]=!0}let n=nc(e)+nc(i)+"*$";return[new RegExp("^"+n),new RegExp(n)]}(e);return t=>{let r=t.matchBefore(n);return r||t.explicit?{from:r?r.from:t.pos,options:e,span:i}:null}}class sc{constructor(t,e,i){this.completion=t,this.source=e,this.match=i}}function oc(t){return t.selection.main.head}function ac(t,e){var i;let{source:n}=t,r=e&&"^"!=n[0],s="$"!=n[n.length-1];return r||s?new RegExp(`${r?"^":""}(?:${n})${s?"$":""}`,null!==(i=t.flags)&&void 0!==i?i:t.ignoreCase?"i":""):t}const lc=Ot.define();function hc(t,e){let i=e.completion.apply||e.completion.label,n=e.source;"string"==typeof i?t.dispatch({changes:{from:n.from,to:n.to,insert:i},selection:{anchor:n.from+i.length},userEvent:"input.complete",annotations:lc.of(e.completion)}):i(t,e.completion,n.from,n.to)}const Oc=new WeakMap;function cc(t){if(!Array.isArray(t))return t;let e=Oc.get(t);return e||Oc.set(t,e=rc(t)),e}class uc{constructor(t){this.pattern=t,this.chars=[],this.folded=[],this.any=[],this.precise=[],this.byWord=[];for(let e=0;e<t.length;){let i=l(t,e),n=O(i);this.chars.push(i);let r=t.slice(e,e+n),s=r.toUpperCase();this.folded.push(l(s==r?r.toLowerCase():s,0)),e+=n}this.astral=t.length!=this.chars.length}match(t){if(0==this.pattern.length)return[0];if(t.length<this.pattern.length)return null;let{chars:e,folded:i,any:n,precise:r,byWord:s}=this;if(1==e.length){let n=l(t,0);return n==e[0]?[0,0,O(n)]:n==i[0]?[-200,0,O(n)]:null}let o=t.indexOf(this.pattern);if(0==o)return[0,0,this.pattern.length];let a=e.length,c=0;if(o<0){for(let r=0,s=Math.min(t.length,200);r<s&&c<a;){let s=l(t,r);s!=e[c]&&s!=i[c]||(n[c++]=r),r+=O(s)}if(c<a)return null}let u=0,d=0,$=!1,f=0,_=-1,p=-1,m=/[a-z]/.test(t),g=!0;for(let n=0,c=Math.min(t.length,200),T=0;n<c&&d<a;){let c=l(t,n);o<0&&(u<a&&c==e[u]&&(r[u++]=n),f<a&&(c==e[f]||c==i[f]?(0==f&&(_=n),p=n+1,f++):f=0));let b,Q=c<255?c>=48&&c<=57||c>=97&&c<=122?2:c>=65&&c<=90?1:0:(b=h(c))!=b.toLowerCase()?1:b!=b.toUpperCase()?2:0;(!n||1==Q&&m||0==T&&0!=Q)&&(e[d]==c||i[d]==c&&($=!0)?s[d++]=n:s.length&&(g=!1)),T=Q,n+=O(c)}return d==a&&0==s[0]&&g?this.result(($?-200:0)-100,s,t):f==a&&0==_?[-200-t.length,0,p]:o>-1?[-700-t.length,o,o+this.pattern.length]:f==a?[-900-t.length,_,p]:d==a?this.result(($?-200:0)-100-700+(g?0:-1100),s,t):2==e.length?null:this.result((n[0]?-700:0)-200-1100,n,t)}result(t,e,i){let n=[t-i.length],r=1;for(let t of e){let e=t+(this.astral?O(l(i,t)):1);r>1&&n[r-1]==t?n[r-1]=e:(n[r++]=t,n[r++]=e)}return n}}const dc=j.define({combine:t=>xt(t,{activateOnTyping:!0,override:null,maxRenderedOptions:100,defaultKeymap:!0,optionClass:()=>"",aboveCursor:!1,icons:!0,addToOptions:[]},{defaultKeymap:(t,e)=>t&&e,icons:(t,e)=>t&&e,optionClass:(t,e)=>i=>function(t,e){return t?e?t+" "+e:t:e}(t(i),e(i)),addToOptions:(t,e)=>t.concat(e)})});function $c(t,e,i){if(t<=i)return{from:0,to:t};if(e<=t>>1){let t=Math.floor(e/i);return{from:t*i,to:(t+1)*i}}let n=Math.floor((t-e)/i);return{from:t-(n+1)*i,to:t-n*i}}class fc{constructor(t,e){this.view=t,this.stateField=e,this.info=null,this.placeInfo={read:()=>this.measureInfo(),write:t=>this.positionInfo(t),key:this};let i=t.state.field(e),{options:n,selected:r}=i.open,s=t.state.facet(dc);this.optionContent=function(t){let e=t.addToOptions.slice();return t.icons&&e.push({render(t){let e=document.createElement("div");return e.classList.add("cm-completionIcon"),t.type&&e.classList.add(...t.type.split(/\s+/g).map((t=>"cm-completionIcon-"+t))),e.setAttribute("aria-hidden","true"),e},position:20}),e.push({render(t,e,i){let n=document.createElement("span");n.className="cm-completionLabel";let{label:r}=t,s=0;for(let t=1;t<i.length;){let e=i[t++],o=i[t++];e>s&&n.appendChild(document.createTextNode(r.slice(s,e)));let a=n.appendChild(document.createElement("span"));a.appendChild(document.createTextNode(r.slice(e,o))),a.className="cm-completionMatchedText",s=o}return s<r.length&&n.appendChild(document.createTextNode(r.slice(s))),n},position:50},{render(t){if(!t.detail)return null;let e=document.createElement("span");return e.className="cm-completionDetail",e.textContent=t.detail,e},position:80}),e.sort(((t,e)=>t.position-e.position)).map((t=>t.render))}(s),this.optionClass=s.optionClass,this.range=$c(n.length,r,s.maxRenderedOptions),this.dom=document.createElement("div"),this.dom.className="cm-tooltip-autocomplete",this.dom.addEventListener("mousedown",(e=>{for(let i,r=e.target;r&&r!=this.dom;r=r.parentNode)if("LI"==r.nodeName&&(i=/-(\d+)$/.exec(r.id))&&+i[1]<n.length)return hc(t,n[+i[1]]),void e.preventDefault()})),this.list=this.dom.appendChild(this.createListBox(n,i.id,this.range)),this.list.addEventListener("scroll",(()=>{this.info&&this.view.requestMeasure(this.placeInfo)}))}mount(){this.updateSel()}update(t){t.state.field(this.stateField)!=t.startState.field(this.stateField)&&this.updateSel()}positioned(){this.info&&this.view.requestMeasure(this.placeInfo)}updateSel(){let t=this.view.state.field(this.stateField),e=t.open;if((e.selected<this.range.from||e.selected>=this.range.to)&&(this.range=$c(e.options.length,e.selected,this.view.state.facet(dc).maxRenderedOptions),this.list.remove(),this.list=this.dom.appendChild(this.createListBox(e.options,t.id,this.range)),this.list.addEventListener("scroll",(()=>{this.info&&this.view.requestMeasure(this.placeInfo)}))),this.updateSelectedOption(e.selected)){this.info&&(this.info.remove(),this.info=null);let{completion:i}=e.options[e.selected],{info:n}=i;if(!n)return;let r="string"==typeof n?document.createTextNode(n):n(i);if(!r)return;"then"in r?r.then((e=>{e&&this.view.state.field(this.stateField,!1)==t&&this.addInfoPane(e)})).catch((t=>Wi(this.view.state,t,"completion info"))):this.addInfoPane(r)}}addInfoPane(t){let e=this.info=document.createElement("div");e.className="cm-tooltip cm-completionInfo",e.appendChild(t),this.dom.appendChild(e),this.view.requestMeasure(this.placeInfo)}updateSelectedOption(t){let e=null;for(let i=this.list.firstChild,n=this.range.from;i;i=i.nextSibling,n++)n==t?i.hasAttribute("aria-selected")||(i.setAttribute("aria-selected","true"),e=i):i.hasAttribute("aria-selected")&&i.removeAttribute("aria-selected");return e&&function(t,e){let i=t.getBoundingClientRect(),n=e.getBoundingClientRect();n.top<i.top?t.scrollTop-=i.top-n.top:n.bottom>i.bottom&&(t.scrollTop+=n.bottom-i.bottom)}(this.list,e),e}measureInfo(){let t=this.dom.querySelector("[aria-selected]");if(!t||!this.info)return null;let e=this.dom.getBoundingClientRect(),i=this.info.getBoundingClientRect(),n=t.getBoundingClientRect();if(n.top>Math.min(innerHeight,e.bottom)-10||n.bottom<Math.max(0,e.top)+10)return null;let r=Math.max(0,Math.min(n.top,innerHeight-i.height))-e.top,s=this.view.textDirection==Bi.RTL,o=e.left,a=innerWidth-e.right;return s&&o<Math.min(i.width,a)?s=!1:!s&&a<Math.min(i.width,o)&&(s=!0),{top:r,left:s}}positionInfo(t){this.info&&(this.info.style.top=(t?t.top:-1e6)+"px",t&&(this.info.classList.toggle("cm-completionInfo-left",t.left),this.info.classList.toggle("cm-completionInfo-right",!t.left)))}createListBox(t,e,i){const n=document.createElement("ul");n.id=e,n.setAttribute("role","listbox"),n.setAttribute("aria-expanded","true");for(let r=i.from;r<i.to;r++){let{completion:i,match:s}=t[r];const o=n.appendChild(document.createElement("li"));o.id=e+"-"+r,o.setAttribute("role","option");let a=this.optionClass(i);a&&(o.className=a);for(let t of this.optionContent){let e=t(i,this.view.state,s);e&&o.appendChild(e)}}return i.from&&n.classList.add("cm-completionListIncompleteTop"),i.to<t.length&&n.classList.add("cm-completionListIncompleteBottom"),n}}function _c(t){return 100*(t.boost||0)+(t.apply?10:0)+(t.info?5:0)+(t.type?1:0)}class pc{constructor(t,e,i,n,r){this.options=t,this.attrs=e,this.tooltip=i,this.timestamp=n,this.selected=r}setSelected(t,e){return t==this.selected||t>=this.options.length?this:new pc(this.options,Tc(e,t),this.tooltip,this.timestamp,t)}static build(t,e,i,n,r){let s=function(t,e){let i=[],n=0;for(let r of t)if(r.hasResult())if(!1===r.result.filter)for(let t of r.result.options)i.push(new sc(t,r,[1e9-n++]));else{let t,n=new uc(e.sliceDoc(r.from,r.to));for(let e of r.result.options)(t=n.match(e.label))&&(null!=e.boost&&(t[0]+=e.boost),i.push(new sc(e,r,t)))}let r=[],s=null;for(let t of i.sort(Qc)){if(300==r.length)break;s&&s.label==t.completion.label&&s.detail==t.completion.detail&&s.type==t.completion.type&&s.apply==t.completion.apply?_c(t.completion)>_c(s)&&(r[r.length-1]=t):r.push(t),s=t.completion}return r}(t,e);if(!s.length)return null;let o=0;if(n&&n.selected){let t=n.options[n.selected].completion;for(let e=0;e<s.length;e++)if(s[e].completion==t){o=e;break}}return new pc(s,Tc(i,o),{pos:t.reduce(((t,e)=>e.hasResult()?Math.min(t,e.from):t),1e8),create:(a=Pc,t=>new fc(t,a)),above:r.aboveCursor},n?n.timestamp:Date.now(),o);var a}map(t){return new pc(this.options,this.attrs,Object.assign(Object.assign({},this.tooltip),{pos:t.mapPos(this.tooltip.pos)}),this.timestamp,this.selected)}}class mc{constructor(t,e,i){this.active=t,this.id=e,this.open=i}static start(){return new mc(bc,"cm-ac-"+Math.floor(2e6*Math.random()).toString(36),null)}update(t){let{state:e}=t,i=e.facet(dc),n=(i.override||e.languageDataAt("autocomplete",oc(e)).map(cc)).map((e=>(this.active.find((t=>t.source==e))||new Sc(e,this.active.some((t=>0!=t.state))?1:0)).update(t,i)));n.length==this.active.length&&n.every(((t,e)=>t==this.active[e]))&&(n=this.active);let r=t.selection||n.some((e=>e.hasResult()&&t.changes.touchesRange(e.from,e.to)))||!function(t,e){if(t==e)return!0;for(let i=0,n=0;;){for(;i<t.length&&!t[i].hasResult;)i++;for(;n<e.length&&!e[n].hasResult;)n++;let r=i==t.length,s=n==e.length;if(r||s)return r==s;if(t[i++].result!=e[n++].result)return!1}}(n,this.active)?pc.build(n,e,this.id,this.open,i):this.open&&t.docChanged?this.open.map(t.changes):this.open;!r&&n.every((t=>1!=t.state))&&n.some((t=>t.hasResult()))&&(n=n.map((t=>t.hasResult()?new Sc(t.source,0):t)));for(let e of t.effects)e.is(yc)&&(r=r&&r.setSelected(e.value,this.id));return n==this.active&&r==this.open?this:new mc(n,this.id,r)}get tooltip(){return this.open?this.open.tooltip:null}get attrs(){return this.open?this.open.attrs:gc}}const gc={"aria-autocomplete":"list"};function Tc(t,e){return{"aria-autocomplete":"list","aria-haspopup":"listbox","aria-activedescendant":t+"-"+e,"aria-controls":t}}const bc=[];function Qc(t,e){let i=e.match[0]-t.match[0];return i||t.completion.label.localeCompare(e.completion.label)}function Zc(t){return t.isUserEvent("input.type")?"input":t.isUserEvent("delete.backward")?"delete":null}class Sc{constructor(t,e,i=-1){this.source=t,this.state=e,this.explicitPos=i}hasResult(){return!1}update(t,e){let i=Zc(t),n=this;i?n=n.handleUserEvent(t,i,e):t.docChanged?n=n.handleChange(t):t.selection&&0!=n.state&&(n=new Sc(n.source,0));for(let e of t.effects)if(e.is(xc))n=new Sc(n.source,1,e.value?oc(t.state):-1);else if(e.is(kc))n=new Sc(n.source,0);else if(e.is(wc))for(let t of e.value)t.source==n.source&&(n=t);return n}handleUserEvent(t,e,i){return"delete"!=e&&i.activateOnTyping?new Sc(this.source,1):this.map(t.changes)}handleChange(t){return t.changes.touchesRange(oc(t.startState))?new Sc(this.source,0):this.map(t.changes)}map(t){return t.empty||this.explicitPos<0?this:new Sc(this.source,this.state,t.mapPos(this.explicitPos))}}class vc extends Sc{constructor(t,e,i,n,r,s){super(t,2,e),this.result=i,this.from=n,this.to=r,this.span=s}hasResult(){return!0}handleUserEvent(t,e,i){let n=t.changes.mapPos(this.from),r=t.changes.mapPos(this.to,1),s=oc(t.state);if((this.explicitPos<0?s<=n:s<this.from)||s>r||"delete"==e&&oc(t.startState)==this.from)return new Sc(this.source,"input"==e&&i.activateOnTyping?1:0);let o=this.explicitPos<0?-1:t.changes.mapPos(this.explicitPos);return this.span&&(n==r||this.span.test(t.state.sliceDoc(n,r)))?new vc(this.source,o,this.result,n,r,this.span):new Sc(this.source,1,o)}handleChange(t){return t.changes.touchesRange(this.from,this.to)?new Sc(this.source,0):this.map(t.changes)}map(t){return t.empty?this:new vc(this.source,this.explicitPos<0?-1:t.mapPos(this.explicitPos),this.result,t.mapPos(this.from),t.mapPos(this.to,1),this.span)}}const xc=dt.define(),kc=dt.define(),wc=dt.define({map:(t,e)=>t.map((t=>t.map(e)))}),yc=dt.define(),Pc=A.define({create:()=>mc.start(),update:(t,e)=>t.update(e),provide:t=>[FO.from(t,(t=>t.tooltip)),Jr.contentAttributes.from(t,(t=>t.attrs))]});function Xc(t,e="option"){return i=>{let n=i.state.field(Pc,!1);if(!n||!n.open||Date.now()-n.open.timestamp<75)return!1;let r,s=1;"page"==e&&(r=function(t,e){let i=t.plugin(zO);if(!i)return null;let n=i.manager.tooltips.indexOf(e);return n<0?null:i.manager.tooltipViews[n]}(i,n.open.tooltip))&&(s=Math.max(2,Math.floor(r.dom.offsetHeight/r.dom.querySelector("li").offsetHeight)-1));let o=n.open.selected+s*(t?1:-1),{length:a}=n.open.options;return o<0?o="page"==e?0:a-1:o>=a&&(o="page"==e?a-1:0),i.dispatch({effects:yc.of(o)}),!0}}class Rc{constructor(t,e){this.active=t,this.context=e,this.time=Date.now(),this.updates=[],this.done=void 0}}const Wc=Ji.fromClass(class{constructor(t){this.view=t,this.debounceUpdate=-1,this.running=[],this.debounceAccept=-1,this.composing=0;for(let e of t.state.field(Pc).active)1==e.state&&this.startQuery(e)}update(t){let e=t.state.field(Pc);if(!t.selectionSet&&!t.docChanged&&t.startState.field(Pc)==e)return;let i=t.transactions.some((t=>(t.selection||t.docChanged)&&!Zc(t)));for(let e=0;e<this.running.length;e++){let n=this.running[e];if(i||n.updates.length+t.transactions.length>50&&Date.now()-n.time>1e3){for(let t of n.context.abortListeners)try{t()}catch(t){Wi(this.view.state,t)}n.context.abortListeners=null,this.running.splice(e--,1)}else n.updates.push(...t.transactions)}if(this.debounceUpdate>-1&&clearTimeout(this.debounceUpdate),this.debounceUpdate=e.active.some((t=>1==t.state&&!this.running.some((e=>e.active.source==t.source))))?setTimeout((()=>this.startUpdate()),50):-1,0!=this.composing)for(let e of t.transactions)"input"==Zc(e)?this.composing=2:2==this.composing&&e.selection&&(this.composing=3)}startUpdate(){this.debounceUpdate=-1;let{state:t}=this.view,e=t.field(Pc);for(let t of e.active)1!=t.state||this.running.some((e=>e.active.source==t.source))||this.startQuery(t)}startQuery(t){let{state:e}=this.view,i=oc(e),n=new ic(e,i,t.explicitPos==i),r=new Rc(t,n);this.running.push(r),Promise.resolve(t.source(n)).then((t=>{r.context.aborted||(r.done=t||null,this.scheduleAccept())}),(t=>{this.view.dispatch({effects:kc.of(null)}),Wi(this.view.state,t)}))}scheduleAccept(){this.running.every((t=>void 0!==t.done))?this.accept():this.debounceAccept<0&&(this.debounceAccept=setTimeout((()=>this.accept()),50))}accept(){var t;this.debounceAccept>-1&&clearTimeout(this.debounceAccept),this.debounceAccept=-1;let e=[],i=this.view.state.facet(dc);for(let n=0;n<this.running.length;n++){let r=this.running[n];if(void 0===r.done)continue;if(this.running.splice(n--,1),r.done){let n=new vc(r.active.source,r.active.explicitPos,r.done,r.done.from,null!==(t=r.done.to)&&void 0!==t?t:oc(r.updates.length?r.updates[0].startState:this.view.state),r.done.span&&!1!==r.done.filter?ac(r.done.span,!0):null);for(let t of r.updates)n=n.update(t,i);if(n.hasResult()){e.push(n);continue}}let s=this.view.state.field(Pc).active.find((t=>t.source==r.active.source));if(s&&1==s.state)if(null==r.done){let t=new Sc(r.active.source,0);for(let e of r.updates)t=t.update(e,i);1!=t.state&&e.push(t)}else this.startQuery(s)}e.length&&this.view.dispatch({effects:wc.of(e)})}},{eventHandlers:{compositionstart(){this.composing=1},compositionend(){3==this.composing&&setTimeout((()=>this.view.dispatch({effects:xc.of(!1)})),20),this.composing=0}}}),Yc=Jr.baseTheme({".cm-tooltip.cm-tooltip-autocomplete":{"& > ul":{fontFamily:"monospace",whiteSpace:"nowrap",overflow:"hidden auto",maxWidth_fallback:"700px",maxWidth:"min(700px, 95vw)",minWidth:"250px",maxHeight:"10em",listStyle:"none",margin:0,padding:0,"& > li":{overflowX:"hidden",textOverflow:"ellipsis",cursor:"pointer",padding:"1px 3px",lineHeight:1.2}}},"&light .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#17c",color:"white"},"&dark .cm-tooltip-autocomplete ul li[aria-selected]":{background:"#347",color:"white"},".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after":{content:'"\xb7\xb7\xb7"',opacity:.5,display:"block",textAlign:"center"},".cm-tooltip.cm-completionInfo":{position:"absolute",padding:"3px 9px",width:"max-content",maxWidth:"300px"},".cm-completionInfo.cm-completionInfo-left":{right:"100%"},".cm-completionInfo.cm-completionInfo-right":{left:"100%"},"&light .cm-snippetField":{backgroundColor:"#00000022"},"&dark .cm-snippetField":{backgroundColor:"#ffffff22"},".cm-snippetFieldPosition":{verticalAlign:"text-top",width:0,height:"1.15em",margin:"0 -0.7px -.7em",borderLeft:"1.4px dotted #888"},".cm-completionMatchedText":{textDecoration:"underline"},".cm-completionDetail":{marginLeft:"0.5em",fontStyle:"italic"},".cm-completionIcon":{fontSize:"90%",width:".8em",display:"inline-block",textAlign:"center",paddingRight:".6em",opacity:"0.6"},".cm-completionIcon-function, .cm-completionIcon-method":{"&:after":{content:"'\u0192'"}},".cm-completionIcon-class":{"&:after":{content:"'\u25cb'"}},".cm-completionIcon-interface":{"&:after":{content:"'\u25cc'"}},".cm-completionIcon-variable":{"&:after":{content:"'\ud835\udc65'"}},".cm-completionIcon-constant":{"&:after":{content:"'\ud835\udc36'"}},".cm-completionIcon-type":{"&:after":{content:"'\ud835\udc61'"}},".cm-completionIcon-enum":{"&:after":{content:"'\u222a'"}},".cm-completionIcon-property":{"&:after":{content:"'\u25a1'"}},".cm-completionIcon-keyword":{"&:after":{content:"'\ud83d\udd11\ufe0e'"}},".cm-completionIcon-namespace":{"&:after":{content:"'\u25a2'"}},".cm-completionIcon-text":{"&:after":{content:"'abc'",fontSize:"50%",verticalAlign:"middle"}}});class Cc{constructor(t,e,i,n){this.field=t,this.line=e,this.from=i,this.to=n}}class Vc{constructor(t,e,i){this.field=t,this.from=e,this.to=i}map(t){let e=t.mapPos(this.from,-1,Z.TrackDel),i=t.mapPos(this.to,1,Z.TrackDel);return null==e||null==i?null:new Vc(this.field,e,i)}}class jc{constructor(t,e){this.lines=t,this.fieldPositions=e}instantiate(t,e){let i=[],n=[e],r=t.doc.lineAt(e),s=/^\s*/.exec(r.text)[0];for(let r of this.lines){if(i.length){let i=s,o=/^\t*/.exec(r)[0].length;for(let e=0;e<o;e++)i+=t.facet(ia);n.push(e+i.length-o),r=i+r.slice(o)}i.push(r),e+=r.length+1}let o=this.fieldPositions.map((t=>new Vc(t.field,n[t.line]+t.from,n[t.line]+t.to)));return{text:i,ranges:o}}static parse(t){let e,i=[],n=[],r=[];for(let s of t.split(/\r\n?|\n/)){for(;e=/[#$]\{(?:(\d+)(?::([^}]*))?|([^}]*))\}/.exec(s);){let t=e[1]?+e[1]:null,o=e[2]||e[3]||"",a=-1;for(let e=0;e<i.length;e++)(null!=t?i[e].seq==t:o&&i[e].name==o)&&(a=e);if(a<0){let e=0;for(;e<i.length&&(null==t||null!=i[e].seq&&i[e].seq<t);)e++;i.splice(e,0,{seq:t,name:o}),a=e;for(let t of r)t.field>=a&&t.field++}r.push(new Cc(a,n.length,e.index,e.index+o.length)),s=s.slice(0,e.index)+o+s.slice(e.index+e[0].length)}n.push(s)}return new jc(n,r)}}let Uc=ci.widget({widget:new class extends hi{toDOM(){let t=document.createElement("span");return t.className="cm-snippetFieldPosition",t}ignoreEvent(){return!1}}}),Jc=ci.mark({class:"cm-snippetField"});class Gc{constructor(t,e){this.ranges=t,this.active=e,this.deco=ci.set(t.map((t=>(t.from==t.to?Uc:Jc).range(t.from,t.to))))}map(t){let e=[];for(let i of this.ranges){let n=i.map(t);if(!n)return null;e.push(n)}return new Gc(e,this.active)}selectionInsideField(t){return t.ranges.every((t=>this.ranges.some((e=>e.field==this.active&&e.from<=t.from&&e.to>=t.to))))}}const Dc=dt.define({map:(t,e)=>t&&t.map(e)}),Mc=dt.define(),Ac=A.define({create:()=>null,update(t,e){for(let i of e.effects){if(i.is(Dc))return i.value;if(i.is(Mc)&&t)return new Gc(t.ranges,i.value)}return t&&e.docChanged&&(t=t.map(e.changes)),t&&e.selection&&!t.selectionInsideField(e.selection)&&(t=null),t},provide:t=>Jr.decorations.from(t,(t=>t?t.deco:ci.none))});function Ic(t,e){return W.create(t.filter((t=>t.field==e)).map((t=>W.range(t.from,t.to))))}function qc(t){let e=jc.parse(t);return(t,i,n,r)=>{let{text:s,ranges:o}=e.instantiate(t.state,n),a={changes:{from:n,to:r,insert:d.of(s)}};if(o.length&&(a.selection=Ic(o,0)),o.length>1){let e=new Gc(o,0),i=a.effects=[Dc.of(e)];void 0===t.state.field(Ac,!1)&&i.push(dt.appendConfig.of([Ac,Fc,Lc,Yc]))}t.dispatch(t.state.update(a))}}function zc(t){return({state:e,dispatch:i})=>{let n=e.field(Ac,!1);if(!n||t<0&&0==n.active)return!1;let r=n.active+t,s=t>0&&!n.ranges.some((e=>e.field==r+t));return i(e.update({selection:Ic(n.ranges,r),effects:Dc.of(s?null:new Gc(n.ranges,r))})),!0}}const Ec=[{key:"Tab",run:zc(1),shift:zc(-1)},{key:"Escape",run:({state:t,dispatch:e})=>!!t.field(Ac,!1)&&(e(t.update({effects:Dc.of(null)})),!0)}],Bc=j.define({combine:t=>t.length?t[0]:Ec}),Fc=N.highest(Br.compute([Bc],(t=>t.facet(Bc))));function Nc(t,e){return Object.assign(Object.assign({},e),{apply:qc(t)})}const Lc=Jr.domEventHandlers({mousedown(t,e){let i,n=e.state.field(Ac,!1);if(!n||null==(i=e.posAtCoords({x:t.clientX,y:t.clientY})))return!1;let r=n.ranges.find((t=>t.from<=i&&t.to>=i));return!(!r||r.field==n.active)&&(e.dispatch({selection:Ic(n.ranges,r.field),effects:Dc.of(n.ranges.some((t=>t.field>r.field))?new Gc(n.ranges,r.field):null)}),!0)}});const Kc=[{key:"Ctrl-Space",run:t=>!!t.state.field(Pc,!1)&&(t.dispatch({effects:xc.of(!0)}),!0)},{key:"Escape",run:t=>{let e=t.state.field(Pc,!1);return!(!e||!e.active.some((t=>0!=t.state)))&&(t.dispatch({effects:kc.of(null)}),!0)}},{key:"ArrowDown",run:Xc(!0)},{key:"ArrowUp",run:Xc(!1)},{key:"PageDown",run:Xc(!0,"page")},{key:"PageUp",run:Xc(!1,"page")},{key:"Enter",run:t=>{let e=t.state.field(Pc,!1);return!(t.state.readOnly||!e||!e.open||Date.now()-e.open.timestamp<75)&&(hc(t,e.open.options[e.open.selected]),!0)}}],Hc=N.highest(Br.computeN([dc],(t=>t.facet(dc).defaultKeymap?[Kc]:[])));function tu(t,e){return({state:i,dispatch:n})=>{if(i.readOnly)return!1;let r=t(e,i);return!!r&&(n(i.update(r)),!0)}}const eu=tu(au,0),iu=tu(ou,0),nu=tu(((t,e)=>ou(t,e,function(t){let e=[];for(let i of t.selection.ranges){let n=t.doc.lineAt(i.from),r=i.to<=n.to?n:t.doc.lineAt(i.to),s=e.length-1;s>=0&&e[s].to>n.from?e[s].to=r.to:e.push({from:n.from,to:r.to})}return e}(e))),0),ru=[{key:"Mod-/",run:t=>{let e=su(t.state);return e.line?eu(t):!!e.block&&nu(t)}},{key:"Alt-A",run:iu}];function su(t,e=t.selection.main.head){let i=t.languageDataAt("commentTokens",e);return i.length?i[0]:{}}function ou(t,e,i=e.selection.ranges){let n=i.map((t=>su(e,t.from).block));if(!n.every((t=>t)))return null;let r=i.map(((t,i)=>function(t,{open:e,close:i},n,r){let s,o,a=t.sliceDoc(n-50,n),l=t.sliceDoc(r,r+50),h=/\s*$/.exec(a)[0].length,O=/^\s*/.exec(l)[0].length,c=a.length-h;if(a.slice(c-e.length,c)==e&&l.slice(O,O+i.length)==i)return{open:{pos:n-h,margin:h&&1},close:{pos:r+O,margin:O&&1}};r-n<=100?s=o=t.sliceDoc(n,r):(s=t.sliceDoc(n,n+50),o=t.sliceDoc(r-50,r));let u=/^\s*/.exec(s)[0].length,d=/\s*$/.exec(o)[0].length,$=o.length-d-i.length;return s.slice(u,u+e.length)==e&&o.slice($,$+i.length)==i?{open:{pos:n+u+e.length,margin:/\s/.test(s.charAt(u+e.length))?1:0},close:{pos:r-d-i.length,margin:/\s/.test(o.charAt($-1))?1:0}}:null}(e,n[i],t.from,t.to)));if(2!=t&&!r.every((t=>t)))return{changes:e.changes(i.map(((t,e)=>r[e]?[]:[{from:t.from,insert:n[e].open+" "},{from:t.to,insert:" "+n[e].close}])))};if(1!=t&&r.some((t=>t))){let t=[];for(let e,i=0;i<r.length;i++)if(e=r[i]){let r=n[i],{open:s,close:o}=e;t.push({from:s.pos-r.open.length,to:s.pos+s.margin},{from:o.pos-o.margin,to:o.pos+r.close.length})}return{changes:t}}return null}function au(t,e,i=e.selection.ranges){let n=[],r=-1;for(let{from:t,to:s}of i){let i=n.length,o=1e9;for(let i=t;i<=s;){let a=e.doc.lineAt(i);if(a.from>r&&(t==s||s>a.from)){r=a.from;let t=su(e,i).line;if(!t)continue;let s=/^\s*/.exec(a.text)[0].length,l=s==a.length,h=a.text.slice(s,s+t.length)==t?s:-1;s<a.text.length&&s<o&&(o=s),n.push({line:a,comment:h,token:t,indent:s,empty:l,single:!1})}i=a.to+1}if(o<1e9)for(let t=i;t<n.length;t++)n[t].indent<n[t].line.text.length&&(n[t].indent=o);n.length==i+1&&(n[i].single=!0)}if(2!=t&&n.some((t=>t.comment<0&&(!t.empty||t.single)))){let t=[];for(let{line:e,token:i,indent:r,empty:s,single:o}of n)!o&&s||t.push({from:e.from+r,insert:i+" "});let i=e.changes(t);return{changes:i,selection:e.selection.map(i,1)}}if(1!=t&&n.some((t=>t.comment>=0))){let t=[];for(let{line:e,comment:i,token:r}of n)if(i>=0){let n=e.from+i,s=n+r.length;" "==e.text[s-e.from]&&s++,t.push({from:n,to:s})}return{changes:t}}return null}const lu=2e3;function hu(t,e){let i=t.posAtCoords({x:e.clientX,y:e.clientY},!1),n=t.state.doc.lineAt(i),r=i-n.from,s=r>lu?-1:r==n.length?function(t,e){let i=t.coordsAtPos(t.viewport.from);return i?Math.round(Math.abs((i.left-e)/t.defaultCharacterWidth)):-1}(t,e.clientX):c(n.text,t.state.tabSize,i-n.from);return{line:n.number,col:s,off:r}}function Ou(t,e){let i=hu(t,e),n=t.state.selection;return i?{update(t){if(t.docChanged){let e=t.changes.mapPos(t.startState.doc.line(i.line).from),r=t.state.doc.lineAt(e);i={line:r.number,col:i.col,off:Math.min(i.off,r.length)},n=n.map(t.changes)}},get(e,r,s){let o=hu(t,e);if(!o)return n;let a=function(t,e,i){let n=Math.min(e.line,i.line),r=Math.max(e.line,i.line),s=[];if(e.off>lu||i.off>lu||e.col<0||i.col<0){let o=Math.min(e.off,i.off),a=Math.max(e.off,i.off);for(let e=n;e<=r;e++){let i=t.doc.line(e);i.length<=a&&s.push(W.range(i.from+o,i.to+a))}}else{let o=Math.min(e.col,i.col),a=Math.max(e.col,i.col);for(let e=n;e<=r;e++){let i=t.doc.line(e),n=u(i.text,o,t.tabSize,!0);if(n>-1){let e=u(i.text,a,t.tabSize);s.push(W.range(i.from+n,i.from+e))}}}return s}(t.state,i,o);return a.length?s?W.create(a.concat(n.ranges)):W.create(a):n}}:null}let cu=0;class uu{constructor(t,e,i){this.set=t,this.base=e,this.modified=i,this.id=cu++}static define(t){if(null==t?void 0:t.base)throw new Error("Can not derive from a modified tag");let e=new uu([],null,[]);if(e.set.push(e),t)for(let i of t.set)e.set.push(i);return e}static defineModifier(){let t=new $u;return e=>e.modified.indexOf(t)>-1?e:$u.get(e.base||e,e.modified.concat(t).sort(((t,e)=>t.id-e.id)))}}let du=0;class $u{constructor(){this.instances=[],this.id=du++}static get(t,e){if(!e.length)return t;let i=e[0].instances.find((i=>{return i.base==t&&(n=e,r=i.modified,n.length==r.length&&n.every(((t,e)=>t==r[e])));var n,r}));if(i)return i;let n=[],r=new uu(n,t,e);for(let t of e)t.instances.push(r);let s=fu(e);for(let e of t.set)for(let t of s)n.push($u.get(e,t));return r}}function fu(t){let e=[t];for(let i=0;i<t.length;i++)for(let n of fu(t.slice(0,i).concat(t.slice(i+1))))e.push(n);return e}function _u(t){let e=Object.create(null);for(let i in t){let n=t[i];Array.isArray(n)||(n=[n]);for(let t of i.split(" "))if(t){let i=[],r=2,s=t;for(let e=0;;){if("..."==s&&e>0&&e+3==t.length){r=1;break}let n=/^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(s);if(!n)throw new RangeError("Invalid path: "+t);if(i.push("*"==n[0]?null:'"'==n[0][0]?JSON.parse(n[0]):n[0]),e+=n[0].length,e==t.length)break;let o=t[e++];if(e==t.length&&"!"==o){r=0;break}if("/"!=o)throw new RangeError("Invalid path: "+t);s=t.slice(e)}let o=i.length-1,a=i[o];if(!a)throw new RangeError("Invalid path: "+t);let l=new bu(n,r,o>0?i.slice(0,o):null);e[a]=l.sort(e[a])}}return pu.add(e)}const pu=new Ks,mu=j.define({combine:t=>t.length?Qu.combinedMatch(t):null}),gu=j.define({combine:t=>t.length?t[0].match:null});function Tu(t){return t.facet(mu)||t.facet(gu)}class bu{constructor(t,e,i,n){this.tags=t,this.mode=e,this.context=i,this.next=n}sort(t){return!t||t.depth<this.depth?(this.next=t,this):(t.next=this.sort(t.next),t)}get depth(){return this.context?this.context.length:0}}class Qu{constructor(t,e){let i;function n(t){let e=jt.newName();return(i||(i=Object.create(null)))["."+e]=t,e}this.map=Object.create(null),this.all="string"==typeof e.all?e.all:e.all?n(e.all):null;for(let e of t){let t=(e.class||n(Object.assign({},e,{tag:null})))+(this.all?" "+this.all:""),i=e.tag;if(Array.isArray(i))for(let e of i)this.map[e.id]=t;else this.map[i.id]=t}this.module=i?new jt(i):null,this.scope=e.scope||null,this.match=this.match.bind(this);let r=[Su];this.module&&r.push(Jr.styleModule.of(this.module)),this.extension=r.concat(null==e.themeType?mu.of(this):mu.computeN([Jr.darkTheme],(t=>t.facet(Jr.darkTheme)==("dark"==e.themeType)?[this]:[]))),this.fallback=r.concat(gu.of(this))}match(t,e){if(this.scope&&e!=this.scope)return null;for(let e of t.set){let i=this.map[e.id];if(void 0!==i)return e!=t&&(this.map[t.id]=i),i}return this.map[t.id]=this.all}static combinedMatch(t){if(1==t.length)return t[0].match;let e=t.some((t=>t.scope))?void 0:Object.create(null);return(i,n)=>{let r=e&&e[i.id];if(void 0!==r)return r;let s=null;for(let e of t){let t=e.match(i,n);t&&(s=s?s+" "+t:t)}return e&&(e[i.id]=s),s}}static define(t,e){return new Qu(t,e||{})}static get(t,e,i){let n=Tu(t);return n&&n(e,i||eo.none)}}class Zu{constructor(t){this.markCache=Object.create(null),this.tree=Ao(t.state),this.decorations=this.buildDeco(t,Tu(t.state))}update(t){let e=Ao(t.state),i=Tu(t.state),n=i!=t.startState.facet(mu);e.length<t.view.viewport.to&&!n&&e.type==this.tree.type?this.decorations=this.decorations.map(t.changes):(e!=this.tree||t.viewportChanged||n)&&(this.tree=e,this.decorations=this.buildDeco(t.view,i))}buildDeco(t,e){if(!e||!this.tree.length)return ci.none;let i=new qt;for(let{from:n,to:r}of t.visibleRanges)ku(this.tree,n,r,e,((t,e,n)=>{i.add(t,e,this.markCache[n]||(this.markCache[n]=ci.mark({class:n})))}));return i.finish()}}const Su=N.high(Ji.fromClass(Zu,{decorations:t=>t.decorations})),vu=[""];class xu{constructor(t,e,i){this.at=t,this.style=e,this.span=i,this.class=""}startSpan(t,e){e!=this.class&&(this.flush(t),t>this.at&&(this.at=t),this.class=e)}flush(t){t>this.at&&this.class&&this.span(this.at,t,this.class)}highlightRange(t,e,i,n,r,s){let{type:o,from:a,to:l}=t;if(a>=i||l<=e)return;vu[r]=o.name,o.isTop&&(s=o);let h=n,O=o.prop(pu),c=!1;for(;O;){if(!O.context||wu(O.context,vu,r)){for(let t of O.tags){let e=this.style(t,s);e&&(h&&(h+=" "),h+=e,1==O.mode?n+=(n?" ":"")+e:0==O.mode&&(c=!0))}break}O=O.next}if(this.startSpan(t.from,h),c)return;let u=t.tree&&t.tree.prop(Ks.mounted);if(u&&u.overlay){let o=t.node.enter(u.overlay[0].from+a,1),O=t.firstChild();for(let c=0,d=a;;c++){let $=c<u.overlay.length?u.overlay[c]:null,f=$?$.from+a:l,_=Math.max(e,d),p=Math.min(i,f);if(_<p&&O)for(;t.from<p&&(this.highlightRange(t,_,p,n,r+1,s),this.startSpan(Math.min(i,t.to),h),!(t.to>=f)&&t.nextSibling()););if(!$||f>i)break;d=$.to+a,d>e&&(this.highlightRange(o.cursor,Math.max(e,$.from+a),Math.min(i,d),n,r,u.tree.type),this.startSpan(d,h))}O&&t.parent()}else if(t.firstChild()){do{if(!(t.to<=e)){if(t.from>=i)break;this.highlightRange(t,e,i,n,r+1,s),this.startSpan(Math.min(i,t.to),h)}}while(t.nextSibling());t.parent()}}}function ku(t,e,i,n,r){let s=new xu(e,n,r);s.highlightRange(t.cursor(),e,i,"",0,t.type),s.flush(i)}function wu(t,e,i){if(t.length>i-1)return!1;for(let n=i-1,r=t.length-1;r>=0;r--,n--){let i=t[r];if(i&&i!=e[n])return!1}return!0}const yu=uu.define,Pu=yu(),Xu=yu(),Ru=yu(Xu),Wu=yu(Xu),Yu=yu(),Cu=yu(Yu),Vu=yu(Yu),ju=yu(),Uu=yu(ju),Ju=yu(),Gu=yu(),Du=yu(),Mu=yu(Du),Au=yu(),Iu={comment:Pu,lineComment:yu(Pu),blockComment:yu(Pu),docComment:yu(Pu),name:Xu,variableName:yu(Xu),typeName:Ru,tagName:yu(Ru),propertyName:Wu,attributeName:yu(Wu),className:yu(Xu),labelName:yu(Xu),namespace:yu(Xu),macroName:yu(Xu),literal:Yu,string:Cu,docString:yu(Cu),character:yu(Cu),attributeValue:yu(Cu),number:Vu,integer:yu(Vu),float:yu(Vu),bool:yu(Yu),regexp:yu(Yu),escape:yu(Yu),color:yu(Yu),url:yu(Yu),keyword:Ju,self:yu(Ju),null:yu(Ju),atom:yu(Ju),unit:yu(Ju),modifier:yu(Ju),operatorKeyword:yu(Ju),controlKeyword:yu(Ju),definitionKeyword:yu(Ju),moduleKeyword:yu(Ju),operator:Gu,derefOperator:yu(Gu),arithmeticOperator:yu(Gu),logicOperator:yu(Gu),bitwiseOperator:yu(Gu),compareOperator:yu(Gu),updateOperator:yu(Gu),definitionOperator:yu(Gu),typeOperator:yu(Gu),controlOperator:yu(Gu),punctuation:Du,separator:yu(Du),bracket:Mu,angleBracket:yu(Mu),squareBracket:yu(Mu),paren:yu(Mu),brace:yu(Mu),content:ju,heading:Uu,heading1:yu(Uu),heading2:yu(Uu),heading3:yu(Uu),heading4:yu(Uu),heading5:yu(Uu),heading6:yu(Uu),contentSeparator:yu(ju),list:yu(ju),quote:yu(ju),emphasis:yu(ju),strong:yu(ju),link:yu(ju),monospace:yu(ju),strikethrough:yu(ju),inserted:yu(),deleted:yu(),changed:yu(),invalid:yu(),meta:Au,documentMeta:yu(Au),annotation:yu(Au),processingInstruction:yu(Au),definition:uu.defineModifier(),constant:uu.defineModifier(),function:uu.defineModifier(),standard:uu.defineModifier(),local:uu.defineModifier(),special:uu.defineModifier()},qu=Qu.define([{tag:Iu.link,textDecoration:"underline"},{tag:Iu.heading,textDecoration:"underline",fontWeight:"bold"},{tag:Iu.emphasis,fontStyle:"italic"},{tag:Iu.strong,fontWeight:"bold"},{tag:Iu.strikethrough,textDecoration:"line-through"},{tag:Iu.keyword,color:"#708"},{tag:[Iu.atom,Iu.bool,Iu.url,Iu.contentSeparator,Iu.labelName],color:"#219"},{tag:[Iu.literal,Iu.inserted],color:"#164"},{tag:[Iu.string,Iu.deleted],color:"#a11"},{tag:[Iu.regexp,Iu.escape,Iu.special(Iu.string)],color:"#e40"},{tag:Iu.definition(Iu.variableName),color:"#00f"},{tag:Iu.local(Iu.variableName),color:"#30a"},{tag:[Iu.typeName,Iu.namespace],color:"#085"},{tag:Iu.className,color:"#167"},{tag:[Iu.special(Iu.variableName),Iu.macroName],color:"#256"},{tag:Iu.definition(Iu.propertyName),color:"#00c"},{tag:Iu.comment,color:"#940"},{tag:Iu.meta,color:"#7a757a"},{tag:Iu.invalid,color:"#f00"}]);Iu.link,Iu.heading,Iu.emphasis,Iu.strong,Iu.keyword,Iu.atom,Iu.bool,Iu.url,Iu.labelName,Iu.inserted,Iu.deleted,Iu.literal,Iu.string,Iu.number,Iu.regexp,Iu.escape,Iu.string,Iu.variableName,Iu.variableName,Iu.variableName,Iu.variableName,Iu.propertyName,Iu.typeName,Iu.namespace,Iu.className,Iu.macroName,Iu.propertyName,Iu.operator,Iu.comment,Iu.meta,Iu.invalid,Iu.punctuation;class zu{constructor(t,e,i){this.from=t,this.to=e,this.diagnostic=i}}class Eu{constructor(t,e,i){this.diagnostics=t,this.panel=e,this.selected=i}static init(t,e,i){let n=ci.set(t.map((t=>t.from==t.to||t.from==t.to-1&&i.doc.lineAt(t.from).to==t.from?ci.widget({widget:new od(t),diagnostic:t}).range(t.from):ci.mark({attributes:{class:"cm-lintRange cm-lintRange-"+t.severity},diagnostic:t}).range(t.from,t.to))),!0);return new Eu(n,e,Bu(n))}}function Bu(t,e=null,i=0){let n=null;return t.between(i,1e9,((t,i,{spec:r})=>{if(!e||r.diagnostic==e)return n=new zu(t,i,r.diagnostic),!1})),n}const Fu=dt.define(),Nu=dt.define(),Lu=dt.define(),Ku=A.define({create:()=>new Eu(ci.none,null,null),update(t,e){if(e.docChanged){let i=t.diagnostics.map(e.changes),n=null;if(t.selected){let r=e.changes.mapPos(t.selected.from,1);n=Bu(i,t.selected.diagnostic,r)||Bu(i,null,r)}t=new Eu(i,t.panel,n)}for(let i of e.effects)i.is(Fu)?t=Eu.init(i.value,t.panel,e.state):i.is(Nu)?t=new Eu(t.diagnostics,i.value?ld.open:null,t.selected):i.is(Lu)&&(t=new Eu(t.diagnostics,t.panel,i.value));return t},provide:t=>[Mh.from(t,(t=>t.panel)),Jr.decorations.from(t,(t=>t.diagnostics))]}),Hu=ci.mark({class:"cm-lintRange cm-lintRange-active"});function td(t,e,i){let{diagnostics:n}=t.state.field(Ku),r=[],s=2e8,o=0;return n.between(e-(i<0?1:0),e+(i>0?1:0),((t,n,{spec:a})=>{e>=t&&e<=n&&(t==n||(e>t||i>0)&&(e<n||i<0))&&(r.push(a.diagnostic),s=Math.min(t,s),o=Math.max(n,o))})),r.length?{pos:s,end:o,above:t.state.doc.lineAt(s).to<o,create:()=>({dom:ed(t,r)})}:null}function ed(t,e){return Ah("ul",{class:"cm-tooltip-lint"},e.map((e=>sd(t,e,!1))))}const id=t=>{let e=t.state.field(Ku,!1);return!(!e||!e.panel)&&(t.dispatch({effects:Nu.of(!1)}),!0)},nd=[{key:"Mod-Shift-m",run:t=>{let e=t.state.field(Ku,!1);var i,n;e&&e.panel||t.dispatch({effects:(i=t.state,n=[Nu.of(!0)],i.field(Ku,!1)?n:n.concat(dt.appendConfig.of([Ku,Jr.decorations.compute([Ku],(t=>{let{selected:e,panel:i}=t.field(Ku);return e&&i&&e.from!=e.to?ci.set([Hu.range(e.from,e.to)]):ci.none})),tc(td),Od])))});let r=jh(t,ld.open);return r&&r.dom.querySelector(".cm-panel-lint ul").focus(),!0}},{key:"F8",run:t=>{let e=t.state.field(Ku,!1);if(!e)return!1;let i=t.state.selection.main,n=e.diagnostics.iter(i.to+1);return!(!n.value&&(n=e.diagnostics.iter(0),!n.value||n.from==i.from&&n.to==i.to))&&(t.dispatch({selection:{anchor:n.from,head:n.to},scrollIntoView:!0}),!0)}}];function rd(t){let e=[];if(t)t:for(let{name:i}of t){for(let t=0;t<i.length;t++){let n=i[t];if(/[a-zA-Z]/.test(n)&&!e.some((t=>t.toLowerCase()==n.toLowerCase()))){e.push(n);continue t}}e.push("")}return e}function sd(t,e,i){var n;let r=i?rd(e.actions):[];return Ah("li",{class:"cm-diagnostic cm-diagnostic-"+e.severity},Ah("span",{class:"cm-diagnosticText"},e.message),null===(n=e.actions)||void 0===n?void 0:n.map(((i,n)=>{let s=n=>{n.preventDefault();let r=Bu(t.state.field(Ku).diagnostics,e);r&&i.apply(t,r.from,r.to)},{name:o}=i,a=r[n]?o.indexOf(r[n]):-1,l=a<0?o:[o.slice(0,a),Ah("u",o.slice(a,a+1)),o.slice(a+1)];return Ah("button",{type:"button",class:"cm-diagnosticAction",onclick:s,onmousedown:s,"aria-label":` Action: ${o}${a<0?"":` (access key "${r[n]})"`}.`},l)})),e.source&&Ah("div",{class:"cm-diagnosticSource"},e.source))}class od extends hi{constructor(t){super(),this.diagnostic=t}eq(t){return t.diagnostic==this.diagnostic}toDOM(){return Ah("span",{class:"cm-lintPoint cm-lintPoint-"+this.diagnostic.severity})}}class ad{constructor(t,e){this.diagnostic=e,this.id="item_"+Math.floor(4294967295*Math.random()).toString(16),this.dom=sd(t,e,!0),this.dom.id=this.id,this.dom.setAttribute("role","option")}}class ld{constructor(t){this.view=t,this.items=[];this.list=Ah("ul",{tabIndex:0,role:"listbox","aria-label":this.view.state.phrase("Diagnostics"),onkeydown:e=>{if(27==e.keyCode)id(this.view),this.view.focus();else if(38==e.keyCode||33==e.keyCode)this.moveSelection((this.selectedIndex-1+this.items.length)%this.items.length);else if(40==e.keyCode||34==e.keyCode)this.moveSelection((this.selectedIndex+1)%this.items.length);else if(36==e.keyCode)this.moveSelection(0);else if(35==e.keyCode)this.moveSelection(this.items.length-1);else if(13==e.keyCode)this.view.focus();else{if(!(e.keyCode>=65&&e.keyCode<=90&&this.selectedIndex>=0))return;{let{diagnostic:i}=this.items[this.selectedIndex],n=rd(i.actions);for(let r=0;r<n.length;r++)if(n[r].toUpperCase().charCodeAt(0)==e.keyCode){let e=Bu(this.view.state.field(Ku).diagnostics,i);e&&i.actions[r].apply(t,e.from,e.to)}}}e.preventDefault()},onclick:t=>{for(let e=0;e<this.items.length;e++)this.items[e].dom.contains(t.target)&&this.moveSelection(e)}}),this.dom=Ah("div",{class:"cm-panel-lint"},this.list,Ah("button",{type:"button",name:"close","aria-label":this.view.state.phrase("close"),onclick:()=>id(this.view)},"\xd7")),this.update()}get selectedIndex(){let t=this.view.state.field(Ku).selected;if(!t)return-1;for(let e=0;e<this.items.length;e++)if(this.items[e].diagnostic==t.diagnostic)return e;return-1}update(){let{diagnostics:t,selected:e}=this.view.state.field(Ku),i=0,n=!1,r=null;for(t.between(0,this.view.state.doc.length,((t,s,{spec:o})=>{let a,l=-1;for(let t=i;t<this.items.length;t++)if(this.items[t].diagnostic==o.diagnostic){l=t;break}l<0?(a=new ad(this.view,o.diagnostic),this.items.splice(i,0,a),n=!0):(a=this.items[l],l>i&&(this.items.splice(i,l-i),n=!0)),e&&a.diagnostic==e.diagnostic?a.dom.hasAttribute("aria-selected")||(a.dom.setAttribute("aria-selected","true"),r=a):a.dom.hasAttribute("aria-selected")&&a.dom.removeAttribute("aria-selected"),i++}));i<this.items.length&&!(1==this.items.length&&this.items[0].diagnostic.from<0);)n=!0,this.items.pop();0==this.items.length&&(this.items.push(new ad(this.view,{from:-1,to:-1,severity:"info",message:this.view.state.phrase("No diagnostics")})),n=!0),r?(this.list.setAttribute("aria-activedescendant",r.id),this.view.requestMeasure({key:this,read:()=>({sel:r.dom.getBoundingClientRect(),panel:this.list.getBoundingClientRect()}),write:({sel:t,panel:e})=>{t.top<e.top?this.list.scrollTop-=e.top-t.top:t.bottom>e.bottom&&(this.list.scrollTop+=t.bottom-e.bottom)}})):this.selectedIndex<0&&this.list.removeAttribute("aria-activedescendant"),n&&this.sync()}sync(){let t=this.list.firstChild;function e(){let e=t;t=e.nextSibling,e.remove()}for(let i of this.items)if(i.dom.parentNode==this.list){for(;t!=i.dom;)e();t=i.dom.nextSibling}else this.list.insertBefore(i.dom,t);for(;t;)e()}moveSelection(t){if(this.selectedIndex<0)return;let e=Bu(this.view.state.field(Ku).diagnostics,this.items[t].diagnostic);e&&this.view.dispatch({selection:{anchor:e.from,head:e.to},scrollIntoView:!0,effects:Lu.of(e)})}static open(t){return new ld(t)}}function hd(t){return function(t,e='viewBox="0 0 40 40"'){return`url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`}(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`,'width="6" height="3"')}const Od=Jr.baseTheme({".cm-diagnostic":{padding:"3px 6px 3px 8px",marginLeft:"-1px",display:"block",whiteSpace:"pre-wrap"},".cm-diagnostic-error":{borderLeft:"5px solid #d11"},".cm-diagnostic-warning":{borderLeft:"5px solid orange"},".cm-diagnostic-info":{borderLeft:"5px solid #999"},".cm-diagnosticAction":{font:"inherit",border:"none",padding:"2px 4px",backgroundColor:"#444",color:"white",borderRadius:"3px",marginLeft:"8px"},".cm-diagnosticSource":{fontSize:"70%",opacity:.7},".cm-lintRange":{backgroundPosition:"left bottom",backgroundRepeat:"repeat-x",paddingBottom:"0.7px"},".cm-lintRange-error":{backgroundImage:hd("#d11")},".cm-lintRange-warning":{backgroundImage:hd("orange")},".cm-lintRange-info":{backgroundImage:hd("#999")},".cm-lintRange-active":{backgroundColor:"#ffdd9980"},".cm-tooltip-lint":{padding:0,margin:0},".cm-lintPoint":{position:"relative","&:after":{content:'""',position:"absolute",bottom:0,left:"-2px",borderLeft:"3px solid transparent",borderRight:"3px solid transparent",borderBottom:"4px solid #d11"}},".cm-lintPoint-warning":{"&:after":{borderBottomColor:"orange"}},".cm-lintPoint-info":{"&:after":{borderBottomColor:"#999"}},".cm-panel.cm-panel-lint":{position:"relative","& ul":{maxHeight:"100px",overflowY:"auto","& [aria-selected]":{backgroundColor:"#ddd","& u":{textDecoration:"underline"}},"&:focus [aria-selected]":{background_fallback:"#bdf",backgroundColor:"Highlight",color_fallback:"white",color:"HighlightText"},"& u":{textDecoration:"none"},padding:0,margin:0},"& [name=close]":{position:"absolute",top:"0",right:"2px",background:"inherit",border:"none",font:"inherit",padding:0,margin:0}}});class cd{constructor(t,e,i,n,r,s,o,a,l,h=0,O){this.p=t,this.stack=e,this.state=i,this.reducePos=n,this.pos=r,this.score=s,this.buffer=o,this.bufferBase=a,this.curContext=l,this.lookAhead=h,this.parent=O}toString(){return`[${this.stack.filter(((t,e)=>e%3==0)).concat(this.state)}]@${this.pos}${this.score?"!"+this.score:""}`}static start(t,e,i=0){let n=t.parser.context;return new cd(t,[],e,i,i,0,[],0,n?new ud(n,n.start):null,0,null)}get context(){return this.curContext?this.curContext.context:null}pushState(t,e){this.stack.push(this.state,e,this.bufferBase+this.buffer.length),this.state=t}reduce(t){let e=t>>19,i=65535&t,{parser:n}=this.p,r=n.dynamicPrecedence(i);if(r&&(this.score+=r),0==e)return this.pushState(n.getGoto(this.state,i,!0),this.reducePos),i<n.minRepeatTerm&&this.storeNode(i,this.reducePos,this.reducePos,4,!0),void this.reduceContext(i,this.reducePos);let s=this.stack.length-3*(e-1)-(262144&t?6:0),o=this.stack[s-2],a=this.stack[s-1],l=this.bufferBase+this.buffer.length-a;if(i<n.minRepeatTerm||131072&t){let t=n.stateFlag(this.state,1)?this.pos:this.reducePos;this.storeNode(i,o,t,l+4,!0)}if(262144&t)this.state=this.stack[s];else{let t=this.stack[s-3];this.state=n.getGoto(t,i,!0)}for(;this.stack.length>s;)this.stack.pop();this.reduceContext(i,o)}storeNode(t,e,i,n=4,r=!1){if(0==t){let t=this,n=this.buffer.length;if(0==n&&t.parent&&(n=t.bufferBase-t.parent.bufferBase,t=t.parent),n>0&&0==t.buffer[n-4]&&t.buffer[n-1]>-1){if(e==i)return;if(t.buffer[n-2]>=e)return void(t.buffer[n-2]=i)}}if(r&&this.pos!=i){let r=this.buffer.length;if(r>0&&0!=this.buffer[r-4])for(;r>0&&this.buffer[r-2]>i;)this.buffer[r]=this.buffer[r-4],this.buffer[r+1]=this.buffer[r-3],this.buffer[r+2]=this.buffer[r-2],this.buffer[r+3]=this.buffer[r-1],r-=4,n>4&&(n-=4);this.buffer[r]=t,this.buffer[r+1]=e,this.buffer[r+2]=i,this.buffer[r+3]=n}else this.buffer.push(t,e,i,n)}shift(t,e,i){let n=this.pos;if(131072&t)this.pushState(65535&t,this.pos);else if(0==(262144&t)){let r=t,{parser:s}=this.p;(i>this.pos||e<=s.maxNode)&&(this.pos=i,s.stateFlag(r,1)||(this.reducePos=i)),this.pushState(r,n),this.shiftContext(e,n),e<=s.maxNode&&this.buffer.push(e,n,i,4)}else this.pos=i,this.shiftContext(e,n),e<=this.p.parser.maxNode&&this.buffer.push(e,n,i,4)}apply(t,e,i){65536&t?this.reduce(t):this.shift(t,e,i)}useNode(t,e){let i=this.p.reused.length-1;(i<0||this.p.reused[i]!=t)&&(this.p.reused.push(t),i++);let n=this.pos;this.reducePos=this.pos=n+t.length,this.pushState(e,n),this.buffer.push(i,n,this.reducePos,-1),this.curContext&&this.updateContext(this.curContext.tracker.reuse(this.curContext.context,t,this,this.p.stream.reset(this.pos-t.length)))}split(){let t=this,e=t.buffer.length;for(;e>0&&t.buffer[e-2]>t.reducePos;)e-=4;let i=t.buffer.slice(e),n=t.bufferBase+e;for(;t&&n==t.bufferBase;)t=t.parent;return new cd(this.p,this.stack.slice(),this.state,this.reducePos,this.pos,this.score,i,n,this.curContext,this.lookAhead,t)}recoverByDelete(t,e){let i=t<=this.p.parser.maxNode;i&&this.storeNode(t,this.pos,e,4),this.storeNode(0,this.pos,e,i?8:4),this.pos=this.reducePos=e,this.score-=190}canShift(t){for(let e=new $d(this);;){let i=this.p.parser.stateSlot(e.state,4)||this.p.parser.hasAction(e.state,t);if(0==(65536&i))return!0;if(0==i)return!1;e.reduce(i)}}recoverByInsert(t){if(this.stack.length>=300)return[];let e=this.p.parser.nextStates(this.state);if(e.length>8||this.stack.length>=120){let i=[];for(let n,r=0;r<e.length;r+=2)(n=e[r+1])!=this.state&&this.p.parser.hasAction(n,t)&&i.push(e[r],n);if(this.stack.length<120)for(let t=0;i.length<8&&t<e.length;t+=2){let n=e[t+1];i.some(((t,e)=>1&e&&t==n))||i.push(e[t],n)}e=i}let i=[];for(let t=0;t<e.length&&i.length<4;t+=2){let n=e[t+1];if(n==this.state)continue;let r=this.split();r.storeNode(0,r.pos,r.pos,4,!0),r.pushState(n,this.pos),r.shiftContext(e[t],this.pos),r.score-=200,i.push(r)}return i}forceReduce(){let t=this.p.parser.stateSlot(this.state,5);if(0==(65536&t))return!1;let{parser:e}=this.p;if(!e.validAction(this.state,t)){let i=t>>19,n=65535&t,r=this.stack.length-3*i;if(r<0||e.getGoto(this.stack[r],n,!1)<0)return!1;this.storeNode(0,this.reducePos,this.reducePos,4,!0),this.score-=100}return this.reduce(t),!0}forceAll(){for(;!this.p.parser.stateFlag(this.state,2);)if(!this.forceReduce()){this.storeNode(0,this.pos,this.pos,4,!0);break}return this}get deadEnd(){if(3!=this.stack.length)return!1;let{parser:t}=this.p;return 65535==t.data[t.stateSlot(this.state,1)]&&!t.stateSlot(this.state,4)}restart(){this.state=this.stack[0],this.stack.length=0}sameState(t){if(this.state!=t.state||this.stack.length!=t.stack.length)return!1;for(let e=0;e<this.stack.length;e+=3)if(this.stack[e]!=t.stack[e])return!1;return!0}get parser(){return this.p.parser}dialectEnabled(t){return this.p.parser.dialect.flags[t]}shiftContext(t,e){this.curContext&&this.updateContext(this.curContext.tracker.shift(this.curContext.context,t,this,this.p.stream.reset(e)))}reduceContext(t,e){this.curContext&&this.updateContext(this.curContext.tracker.reduce(this.curContext.context,t,this,this.p.stream.reset(e)))}emitContext(){let t=this.buffer.length-1;(t<0||-3!=this.buffer[t])&&this.buffer.push(this.curContext.hash,this.reducePos,this.reducePos,-3)}emitLookAhead(){let t=this.buffer.length-1;(t<0||-4!=this.buffer[t])&&this.buffer.push(this.lookAhead,this.reducePos,this.reducePos,-4)}updateContext(t){if(t!=this.curContext.context){let e=new ud(this.curContext.tracker,t);e.hash!=this.curContext.hash&&this.emitContext(),this.curContext=e}}setLookAhead(t){t>this.lookAhead&&(this.emitLookAhead(),this.lookAhead=t)}close(){this.curContext&&this.curContext.tracker.strict&&this.emitContext(),this.lookAhead>0&&this.emitLookAhead()}}class ud{constructor(t,e){this.tracker=t,this.context=e,this.hash=t.strict?t.hash(e):0}}var dd;!function(t){t[t.Insert=200]="Insert",t[t.Delete=190]="Delete",t[t.Reduce=100]="Reduce",t[t.MaxNext=4]="MaxNext",t[t.MaxInsertStackDepth=300]="MaxInsertStackDepth",t[t.DampenInsertStackDepth=120]="DampenInsertStackDepth"}(dd||(dd={}));class $d{constructor(t){this.start=t,this.state=t.state,this.stack=t.stack,this.base=this.stack.length}reduce(t){let e=65535&t,i=t>>19;0==i?(this.stack==this.start.stack&&(this.stack=this.stack.slice()),this.stack.push(this.state,0,0),this.base+=3):this.base-=3*(i-1);let n=this.start.p.parser.getGoto(this.stack[this.base-3],e,!0);this.state=n}}class fd{constructor(t,e,i){this.stack=t,this.pos=e,this.index=i,this.buffer=t.buffer,0==this.index&&this.maybeNext()}static create(t,e=t.bufferBase+t.buffer.length){return new fd(t,e,e-t.bufferBase)}maybeNext(){let t=this.stack.parent;null!=t&&(this.index=this.stack.bufferBase-t.bufferBase,this.stack=t,this.buffer=t.buffer)}get id(){return this.buffer[this.index-4]}get start(){return this.buffer[this.index-3]}get end(){return this.buffer[this.index-2]}get size(){return this.buffer[this.index-1]}next(){this.index-=4,this.pos-=4,0==this.index&&this.maybeNext()}fork(){return new fd(this.stack,this.pos,this.index)}}class _d{constructor(){this.start=-1,this.value=-1,this.end=-1,this.extended=-1,this.lookAhead=0,this.mask=0,this.context=0}}const pd=new _d;class md{constructor(t,e){this.input=t,this.ranges=e,this.chunk="",this.chunkOff=0,this.chunk2="",this.chunk2Pos=0,this.next=-1,this.token=pd,this.rangeIndex=0,this.pos=this.chunkPos=e[0].from,this.range=e[0],this.end=e[e.length-1].to,this.readNext()}resolveOffset(t,e){let i=this.range,n=this.rangeIndex,r=this.pos+t;for(;r<i.from;){if(!n)return null;let t=this.ranges[--n];r-=i.from-t.to,i=t}for(;e<0?r>i.to:r>=i.to;){if(n==this.ranges.length-1)return null;let t=this.ranges[++n];r+=t.from-i.to,i=t}return r}peek(t){let e,i,n=this.chunkOff+t;if(n>=0&&n<this.chunk.length)e=this.pos+t,i=this.chunk.charCodeAt(n);else{let n=this.resolveOffset(t,1);if(null==n)return-1;if(e=n,e>=this.chunk2Pos&&e<this.chunk2Pos+this.chunk2.length)i=this.chunk2.charCodeAt(e-this.chunk2Pos);else{let t=this.rangeIndex,n=this.range;for(;n.to<=e;)n=this.ranges[++t];this.chunk2=this.input.chunk(this.chunk2Pos=e),e+this.chunk2.length>n.to&&(this.chunk2=this.chunk2.slice(0,n.to-e)),i=this.chunk2.charCodeAt(0)}}return e>=this.token.lookAhead&&(this.token.lookAhead=e+1),i}acceptToken(t,e=0){let i=e?this.resolveOffset(e,-1):this.pos;if(null==i||i<this.token.start)throw new RangeError("Token end out of bounds");this.token.value=t,this.token.end=i}getChunk(){if(this.pos>=this.chunk2Pos&&this.pos<this.chunk2Pos+this.chunk2.length){let{chunk:t,chunkPos:e}=this;this.chunk=this.chunk2,this.chunkPos=this.chunk2Pos,this.chunk2=t,this.chunk2Pos=e,this.chunkOff=this.pos-this.chunkPos}else{this.chunk2=this.chunk,this.chunk2Pos=this.chunkPos;let t=this.input.chunk(this.pos),e=this.pos+t.length;this.chunk=e>this.range.to?t.slice(0,this.range.to-this.pos):t,this.chunkPos=this.pos,this.chunkOff=0}}readNext(){return this.chunkOff>=this.chunk.length&&(this.getChunk(),this.chunkOff==this.chunk.length)?this.next=-1:this.next=this.chunk.charCodeAt(this.chunkOff)}advance(t=1){for(this.chunkOff+=t;this.pos+t>=this.range.to;){if(this.rangeIndex==this.ranges.length-1)return this.setDone();t-=this.range.to-this.pos,this.range=this.ranges[++this.rangeIndex],this.pos=this.range.from}return this.pos+=t,this.pos>=this.token.lookAhead&&(this.token.lookAhead=this.pos+1),this.readNext()}setDone(){return this.pos=this.chunkPos=this.end,this.range=this.ranges[this.rangeIndex=this.ranges.length-1],this.chunk="",this.next=-1}reset(t,e){if(e?(this.token=e,e.start=t,e.lookAhead=t+1,e.value=e.extended=-1):this.token=pd,this.pos!=t){if(this.pos=t,t==this.end)return this.setDone(),this;for(;t<this.range.from;)this.range=this.ranges[--this.rangeIndex];for(;t>=this.range.to;)this.range=this.ranges[++this.rangeIndex];t>=this.chunkPos&&t<this.chunkPos+this.chunk.length?this.chunkOff=t-this.chunkPos:(this.chunk="",this.chunkOff=0),this.readNext()}return this}read(t,e){if(t>=this.chunkPos&&e<=this.chunkPos+this.chunk.length)return this.chunk.slice(t-this.chunkPos,e-this.chunkPos);if(t>=this.chunk2Pos&&e<=this.chunk2Pos+this.chunk2.length)return this.chunk2.slice(t-this.chunk2Pos,e-this.chunk2Pos);if(t>=this.range.from&&e<=this.range.to)return this.input.read(t,e);let i="";for(let n of this.ranges){if(n.from>=e)break;n.to>t&&(i+=this.input.read(Math.max(n.from,t),Math.min(n.to,e)))}return i}}class gd{constructor(t,e){this.data=t,this.id=e}token(t,e){!function(t,e,i,n){let r=0,s=1<<n,{parser:o}=i.p,{dialect:a}=o;t:for(;0!=(s&t[r]);){let i=t[r+1];for(let n=r+3;n<i;n+=2)if((t[n+1]&s)>0){let i=t[n];if(a.allows(i)&&(-1==e.token.value||e.token.value==i||o.overrides(i,e.token.value))){e.acceptToken(i);break}}for(let n=e.next,s=0,o=t[r+2];s<o;){let a=s+o>>1,l=i+a+(a<<1),h=t[l],O=t[l+1];if(n<h)o=a;else{if(!(n>=O)){r=t[l+2],e.advance();continue t}s=a+1}}break}}(this.data,t,e,this.id)}}gd.prototype.contextual=gd.prototype.fallback=gd.prototype.extend=!1;class Td{constructor(t,e={}){this.token=t,this.contextual=!!e.contextual,this.fallback=!!e.fallback,this.extend=!!e.extend}}function bd(t,e=Uint16Array){if("string"!=typeof t)return t;let i=null;for(let n=0,r=0;n<t.length;){let s=0;for(;;){let e=t.charCodeAt(n++),i=!1;if(126==e){s=65535;break}e>=92&&e--,e>=34&&e--;let r=e-32;if(r>=46&&(r-=46,i=!0),s+=r,i)break;s*=46}i?i[r++]=s:i=new e(s)}return i}const Qd="undefined"!=typeof process&&/\bparse\b/.test(process.env.LOG);let Zd=null;var Sd,vd;function xd(t,e,i){let n=t.fullCursor();for(n.moveTo(e);;)if(!(i<0?n.childBefore(e):n.childAfter(e)))for(;;){if((i<0?n.to<e:n.from>e)&&!n.type.isError)return i<0?Math.max(0,Math.min(n.to-1,e-25)):Math.min(t.length,Math.max(n.from+1,e+25));if(i<0?n.prevSibling():n.nextSibling())break;if(!n.parent())return i<0?0:t.length}}!function(t){t[t.Margin=25]="Margin"}(Sd||(Sd={}));class kd{constructor(t,e){this.fragments=t,this.nodeSet=e,this.i=0,this.fragment=null,this.safeFrom=-1,this.safeTo=-1,this.trees=[],this.start=[],this.index=[],this.nextFragment()}nextFragment(){let t=this.fragment=this.i==this.fragments.length?null:this.fragments[this.i++];if(t){for(this.safeFrom=t.openStart?xd(t.tree,t.from+t.offset,1)-t.offset:t.from,this.safeTo=t.openEnd?xd(t.tree,t.to+t.offset,-1)-t.offset:t.to;this.trees.length;)this.trees.pop(),this.start.pop(),this.index.pop();this.trees.push(t.tree),this.start.push(-t.offset),this.index.push(0),this.nextStart=this.safeFrom}else this.nextStart=1e9}nodeAt(t){if(t<this.nextStart)return null;for(;this.fragment&&this.safeTo<=t;)this.nextFragment();if(!this.fragment)return null;for(;;){let e=this.trees.length-1;if(e<0)return this.nextFragment(),null;let i=this.trees[e],n=this.index[e];if(n==i.children.length){this.trees.pop(),this.start.pop(),this.index.pop();continue}let r=i.children[n],s=this.start[e]+i.positions[n];if(s>t)return this.nextStart=s,null;if(r instanceof so){if(s==t){if(s<this.safeFrom)return null;let t=s+r.length;if(t<=this.safeTo){let e=r.prop(Ks.lookAhead);if(!e||t+e<this.fragment.to)return r}}this.index[e]++,s+r.length>=Math.max(this.safeFrom,t)&&(this.trees.push(r),this.start.push(s),this.index.push(0))}else this.index[e]++,this.nextStart=s+r.length}}}class wd{constructor(t,e){this.stream=e,this.tokens=[],this.mainToken=null,this.actions=[],this.tokens=t.tokenizers.map((t=>new _d))}getActions(t){let e=0,i=null,{parser:n}=t.p,{tokenizers:r}=n,s=n.stateSlot(t.state,3),o=t.curContext?t.curContext.hash:0,a=0;for(let n=0;n<r.length;n++){if(0==(1<<n&s))continue;let l=r[n],h=this.tokens[n];if((!i||l.fallback)&&((l.contextual||h.start!=t.pos||h.mask!=s||h.context!=o)&&(this.updateCachedToken(h,l,t),h.mask=s,h.context=o),h.lookAhead>h.end+25&&(a=Math.max(h.lookAhead,a)),0!=h.value)){let n=e;if(h.extended>-1&&(e=this.addActions(t,h.extended,h.end,e)),e=this.addActions(t,h.value,h.end,e),!l.extend&&(i=h,e>n))break}}for(;this.actions.length>e;)this.actions.pop();return a&&t.setLookAhead(a),i||t.pos!=this.stream.end||(i=new _d,i.value=t.p.parser.eofTerm,i.start=i.end=t.pos,e=this.addActions(t,i.value,i.end,e)),this.mainToken=i,this.actions}getMainToken(t){if(this.mainToken)return this.mainToken;let e=new _d,{pos:i,p:n}=t;return e.start=i,e.end=Math.min(i+1,n.stream.end),e.value=i==n.stream.end?n.parser.eofTerm:0,e}updateCachedToken(t,e,i){if(e.token(this.stream.reset(i.pos,t),i),t.value>-1){let{parser:e}=i.p;for(let n=0;n<e.specialized.length;n++)if(e.specialized[n]==t.value){let r=e.specializers[n](this.stream.read(t.start,t.end),i);if(r>=0&&i.p.parser.dialect.allows(r>>1)){0==(1&r)?t.value=r>>1:t.extended=r>>1;break}}}else t.value=0,t.end=Math.min(i.p.stream.end,i.pos+1)}putAction(t,e,i,n){for(let e=0;e<n;e+=3)if(this.actions[e]==t)return n;return this.actions[n++]=t,this.actions[n++]=e,this.actions[n++]=i,n}addActions(t,e,i,n){let{state:r}=t,{parser:s}=t.p,{data:o}=s;for(let t=0;t<2;t++)for(let a=s.stateSlot(r,t?2:1);;a+=3){if(65535==o[a]){if(1!=o[a+1]){0==n&&2==o[a+1]&&(n=this.putAction(Cd(o,a+2),e,i,n));break}a=Cd(o,a+2)}o[a]==e&&(n=this.putAction(Cd(o,a+1),e,i,n))}return n}}!function(t){t[t.Distance=5]="Distance",t[t.MaxRemainingPerStep=3]="MaxRemainingPerStep",t[t.MinBufferLengthPrune=500]="MinBufferLengthPrune",t[t.ForceReduceLimit=10]="ForceReduceLimit",t[t.CutDepth=15e3]="CutDepth",t[t.CutTo=9e3]="CutTo"}(vd||(vd={}));class yd{constructor(t,e,i,n){this.parser=t,this.input=e,this.ranges=n,this.recovering=0,this.nextStackID=9812,this.minStackPos=0,this.reused=[],this.stoppedAt=null,this.stream=new md(e,n),this.tokens=new wd(t,this.stream),this.topTerm=t.top[1];let{from:r}=n[0];this.stacks=[cd.start(this,t.top[0],r)],this.fragments=i.length&&this.stream.end-r>4*t.bufferLength?new kd(i,t.nodeSet):null}get parsedPos(){return this.minStackPos}advance(){let t,e,i=this.stacks,n=this.minStackPos,r=this.stacks=[];for(let s=0;s<i.length;s++){let o=i[s];for(;;){if(this.tokens.mainToken=null,o.pos>n)r.push(o);else{if(this.advanceStack(o,r,i))continue;{t||(t=[],e=[]),t.push(o);let i=this.tokens.getMainToken(o);e.push(i.value,i.end)}}break}}if(!r.length){let e=t&&function(t){let e=null;for(let i of t){let t=i.p.stoppedAt;(i.pos==i.p.stream.end||null!=t&&i.pos>t)&&i.p.parser.stateFlag(i.state,2)&&(!e||e.score<i.score)&&(e=i)}return e}(t);if(e)return this.stackToTree(e);if(this.parser.strict)throw Qd&&t&&console.log("Stuck with token "+(this.tokens.mainToken?this.parser.getName(this.tokens.mainToken.value):"none")),new SyntaxError("No parse at "+n);this.recovering||(this.recovering=5)}if(this.recovering&&t){let i=null!=this.stoppedAt&&t[0].pos>this.stoppedAt?t[0]:this.runRecovery(t,e,r);if(i)return this.stackToTree(i.forceAll())}if(this.recovering){let t=1==this.recovering?1:3*this.recovering;if(r.length>t)for(r.sort(((t,e)=>e.score-t.score));r.length>t;)r.pop();r.some((t=>t.reducePos>n))&&this.recovering--}else if(r.length>1)t:for(let t=0;t<r.length-1;t++){let e=r[t];for(let i=t+1;i<r.length;i++){let n=r[i];if(e.sameState(n)||e.buffer.length>500&&n.buffer.length>500){if(!((e.score-n.score||e.buffer.length-n.buffer.length)>0)){r.splice(t--,1);continue t}r.splice(i--,1)}}}this.minStackPos=r[0].pos;for(let t=1;t<r.length;t++)r[t].pos<this.minStackPos&&(this.minStackPos=r[t].pos);return null}stopAt(t){if(null!=this.stoppedAt&&this.stoppedAt<t)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=t}advanceStack(t,e,i){let n=t.pos,{parser:r}=this,s=Qd?this.stackID(t)+" -> ":"";if(null!=this.stoppedAt&&n>this.stoppedAt)return t.forceReduce()?t:null;if(this.fragments){let e=t.curContext&&t.curContext.tracker.strict,i=e?t.curContext.hash:0;for(let o=this.fragments.nodeAt(n);o;){let n=this.parser.nodeSet.types[o.type.id]==o.type?r.getGoto(t.state,o.type.id):-1;if(n>-1&&o.length&&(!e||(o.prop(Ks.contextHash)||0)==i))return t.useNode(o,n),Qd&&console.log(s+this.stackID(t)+` (via reuse of ${r.getName(o.type.id)})`),!0;if(!(o instanceof so)||0==o.children.length||o.positions[0]>0)break;let a=o.children[0];if(!(a instanceof so&&0==o.positions[0]))break;o=a}}let o=r.stateSlot(t.state,4);if(o>0)return t.reduce(o),Qd&&console.log(s+this.stackID(t)+` (via always-reduce ${r.getName(65535&o)})`),!0;if(t.stack.length>=15e3)for(;t.stack.length>9e3&&t.forceReduce(););let a=this.tokens.getActions(t);for(let o=0;o<a.length;){let l=a[o++],h=a[o++],O=a[o++],c=o==a.length||!i,u=c?t:t.split();if(u.apply(l,h,O),Qd&&console.log(s+this.stackID(u)+` (via ${0==(65536&l)?"shift":`reduce of ${r.getName(65535&l)}`} for ${r.getName(h)} @ ${n}${u==t?"":", split"})`),c)return!0;u.pos>n?e.push(u):i.push(u)}return!1}advanceFully(t,e){let i=t.pos;for(;;){if(!this.advanceStack(t,null,null))return!1;if(t.pos>i)return Pd(t,e),!0}}runRecovery(t,e,i){let n=null,r=!1;for(let s=0;s<t.length;s++){let o=t[s],a=e[s<<1],l=e[1+(s<<1)],h=Qd?this.stackID(o)+" -> ":"";if(o.deadEnd){if(r)continue;if(r=!0,o.restart(),Qd&&console.log(h+this.stackID(o)+" (restarted)"),this.advanceFully(o,i))continue}let O=o.split(),c=h;for(let t=0;O.forceReduce()&&t<10;t++){if(Qd&&console.log(c+this.stackID(O)+" (via force-reduce)"),this.advanceFully(O,i))break;Qd&&(c=this.stackID(O)+" -> ")}for(let t of o.recoverByInsert(a))Qd&&console.log(h+this.stackID(t)+" (via recover-insert)"),this.advanceFully(t,i);this.stream.end>o.pos?(l==o.pos&&(l++,a=0),o.recoverByDelete(a,l),Qd&&console.log(h+this.stackID(o)+` (via recover-delete ${this.parser.getName(a)})`),Pd(o,i)):(!n||n.score<o.score)&&(n=o)}return n}stackToTree(t){return t.close(),so.build({buffer:fd.create(t),nodeSet:this.parser.nodeSet,topID:this.topTerm,maxBufferLength:this.parser.bufferLength,reused:this.reused,start:this.ranges[0].from,length:t.pos-this.ranges[0].from,minRepeatType:this.parser.minRepeatTerm})}stackID(t){let e=(Zd||(Zd=new WeakMap)).get(t);return e||Zd.set(t,e=String.fromCodePoint(this.nextStackID++)),e+t}}function Pd(t,e){for(let i=0;i<e.length;i++){let n=e[i];if(n.pos==t.pos&&n.sameState(t))return void(e[i].score<t.score&&(e[i]=t))}e.push(t)}class Xd{constructor(t,e,i){this.source=t,this.flags=e,this.disabled=i}allows(t){return!this.disabled||0==this.disabled[t]}}const Rd=t=>t;class Wd{constructor(t){this.start=t.start,this.shift=t.shift||Rd,this.reduce=t.reduce||Rd,this.reuse=t.reuse||Rd,this.hash=t.hash||(()=>0),this.strict=!1!==t.strict}}class Yd extends Qo{constructor(t){if(super(),this.wrappers=[],13!=t.version)throw new RangeError(`Parser version (${t.version}) doesn't match runtime version (13)`);let e=t.nodeNames.split(" ");this.minRepeatTerm=e.length;for(let i=0;i<t.repeatNodeCount;i++)e.push("");let i=Object.keys(t.topRules).map((e=>t.topRules[e][1])),n=[];for(let t=0;t<e.length;t++)n.push([]);function r(t,e,i){n[t].push([e,e.deserialize(String(i))])}if(t.nodeProps)for(let e of t.nodeProps){let t=e[0];for(let i=1;i<e.length;){let n=e[i++];if(n>=0)r(n,t,e[i++]);else{let s=e[i+-n];for(let o=-n;o>0;o--)r(e[i++],t,s);i++}}}this.nodeSet=new io(e.map(((e,r)=>eo.define({name:r>=this.minRepeatTerm?void 0:e,id:r,props:n[r],top:i.indexOf(r)>-1,error:0==r,skipped:t.skippedNodes&&t.skippedNodes.indexOf(r)>-1})))),this.strict=!1,this.bufferLength=Fs;let s=bd(t.tokenData);if(this.context=t.context,this.specialized=new Uint16Array(t.specialized?t.specialized.length:0),this.specializers=[],t.specialized)for(let e=0;e<t.specialized.length;e++)this.specialized[e]=t.specialized[e].term,this.specializers[e]=t.specialized[e].get;this.states=bd(t.states,Uint32Array),this.data=bd(t.stateData),this.goto=bd(t.goto),this.maxTerm=t.maxTerm,this.tokenizers=t.tokenizers.map((t=>"number"==typeof t?new gd(s,t):t)),this.topRules=t.topRules,this.dialects=t.dialects||{},this.dynamicPrecedences=t.dynamicPrecedences||null,this.tokenPrecTable=t.tokenPrec,this.termNames=t.termNames||null,this.maxNode=this.nodeSet.types.length-1,this.dialect=this.parseDialect(),this.top=this.topRules[Object.keys(this.topRules)[0]]}createParse(t,e,i){let n=new yd(this,t,e,i);for(let r of this.wrappers)n=r(n,t,e,i);return n}getGoto(t,e,i=!1){let n=this.goto;if(e>=n[0])return-1;for(let r=n[e+1];;){let e=n[r++],s=1&e,o=n[r++];if(s&&i)return o;for(let i=r+(e>>1);r<i;r++)if(n[r]==t)return o;if(s)return-1}}hasAction(t,e){let i=this.data;for(let n=0;n<2;n++)for(let r,s=this.stateSlot(t,n?2:1);;s+=3){if(65535==(r=i[s])){if(1!=i[s+1]){if(2==i[s+1])return Cd(i,s+2);break}r=i[s=Cd(i,s+2)]}if(r==e||0==r)return Cd(i,s+1)}return 0}stateSlot(t,e){return this.states[6*t+e]}stateFlag(t,e){return(this.stateSlot(t,0)&e)>0}validAction(t,e){if(e==this.stateSlot(t,4))return!0;for(let i=this.stateSlot(t,1);;i+=3){if(65535==this.data[i]){if(1!=this.data[i+1])return!1;i=Cd(this.data,i+2)}if(e==Cd(this.data,i+1))return!0}}nextStates(t){let e=[];for(let i=this.stateSlot(t,1);;i+=3){if(65535==this.data[i]){if(1!=this.data[i+1])break;i=Cd(this.data,i+2)}if(0==(1&this.data[i+2])){let t=this.data[i+1];e.some(((e,i)=>1&i&&e==t))||e.push(this.data[i],t)}}return e}overrides(t,e){let i=Vd(this.data,this.tokenPrecTable,e);return i<0||Vd(this.data,this.tokenPrecTable,t)<i}configure(t){let e=Object.assign(Object.create(Yd.prototype),this);if(t.props&&(e.nodeSet=this.nodeSet.extend(...t.props)),t.top){let i=this.topRules[t.top];if(!i)throw new RangeError(`Invalid top rule name ${t.top}`);e.top=i}return t.tokenizers&&(e.tokenizers=this.tokenizers.map((e=>{let i=t.tokenizers.find((t=>t.from==e));return i?i.to:e}))),t.contextTracker&&(e.context=t.contextTracker),t.dialect&&(e.dialect=this.parseDialect(t.dialect)),null!=t.strict&&(e.strict=t.strict),t.wrap&&(e.wrappers=e.wrappers.concat(t.wrap)),null!=t.bufferLength&&(e.bufferLength=t.bufferLength),e}getName(t){return this.termNames?this.termNames[t]:String(t<=this.maxNode&&this.nodeSet.types[t].name||t)}get eofTerm(){return this.maxNode+1}get topNode(){return this.nodeSet.types[this.top[1]]}dynamicPrecedence(t){let e=this.dynamicPrecedences;return null==e?0:e[t]||0}parseDialect(t){let e=Object.keys(this.dialects),i=e.map((()=>!1));if(t)for(let n of t.split(" ")){let t=e.indexOf(n);t>=0&&(i[t]=!0)}let n=null;for(let t=0;t<e.length;t++)if(!i[t])for(let i,r=this.dialects[e[t]];65535!=(i=this.data[r++]);)(n||(n=new Uint8Array(this.maxTerm+1)))[i]=1;return new Xd(t,i,n)}static deserialize(t){return new Yd(t)}}function Cd(t,e){return t[e]|t[e+1]<<16}function Vd(t,e,i){for(let n,r=e;65535!=(n=t[r]);r++)if(n==i)return r-e;return-1}const jd=Yd.deserialize({version:13,states:"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",stateData:"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",goto:"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",nodeNames:"\u26a0 JsonText True False Null Number String } { Object Property PropertyName ] [ Array",maxTerm:25,nodeProps:[[Ks.openedBy,7,"{",12,"["],[Ks.closedBy,8,"}",13,"]"]],skippedNodes:[0],repeatNodeCount:2,tokenData:"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~",tokenizers:[0],topRules:{JsonText:[0,1]},tokenPrec:0}),Ud=Mo.define({parser:jd.configure({props:[aa.add({Object:fa({except:/^\s*\}/}),Array:fa({except:/^\s*\]/})}),ma.add({"Object Array":ga}),_u({String:Iu.string,Number:Iu.number,"True False":Iu.bool,PropertyName:Iu.propertyName,Null:Iu.null,",":Iu.separator,"[ ]":Iu.squareBracket,"{ }":Iu.brace})]}),languageData:{closeBrackets:{brackets:["[","{",'"']},indentOnInput:/^\s*[\}\]]$/}});function Jd(){return new Ho(Ud)}const Gd=280,Dd=[9,10,11,12,13,32,133,160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288],Md=new Wd({start:!1,shift:(t,e)=>5==e||6==e||284==e?t:285==e,strict:!1}),Ad=new Td(((t,e)=>{let{next:i}=t;(125==i||-1==i||e.context)&&e.canShift(282)&&t.acceptToken(282)}),{contextual:!0,fallback:!0}),Id=new Td(((t,e)=>{let i,{next:n}=t;Dd.indexOf(n)>-1||(47!=n||47!=(i=t.peek(1))&&42!=i)&&125!=n&&59!=n&&-1!=n&&!e.context&&e.canShift(279)&&t.acceptToken(279)}),{contextual:!0}),qd=new Td(((t,e)=>{let{next:i}=t;if((43==i||45==i)&&(t.advance(),i==t.next)){t.advance();let i=!e.context&&e.canShift(1);t.acceptToken(i?1:2)}}),{contextual:!0}),zd=new Td((t=>{for(let e=!1,i=0;;i++){let{next:n}=t;if(n<0){i&&t.acceptToken(Gd);break}if(96==n){i?t.acceptToken(Gd):t.acceptToken(281,1);break}if(123==n&&e){1==i?t.acceptToken(3,1):t.acceptToken(Gd,-1);break}if(10==n&&i){t.advance(),t.acceptToken(Gd);break}92==n&&t.advance(),e=36==n,t.advance()}}));const Ed={__proto__:null,export:18,as:23,from:29,default:32,async:37,function:38,this:48,true:56,false:56,void:66,typeof:70,null:86,super:88,new:122,await:139,yield:141,delete:142,class:152,extends:154,public:197,private:197,protected:197,readonly:199,instanceof:220,in:222,const:224,import:256,keyof:307,unique:311,infer:317,is:351,abstract:371,implements:373,type:375,let:378,var:380,interface:387,enum:391,namespace:397,module:399,declare:403,global:407,for:428,of:437,while:440,with:444,do:448,if:452,else:454,switch:458,case:464,try:470,catch:472,finally:474,return:478,throw:482,break:486,continue:490,debugger:494},Bd={__proto__:null,async:109,get:111,set:113,public:161,private:161,protected:161,static:163,abstract:165,override:167,readonly:173,new:355},Fd={__proto__:null,"<":129},Nd=Yd.deserialize({version:13,states:"$1jO`QYOOO'QQ!LdO'#ChO'XOSO'#DVO)dQYO'#D]O)tQYO'#DhO){QYO'#DrO-xQYO'#DxOOQO'#E]'#E]O.]QWO'#E[O.bQWO'#E[OOQ!LS'#Ef'#EfO0aQ!LdO'#IrO2wQ!LdO'#IsO3eQWO'#EzO3jQpO'#FaOOQ!LS'#FS'#FSO3rO!bO'#FSO4QQWO'#FhO5_QWO'#FgOOQ!LS'#Is'#IsOOQ!LQ'#Ir'#IrOOQQ'#J['#J[O5dQWO'#HnO5iQ!LYO'#HoOOQQ'#If'#IfOOQQ'#Hp'#HpQ`QYOOO){QYO'#DjO5qQWO'#G[O5vQ#tO'#CmO6UQWO'#EZO6aQWO'#EgO6fQ#tO'#FRO7QQWO'#G[O7VQWO'#G`O7bQWO'#G`O7pQWO'#GcO7pQWO'#GdO7pQWO'#GfO5qQWO'#GiO8aQWO'#GlO9oQWO'#CdO:PQWO'#GyO:XQWO'#HPO:XQWO'#HRO`QYO'#HTO:XQWO'#HVO:XQWO'#HYO:^QWO'#H`O:cQ!LZO'#HdO){QYO'#HfO:nQ!LZO'#HhO:yQ!LZO'#HjO5iQ!LYO'#HlO){QYO'#DWOOOS'#Hr'#HrO;UOSO,59qOOQ!LS,59q,59qO=gQbO'#ChO=qQYO'#HsO>UQWO'#ItO@TQbO'#ItO'dQYO'#ItO@[QWO,59wO@rQ&jO'#DbOAkQWO'#E]OAxQWO'#JPOBTQWO'#JOOBTQWO'#JOOB]QWO,5:yOBbQWO'#I}OBiQWO'#DyO5vQ#tO'#EZOBwQWO'#EZOCSQ`O'#FROOQ!LS,5:S,5:SOC[QYO,5:SOEYQ!LdO,5:^OEvQWO,5:dOFaQ!LYO'#I|O7VQWO'#I{OFhQWO'#I{OFpQWO,5:xOFuQWO'#I{OGTQYO,5:vOITQWO'#EWOJ_QWO,5:vOKnQWO'#DlOKuQYO'#DqOLPQ&jO,5;PO){QYO,5;POOQQ'#Er'#ErOOQQ'#Et'#EtO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;ROOQQ'#Ex'#ExOLXQYO,5;cOOQ!LS,5;h,5;hOOQ!LS,5;i,5;iONXQWO,5;iOOQ!LS,5;j,5;jO){QYO'#H}ON^Q!LYO,5<TONxQWO,5;RO){QYO,5;fO! bQpO'#JTO! PQpO'#JTO! iQpO'#JTO! zQpO,5;qOOOO,5;{,5;{O!!YQYO'#FcOOOO'#H|'#H|O3rO!bO,5;nO!!aQpO'#FeOOQ!LS,5;n,5;nO!!}Q,UO'#CrOOQ!LS'#Cu'#CuO!#bQWO'#CuO!#gOSO'#CyO!$TQ#tO,5<QO!$[QWO,5<SO!%hQWO'#FrO!%uQWO'#FsO!%zQWO'#FwO!&|Q&jO'#F{O!'oQ,UO'#IoOOQ!LS'#Io'#IoO!'yQWO'#InO!(XQWO'#ImOOQ!LS'#Cs'#CsOOQ!LS'#C|'#C|O!(aQWO'#DOOJdQWO'#FjOJdQWO'#FlO!(fQWO'#FnO!(kQWO'#FoO!(pQWO'#FuOJdQWO'#FzO!(uQWO'#E^O!)^QWO,5<RO`QYO,5>YOOQQ'#Ii'#IiOOQQ,5>Z,5>ZOOQQ-E;n-E;nO!+YQ!LdO,5:UOOQ!LQ'#Cp'#CpO!+yQ#tO,5<vOOQO'#Cf'#CfO!,[QWO'#CqO!,dQ!LYO'#IjO5_QWO'#IjO:^QWO,59XO!,rQpO,59XO!,zQ#tO,59XO5vQ#tO,59XO!-VQWO,5:vO!-_QWO'#GxO!-mQWO'#J`O){QYO,5;kO!-uQ&jO,5;mO!-zQWO,5=cO!.PQWO,5=cO!.UQWO,5=cO5iQ!LYO,5=cO5qQWO,5<vO!.dQWO'#E_O!.xQ&jO'#E`OOQ!LQ'#I}'#I}O!/ZQ!LYO'#J]O5iQ!LYO,5<zO7pQWO,5=QOOQO'#Cr'#CrO!/fQpO,5<}O!/nQ#tO,5=OO!/yQWO,5=QO!0OQ`O,5=TO:^QWO'#GnO5qQWO'#GpO!0WQWO'#GpO5vQ#tO'#GsO!0]QWO'#GsOOQQ,5=W,5=WO!0bQWO'#GtO!0jQWO'#CmO!0oQWO,59OO!0yQWO,59OO!2{QYO,59OOOQQ,59O,59OO!3YQ!LYO,59OO){QYO,59OO!3eQYO'#G{OOQQ'#G|'#G|OOQQ'#G}'#G}O`QYO,5=eO!3uQWO,5=eO){QYO'#DxO`QYO,5=kO`QYO,5=mO!3zQWO,5=oO`QYO,5=qO!4PQWO,5=tO!4UQYO,5=zOOQQ,5>O,5>OO){QYO,5>OO5iQ!LYO,5>QOOQQ,5>S,5>SO!8VQWO,5>SOOQQ,5>U,5>UO!8VQWO,5>UOOQQ,5>W,5>WO!8[Q`O,59rOOOS-E;p-E;pOOQ!LS1G/]1G/]O!8aQbO,5>_O'dQYO,5>_OOQO,5>d,5>dO!8kQYO'#HsOOQO-E;q-E;qO!8xQWO,5?`O!9QQbO,5?`O!9XQWO,5?jOOQ!LS1G/c1G/cO!9aQpO'#DTOOQO'#Iv'#IvO){QYO'#IvO!:OQpO'#IvO!:mQpO'#DcO!;OQ&jO'#DcO!=ZQYO'#DcO!=bQWO'#IuO!=jQWO,59|O!=oQWO'#EaO!=}QWO'#JQO!>VQWO,5:zO!>mQ&jO'#DcO){QYO,5?kO!>wQWO'#HxOOQO-E;v-E;vO!9XQWO,5?jOOQ!LQ1G0e1G0eO!@TQ&jO'#D|OOQ!LS,5:e,5:eO){QYO,5:eOITQWO,5:eO!@[QWO,5:eO:^QWO,5:uO!,rQpO,5:uO!,zQ#tO,5:uO5vQ#tO,5:uOOQ!LS1G/n1G/nOOQ!LS1G0O1G0OOOQ!LQ'#EV'#EVO){QYO,5?hO!@gQ!LYO,5?hO!@xQ!LYO,5?hO!APQWO,5?gO!AXQWO'#HzO!APQWO,5?gOOQ!LQ1G0d1G0dO7VQWO,5?gOOQ!LS1G0b1G0bO!AsQ!LdO1G0bO!BdQ!LbO,5:rOOQ!LS'#Fq'#FqO!CQQ!LdO'#IoOGTQYO1G0bO!EPQ#tO'#IwO!EZQWO,5:WO!E`QbO'#IxO){QYO'#IxO!EjQWO,5:]OOQ!LS'#DT'#DTOOQ!LS1G0k1G0kO!EoQWO1G0kO!HQQ!LdO1G0mO!HXQ!LdO1G0mO!JlQ!LdO1G0mO!JsQ!LdO1G0mO!LzQ!LdO1G0mO!M_Q!LdO1G0mO#!OQ!LdO1G0mO#!VQ!LdO1G0mO#$jQ!LdO1G0mO#$qQ!LdO1G0mO#&fQ!LdO1G0mO#)`Q7^O'#ChO#+ZQ7^O1G0}O#-UQ7^O'#IsOOQ!LS1G1T1G1TO#-iQ!LdO,5>iOOQ!LQ-E;{-E;{O#.YQ!LdO1G0mOOQ!LS1G0m1G0mO#0[Q!LdO1G1QO#0{QpO,5;sO#1QQpO,5;tO#1VQpO'#F[O#1kQWO'#FZOOQO'#JU'#JUOOQO'#H{'#H{O#1pQpO1G1]OOQ!LS1G1]1G1]OOOO1G1f1G1fO#2OQ7^O'#IrO#2YQWO,5;}OLXQYO,5;}OOOO-E;z-E;zOOQ!LS1G1Y1G1YOOQ!LS,5<P,5<PO#2_QpO,5<POOQ!LS,59a,59aOITQWO'#C{OOOS'#Hq'#HqO#2dOSO,59eOOQ!LS,59e,59eO){QYO1G1lO!(kQWO'#IPO#2oQWO,5<eOOQ!LS,5<b,5<bOOQO'#GV'#GVOJdQWO,5<pOOQO'#GX'#GXOJdQWO,5<rOJdQWO,5<tOOQO1G1n1G1nO#2zQ`O'#CpO#3_Q`O,5<^O#3fQWO'#JXO5qQWO'#JXO#3tQWO,5<`OJdQWO,5<_O#3yQ`O'#FqO#4WQ`O'#JYO#4bQWO'#JYOITQWO'#JYO#4gQWO,5<cOOQ!LQ'#Dg'#DgO#4lQWO'#FtO#4wQpO'#F|O!&wQ&jO'#F|O!&wQ&jO'#GOO#5YQWO'#GPO!(pQWO'#GSOOQO'#IR'#IRO#5_Q&jO,5<gOOQ!LS,5<g,5<gO#5fQ&jO'#F|O#5tQ&jO'#F}O#5|Q&jO'#F}OOQ!LS,5<u,5<uOJdQWO,5?YOJdQWO,5?YO#6RQWO'#ISO#6^QWO,5?XOOQ!LS'#Ch'#ChO#7QQ#tO,59jOOQ!LS,59j,59jO#7sQ#tO,5<UO#8fQ#tO,5<WO#8pQWO,5<YOOQ!LS,5<Z,5<ZO#8uQWO,5<aO#8zQ#tO,5<fOGTQYO1G1mO#9[QWO1G1mOOQQ1G3t1G3tOOQ!LS1G/p1G/pONXQWO1G/pOOQQ1G2b1G2bOITQWO1G2bO){QYO1G2bOITQWO1G2bO#9aQWO1G2bO#9oQWO,59]O#:xQWO'#EWOOQ!LQ,5?U,5?UO#;SQ!LYO,5?UOOQQ1G.s1G.sO:^QWO1G.sO!,rQpO1G.sO!,zQ#tO1G.sO#;bQWO1G0bO#;gQWO'#ChO#;rQWO'#JaO#;zQWO,5=dO#<PQWO'#JaO#<UQWO'#JaO#<^QWO'#I[O#<lQWO,5?zO#<tQbO1G1VOOQ!LS1G1X1G1XO5qQWO1G2}O#<{QWO1G2}O#=QQWO1G2}O#=VQWO1G2}OOQQ1G2}1G2}O#=[Q#tO1G2bO7VQWO'#JOO7VQWO'#EaO7VQWO'#IUO#=mQ!LYO,5?wOOQQ1G2f1G2fO!/yQWO1G2lOITQWO1G2iO#=xQWO1G2iOOQQ1G2j1G2jOITQWO1G2jO#=}QWO1G2jO#>VQ&jO'#GhOOQQ1G2l1G2lO!&wQ&jO'#IWO!0OQ`O1G2oOOQQ1G2o1G2oOOQQ,5=Y,5=YO#>_Q#tO,5=[O5qQWO,5=[O#5YQWO,5=_O5_QWO,5=_O!,rQpO,5=_O!,zQ#tO,5=_O5vQ#tO,5=_O#>pQWO'#J_O#>{QWO,5=`OOQQ1G.j1G.jO#?QQ!LYO1G.jO#?]QWO1G.jO#?bQWO1G.jO5iQ!LYO1G.jO#?jQbO,5?|O#?tQWO,5?|O#@PQYO,5=gO#@WQWO,5=gO7VQWO,5?|OOQQ1G3P1G3PO`QYO1G3POOQQ1G3V1G3VOOQQ1G3X1G3XO:XQWO1G3ZO#@]QYO1G3]O#DWQYO'#H[OOQQ1G3`1G3`O:^QWO1G3fO#DeQWO1G3fO5iQ!LYO1G3jOOQQ1G3l1G3lOOQ!LQ'#Fx'#FxO5iQ!LYO1G3nO5iQ!LYO1G3pOOOS1G/^1G/^O#DmQ`O,5<TO#DuQbO1G3yOOQO1G4O1G4OO){QYO,5>_O#EPQWO1G4zO#EXQWO1G5UO#EaQWO,5?bOLXQYO,5:{O7VQWO,5:{O:^QWO,59}OLXQYO,59}O!,rQpO,59}O#EfQ7^O,59}OOQO,5:{,5:{O#EpQ&jO'#HtO#FWQWO,5?aOOQ!LS1G/h1G/hO#F`Q&jO'#HyO#FtQWO,5?lOOQ!LQ1G0f1G0fO!;OQ&jO,59}O#F|QbO1G5VO7VQWO,5>dOOQ!LQ'#ES'#ESO#GWQ!LrO'#ETO!?{Q&jO'#D}OOQO'#Hw'#HwO#GrQ&jO,5:hOOQ!LS,5:h,5:hO#GyQ&jO'#D}O#H[Q&jO'#D}O#HcQ&jO'#EYO#HfQ&jO'#ETO#HsQ&jO'#ETO!?{Q&jO'#ETO#IWQWO1G0PO#I]Q`O1G0POOQ!LS1G0P1G0PO){QYO1G0POITQWO1G0POOQ!LS1G0a1G0aO:^QWO1G0aO!,rQpO1G0aO!,zQ#tO1G0aO#IdQ!LdO1G5SO){QYO1G5SO#ItQ!LYO1G5SO#JVQWO1G5RO7VQWO,5>fOOQO,5>f,5>fO#J_QWO,5>fOOQO-E;x-E;xO#JVQWO1G5RO#JmQ!LdO,59jO#LlQ!LdO,5<UO#NnQ!LdO,5<WO$!pQ!LdO,5<fOOQ!LS7+%|7+%|O$$xQ!LdO7+%|O$%iQWO'#HuO$%sQWO,5?cOOQ!LS1G/r1G/rO$%{QYO'#HvO$&YQWO,5?dO$&bQbO,5?dOOQ!LS1G/w1G/wOOQ!LS7+&V7+&VO$&lQ7^O,5:^O){QYO7+&iO$&vQ7^O,5:UOOQO1G1_1G1_OOQO1G1`1G1`O$'TQMhO,5;vOLXQYO,5;uOOQO-E;y-E;yOOQ!LS7+&w7+&wOOOO7+'Q7+'QOOOO1G1i1G1iO$'`QWO1G1iOOQ!LS1G1k1G1kO$'eQ`O,59gOOOS-E;o-E;oOOQ!LS1G/P1G/PO$'lQ!LdO7+'WOOQ!LS,5>k,5>kO$(]QWO,5>kOOQ!LS1G2P1G2PP$(bQWO'#IPPOQ!LS-E;}-E;}O$)RQ#tO1G2[O$)tQ#tO1G2^O$*OQ#tO1G2`OOQ!LS1G1x1G1xO$*VQWO'#IOO$*eQWO,5?sO$*eQWO,5?sO$*mQWO,5?sO$*xQWO,5?sOOQO1G1z1G1zO$+WQ#tO1G1yO$+hQWO'#IQO$+xQWO,5?tOITQWO,5?tO$,QQ`O,5?tOOQ!LS1G1}1G1}O5iQ!LYO,5<hO5iQ!LYO,5<iO$,[QWO,5<iO#5TQWO,5<iO!,rQpO,5<hO$,aQWO,5<jO5iQ!LYO,5<kO$,[QWO,5<nOOQO-E<P-E<POOQ!LS1G2R1G2RO!&wQ&jO,5<hO$,iQWO,5<iO!&wQ&jO,5<jO!&wQ&jO,5<iO$,tQ#tO1G4tO$-OQ#tO1G4tOOQO,5>n,5>nOOQO-E<Q-E<QO!-uQ&jO,59lO){QYO,59lO$-]QWO1G1tOJdQWO1G1{O$-bQ!LdO7+'XOOQ!LS7+'X7+'XOGTQYO7+'XOOQ!LS7+%[7+%[O$.RQ`O'#JZO#IWQWO7+'|O$.]QWO7+'|O$.eQ`O7+'|OOQQ7+'|7+'|OITQWO7+'|O){QYO7+'|OITQWO7+'|OOQO1G.w1G.wO$.oQ!LbO'#ChO$/PQ!LbO,5<lO$/nQWO,5<lOOQ!LQ1G4p1G4pOOQQ7+$_7+$_O:^QWO7+$_O!,rQpO7+$_OGTQYO7+%|O$/sQWO'#IZO$0UQWO,5?{OOQO1G3O1G3OO5qQWO,5?{O$0UQWO,5?{O$0^QWO,5?{OOQO,5>v,5>vOOQO-E<Y-E<YOOQ!LS7+&q7+&qO$0cQWO7+(iO5iQ!LYO7+(iO5qQWO7+(iO$0hQWO7+(iO$0mQWO7+'|OOQ!LQ,5>p,5>pOOQ!LQ-E<S-E<SOOQQ7+(W7+(WO$0{Q!LbO7+(TOITQWO7+(TO$1VQ`O7+(UOOQQ7+(U7+(UOITQWO7+(UO$1^QWO'#J^O$1iQWO,5=SOOQO,5>r,5>rOOQO-E<U-E<UOOQQ7+(Z7+(ZO$2cQ&jO'#GqOOQQ1G2v1G2vOITQWO1G2vO){QYO1G2vOITQWO1G2vO$2jQWO1G2vO$2xQ#tO1G2vO5iQ!LYO1G2yO#5YQWO1G2yO5_QWO1G2yO!,rQpO1G2yO!,zQ#tO1G2yO$3ZQWO'#IYO$3fQWO,5?yO$3nQ&jO,5?yOOQ!LQ1G2z1G2zOOQQ7+$U7+$UO$3vQWO7+$UO5iQ!LYO7+$UO$3{QWO7+$UO){QYO1G5hO){QYO1G5iO$4QQYO1G3RO$4XQWO1G3RO$4^QYO1G3RO$4eQ!LYO1G5hOOQQ7+(k7+(kO5iQ!LYO7+(uO`QYO7+(wOOQQ'#Jd'#JdOOQQ'#I]'#I]O$4oQYO,5=vOOQQ,5=v,5=vO){QYO'#H]O$4|QWO'#H_OOQQ7+)Q7+)QO$5RQYO7+)QO7VQWO7+)QOOQQ7+)U7+)UOOQQ7+)Y7+)YOOQQ7+)[7+)[OOQO1G4|1G4|O$9PQ7^O1G0gO$9ZQWO1G0gOOQO1G/i1G/iO$9fQ7^O1G/iO:^QWO1G/iOLXQYO'#DcOOQO,5>`,5>`OOQO-E;r-E;rOOQO,5>e,5>eOOQO-E;w-E;wO!,rQpO1G/iO:^QWO,5:iOOQO,5:o,5:oO){QYO,5:oO$9pQ!LYO,5:oO$9{Q!LYO,5:oO!,rQpO,5:iOOQO-E;u-E;uOOQ!LS1G0S1G0SO!?{Q&jO,5:iO$:ZQ&jO,5:iO$:lQ!LrO,5:oO$;WQ&jO,5:iO!?{Q&jO,5:oOOQO,5:t,5:tO$;_Q&jO,5:oO$;lQ!LYO,5:oOOQ!LS7+%k7+%kO#IWQWO7+%kO#I]Q`O7+%kOOQ!LS7+%{7+%{O:^QWO7+%{O!,rQpO7+%{O$<QQ!LdO7+*nO){QYO7+*nOOQO1G4Q1G4QO7VQWO1G4QO$<bQWO7+*mO$<jQ!LdO1G2[O$>lQ!LdO1G2^O$@nQ!LdO1G1yO$BvQ#tO,5>aOOQO-E;s-E;sO$CQQbO,5>bO){QYO,5>bOOQO-E;t-E;tO$C[QWO1G5OO$CdQ7^O1G0bO$EkQ7^O1G0mO$ErQ7^O1G0mO$GsQ7^O1G0mO$GzQ7^O1G0mO$IoQ7^O1G0mO$JSQ7^O1G0mO$LaQ7^O1G0mO$LhQ7^O1G0mO$NiQ7^O1G0mO$NpQ7^O1G0mO%!eQ7^O1G0mO%!xQ!LdO<<JTO%#iQ7^O1G0mO%%XQ7^O'#IoO%'UQ7^O1G1QOLXQYO'#F^OOQO'#JV'#JVOOQO1G1b1G1bO%'cQWO1G1aO%'hQ7^O,5>iOOOO7+'T7+'TOOOS1G/R1G/ROOQ!LS1G4V1G4VOJdQWO7+'zO%'rQWO,5>jO5qQWO,5>jOOQO-E;|-E;|O%(QQWO1G5_O%(QQWO1G5_O%(YQWO1G5_O%(eQ`O,5>lO%(oQWO,5>lOITQWO,5>lOOQO-E<O-E<OO%(tQ`O1G5`O%)OQWO1G5`OOQO1G2S1G2SOOQO1G2T1G2TO5iQ!LYO1G2TO$,[QWO1G2TO5iQ!LYO1G2SO%)WQWO1G2UOITQWO1G2UOOQO1G2V1G2VO5iQ!LYO1G2YO!,rQpO1G2SO#5TQWO1G2TO%)]QWO1G2UO%)eQWO1G2TOJdQWO7+*`OOQ!LS1G/W1G/WO%)pQWO1G/WOOQ!LS7+'`7+'`O%)uQ#tO7+'gO%*VQ!LdO<<JsOOQ!LS<<Js<<JsOITQWO'#ITO%*vQWO,5?uOOQQ<<Kh<<KhOITQWO<<KhO#IWQWO<<KhO%+OQWO<<KhO%+WQ`O<<KhOITQWO1G2WOOQQ<<Gy<<GyO:^QWO<<GyO%+bQ!LdO<<IhOOQ!LS<<Ih<<IhOOQO,5>u,5>uO%,RQWO,5>uO%,WQWO,5>uOOQO-E<X-E<XO%,`QWO1G5gO%,`QWO1G5gO5qQWO1G5gO%,hQWO<<LTOOQQ<<LT<<LTO%,mQWO<<LTO5iQ!LYO<<LTO){QYO<<KhOITQWO<<KhOOQQ<<Ko<<KoO$0{Q!LbO<<KoOOQQ<<Kp<<KpO$1VQ`O<<KpO%,rQ&jO'#IVO%,}QWO,5?xOLXQYO,5?xOOQQ1G2n1G2nO#GWQ!LrO'#ETO!?{Q&jO'#GrOOQO'#IX'#IXO%-VQ&jO,5=]OOQQ,5=],5=]O%-^Q&jO'#ETO%-iQ&jO'#ETO%.QQ&jO'#ETO%.[Q&jO'#GrO%.mQWO7+(bO%.rQWO7+(bO%.zQ`O7+(bOOQQ7+(b7+(bOITQWO7+(bO){QYO7+(bOITQWO7+(bO%/UQWO7+(bOOQQ7+(e7+(eO5iQ!LYO7+(eO#5YQWO7+(eO5_QWO7+(eO!,rQpO7+(eO%/dQWO,5>tOOQO-E<W-E<WOOQO'#Gu'#GuO%/oQWO1G5eO5iQ!LYO<<GpOOQQ<<Gp<<GpO%/wQWO<<GpO%/|QWO7++SO%0RQWO7++TOOQQ7+(m7+(mO%0WQWO7+(mO%0]QYO7+(mO%0dQWO7+(mO){QYO7++SO){QYO7++TOOQQ<<La<<LaOOQQ<<Lc<<LcOOQQ-E<Z-E<ZOOQQ1G3b1G3bO%0iQWO,5=wOOQQ,5=y,5=yO:^QWO<<LlO%0nQWO<<LlOLXQYO7+&ROOQO7+%T7+%TO%0sQ7^O1G5VO:^QWO7+%TOOQO1G0T1G0TO%0}Q!LdO1G0ZOOQO1G0Z1G0ZO){QYO1G0ZO%1XQ!LYO1G0ZO:^QWO1G0TO!,rQpO1G0TO!?{Q&jO1G0TO%1dQ!LYO1G0ZO%1rQ&jO1G0TO%2TQ!LYO1G0ZO%2iQ!LrO1G0ZO%2sQ&jO1G0TO!?{Q&jO1G0ZOOQ!LS<<IV<<IVOOQ!LS<<Ig<<IgO:^QWO<<IgO%2zQ!LdO<<NYOOQO7+)l7+)lO%3[Q!LdO7+'gO%5dQbO1G3|O%5nQ7^O7+%|O%5{Q7^O,59jO%7xQ7^O,5<UO%9uQ7^O,5<WO%;rQ7^O,5<fO%=bQ7^O7+'WO%=oQ7^O7+'XO%=|QWO,5;xOOQO7+&{7+&{O%>RQ#tO<<KfOOQO1G4U1G4UO%>cQWO1G4UO%>nQWO1G4UO%>|QWO7+*yO%>|QWO7+*yOITQWO1G4WO%?UQ`O1G4WO%?`QWO7+*zOOQO7+'o7+'oO5iQ!LYO7+'oOOQO7+'n7+'nO$,[QWO7+'pO%?hQ`O7+'pOOQO7+'t7+'tO5iQ!LYO7+'nO$,[QWO7+'oO%?oQWO7+'pOITQWO7+'pO#5TQWO7+'oO%?tQ#tO<<MzOOQ!LS7+$r7+$rO%@OQ`O,5>oOOQO-E<R-E<RO#IWQWOANASOOQQANASANASOITQWOANASO%@YQ!LbO7+'rOOQQAN=eAN=eO5qQWO1G4aOOQO1G4a1G4aO%@gQWO1G4aO%@lQWO7++RO%@lQWO7++RO5iQ!LYOANAoO%@tQWOANAoOOQQANAoANAoO%@yQWOANASO%ARQ`OANASOOQQANAZANAZOOQQANA[ANA[O%A]QWO,5>qOOQO-E<T-E<TO%AhQ7^O1G5dO#5YQWO,5=^O5_QWO,5=^O!,rQpO,5=^OOQO-E<V-E<VOOQQ1G2w1G2wO$:lQ!LrO,5:oO!?{Q&jO,5=^O%ArQ&jO,5=^O%BTQ&jO,5:oOOQQ<<K|<<K|OITQWO<<K|O%.mQWO<<K|O%B_QWO<<K|O%BgQ`O<<K|O){QYO<<K|OITQWO<<K|OOQQ<<LP<<LPO5iQ!LYO<<LPO#5YQWO<<LPO5_QWO<<LPO%BqQ&jO1G4`O%ByQWO7++POOQQAN=[AN=[O5iQ!LYOAN=[OOQQ<<Nn<<NnOOQQ<<No<<NoOOQQ<<LX<<LXO%CRQWO<<LXO%CWQYO<<LXO%C_QWO<<NnO%CdQWO<<NoOOQQ1G3c1G3cOOQQANBWANBWO:^QWOANBWO%CiQ7^O<<ImOOQO<<Ho<<HoOOQO7+%u7+%uO%0}Q!LdO7+%uO){QYO7+%uOOQO7+%o7+%oO:^QWO7+%oO!,rQpO7+%oO%CsQ!LYO7+%uO!?{Q&jO7+%oO%DOQ!LYO7+%uO%D^Q&jO7+%oO%DoQ!LYO7+%uOOQ!LSAN?RAN?RO%ETQ!LdO<<KfO%G]Q7^O<<JTO%GjQ7^O1G1yO%IYQ7^O1G2[O%KVQ7^O1G2^O%MSQ7^O<<JsO%MaQ7^O<<IhOOQO1G1d1G1dOOQO7+)p7+)pO%MnQWO7+)pO%MyQWO<<NeO%NRQ`O7+)rOOQO<<KZ<<KZO5iQ!LYO<<K[O$,[QWO<<K[OOQO<<KY<<KYO5iQ!LYO<<KZO%N]Q`O<<K[O$,[QWO<<KZOOQQG26nG26nO#IWQWOG26nOOQO7+){7+){O5qQWO7+){O%NdQWO<<NmOOQQG27ZG27ZO5iQ!LYOG27ZOITQWOG26nOLXQYO1G4]O%NlQWO7++OO5iQ!LYO1G2xO#5YQWO1G2xO5_QWO1G2xO!,rQpO1G2xO!?{Q&jO1G2xO%2iQ!LrO1G0ZO%NtQ&jO1G2xO%.mQWOANAhOOQQANAhANAhOITQWOANAhO& VQWOANAhO& _Q`OANAhOOQQANAkANAkO5iQ!LYOANAkO#5YQWOANAkOOQO'#Gv'#GvOOQO7+)z7+)zOOQQG22vG22vOOQQANAsANAsO& iQWOANAsOOQQANDYANDYOOQQANDZANDZO& nQYOG27rOOQO<<Ia<<IaO%0}Q!LdO<<IaOOQO<<IZ<<IZO:^QWO<<IZO){QYO<<IaO!,rQpO<<IZO&%lQ!LYO<<IaO!?{Q&jO<<IZO&%wQ!LYO<<IaO&&VQ7^O7+'gOOQO<<M[<<M[OOQOAN@vAN@vO5iQ!LYOAN@vOOQOAN@uAN@uO$,[QWOAN@vO5iQ!LYOAN@uOOQQLD,YLD,YOOQO<<Mg<<MgOOQQLD,uLD,uO#IWQWOLD,YO&'uQ7^O7+)wOOQO7+(d7+(dO5iQ!LYO7+(dO#5YQWO7+(dO5_QWO7+(dO!,rQpO7+(dO!?{Q&jO7+(dOOQQG27SG27SO%.mQWOG27SOITQWOG27SOOQQG27VG27VO5iQ!LYOG27VOOQQG27_G27_O:^QWOLD-^OOQOAN>{AN>{OOQOAN>uAN>uO%0}Q!LdOAN>{O:^QWOAN>uO){QYOAN>{O!,rQpOAN>uO&(PQ!LYOAN>{O&([Q7^O<<KfOOQOG26bG26bO5iQ!LYOG26bOOQOG26aG26aOOQQ!$( t!$( tOOQO<<LO<<LOO5iQ!LYO<<LOO#5YQWO<<LOO5_QWO<<LOO!,rQpO<<LOOOQQLD,nLD,nO%.mQWOLD,nOOQQLD,qLD,qOOQQ!$(!x!$(!xOOQOG24gG24gOOQOG24aG24aO%0}Q!LdOG24gO:^QWOG24aO){QYOG24gOOQOLD+|LD+|OOQOANAjANAjO5iQ!LYOANAjO#5YQWOANAjO5_QWOANAjOOQQ!$(!Y!$(!YOOQOLD*RLD*ROOQOLD){LD){O%0}Q!LdOLD*ROOQOG27UG27UO5iQ!LYOG27UO#5YQWOG27UOOQO!$'Mm!$'MmOOQOLD,pLD,pO5iQ!LYOLD,pOOQO!$(![!$(![OLXQYO'#DrO&)zQbO'#IrOLXQYO'#DjO&*RQ!LdO'#ChO&*lQbO'#ChO&*|QYO,5:vOLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO'#H}O&,|QWO,5<TO&.`QWO,5;ROLXQYO,5;fO!(aQWO'#DOO!(aQWO'#DOOITQWO'#FjO&-UQWO'#FjOITQWO'#FlO&-UQWO'#FlOITQWO'#FzO&-UQWO'#FzOLXQYO,5?kO&*|QYO1G0bO&.gQ7^O'#ChOLXQYO1G1lOITQWO,5<pO&-UQWO,5<pOITQWO,5<rO&-UQWO,5<rOITQWO,5<_O&-UQWO,5<_O&*|QYO1G1mOLXQYO7+&iOITQWO1G1{O&-UQWO1G1{O&*|QYO7+'XO&*|QYO7+%|OITQWO7+'zO&-UQWO7+'zO&.qQWO'#E[O&.vQWO'#E[O&/OQWO'#EzO&/TQWO'#EgO&/YQWO'#JPO&/eQWO'#I}O&/pQWO,5:vO&/uQ#tO,5<QO&/|QWO'#FsO&0RQWO'#FsO&0WQWO,5<RO&0`QWO,5:vO&0hQ7^O1G0}O&0oQWO,5<aO&0tQWO,5<aO&0yQWO1G1mO&1OQWO1G0bO&1TQ#tO1G2`O&1[Q#tO1G2`O4QQWO'#FhO5_QWO'#FgOBwQWO'#EZOLXQYO,5;cO!(pQWO'#FuO!(pQWO'#FuOJdQWO,5<tOJdQWO,5<t",stateData:"&2X~O'WOS'XOSTOSUOS~OPTOQTOXyO]cO_hObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#dsO#tpO#x^O%PqO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO%axO%nzO%t{O%v|O%x}O%z!OO%}!PO&T!QO&X!RO&Z!SO&]!TO&_!UO&a!VO'ZPO'dQO'mYO'zaO~OP[XZ[X_[Xj[Xu[Xv[Xx[X!R[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'U[X'd[X'n[X'u[X'v[X~O!]$lX~P$zOR!WO'S!XO'T!ZO~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'Z![O'dQO'mYO'zaO~O!Q!`O!R!]O!O'hP!O'rP~P'dO!S!mO~P`OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'Z9YO'dQO'mYO'zaO~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'dQO'mYO'zaO~O!Q!rO#U!uO#V!rO'Z9ZO!c'oP~P+{O#W!vO~O!]!wO#W!vO~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!R#bO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'dQO'n#[O'u!}O'v#OO~O_'fX'U'fX!c'fX!O'fX!T'fX%Q'fX!]'fX~P.jO!{#eO#o#eOP'gXZ'gX_'gXj'gXu'gXv'gXx'gX!R'gX!a'gX!b'gX!d'gX!j'gX#['gX#]'gX#^'gX#_'gX#`'gX#a'gX#b'gX#e'gX#g'gX#i'gX#j'gX'd'gX'n'gX'u'gX'v'gX~O#c'gX'U'gX!O'gX!c'gXn'gX!T'gX%Q'gX!]'gX~P0zO!{#eO~O#z#fO$R#jO~O!T#kO#x^O$U#lO$W#nO~O]#qOh$OOj#rOk#qOl#qOq$POs$QOx#xO!T#yO!_$VO!d#vO#V$WO#t$TO$_$RO$a$SO$d$UO'Z#pO'd#sO'_'aP~O!d$XO~O!]$ZO~O_$[O'U$[O~O'Z$`O~O!d$XO'Z$`O'[$bO'`$cO~Oc$iO!d$XO'Z$`O~O#c#TO~O]$rOu$nO!T$kO!d$mO%R$qO'Z$`O'[$bO^(SP~O!n$sO~Ox$tO!T$uO'Z$`O~Ox$tO!T$uO%Z$yO'Z$`O~O'Z$zO~O#dsO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO~Ob%TOc%SO!n%QO%P%RO%c%PO~P7uOb%WOcmO!T%VO!nlO#dsO%PqO%TrO%UrO%XuO%ZvO%^wO%_wO%axO~O`%ZO!{%^O%R%XO'[$bO~P8tO!d%_O!g%cO~O!d%dO~O!TSO~O_$[O'R%lO'U$[O~O_$[O'R%oO'U$[O~O_$[O'R%qO'U$[O~OR!WO'S!XO'T%uO~OP[XZ[Xj[Xu[Xv[Xx[X!R[X!RdX!a[X!b[X!d[X!j[X!{[X!{dX#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'd[X'n[X'u[X'v[X~O!O[X!OdX~P;aO!Q%wO!O&gX!O&lX!R&gX!R&lX~P'dO!R%yO!O'hX~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!R%yO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'dQO'n#[O'u!}O'v#OO~O!O'hX~P>^O!O&OO~Ox&RO!W&]O!X&UO!Y&UO'[$bO~O]&SOk&SO!Q&VO'e&PO!S'iP!S'tP~P@aO!O'qX!R'qX!]'qX!c'qX'n'qX~O!{'qX#W#PX!S'qX~PAYO!{&^O!O'sX!R'sX~O!R&_O!O'rX~O!O&bO~O!{#eO~PAYOS&fO!T&cO!o&eO'Z$`O~Oc&kO!d$XO'Z$`O~Ou$nO!d$mO~O!S&lO~P`Ou!{Ov!{Ox!|O!b!yO!d!zO'dQOP!faZ!faj!fa!R!fa!a!fa!j!fa#[!fa#]!fa#^!fa#_!fa#`!fa#a!fa#b!fa#c!fa#e!fa#g!fa#i!fa#j!fa'n!fa'u!fa'v!fa~O_!fa'U!fa!O!fa!c!fan!fa!T!fa%Q!fa!]!fa~PCcO!c&mO~O!]!wO!{&oO'n&nO!R'pX_'pX'U'pX~O!c'pX~PE{O!R&sO!c'oX~O!c&uO~Ox$tO!T$uO#V&vO'Z$`O~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'Z9YO'dQO'mYO'zaO~O]#qOh$OOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_:oO!d#vO#V9rO#t$TO$_9nO$a9pO$d$UO'Z&zO'd#sO~O#W&|O~O]#qOh$OOj#rOk#qOl#qOq$POs$QOx#xO!T#yO!_$VO!d#vO#V$WO#t$TO$_$RO$a$SO$d$UO'Z&zO'd#sO~O'_'kP~PJdO!Q'QO!c'lP~P){O'e'SO'mYO~OP9VOQ9VO]cOb:mOc!jOhcOj9VOkcOlcOq9VOs9VOxRO{cO|cO}cO!T!bO!_9XO!dUO!g9VO!h9VO!i9VO!j9VO!k9VO!n!iO#t!lO#x^O'Z'bO'dQO'mYO'z:kO~O!d!zO~O!R#bO_$]a'U$]a!c$]a!O$]a!T$]a%Q$]a!]$]a~O#d'iO~PITO!]'kO!T'wX#w'wX#z'wX$R'wX~Ou'lO~P! POu'lO!T'wX#w'wX#z'wX$R'wX~O!T'nO#w'rO#z'mO$R'sO~O!Q'vO~PLXO#z#fO$R'yO~Ou$eXx$eX!b$eX'n$eX'u$eX'v$eX~OSfX!RfX!{fX'_fX'_$eX~P!!iOk'{O~OR'|O'S'}O'T(PO~Ou(ROx(SO'n#[O'u(UO'v(WO~O'_(QO~P!#rO'_(ZO~O]#qOh$OOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_:oO!d#vO#V9rO#t$TO$_9nO$a9pO$d$UO'd#sO~O!Q(_O'Z([O!c'{P~P!$aO#W(aO~O!Q(eO'Z(bO!O'|P~P!$aO_(nOj(sOx(kO!W(qO!X(jO!Y(jO!d(hO!x(rO$w(mO'[$bO'e(gO~O!S(pO~P!&XO!b!yOu'cXx'cX'n'cX'u'cX'v'cX!R'cX!{'cX~O'_'cX#m'cX~P!'TOS(vO!{(uO!R'bX'_'bX~O!R(wO'_'aX~O'Z(yO~O!d)OO~O'Z&zO~O!d(hO~Ox$tO!Q!rO!T$uO#U!uO#V!rO'Z$`O!c'oP~O!]!wO#W)SO~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'dQO'n#[O'u!}O'v#OO~O_!^a!R!^a'U!^a!O!^a!c!^an!^a!T!^a%Q!^a!]!^a~P!)fOS)[O!T&cO!o)ZO%Q)YO'`$cO~O'Z$zO'_'aP~O!])_O!T'^X_'^X'U'^X~O!d$XO'`$cO~O!d$XO'Z$`O'`$cO~O!]!wO#W&|O~O])jO%R)kO'Z)gO!S(TP~O!R)lO^(SX~O'e'SO~OZ)pO~O^)qO~O!T$kO'Z$`O'[$bO^(SP~Ox$tO!Q)vO!R&_O!T$uO'Z$`O!O'rP~O]&YOk&YO!Q)wO'e'SO!S'tP~O!R)xO_(PX'U(PX~O!{)|O'`$cO~OS*PO!T#yO'`$cO~O!T*RO~Ou*TO!TSO~O!n*YO~Oc*_O~O'Z(yO!S(RP~Oc$iO~O%RtO'Z$zO~P8tOZ*eO^*dO~OPTOQTO]cObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#x^O%PqO'dQO'mYO'zaO~O!T!bO#t!lO'Z9YO~P!1RO^*dO_$[O'U$[O~O_*iO#d*kO%T*kO%U*kO~P){O!d%_O~O%t*pO~O!T*rO~O&U*uO&V*tOP&SaQ&SaX&Sa]&Sa_&Sab&Sac&Sah&Saj&Sak&Sal&Saq&Sas&Sax&Sa{&Sa|&Sa}&Sa!T&Sa!_&Sa!d&Sa!g&Sa!h&Sa!i&Sa!j&Sa!k&Sa!n&Sa#d&Sa#t&Sa#x&Sa%P&Sa%R&Sa%T&Sa%U&Sa%X&Sa%Z&Sa%^&Sa%_&Sa%a&Sa%n&Sa%t&Sa%v&Sa%x&Sa%z&Sa%}&Sa&T&Sa&X&Sa&Z&Sa&]&Sa&_&Sa&a&Sa'Q&Sa'Z&Sa'd&Sa'm&Sa'z&Sa!S&Sa%{&Sa`&Sa&Q&Sa~O'Z*xO~On*{O~O!O&ga!R&ga~P!)fO!Q+PO!O&gX!R&gX~P){O!R%yO!O'ha~O!O'ha~P>^O!R&_O!O'ra~O!RwX!R!ZX!SwX!S!ZX!]wX!]!ZX!d!ZX!{wX'`!ZX~O!]+UO!{+TO!R#TX!R'jX!S#TX!S'jX!]'jX!d'jX'`'jX~O!]+WO!d$XO'`$cO!R!VX!S!VX~O]&QOk&QOx&RO'e(gO~OP9VOQ9VO]cOb:mOc!jOhcOj9VOkcOlcOq9VOs9VOxRO{cO|cO}cO!T!bO!_9XO!dUO!g9VO!h9VO!i9VO!j9VO!k9VO!n!iO#t!lO#x^O'dQO'mYO'z:kO~O'Z9vO~P!;^O!R+[O!S'iX~O!S+^O~O!]+UO!{+TO!R#TX!S#TX~O!R+_O!S'tX~O!S+aO~O]&QOk&QOx&RO'[$bO'e(gO~O!X+bO!Y+bO~P!>[Ox$tO!Q+dO!T$uO'Z$`O!O&lX!R&lX~O_+hO!W+kO!X+gO!Y+gO!r+oO!s+mO!t+nO!u+lO!x+pO'[$bO'e(gO'm+eO~O!S+jO~P!?]OS+uO!T&cO!o+tO~O!{+{O!R'pa!c'pa_'pa'U'pa~O!]!wO~P!@gO!R&sO!c'oa~Ox$tO!Q,OO!T$uO#U,QO#V,OO'Z$`O!R&nX!c&nX~O_#Oi!R#Oi'U#Oi!O#Oi!c#Oin#Oi!T#Oi%Q#Oi!]#Oi~P!)fO#W!za!R!za!c!za!{!za!T!za_!za'U!za!O!za~P!#rO#W'cXP'cXZ'cX_'cXj'cXv'cX!a'cX!d'cX!j'cX#['cX#]'cX#^'cX#_'cX#`'cX#a'cX#b'cX#c'cX#e'cX#g'cX#i'cX#j'cX'U'cX'd'cX!c'cX!O'cX!T'cXn'cX%Q'cX!]'cX~P!'TO!R,ZO'_'kX~P!#rO'_,]O~O!R,^O!c'lX~P!)fO!c,aO~O!O,bO~OP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'dQOZ#Zi_#Zij#Zi!R#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'u#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O#[#Zi~P!EtO#[#PO~P!EtOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO'dQOZ#Zi_#Zi!R#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'u#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~Oj#Zi~P!H`Oj#RO~P!H`OP#^Oj#ROu!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO'dQO_#Zi!R#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'u#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P!JzOZ#dO!a#TO#a#TO#b#TO#c#TO~P!JzOP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO'dQO_#Zi!R#Zi#g#Zi#i#Zi#j#Zi'U#Zi'n#Zi'v#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'u#Zi~P!MrO'u!}O~P!MrOP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO'dQO'u!}O_#Zi!R#Zi#i#Zi#j#Zi'U#Zi'n#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'v#Zi~P#!^O'v#OO~P#!^OP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO'dQO'u!}O'v#OO~O_#Zi!R#Zi#j#Zi'U#Zi'n#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P#$xOP[XZ[Xj[Xu[Xv[Xx[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'd[X'n[X'u[X'v[X!R[X!S[X~O#m[X~P#']OP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO#g9dO#i9fO#j9gO'dQO'n#[O'u!}O'v#OO~O#m,dO~P#)gOP'gXZ'gXj'gXu'gXv'gXx'gX!a'gX!b'gX!d'gX!j'gX#['gX#]'gX#^'gX#_'gX#`'gX#a'gX#b'gX#e'gX#g'gX#i'gX#j'gX'd'gX'n'gX'u'gX'v'gX!R'gX~O!{9kO#o9kO#c'gX#m'gX!S'gX~P#+bO_&qa!R&qa'U&qa!c&qan&qa!O&qa!T&qa%Q&qa!]&qa~P!)fOP#ZiZ#Zi_#Zij#Ziv#Zi!R#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'U#Zi'd#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P!#rO_#ni!R#ni'U#ni!O#ni!c#nin#ni!T#ni%Q#ni!]#ni~P!)fO#z,fO~O#z,gO~O!]'kO!{,hO!T$OX#w$OX#z$OX$R$OX~O!Q,iO~O!T'nO#w,kO#z'mO$R,lO~O!R9hO!S'fX~P#)gO!S,mO~O$R,oO~OR'|O'S'}O'T,rO~O],uOk,uO!O,vO~O!RdX!]dX!cdX!c$eX'ndX~P!!iO!c,|O~P!#rO!R,}O!]!wO'n&nO!c'{X~O!c-SO~O!O$eX!R$eX!]$lX~P!!iO!R-UO!O'|X~P!#rO!]-WO~O!O-YO~O!Q(_O'Z$`O!c'{P~Oj-^O!]!wO!d$XO'`$cO'n&nO~O!])_O~O!S-dO~P!&XO!X-eO!Y-eO'[$bO'e(gO~Ox-gO'e(gO~O!x-hO~O'Z$zO!R&vX'_&vX~O!R(wO'_'aa~Ou-mOv-mOx-nO'nra'ura'vra!Rra!{ra~O'_ra#mra~P#6fOu(ROx(SO'n$^a'u$^a'v$^a!R$^a!{$^a~O'_$^a#m$^a~P#7[Ou(ROx(SO'n$`a'u$`a'v$`a!R$`a!{$`a~O'_$`a#m$`a~P#7}O]-oO~O#W-pO~O'_$na!R$na#m$na!{$na~P!#rO#W-sO~OS-|O!T&cO!o-{O%Q-zO~O'_-}O~O]#qOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_:oO!d#vO#V9rO#t$TO$_9nO$a9pO$d$UO'd#sO~Oh.PO'Z.OO~P#9tO!])_O!T'^a_'^a'U'^a~O#W.VO~OZ[X!RdX!SdX~O!R.WO!S(TX~O!S.YO~OZ.ZO~O].]O'Z)gO~O!T$kO'Z$`O^'OX!R'OX~O!R)lO^(Sa~O!c.`O~P!)fO].bO~OZ.cO~O^.dO~OS-|O!T&cO!o-{O%Q-zO'`$cO~O!R)xO_(Pa'U(Pa~O!{.jO~OS.mO!T#yO~O'e'SO!S(QP~OS.wO!T.sO!o.vO%Q.uO'`$cO~OZ/RO!R/PO!S(RX~O!S/SO~O^/UO_$[O'U$[O~O]/VO~O]/WO'Z(yO~O#c/XO%r/YO~P0zO!{#eO#c/XO%r/YO~O_/ZO~P){O_/]O~O%{/aOP%yiQ%yiX%yi]%yi_%yib%yic%yih%yij%yik%yil%yiq%yis%yix%yi{%yi|%yi}%yi!T%yi!_%yi!d%yi!g%yi!h%yi!i%yi!j%yi!k%yi!n%yi#d%yi#t%yi#x%yi%P%yi%R%yi%T%yi%U%yi%X%yi%Z%yi%^%yi%_%yi%a%yi%n%yi%t%yi%v%yi%x%yi%z%yi%}%yi&T%yi&X%yi&Z%yi&]%yi&_%yi&a%yi'Q%yi'Z%yi'd%yi'm%yi'z%yi!S%yi`%yi&Q%yi~O`/gO!S/eO&Q/fO~P`O!TSO!d/jO~O!R#bOn$]a~O!O&gi!R&gi~P!)fO!R%yO!O'hi~O!R&_O!O'ri~O!O/nO~O!R!Va!S!Va~P#)gO]&QOk&QO!Q/tO'e(gO!R&hX!S&hX~P@aO!R+[O!S'ia~O]&YOk&YO!Q)wO'e'SO!R&mX!S&mX~O!R+_O!S'ta~O!O'si!R'si~P!)fO_$[O!]!wO!d$XO!j0OO!{/|O'U$[O'`$cO'n&nO~O!S0RO~P!?]O!X0SO!Y0SO'[$bO'e(gO'm+eO~O!W0TO~P#GyO!TSO!W0TO!u0VO!x0WO~P#GyO!W0TO!s0YO!t0YO!u0VO!x0WO~P#GyO!T&cO~O!T&cO~P!#rO!R'pi!c'pi_'pi'U'pi~P!)fO!{0cO!R'pi!c'pi_'pi'U'pi~O!R&sO!c'oi~Ox$tO!T$uO#V0eO'Z$`O~O#WraPraZra_rajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra'Ura'dra!cra!Ora!Tranra%Qra!]ra~P#6fO#W$^aP$^aZ$^a_$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a'U$^a'd$^a!c$^a!O$^a!T$^an$^a%Q$^a!]$^a~P#7[O#W$`aP$`aZ$`a_$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a'U$`a'd$`a!c$`a!O$`a!T$`an$`a%Q$`a!]$`a~P#7}O#W$naP$naZ$na_$naj$nav$na!R$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na'U$na'd$na!c$na!O$na!T$na!{$nan$na%Q$na!]$na~P!#rO_#Oq!R#Oq'U#Oq!O#Oq!c#Oqn#Oq!T#Oq%Q#Oq!]#Oq~P!)fO!R&iX'_&iX~PJdO!R,ZO'_'ka~O!Q0mO!R&jX!c&jX~P){O!R,^O!c'la~O!R,^O!c'la~P!)fO#m!fa!S!fa~PCcO#m!^a!R!^a!S!^a~P#)gO!T1QO#x^O$P1RO~O!S1VO~On1WO~P!#rO_$Yq!R$Yq'U$Yq!O$Yq!c$Yqn$Yq!T$Yq%Q$Yq!]$Yq~P!)fO!O1XO~O],uOk,uO~Ou(ROx(SO'v(WO'n$xi'u$xi!R$xi!{$xi~O'_$xi#m$xi~P$(jOu(ROx(SO'n$zi'u$zi'v$zi!R$zi!{$zi~O'_$zi#m$zi~P$)]O#m1YO~P!#rO!Q1[O'Z$`O!R&rX!c&rX~O!R,}O!c'{a~O!R,}O!]!wO!c'{a~O!R,}O!]!wO'n&nO!c'{a~O'_$gi!R$gi#m$gi!{$gi~P!#rO!Q1cO'Z(bO!O&tX!R&tX~P!$aO!R-UO!O'|a~O!R-UO!O'|a~P!#rO!]!wO~O!]!wO#c1mO~Oj1qO!]!wO'n&nO~O!R'bi'_'bi~P!#rO!{1tO!R'bi'_'bi~P!#rO!c1wO~O_$Zq!R$Zq'U$Zq!O$Zq!c$Zqn$Zq!T$Zq%Q$Zq!]$Zq~P!)fO!R1{O!T'}X~P!#rO!T&cO%Q2OO~O!T&cO%Q2OO~P!#rO!T$eX$u[X_$eX'U$eX~P!!iO$u2SOugXxgX!TgX'ngX'ugX'vgX_gX'UgX~O$u2SO~O]2YO%R2ZO'Z)gO!R&}X!S&}X~O!R.WO!S(Ta~OZ2_O~O^2`O~O]2cO~OS2eO!T&cO!o2dO%Q2OO~O_$[O'U$[O~P!#rO!T#yO~P!#rO!R2jO!{2lO!S(QX~O!S2mO~Ox(kO!W2vO!X2oO!Y2oO!r2uO!s2tO!t2tO!x2sO'[$bO'e(gO'm+eO~O!S2rO~P$1nOS2}O!T.sO!o2|O%Q2{O~OS2}O!T.sO!o2|O%Q2{O'`$cO~O'Z(yO!R&|X!S&|X~O!R/PO!S(Ra~O]3XO'e3WO~O]3YO~O^3[O~O!c3_O~P){O_3aO~O_3aO~P){O#c3cO%r3dO~PE{O`/gO!S3hO&Q/fO~P`O!]3jO~O&V3kOP&SqQ&SqX&Sq]&Sq_&Sqb&Sqc&Sqh&Sqj&Sqk&Sql&Sqq&Sqs&Sqx&Sq{&Sq|&Sq}&Sq!T&Sq!_&Sq!d&Sq!g&Sq!h&Sq!i&Sq!j&Sq!k&Sq!n&Sq#d&Sq#t&Sq#x&Sq%P&Sq%R&Sq%T&Sq%U&Sq%X&Sq%Z&Sq%^&Sq%_&Sq%a&Sq%n&Sq%t&Sq%v&Sq%x&Sq%z&Sq%}&Sq&T&Sq&X&Sq&Z&Sq&]&Sq&_&Sq&a&Sq'Q&Sq'Z&Sq'd&Sq'm&Sq'z&Sq!S&Sq%{&Sq`&Sq&Q&Sq~O!R#Ti!S#Ti~P#)gO!{3mO!R#Ti!S#Ti~O!R!Vi!S!Vi~P#)gO_$[O!{3tO'U$[O~O_$[O!]!wO!{3tO'U$[O~O!X3xO!Y3xO'[$bO'e(gO'm+eO~O_$[O!]!wO!d$XO!j3yO!{3tO'U$[O'`$cO'n&nO~O!W3zO~P$:ZO!W3zO!u3}O!x4OO~P$:ZO_$[O!]!wO!j3yO!{3tO'U$[O'n&nO~O!R'pq!c'pq_'pq'U'pq~P!)fO!R&sO!c'oq~O#W$xiP$xiZ$xi_$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi'U$xi'd$xi!c$xi!O$xi!T$xin$xi%Q$xi!]$xi~P$(jO#W$ziP$ziZ$zi_$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi'U$zi'd$zi!c$zi!O$zi!T$zin$zi%Q$zi!]$zi~P$)]O#W$giP$giZ$gi_$gij$giv$gi!R$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi'U$gi'd$gi!c$gi!O$gi!T$gi!{$gin$gi%Q$gi!]$gi~P!#rO!R&ia'_&ia~P!#rO!R&ja!c&ja~P!)fO!R,^O!c'li~O#m#Oi!R#Oi!S#Oi~P#)gOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'dQOZ#Zij#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'u#Zi'v#Zi!R#Zi!S#Zi~O#[#Zi~P$CqO#[9]O~P$CqOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O'dQOZ#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'u#Zi'v#Zi!R#Zi!S#Zi~Oj#Zi~P$EyOj9_O~P$EyOP#^Oj9_Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O'dQO#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'u#Zi'v#Zi!R#Zi!S#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P$HROZ9jO!a9aO#a9aO#b9aO#c9aO~P$HROP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO'dQO#g#Zi#i#Zi#j#Zi#m#Zi'n#Zi'v#Zi!R#Zi!S#Zi~O'u#Zi~P$JgO'u!}O~P$JgOP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO#g9dO'dQO'u!}O#i#Zi#j#Zi#m#Zi'n#Zi!R#Zi!S#Zi~O'v#Zi~P$LoO'v#OO~P$LoOP#^OZ9jOj9_Ou!{Ov!{Ox!|O!a9aO!b!yO!d!zO!j#^O#[9]O#]9^O#^9^O#_9^O#`9`O#a9aO#b9aO#c9aO#e9bO#g9dO#i9fO'dQO'u!}O'v#OO~O#j#Zi#m#Zi'n#Zi!R#Zi!S#Zi~P$NwO_#ky!R#ky'U#ky!O#ky!c#kyn#ky!T#ky%Q#ky!]#ky~P!)fOP#ZiZ#Zij#Ziv#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'd#Zi!R#Zi!S#Zi~P!#rO!b!yOP'cXZ'cXj'cXu'cXv'cXx'cX!a'cX!d'cX!j'cX#['cX#]'cX#^'cX#_'cX#`'cX#a'cX#b'cX#c'cX#e'cX#g'cX#i'cX#j'cX#m'cX'd'cX'n'cX'u'cX'v'cX!R'cX!S'cX~O#m#ni!R#ni!S#ni~P#)gO!S4`O~O!R&qa!S&qa~P#)gO!]!wO'n&nO!R&ra!c&ra~O!R,}O!c'{i~O!R,}O!]!wO!c'{i~O!O&ta!R&ta~P!#rO!]4gO~O!R-UO!O'|i~P!#rO!R-UO!O'|i~O!O4mO~O!]!wO#c4sO~Oj4tO!]!wO'n&nO~O!O4vO~O'_$iq!R$iq#m$iq!{$iq~P!#rO_$Zy!R$Zy'U$Zy!O$Zy!c$Zyn$Zy!T$Zy%Q$Zy!]$Zy~P!)fO!R1{O!T'}a~O!T&cO%Q4{O~O!T&cO%Q4{O~P!#rO_#Oy!R#Oy'U#Oy!O#Oy!c#Oyn#Oy!T#Oy%Q#Oy!]#Oy~P!)fOZ5OO~O]5QO'Z)gO~O!R.WO!S(Ti~O]5TO~O^5UO~O'e'SO!R&yX!S&yX~O!R2jO!S(Qa~O!S5cO~P$1nOx-gO'e(gO'm+eO~O!W5fO!X5eO!Y5eO!x0WO'[$bO'e(gO'm+eO~O!s5gO!t5gO~P%-iO!X5eO!Y5eO'[$bO'e(gO'm+eO~O!T.sO~O!T.sO%Q5iO~O!T.sO%Q5iO~P!#rOS5nO!T.sO!o5mO%Q5iO~OZ5sO!R&|a!S&|a~O!R/PO!S(Ri~O]5vO~O!c5wO~O!c5xO~O!c5yO~O!c5yO~P){O_5{O~O!]6OO~O!c6QO~O!R'si!S'si~P#)gO_$[O'U$[O~P!)fO_$[O!{6VO'U$[O~O_$[O!]!wO!{6VO'U$[O~O!X6[O!Y6[O'[$bO'e(gO'm+eO~O_$[O!]!wO!j6]O!{6VO'U$[O'n&nO~O!d$XO'`$cO~P%2TO!W6^O~P%1rO!R'py!c'py_'py'U'py~P!)fO#W$iqP$iqZ$iq_$iqj$iqv$iq!R$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq'U$iq'd$iq!c$iq!O$iq!T$iq!{$iqn$iq%Q$iq!]$iq~P!#rO!R&ji!c&ji~P!)fO#m#Oq!R#Oq!S#Oq~P#)gOu-mOv-mOx-nOPraZrajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra#mra'dra'nra'ura'vra!Rra!Sra~Ou(ROx(SOP$^aZ$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a#m$^a'd$^a'n$^a'u$^a'v$^a!R$^a!S$^a~Ou(ROx(SOP$`aZ$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a#m$`a'd$`a'n$`a'u$`a'v$`a!R$`a!S$`a~OP$naZ$naj$nav$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na#m$na'd$na!R$na!S$na~P!#rO#m$Yq!R$Yq!S$Yq~P#)gO#m$Zq!R$Zq!S$Zq~P#)gO!S6hO~O'_$|y!R$|y#m$|y!{$|y~P!#rO!]!wO!R&ri!c&ri~O!]!wO'n&nO!R&ri!c&ri~O!R,}O!c'{q~O!O&ti!R&ti~P!#rO!R-UO!O'|q~O!O6oO~P!#rO!O6oO~O!R'by'_'by~P!#rO!R&wa!T&wa~P!#rO!T$tq_$tq'U$tq~P!#rOZ6wO~O!R.WO!S(Tq~O]6zO~O!T&cO%Q6{O~O!T&cO%Q6{O~P!#rO!{6|O!R&ya!S&ya~O!R2jO!S(Qi~P#)gO!X7SO!Y7SO'[$bO'e(gO'm+eO~O!W7UO!x4OO~P%ArO!T.sO%Q7XO~O!T.sO%Q7XO~P!#rO]7`O'e7_O~O!R/PO!S(Rq~O!c7bO~O!c7bO~P){O!c7dO~O!c7eO~O!R#Ty!S#Ty~P#)gO_$[O!{7kO'U$[O~O_$[O!]!wO!{7kO'U$[O~O!X7nO!Y7nO'[$bO'e(gO'm+eO~O_$[O!]!wO!j7oO!{7kO'U$[O'n&nO~O#W$|yP$|yZ$|y_$|yj$|yv$|y!R$|y!a$|y!b$|y!d$|y!j$|y#[$|y#]$|y#^$|y#_$|y#`$|y#a$|y#b$|y#c$|y#e$|y#g$|y#i$|y#j$|y'U$|y'd$|y!c$|y!O$|y!T$|y!{$|yn$|y%Q$|y!]$|y~P!#rO#m#ky!R#ky!S#ky~P#)gOP$giZ$gij$giv$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi#m$gi'd$gi!R$gi!S$gi~P!#rOu(ROx(SO'v(WOP$xiZ$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi#m$xi'd$xi'n$xi'u$xi!R$xi!S$xi~Ou(ROx(SOP$ziZ$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi#m$zi'd$zi'n$zi'u$zi'v$zi!R$zi!S$zi~O#m$Zy!R$Zy!S$Zy~P#)gO#m#Oy!R#Oy!S#Oy~P#)gO!]!wO!R&rq!c&rq~O!R,}O!c'{y~O!O&tq!R&tq~P!#rO!O7uO~P!#rO!R.WO!S(Ty~O!R2jO!S(Qq~O!X8RO!Y8RO'[$bO'e(gO'm+eO~O!T.sO%Q8UO~O!T.sO%Q8UO~P!#rO!c8XO~O&V8YOP&S!ZQ&S!ZX&S!Z]&S!Z_&S!Zb&S!Zc&S!Zh&S!Zj&S!Zk&S!Zl&S!Zq&S!Zs&S!Zx&S!Z{&S!Z|&S!Z}&S!Z!T&S!Z!_&S!Z!d&S!Z!g&S!Z!h&S!Z!i&S!Z!j&S!Z!k&S!Z!n&S!Z#d&S!Z#t&S!Z#x&S!Z%P&S!Z%R&S!Z%T&S!Z%U&S!Z%X&S!Z%Z&S!Z%^&S!Z%_&S!Z%a&S!Z%n&S!Z%t&S!Z%v&S!Z%x&S!Z%z&S!Z%}&S!Z&T&S!Z&X&S!Z&Z&S!Z&]&S!Z&_&S!Z&a&S!Z'Q&S!Z'Z&S!Z'd&S!Z'm&S!Z'z&S!Z!S&S!Z%{&S!Z`&S!Z&Q&S!Z~O_$[O!{8_O'U$[O~O_$[O!]!wO!{8_O'U$[O~OP$iqZ$iqj$iqv$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq#m$iq'd$iq!R$iq!S$iq~P!#rO!R&yq!S&yq~P#)gO_$[O!{8tO'U$[O~OP$|yZ$|yj$|yv$|y!a$|y!b$|y!d$|y!j$|y#[$|y#]$|y#^$|y#_$|y#`$|y#a$|y#b$|y#c$|y#e$|y#g$|y#i$|y#j$|y#m$|y'd$|y!R$|y!S$|y~P!#rOn'fX~P.jOn[X!O[X!c[X%r[X!T[X%Q[X!][X~P$zO!]dX!c[X!cdX'ndX~P;aOP9VOQ9VO]cOb:mOc!jOhcOj9VOkcOlcOq9VOs9VOxRO{cO|cO}cO!TSO!_9XO!dUO!g9VO!h9VO!i9VO!j9VO!k9VO!n!iO#t!lO#x^O'Z'bO'dQO'mYO'z:kO~O!R9hO!S$]a~O]#qOh$OOj#rOk#qOl#qOq$POs9mOx#xO!T#yO!_:pO!d#vO#V9sO#t$TO$_9oO$a9qO$d$UO'Z&zO'd#sO~O#d'iO~P&-UO!S[X!SdX~P;aO#W9[O~O!]!wO#W9[O~O!{9kO~O#c9aO~O!{9tO!R'sX!S'sX~O!{9kO!R'qX!S'qX~O#W9uO~O'_9wO~P!#rO#W9|O~O#W9}O~O!]!wO#W:OO~O!]!wO#W9uO~O#m:PO~P#)gO#W:QO~O#W:RO~O#W:SO~O#W:TO~O#m:UO~P!#rO#m:VO~P!#rO#x~!b!r!t!u#U#V'z$_$a$d$u%P%Q%R%X%Z%^%_%a%c~UT#x'z#]}'W'X#z'W'Z'e~",goto:"#Ed(XPPPPPPPP(YP(jP*^PPPP-uPP.[3n5b5uP5uPPP5uP7c5uP5uP7gPP7lP8Q<cPPPP<gPPPP<g?XPPP?_AjP<gPDTPPPPE{<gPPPPPGt<gPPJuKrPPPPKvM`PMhNiPKr<g<g!#p!&k!+^!+^!.mPPP!.t!1j<gPPPPPPPPPP!4aP!5rPP<g!7PP<gP<g<g<g<gP<g!9dPP!<]P!?Q!?Y!?^!?^P!<YP!?b!?bP!BVP!BZ<g<g!Ba!ET5uP5uP5u5uP!FW5u5u!HO5u!JQ5u!Kr5u5u!L`!NY!NY!N^!NY!NfP!NYP5u# b5u#!l5u5u-uPPP##yPP#$c#$cP#$cP#$x#$cPP#%OP#$uP#$u#%bMd#$u#&P#&V#&Y(Y#&](YP#&d#&d#&dP(YP(YP(YP(YPP(YP#&j#&mP#&m(YPPP(YP(YP(YP(YP(YP(Y(Y#&q#&{#'R#'X#'g#'m#'s#'}#(T#(d#(j#(x#)O#)U#)d#)y#+]#+k#+q#+w#+}#,T#,_#,e#,k#,u#-X#-_PPPPPPPP#-ePP#.X#2VPP#3m#3t#3|PP#8Y#:m#@i#@l#@o#@z#@}PP#AQ#AU#As#Bj#Bn#CSPP#CW#C^#CbP#Ce#Ci#Cl#D[#Dr#Dw#Dz#D}#ET#EW#E[#E`mhOSj}!n$Z%b%e%f%h*m*r/a/dQ$hmQ$opQ%YyS&U!b+[Q&j!jS(j#y(oQ)e$iQ)r$qQ*^%SQ+b&]S+g&c+iQ+y&kQ-e(qQ/O*_Y0S+k+l+m+n+oS2o.s2qU3x0T0V0YU5e2t2u2vS6[3z3}S7S5f5gQ7n6^R8R7U$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8t!j'd#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ(z$QQ)j$kQ*`%VQ*g%_Q,T9lQ.Q)_Q.])kQ/W*eQ2Y.WQ3U/PQ4X9mR5Q2ZpeOSjy}!n$Z%X%b%e%f%h*m*r/a/dR*b%Z&WVOSTjkn}!S!W!k!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%y&R&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:m:n[!cRU!]!`%w&VQ$alQ$gmS$lp$qv$vrs!r!u$X$t&_&s&v)v)w)x*k+U+d,O,Q/j0eQ%OwQ&g!iQ&i!jS(^#v(hS)d$h$iQ)h$kQ)u$sQ*X%QQ*]%SS+x&j&kQ-R(_Q.U)eQ.[)kQ.^)lQ.a)pQ.y*YS.}*^*_Q0a+yQ1Z,}Q2X.WQ2].ZQ2b.cQ3T/OQ4d1[Q5P2ZQ5S2_Q6v5OR7x6w!Y$em!j$g$h$i&T&i&j&k(i)d)e+X+f+x+y-_.U/y0P0U0a1p3w3|6Y7l8`Q)]$aQ)}${Q*Q$|Q*[%SQ.e)uQ.x*XU.|*]*^*_Q3O.yS3S.}/OQ5`2nQ5r3TS7Q5a5dS8P7R7TQ8j8QR8y8kW#|a$c(w:kS${t%XQ$|uQ$}vR){$y$V#{a!w!y#d#v#x$R$S$W&f'|(V(X(Y(a(e(u(v)Y)[)_)|*P+u,Z-U-W-p-z-|.j.m.u.w1Y1c1m1t1{2O2S2e2{2}4g4s4{5i5n6{7X8U9j9n9o9p9q9r9s9x9y9z9{9|9}:Q:R:U:V:k:q:rT'}#s(OV({$Q9l9mU&Y!b$u+_Q'T!{Q)o$nQ.n*RQ1u-mR5[2j&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:n$]#aZ!_!o$_%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n*}+Y+c+z,Y,`,c,e,s-q/o/r0b0l0p0q0r0s0t0u0v0w0x0y0z0{0|1P1U1y2V3o3r4S4V4W4]4^5^6R6U6b6f6g7h7{8]8r8}9W:dT!XQ!Y&_cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ&W!bR/u+[Y&Q!b&U&]+[+bS(i#y(oS+f&c+iS-_(j(qQ-`(kQ-f(rQ.p*TU0P+g+k+lU0U+m+n+oS0Z+p2sQ1p-eQ1r-gQ1s-hS2n.s2qU3w0S0T0VQ3{0WQ3|0YS5a2o2vS5d2t2uU6Y3x3z3}Q6_4OS7R5e5fQ7T5gS7l6[6^S8Q7S7UQ8`7nR8k8RlhOSj}!n$Z%b%e%f%h*m*r/a/dQ%j!QS&w!v9[Q)b$fQ*V%OQ*W%PQ+v&hS,X&|9uS-r)S:OQ.S)cQ.r*UQ/h*tQ/i*uQ/q+VQ0X+mQ0_+wS1z-s:SQ2T.TS2W.V:TQ3n/sQ3q/zQ4Q0`Q4}2UQ6P3kQ6S3pQ6W3vQ6`4RQ7f6QQ7i6XQ8[7jQ8o8YQ8q8^R8|8s$W#`Z!_!o%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n*}+Y+c+z,Y,`,c,s-q/o/r0b0l0p0q0r0s0t0u0v0w0x0y0z0{0|1P1U1y2V3o3r4S4V4W4]4^5^6R6U6b6f6g7h7{8]8r8}9W:dU(t#z&{1OT)W$_,e$W#_Z!_!o%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n*}+Y+c+z,Y,`,c,s-q/o/r0b0l0p0q0r0s0t0u0v0w0x0y0z0{0|1P1U1y2V3o3r4S4V4W4]4^5^6R6U6b6f6g7h7{8]8r8}9W:dQ'e#`S)V$_,eR-t)W&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ%e{Q%f|Q%h!OQ%i!PR/`*pQ&d!iQ)X$aQ+s&gS-y)])uS0[+q+rW1}-v-w-x.eS4P0]0^U4z2P2Q2RU6t4y5W5XQ7w6uR8f7zT+h&c+iS+f&c+iU0P+g+k+lU0U+m+n+oS0Z+p2sS2n.s2qU3w0S0T0VQ3{0WQ3|0YS5a2o2vS5d2t2uU6Y3x3z3}Q6_4OS7R5e5fQ7T5gS7l6[6^S8Q7S7UQ8`7nR8k8RS+h&c+iT2p.s2qS&q!q/^Q-Q(^Q-](iS0O+f2nQ1`-RS1j-^-fU3y0U0Z5dQ4c1ZS4q1q1sU6]3{3|7TQ6j4dQ6s4tR7o6_Q!xXS&p!q/^Q)T$YQ)`$dQ)f$jQ+|&qQ-P(^Q-[(iQ-a(lQ.R)aQ.z*ZS/}+f2nS1_-Q-RS1i-]-fQ1l-`Q1o-bQ3Q.{W3u0O0U0Z5dQ4b1ZQ4f1`S4k1j1sQ4r1rQ5p3RW6Z3y3{3|7TS6i4c4dQ6n4mQ6q4qQ7O5_Q7]5qS7m6]6_Q7q6jQ7s6oQ7v6sQ7}7PQ8W7^Q8a7oQ8d7uQ8h8OQ8w8iQ9P8xQ9T9QQ:^:XQ:g:bR:h:c$rWORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tS!xn!k!j:W#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nR:^:m$rXORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tQ$Yb!Y$dm!j$g$h$i&T&i&j&k(i)d)e+X+f+x+y-_.U/y0P0U0a1p3w3|6Y7l8`S$jn!kQ)a$eQ*Z%SW.{*[*]*^*_U3R.|.}/OQ5_2nS5q3S3TU7P5`5a5dQ7^5rU8O7Q7R7TS8i8P8QS8x8j8kQ9Q8y!j:X#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nQ:b:lR:c:m$f]OSTjk}!S!W!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tY!hRU!]!`%wv$vrs!r!u$X$t&_&s&v)v)w)x*k+U+d,O,Q/j0eQ*h%_!h:Y#]#k'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nR:]&VS&Z!b$uR/w+_$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8t!j'd#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nR*g%_$roORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8tQ'T!{!k:Z#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:n!h#VZ!_$_%v%|&x'P'^'_'`'a'f'j)n*}+c+z,Y,`,s-q0b0l0|1y2V3r4S4V6U7h8]8r8}9W!R9c'c't+Y,e/o/r0p0x0y0z0{1P1U3o4W4]4^5^6R6b6f6g7{:d!d#XZ!_$_%v%|&x'P'`'a'f'j)n*}+c+z,Y,`,s-q0b0l0|1y2V3r4S4V6U7h8]8r8}9W}9e'c't+Y,e/o/r0p0z0{1P1U3o4W4]4^5^6R6b6f6g7{:d!`#]Z!_$_%v%|&x'P'f'j)n*}+c+z,Y,`,s-q0b0l0|1y2V3r4S4V6U7h8]8r8}9Wl(Y#t&})R,{-T-i-j0j1x4a4u:_:i:jx:n'c't+Y,e/o/r0p1P1U3o4W4]4^5^6R6b6f6g7{:d!`:q&y'h(](c+r,W,p-X-u-x.i.k0^0i1a1e2R2g2i2y4U4h4n4w4|5X5l6a6l6r7ZZ:r0}4[6c7p8b&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nS#l`#mR1R,h&e_ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,h,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nS#g^#nT'm#i'qT#h^#nT'o#i'q&e`ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+P+T+W+t+{,^,d,h,i-n-s-{.V.v/X/Y/Z/]/a/d/f/t/|0c0m1Q2d2l2|3a3c3d3m3t5m5{6V6|7k8_8t9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:nT#l`#mQ#o`R'x#m$rbORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+P+t+{,^,d-n-s-{.V.v/X/Y/Z/]/a/d/f/|0c0m2d2|3a3c3d3t5m5{6V7k8_8t!k:l#]#k&V'v+T+W,i/t1Q2l3m6|9V9X9[9]9^9_9`9a9b9c9d9e9f9g9h9k9t9u9w:O:P:S:T:n#RdOSUj}!S!W!n!|#k$Z%Z%^%_%b%d%e%f%h%l&R&e'v)Z*i*m*r+t,i-n-{.v/X/Y/Z/]/a/d/f1Q2d2|3a3c3d5m5{t#za!y$R$S$W(V(X(Y(a(u(v,Z-p1Y1t:k:q:r!|&{!w#d#v#x&f'|(e)Y)[)_)|*P+u-U-W-z-|.j.m.u.w1c1m1{2O2S2e2{2}4g4s4{5i5n6{7X8U9n9p9r9x9z9|:Q:UQ)P$UQ,t(Rc1O9j9o9q9s9y9{9}:R:Vt#wa!y$R$S$W(V(X(Y(a(u(v,Z-p1Y1t:k:q:rS(l#y(oQ)Q$VQ-b(m!|:`!w#d#v#x&f'|(e)Y)[)_)|*P+u-U-W-z-|.j.m.u.w1c1m1{2O2S2e2{2}4g4s4{5i5n6{7X8U9n9p9r9x9z9|:Q:Ub:a9j9o9q9s9y9{9}:R:VQ:e:oR:f:pt#za!y$R$S$W(V(X(Y(a(u(v,Z-p1Y1t:k:q:r!|&{!w#d#v#x&f'|(e)Y)[)_)|*P+u-U-W-z-|.j.m.u.w1c1m1{2O2S2e2{2}4g4s4{5i5n6{7X8U9n9p9r9x9z9|:Q:Uc1O9j9o9q9s9y9{9}:R:VlfOSj}!n$Z%b%e%f%h*m*r/a/dQ(d#xQ*y%oQ*z%qR1b-U$U#{a!w!y#d#v#x$R$S$W&f'|(V(X(Y(a(e(u(v)Y)[)_)|*P+u,Z-U-W-p-z-|.j.m.u.w1Y1c1m1t1{2O2S2e2{2}4g4s4{5i5n6{7X8U9j9n9o9p9q9r9s9x9y9z9{9|9}:Q:R:U:V:k:q:rQ*O$|Q.l*QQ2h.kR5Z2iT(n#y(oS(n#y(oT2p.s2qQ)`$dQ-a(lQ.R)aQ.z*ZQ3Q.{Q5p3RQ7O5_Q7]5qQ7}7PQ8W7^Q8h8OQ8w8iQ9P8xR9T9Ql(V#t&})R,{-T-i-j0j1x4a4u:_:i:j!`9x&y'h(](c+r,W,p-X-u-x.i.k0^0i1a1e2R2g2i2y4U4h4n4w4|5X5l6a6l6r7ZZ9y0}4[6c7p8bn(X#t&})R,y,{-T-i-j0j1x4a4u:_:i:j!b9z&y'h(](c+r,W,p-X-u-x.i.k0^0g0i1a1e2R2g2i2y4U4h4n4w4|5X5l6a6l6r7Z]9{0}4[6c6d7p8bpeOSjy}!n$Z%X%b%e%f%h*m*r/a/dQ%UxR*i%_peOSjy}!n$Z%X%b%e%f%h*m*r/a/dR%UxQ*S$}R.h){qeOSjy}!n$Z%X%b%e%f%h*m*r/a/dQ.t*XS2z.x.yW5h2w2x2y3OU7W5j5k5lU8S7V7Y7ZQ8l8TR8z8mQ%]yR*c%XR3X/RR7`5sS$lp$qR.^)lQ%bzR*m%cR*s%iT/b*r/dQjOQ!nST$^j!nQ(O#sR,q(OQ!YQR%t!YQ!^RU%z!^%{+QQ%{!_R+Q%|Q+]&WR/v+]Q,[&}R0k,[Q,_'PS0n,_0oR0o,`Q+i&cR0Q+iS!eR$tU&`!e&a+RQ&a!fR+R%}Q+`&ZR/x+`Q&t!sQ+}&rU,R&t+}0fR0f,SQ'q#iR,j'qQ#m`R'w#mQ#cZU'g#c*|9iQ*|9WR9i'tQ-O(^W1]-O1^4e6kU1^-P-Q-RS4e1_1`R6k4f#q(T#t&y&}'h(](c(|(})R+r,U,V,W,p,y,z,{-T-X-i-j-u-x.i.k0^0g0h0i0j0}1a1e1x2R2g2i2y4U4Y4Z4[4a4h4n4u4w4|5X5l6a6c6d6e6l6r7Z7p8b:_:i:jQ-V(cU1d-V1f4iQ1f-XR4i1eQ(o#yR-c(oQ(x#}R-l(xQ1|-uR4x1|Q)y$wR.g)yQ2k.nS5]2k6}R6}5^Q*U%OR.q*UQ2q.sR5b2qQ/Q*`S3V/Q5tR5t3XQ.X)hW2[.X2^5R6xQ2^.[Q5R2]R6x5SQ)m$lR._)mQ/d*rR3g/dWiOSj!nQ%g}Q)U$ZQ*l%bQ*n%eQ*o%fQ*q%hQ/_*mS/b*r/dR3f/aQ$]gQ%k!RQ%n!TQ%p!UQ%r!VQ)t$rQ)z$xQ*b%]Q*w%mS/T*c*fQ/k*vQ/l*yQ/m*zS/{+f2nQ1g-ZQ1h-[Q1n-aQ2a.bQ2f.iQ3P.zQ3Z/VQ3e/`Y3s/}0O0U0Z5dQ4j1iQ4l1kQ4o1oQ5V2cQ5Y2gQ5o3QQ5u3Y[6T3r3u3y3{3|7TQ6m4kQ6p4pQ6y5TQ7[5pQ7a5vW7g6U6Z6]6_Q7r6nQ7t6qQ7y6zQ7|7OQ8V7]U8Z7h7m7oQ8c7sQ8e7vQ8g7}Q8n8WS8p8]8aQ8u8dQ8v8hQ8{8rQ9O8wQ9R8}Q9S9PR9U9TQ$fmQ&h!jU)c$g$h$iQ+V&TU+w&i&j&kQ-Z(iS.T)d)eQ/s+XQ/z+fS0`+x+yQ1k-_Q2U.UQ3p/yS3v0P0UQ4R0aQ4p1pS6X3w3|Q7j6YQ8^7lR8s8`S#ua:kR)^$cU#}a$c:kR-k(wQ#taS&y!w)_Q&}!yQ'h#dQ(]#vQ(c#xQ(|$RQ(}$SQ)R$WQ+r&fQ,U9nQ,V9pQ,W9rQ,p'|Q,y(VQ,z(XQ,{(YQ-T(aQ-X(eQ-i(uQ-j(vd-u)Y-z.u2O2{4{5i6{7X8UQ-x)[Q.i)|Q.k*PQ0^+uQ0g9xQ0h9zQ0i9|Q0j,ZQ0}9jQ1a-UQ1e-WQ1x-pQ2R-|Q2g.jQ2i.mQ2y.wQ4U:QQ4Y9oQ4Z9qQ4[9sQ4a1YQ4h1cQ4n1mQ4u1tQ4w1{Q4|2SQ5X2eQ5l2}Q6a:UQ6c9}Q6d9yQ6e9{Q6l4gQ6r4sQ7Z5nQ7p:RQ8b:VQ:_:kQ:i:qR:j:rlgOSj}!n$Z%b%e%f%h*m*r/a/dS!pU%dQ%m!SQ%s!WQ'U!|Q'u#kS*f%Z%^Q*j%_Q*v%lQ+S&RQ+q&eQ,n'vQ-w)ZQ/[*iQ0]+tQ1T,iQ1v-nQ2Q-{Q2x.vQ3]/XQ3^/YQ3`/ZQ3b/]Q3i/fQ4_1QQ5W2dQ5k2|Q5z3aQ5|3cQ5}3dQ7Y5mR7c5{!vZOSUj}!S!n!|$Z%Z%^%_%b%d%e%f%h%l&R&e)Z*i*m*r+t-n-{.v/X/Y/Z/]/a/d/f2d2|3a3c3d5m5{Q!_RQ!oTQ$_kS%v!]%yQ%|!`Q&x!vQ'P!zQ'V#PQ'W#QQ'X#RQ'Y#SQ'Z#TQ'[#UQ']#VQ'^#WQ'_#XQ'`#YQ'a#ZQ'c#]Q'f#bQ'j#eW't#k'v,i1QQ)n$mS*}%w+PS+Y&V/tQ+c&^Q+z&oQ,Y&|Q,`'QQ,c9VQ,e9XQ,s(QQ-q)SQ/o+TQ/r+WQ0b+{Q0l,^Q0p9[Q0q9]Q0r9^Q0s9_Q0t9`Q0u9aQ0v9bQ0w9cQ0x9dQ0y9eQ0z9fQ0{9gQ0|,dQ1P9kQ1U9hQ1y-sQ2V.VQ3o9tQ3r/|Q4S0cQ4V0mQ4W9uQ4]9wQ4^:OQ5^2lQ6R3mQ6U3tQ6b:PQ6f:SQ6g:TQ7h6VQ7{6|Q8]7kQ8r8_Q8}8tQ9W!WR:d:nR!aRR&X!bS&T!b+[S+X&U&]R/y+bR'O!yR'R!zT!tU$XS!sU$XU$wrs*kS&r!r!uQ,P&sQ,S&vQ.f)xS0d,O,QR4T0e`!dR!]!`$t%w&_)v+dh!qUrs!r!u$X&s&v)x,O,Q0eQ/^*kQ/p+UQ3l/jT:[&V)wT!gR$tS!fR$tS%x!]&_S%}!`)vS+O%w+dT+Z&V)wT&[!b$uQ#i^R'z#nT'p#i'qR1S,hT(`#v(hR(f#xQ-v)YQ2P-zQ2w.uQ4y2OQ5j2{Q6u4{Q7V5iQ7z6{Q8T7XR8m8UlhOSj}!n$Z%b%e%f%h*m*r/a/dQ%[yR*b%XV$xrs*kR.o*RR*a%VQ$ppR)s$qR)i$kT%`z%cT%az%cT/c*r/d",nodeNames:"\u26a0 ArithOp ArithOp InterpolationStart extends LineComment BlockComment Script ExportDeclaration export Star as VariableName String from ; default FunctionDeclaration async function VariableDefinition TypeParamList TypeDefinition ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Interpolation null super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression await yield delete LogicOp BitOp ParenthesizedExpression ClassExpression class extends ClassBody MethodDeclaration Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression PrivatePropertyName BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody MethodDeclaration AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try catch finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement",maxTerm:330,context:Md,nodeProps:[[Ks.closedBy,3,"InterpolationEnd",40,"]",51,"}",66,")",132,"JSXSelfCloseEndTag JSXEndTag",146,"JSXEndTag"],[Ks.group,-26,8,15,17,58,184,188,191,192,194,197,200,211,213,219,221,223,225,228,234,238,240,242,244,246,248,249,"Statement",-30,12,13,24,27,28,41,43,44,45,47,52,60,68,74,75,91,92,101,103,119,122,124,125,126,127,129,130,148,149,151,"Expression",-22,23,25,29,32,34,152,154,156,157,159,160,161,163,164,165,167,168,169,178,180,182,183,"Type",-3,79,85,90,"ClassItem"],[Ks.openedBy,30,"InterpolationStart",46,"[",50,"{",65,"(",131,"JSXStartTag",141,"JSXStartTag JSXStartCloseTag"]],skippedNodes:[0,5,6],repeatNodeCount:28,tokenData:"!C}~R!`OX%TXY%cYZ'RZ[%c[]%T]^'R^p%Tpq%cqr'crs(kst0htu2`uv4pvw5ewx6cxy<yyz=Zz{=k{|>k|}?O}!O>k!O!P?`!P!QCl!Q!R!0[!R![!1q![!]!7s!]!^!8V!^!_!8g!_!`!9d!`!a!:[!a!b!<R!b!c%T!c!}2`!}#O!=d#O#P%T#P#Q!=t#Q#R!>U#R#S2`#S#T!>i#T#o2`#o#p!>y#p#q!?O#q#r!?f#r#s!?x#s$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$I|2`$I|$I}!Bq$I}$JO!Bq$JO$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`W%YR$UWO!^%T!_#o%T#p~%T,T%jg$UW'W+{OX%TXY%cYZ%TZ[%c[p%Tpq%cq!^%T!_#o%T#p$f%T$f$g%c$g#BY%T#BY#BZ%c#BZ$IS%T$IS$I_%c$I_$JT%T$JT$JU%c$JU$KV%T$KV$KW%c$KW&FU%T&FU&FV%c&FV?HT%T?HT?HU%c?HU~%T,T'YR$UW'X+{O!^%T!_#o%T#p~%T$T'jS$UW!j#{O!^%T!_!`'v!`#o%T#p~%T$O'}S#e#v$UWO!^%T!_!`(Z!`#o%T#p~%T$O(bR#e#v$UWO!^%T!_#o%T#p~%T'u(rZ$UW]!ROY(kYZ)eZr(krs*rs!^(k!^!_+U!_#O(k#O#P-b#P#o(k#o#p+U#p~(k&r)jV$UWOr)ers*Ps!^)e!^!_*a!_#o)e#o#p*a#p~)e&r*WR$P&j$UWO!^%T!_#o%T#p~%T&j*dROr*ars*ms~*a&j*rO$P&j'u*{R$P&j$UW]!RO!^%T!_#o%T#p~%T'm+ZV]!ROY+UYZ*aZr+Urs+ps#O+U#O#P+w#P~+U'm+wO$P&j]!R'm+zROr+Urs,Ts~+U'm,[U$P&j]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R,sU]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R-[O]!R!R-_PO~,n'u-gV$UWOr(krs-|s!^(k!^!_+U!_#o(k#o#p+U#p~(k'u.VZ$P&j$UW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/PZ$UW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/yR$UW]!RO!^%T!_#o%T#p~%T!Z0XT$UWO!^.x!^!_,n!_#o.x#o#p,n#p~.xy0mZ$UWOt%Ttu1`u!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`y1g]$UW'mqOt%Ttu1`u!Q%T!Q![1`![!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`&i2k_$UW#zS'Z%k'epOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`[3q_$UW#zSOt%Ttu3ju}%T}!O3j!O!Q%T!Q![3j![!^%T!_!c%T!c!}3j!}#R%T#R#S3j#S#T%T#T#o3j#p$g%T$g~3j$O4wS#^#v$UWO!^%T!_!`5T!`#o%T#p~%T$O5[R$UW#o#vO!^%T!_#o%T#p~%T%r5lU'v%j$UWOv%Tvw6Ow!^%T!_!`5T!`#o%T#p~%T$O6VS$UW#i#vO!^%T!_!`5T!`#o%T#p~%T'u6jZ$UW]!ROY6cYZ7]Zw6cwx*rx!^6c!^!_8T!_#O6c#O#P:T#P#o6c#o#p8T#p~6c&r7bV$UWOw7]wx*Px!^7]!^!_7w!_#o7]#o#p7w#p~7]&j7zROw7wwx*mx~7w'm8YV]!ROY8TYZ7wZw8Twx+px#O8T#O#P8o#P~8T'm8rROw8Twx8{x~8T'm9SU$P&j]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R9kU]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R:QPO~9f'u:YV$UWOw6cwx:ox!^6c!^!_8T!_#o6c#o#p8T#p~6c'u:xZ$P&j$UW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z;rZ$UW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z<jT$UWO!^;k!^!_9f!_#o;k#o#p9f#p~;k%V=QR!d$}$UWO!^%T!_#o%T#p~%TZ=bR!cR$UWO!^%T!_#o%T#p~%T%R=tU'[!R#_#v$UWOz%Tz{>W{!^%T!_!`5T!`#o%T#p~%T$O>_S#[#v$UWO!^%T!_!`5T!`#o%T#p~%T$u>rSj$m$UWO!^%T!_!`5T!`#o%T#p~%T&i?VR!R&a$UWO!^%T!_#o%T#p~%T&i?gVu%n$UWO!O%T!O!P?|!P!Q%T!Q![@r![!^%T!_#o%T#p~%Ty@RT$UWO!O%T!O!P@b!P!^%T!_#o%T#p~%Ty@iR!Qq$UWO!^%T!_#o%T#p~%Ty@yZ$UWkqO!Q%T!Q![@r![!^%T!_!g%T!g!hAl!h#R%T#R#S@r#S#X%T#X#YAl#Y#o%T#p~%TyAqZ$UWO{%T{|Bd|}%T}!OBd!O!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyBiV$UWO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyCVV$UWkqO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T,TCs`$UW#]#vOYDuYZ%TZzDuz{Jl{!PDu!P!Q!-e!Q!^Du!^!_Fx!_!`!.^!`!a!/]!a!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXD|[$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXEy_$UW}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%TPF}V}POYFxZ!PFx!P!QGd!Q!}Fx!}#OG{#O#PHh#P~FxPGiU}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGdPHOTOYG{Z#OG{#O#PH_#P#QFx#Q~G{PHbQOYG{Z~G{PHkQOYFxZ~FxXHvY$UWOYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~HqXIkV$UWOYHqYZ%TZ!^Hq!^!_G{!_#oHq#o#pG{#p~HqXJVV$UWOYDuYZ%TZ!^Du!^!_Fx!_#oDu#o#pFx#p~Du,TJs^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q!,R!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl,TKtV$UWOzKoz{LZ{!^Ko!^!_M]!_#oKo#o#pM]#p~Ko,TL`X$UWOzKoz{LZ{!PKo!P!QL{!Q!^Ko!^!_M]!_#oKo#o#pM]#p~Ko,TMSR$UWU+{O!^%T!_#o%T#p~%T+{M`ROzM]z{Mi{~M]+{MlTOzM]z{Mi{!PM]!P!QM{!Q~M]+{NQOU+{,TNX^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q! T!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl,T! ^_$UWU+{}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%T+{!!bY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!&x!Q!}!!]!}#O!$`#O#P!&f#P~!!]+{!#VY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!#u!Q!}!!]!}#O!$`#O#P!&f#P~!!]+{!#|UU+{}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGd+{!$cWOY!$`YZM]Zz!$`z{!${{#O!$`#O#P!&S#P#Q!!]#Q~!$`+{!%OYOY!$`YZM]Zz!$`z{!${{!P!$`!P!Q!%n!Q#O!$`#O#P!&S#P#Q!!]#Q~!$`+{!%sTU+{OYG{Z#OG{#O#PH_#P#QFx#Q~G{+{!&VTOY!$`YZM]Zz!$`z{!${{~!$`+{!&iTOY!!]YZM]Zz!!]z{!#Q{~!!]+{!&}_}POzM]z{Mi{#ZM]#Z#[!&x#[#]M]#]#^!&x#^#aM]#a#b!&x#b#gM]#g#h!&x#h#iM]#i#j!&x#j#mM]#m#n!&x#n~M],T!(R[$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|,T!(|^$UWOY!'|YZKoZz!'|z{!(w{!P!'|!P!Q!)x!Q!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|,T!*PY$UWU+{OYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~Hq,T!*tX$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#o!'|#o#p!$`#p~!'|,T!+fX$UWOYJlYZKoZzJlz{NQ{!^Jl!^!_!!]!_#oJl#o#p!!]#p~Jl,T!,Yc$UW}POzKoz{LZ{!^Ko!^!_M]!_#ZKo#Z#[!,R#[#]Ko#]#^!,R#^#aKo#a#b!,R#b#gKo#g#h!,R#h#iKo#i#j!,R#j#mKo#m#n!,R#n#oKo#o#pM]#p~Ko,T!-lV$UWT+{OY!-eYZ%TZ!^!-e!^!_!.R!_#o!-e#o#p!.R#p~!-e+{!.WQT+{OY!.RZ~!.R$P!.g[$UW#o#v}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Du]!/f[#wS$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Duy!0cd$UWkqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#U%T#U#V!3X#V#X%T#X#YAl#Y#b%T#b#c!2w#c#d!4m#d#l%T#l#m!5{#m#o%T#p~%Ty!1x_$UWkqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#X%T#X#YAl#Y#b%T#b#c!2w#c#o%T#p~%Ty!3OR$UWkqO!^%T!_#o%T#p~%Ty!3^W$UWO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#o%T#p~%Ty!3}Y$UWkqO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#b%T#b#c!2w#c#o%T#p~%Ty!4rV$UWO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#o%T#p~%Ty!5`X$UWkqO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#b%T#b#c!2w#c#o%T#p~%Ty!6QZ$UWO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#o%T#p~%Ty!6z]$UWkqO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#b%T#b#c!2w#c#o%T#p~%T%w!7|R!]V$UW#m%hO!^%T!_#o%T#p~%T!P!8^R_w$UWO!^%T!_#o%T#p~%T+c!8rR'`d!a%Y#x&s'zP!P!Q!8{!^!_!9Q!_!`!9_W!9QO$WW#v!9VP#`#v!_!`!9Y#v!9_O#o#v#v!9dO#a#v%w!9kT!{%o$UWO!^%T!_!`'v!`!a!9z!a#o%T#p~%T$P!:RR#W#w$UWO!^%T!_#o%T#p~%T%w!:gT'_!s#a#v$RS$UWO!^%T!_!`!:v!`!a!;W!a#o%T#p~%T$O!:}R#a#v$UWO!^%T!_#o%T#p~%T$O!;_T#`#v$UWO!^%T!_!`5T!`!a!;n!a#o%T#p~%T$O!;uS#`#v$UWO!^%T!_!`5T!`#o%T#p~%T%w!<YV'n%o$UWO!O%T!O!P!<o!P!^%T!_!a%T!a!b!=P!b#o%T#p~%T$`!<vRv$W$UWO!^%T!_#o%T#p~%T$O!=WS$UW#j#vO!^%T!_!`5T!`#o%T#p~%T&e!=kRx&]$UWO!^%T!_#o%T#p~%TZ!={R!OR$UWO!^%T!_#o%T#p~%T$O!>]S#g#v$UWO!^%T!_!`5T!`#o%T#p~%T$P!>pR$UW'd#wO!^%T!_#o%T#p~%T~!?OO!T~%r!?VT'u%j$UWO!^%T!_!`5T!`#o%T#p#q!=P#q~%T$u!?oR!S$knQ$UWO!^%T!_#o%T#p~%TX!@PR!kP$UWO!^%T!_#o%T#p~%T,T!@gr$UW'W+{#zS'Z%k'epOX%TXY%cYZ%TZ[%c[p%Tpq%cqt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`,T!CO_$UW'X+{#zS'Z%k'epOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`",tokenizers:[Id,qd,zd,0,1,2,3,4,5,6,7,8,Ad],topRules:{Script:[0,7]},dialects:{jsx:11335,ts:11337},dynamicPrecedences:{149:1,176:1},specialized:[{term:287,get:(t,e)=>function(t,e){return"extends"==t&&e.dialectEnabled(1)?4:-1}(t,e)<<1},{term:287,get:t=>Ed[t]||-1},{term:297,get:t=>Bd[t]||-1},{term:63,get:t=>Fd[t]||-1}],tokenPrec:11358}),Ld=[Nc("function ${name}(${params}) {\n\t${}\n}",{label:"function",detail:"definition",type:"keyword"}),Nc("for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\n\t${}\n}",{label:"for",detail:"loop",type:"keyword"}),Nc("for (let ${name} of ${collection}) {\n\t${}\n}",{label:"for",detail:"of loop",type:"keyword"}),Nc("try {\n\t${}\n} catch (${error}) {\n\t${}\n}",{label:"try",detail:"block",type:"keyword"}),Nc("class ${name} {\n\tconstructor(${params}) {\n\t\t${}\n\t}\n}",{label:"class",detail:"definition",type:"keyword"}),Nc('import {${names}} from "${module}"\n${}',{label:"import",detail:"named",type:"keyword"}),Nc('import ${name} from "${module}"\n${}',{label:"import",detail:"default",type:"keyword"})],Kd=Mo.define({parser:Nd.configure({props:[aa.add({IfStatement:fa({except:/^\s*({|else\b)/}),TryStatement:fa({except:/^\s*({|catch\b|finally\b)/}),LabeledStatement:t=>t.baseIndent,SwitchBody:t=>{let e=t.textAfter,i=/^\s*\}/.test(e),n=/^\s*(case|default)\b/.test(e);return t.baseIndent+(i?0:n?1:2)*t.unit},Block:da({closing:"}"}),ArrowFunction:t=>t.baseIndent+t.unit,"TemplateString BlockComment":()=>-1,"Statement Property":fa({except:/^{/}),JSXElement(t){let e=/^\s*<\//.test(t.textAfter);return t.lineIndent(t.node.from)+(e?0:t.unit)},JSXEscape(t){let e=/\s*\}/.test(t.textAfter);return t.lineIndent(t.node.from)+(e?0:t.unit)},"JSXOpenTag JSXSelfClosingTag":t=>t.column(t.node.from)+t.unit}),ma.add({"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression":ga,BlockComment:t=>({from:t.from+2,to:t.to-2})}),_u({"get set async static":Iu.modifier,"for while do if else switch try catch finally return throw break continue default case":Iu.controlKeyword,"in of await yield void typeof delete instanceof":Iu.operatorKeyword,"let var const function class extends":Iu.definitionKeyword,"import export from":Iu.moduleKeyword,"with debugger as new":Iu.keyword,TemplateString:Iu.special(Iu.string),Super:Iu.atom,BooleanLiteral:Iu.bool,this:Iu.self,null:Iu.null,Star:Iu.modifier,VariableName:Iu.variableName,"CallExpression/VariableName TaggedTemplateExpression/VariableName":Iu.function(Iu.variableName),VariableDefinition:Iu.definition(Iu.variableName),Label:Iu.labelName,PropertyName:Iu.propertyName,PrivatePropertyName:Iu.special(Iu.propertyName),"CallExpression/MemberExpression/PropertyName":Iu.function(Iu.propertyName),"FunctionDeclaration/VariableDefinition":Iu.function(Iu.definition(Iu.variableName)),"ClassDeclaration/VariableDefinition":Iu.definition(Iu.className),PropertyDefinition:Iu.definition(Iu.propertyName),PrivatePropertyDefinition:Iu.definition(Iu.special(Iu.propertyName)),UpdateOp:Iu.updateOperator,LineComment:Iu.lineComment,BlockComment:Iu.blockComment,Number:Iu.number,String:Iu.string,ArithOp:Iu.arithmeticOperator,LogicOp:Iu.logicOperator,BitOp:Iu.bitwiseOperator,CompareOp:Iu.compareOperator,RegExp:Iu.regexp,Equals:Iu.definitionOperator,"Arrow : Spread":Iu.punctuation,"( )":Iu.paren,"[ ]":Iu.squareBracket,"{ }":Iu.brace,"InterpolationStart InterpolationEnd":Iu.special(Iu.brace),".":Iu.derefOperator,", ;":Iu.separator,TypeName:Iu.typeName,TypeDefinition:Iu.definition(Iu.typeName),"type enum interface implements namespace module declare":Iu.definitionKeyword,"abstract global Privacy readonly override":Iu.modifier,"is keyof unique infer":Iu.operatorKeyword,JSXAttributeValue:Iu.attributeValue,JSXText:Iu.content,"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag":Iu.angleBracket,"JSXIdentifier JSXNameSpacedName":Iu.tagName,"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName":Iu.attributeName})]}),languageData:{closeBrackets:{brackets:["(","[","{","'",'"',"`"]},commentTokens:{line:"//",block:{open:"/*",close:"*/"}},indentOnInput:/^\s*(?:case |default:|\{|\}|<\/)$/,wordChars:"$"}}),Hd=Kd.configure({dialect:"ts"}),t$=Kd.configure({dialect:"jsx"}),e$=Kd.configure({dialect:"jsx ts"});function i$(t={}){let e=t.jsx?t.typescript?e$:t$:t.typescript?Hd:Kd;return new Ho(e,Kd.data.of({autocomplete:(i=["LineComment","BlockComment","String"],n=rc(Ld),t=>{for(let e=Ao(t.state).resolveInner(t.pos,-1);e;e=e.parent)if(i.indexOf(e.name)>-1)return null;return n(t)})}));var i,n}class n${constructor(t,e,i,n,r,s,o){this.type=t,this.value=e,this.from=i,this.hash=n,this.end=r,this.children=s,this.positions=o,this.hashProp=[[Ks.contextHash,n]]}static create(t,e,i,n,r){return new n$(t,e,i,n+(n<<8)+t+(e<<4)|0,r,[],[])}addChild(t,e){t.prop(Ks.contextHash)!=this.hash&&(t=new so(t.type,t.children,t.positions,t.length,this.hashProp)),this.children.push(t),this.positions.push(e)}toTree(t,e=this.end){let i=this.children.length-1;return i>=0&&(e=Math.max(e,this.positions[i]+this.children[i].length+this.from)),new so(t.types[this.type],this.children,this.positions,e-this.from).balance({makeTree:(t,e,i)=>new so(eo.none,t,e,i,this.hashProp)})}}var r$;!function(t){t[t.Document=1]="Document",t[t.CodeBlock=2]="CodeBlock",t[t.FencedCode=3]="FencedCode",t[t.Blockquote=4]="Blockquote",t[t.HorizontalRule=5]="HorizontalRule",t[t.BulletList=6]="BulletList",t[t.OrderedList=7]="OrderedList",t[t.ListItem=8]="ListItem",t[t.ATXHeading1=9]="ATXHeading1",t[t.ATXHeading2=10]="ATXHeading2",t[t.ATXHeading3=11]="ATXHeading3",t[t.ATXHeading4=12]="ATXHeading4",t[t.ATXHeading5=13]="ATXHeading5",t[t.ATXHeading6=14]="ATXHeading6",t[t.SetextHeading1=15]="SetextHeading1",t[t.SetextHeading2=16]="SetextHeading2",t[t.HTMLBlock=17]="HTMLBlock",t[t.LinkReference=18]="LinkReference",t[t.Paragraph=19]="Paragraph",t[t.CommentBlock=20]="CommentBlock",t[t.ProcessingInstructionBlock=21]="ProcessingInstructionBlock",t[t.Escape=22]="Escape",t[t.Entity=23]="Entity",t[t.HardBreak=24]="HardBreak",t[t.Emphasis=25]="Emphasis",t[t.StrongEmphasis=26]="StrongEmphasis",t[t.Link=27]="Link",t[t.Image=28]="Image",t[t.InlineCode=29]="InlineCode",t[t.HTMLTag=30]="HTMLTag",t[t.Comment=31]="Comment",t[t.ProcessingInstruction=32]="ProcessingInstruction",t[t.URL=33]="URL",t[t.HeaderMark=34]="HeaderMark",t[t.QuoteMark=35]="QuoteMark",t[t.ListMark=36]="ListMark",t[t.LinkMark=37]="LinkMark",t[t.EmphasisMark=38]="EmphasisMark",t[t.CodeMark=39]="CodeMark",t[t.CodeText=40]="CodeText",t[t.CodeInfo=41]="CodeInfo",t[t.LinkTitle=42]="LinkTitle",t[t.LinkLabel=43]="LinkLabel"}(r$||(r$={}));class s${constructor(t,e){this.start=t,this.content=e,this.marks=[],this.parsers=[]}}class o${constructor(){this.text="",this.baseIndent=0,this.basePos=0,this.depth=0,this.markers=[],this.pos=0,this.indent=0,this.next=-1}forward(){this.basePos>this.pos&&this.forwardInner()}forwardInner(){let t=this.skipSpace(this.basePos);this.indent=this.countIndent(t,this.pos,this.indent),this.pos=t,this.next=t==this.text.length?-1:this.text.charCodeAt(t)}skipSpace(t){return O$(this.text,t)}reset(t){for(this.text=t,this.baseIndent=this.basePos=this.pos=this.indent=0,this.forwardInner(),this.depth=1;this.markers.length;)this.markers.pop()}moveBase(t){this.basePos=t,this.baseIndent=this.countIndent(t,this.pos,this.indent)}moveBaseColumn(t){this.baseIndent=t,this.basePos=this.findColumn(t)}addMarker(t){this.markers.push(t)}countIndent(t,e=0,i=0){for(let n=e;n<t;n++)i+=9==this.text.charCodeAt(n)?4-i%4:1;return i}findColumn(t){let e=0;for(let i=0;e<this.text.length&&i<t;e++)i+=9==this.text.charCodeAt(e)?4-i%4:1;return e}scrub(){if(!this.baseIndent)return this.text;let t="";for(let e=0;e<this.basePos;e++)t+=" ";return t+this.text.slice(this.basePos)}}function a$(t,e,i){if(i.pos==i.text.length||t!=e.block&&i.indent>=e.stack[i.depth+1].value+i.baseIndent)return!0;if(i.indent>=i.baseIndent+4)return!1;let n=(t.type==r$.OrderedList?p$:_$)(i,e,!1);return n>0&&(t.type!=r$.BulletList||$$(i,e,!1)<0)&&i.text.charCodeAt(i.pos+n-1)==t.value}const l$={[r$.Blockquote]:(t,e,i)=>62==i.next&&(i.markers.push(q$(r$.QuoteMark,e.lineStart+i.pos,e.lineStart+i.pos+1)),i.moveBase(i.pos+(h$(i.text.charCodeAt(i.pos+1))?2:1)),t.end=e.lineStart+i.text.length,!0),[r$.ListItem]:(t,e,i)=>!(i.indent<i.baseIndent+t.value&&i.next>-1)&&(i.moveBaseColumn(i.baseIndent+t.value),!0),[r$.OrderedList]:a$,[r$.BulletList]:a$,[r$.Document]:()=>!0};function h$(t){return 32==t||9==t||10==t||13==t}function O$(t,e=0){for(;e<t.length&&h$(t.charCodeAt(e));)e++;return e}function c$(t,e,i){for(;e>i&&h$(t.charCodeAt(e-1));)e--;return e}function u$(t){if(96!=t.next&&126!=t.next)return-1;let e=t.pos+1;for(;e<t.text.length&&t.text.charCodeAt(e)==t.next;)e++;if(e<t.pos+3)return-1;if(96==t.next)for(let i=e;i<t.text.length;i++)if(96==t.text.charCodeAt(i))return-1;return e}function d$(t){return 62!=t.next?-1:32==t.text.charCodeAt(t.pos+1)?2:1}function $$(t,e,i){if(42!=t.next&&45!=t.next&&95!=t.next)return-1;let n=1;for(let e=t.pos+1;e<t.text.length;e++){let i=t.text.charCodeAt(e);if(i==t.next)n++;else if(!h$(i))return-1}return i&&45==t.next&&g$(t)>-1&&t.depth==e.stack.length||n<3?-1:1}function f$(t,e){for(let i=t.stack.length-1;i>=0;i--)if(t.stack[i].type==e)return!0;return!1}function _$(t,e,i){return 45!=t.next&&43!=t.next&&42!=t.next||t.pos!=t.text.length-1&&!h$(t.text.charCodeAt(t.pos+1))||!(!i||f$(e,r$.BulletList)||t.skipSpace(t.pos+2)<t.text.length)?-1:1}function p$(t,e,i){let n=t.pos,r=t.next;for(;r>=48&&r<=57;){if(n++,n==t.text.length)return-1;r=t.text.charCodeAt(n)}return n==t.pos||n>t.pos+9||46!=r&&41!=r||n<t.text.length-1&&!h$(t.text.charCodeAt(n+1))||i&&!f$(e,r$.OrderedList)&&(t.skipSpace(n+1)==t.text.length||n>t.pos+1||49!=t.next)?-1:n+1-t.pos}function m$(t){if(35!=t.next)return-1;let e=t.pos+1;for(;e<t.text.length&&35==t.text.charCodeAt(e);)e++;if(e<t.text.length&&32!=t.text.charCodeAt(e))return-1;let i=e-t.pos;return i>6?-1:i}function g$(t){if(45!=t.next&&61!=t.next||t.indent>=t.baseIndent+4)return-1;let e=t.pos+1;for(;e<t.text.length&&t.text.charCodeAt(e)==t.next;)e++;let i=e;for(;e<t.text.length&&h$(t.text.charCodeAt(e));)e++;return e==t.text.length?i:-1}const T$=/^[ \t]*$/,b$=/-->/,Q$=/\?>/,Z$=[[/^<(?:script|pre|style)(?:\s|>|$)/i,/<\/(?:script|pre|style)>/i],[/^\s*<!--/,b$],[/^\s*<\?/,Q$],[/^\s*<![A-Z]/,/>/],[/^\s*<!\[CDATA\[/,/\]\]>/],[/^\s*<\/?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\s|\/?>|$)/i,T$],[/^\s*(?:<\/[a-z][\w-]*\s*>|<[a-z][\w-]*(\s+[a-z:_][\w-.]*(?:\s*=\s*(?:[^\s"'=<>`]+|'[^']*'|"[^"]*"))?)*\s*>)\s*$/i,T$]];function S$(t,e,i){if(60!=t.next)return-1;let n=t.text.slice(t.pos);for(let t=0,e=Z$.length-(i?1:0);t<e;t++)if(Z$[t][0].test(n))return t;return-1}function v$(t,e){let i=t.countIndent(e,t.pos,t.indent),n=t.countIndent(t.skipSpace(e),e,i);return n>=i+5?i+1:n}function x$(t,e,i){let n=t.length-1;n>=0&&t[n].to==e&&t[n].type==r$.CodeText?t[n].to=i:t.push(q$(r$.CodeText,e,i))}const k$={LinkReference:void 0,IndentedCode(t,e){let i=e.baseIndent+4;if(e.indent<i)return!1;let n=e.findColumn(i),r=t.lineStart+n,s=t.lineStart+e.text.length,o=[],a=[];for(x$(o,r,s);t.nextLine()&&e.depth>=t.stack.length;)if(e.pos==e.text.length){x$(a,t.lineStart-1,t.lineStart);for(let t of e.markers)a.push(t)}else{if(e.indent<i)break;{if(a.length){for(let t of a)t.type==r$.CodeText?x$(o,t.from,t.to):o.push(t);a=[]}x$(o,t.lineStart-1,t.lineStart);for(let t of e.markers)o.push(t);s=t.lineStart+e.text.length;let i=t.lineStart+e.findColumn(e.baseIndent+4);i<s&&x$(o,i,s)}}return a.length&&(a=a.filter((t=>t.type!=r$.CodeText)),a.length&&(e.markers=a.concat(e.markers))),t.addNode(t.buffer.writeElements(o,-r).finish(r$.CodeBlock,s-r),r),!0},FencedCode(t,e){let i=u$(e);if(i<0)return!1;let n=t.lineStart+e.pos,r=e.next,s=i-e.pos,o=e.skipSpace(i),a=c$(e.text,e.text.length,o),l=[q$(r$.CodeMark,n,n+s)];o<a&&l.push(q$(r$.CodeInfo,t.lineStart+o,t.lineStart+a));for(let i=!0;t.nextLine()&&e.depth>=t.stack.length;i=!1){let n=e.pos;if(e.indent-e.baseIndent<4)for(;n<e.text.length&&e.text.charCodeAt(n)==r;)n++;if(n-e.pos>=s&&e.skipSpace(n)==e.text.length){for(let t of e.markers)l.push(t);l.push(q$(r$.CodeMark,t.lineStart+e.pos,t.lineStart+n)),t.nextLine();break}{i||x$(l,t.lineStart-1,t.lineStart);for(let t of e.markers)l.push(t);let n=t.lineStart+e.basePos,r=t.lineStart+e.text.length;n<r&&x$(l,n,r)}}return t.addNode(t.buffer.writeElements(l,-n).finish(r$.FencedCode,t.prevLineEnd()-n),n),!0},Blockquote(t,e){let i=d$(e);return!(i<0)&&(t.startContext(r$.Blockquote,e.pos),t.addNode(r$.QuoteMark,t.lineStart+e.pos,t.lineStart+e.pos+1),e.moveBase(e.pos+i),null)},HorizontalRule(t,e){if($$(e,t,!1)<0)return!1;let i=t.lineStart+e.pos;return t.nextLine(),t.addNode(r$.HorizontalRule,i),!0},BulletList(t,e){let i=_$(e,t,!1);if(i<0)return!1;t.block.type!=r$.BulletList&&t.startContext(r$.BulletList,e.basePos,e.next);let n=v$(e,e.pos+1);return t.startContext(r$.ListItem,e.basePos,n-e.baseIndent),t.addNode(r$.ListMark,t.lineStart+e.pos,t.lineStart+e.pos+i),e.moveBaseColumn(n),null},OrderedList(t,e){let i=p$(e,t,!1);if(i<0)return!1;t.block.type!=r$.OrderedList&&t.startContext(r$.OrderedList,e.basePos,e.text.charCodeAt(e.pos+i-1));let n=v$(e,e.pos+i);return t.startContext(r$.ListItem,e.basePos,n-e.baseIndent),t.addNode(r$.ListMark,t.lineStart+e.pos,t.lineStart+e.pos+i),e.moveBaseColumn(n),null},ATXHeading(t,e){let i=m$(e);if(i<0)return!1;let n=e.pos,r=t.lineStart+n,s=c$(e.text,e.text.length,n),o=s;for(;o>n&&e.text.charCodeAt(o-1)==e.next;)o--;o!=s&&o!=n&&h$(e.text.charCodeAt(o-1))||(o=e.text.length);let a=t.buffer.write(r$.HeaderMark,0,i).writeElements(t.parser.parseInline(e.text.slice(n+i+1,o),r+i+1),-r);o<e.text.length&&a.write(r$.HeaderMark,o-n,s-n);let l=a.finish(r$.ATXHeading1-1+i,e.text.length-n);return t.nextLine(),t.addNode(l,r),!0},HTMLBlock(t,e){let i=S$(e,0,!1);if(i<0)return!1;let n=t.lineStart+e.pos,r=Z$[i][1],s=[],o=r!=T$;for(;!r.test(e.text)&&t.nextLine();){if(e.depth<t.stack.length){o=!1;break}for(let t of e.markers)s.push(t)}o&&t.nextLine();let a=r==b$?r$.CommentBlock:r==Q$?r$.ProcessingInstructionBlock:r$.HTMLBlock,l=t.prevLineEnd();return t.addNode(t.buffer.writeElements(s,-n).finish(a,l-n),n),!0},SetextHeading:void 0};class w${constructor(t){this.stage=0,this.elts=[],this.pos=0,this.start=t.start,this.advance(t.content)}nextLine(t,e,i){if(-1==this.stage)return!1;let n=i.content+"\n"+e.scrub(),r=this.advance(n);return r>-1&&r<n.length&&this.complete(t,i,r)}finish(t,e){return(2==this.stage||3==this.stage)&&O$(e.content,this.pos)==e.content.length&&this.complete(t,e,e.content.length)}complete(t,e,i){return t.addLeafElement(e,q$(r$.LinkReference,this.start,this.start+i,this.elts)),!0}nextStage(t){return t?(this.pos=t.to-this.start,this.elts.push(t),this.stage++,!0):(!1===t&&(this.stage=-1),!1)}advance(t){for(;;){if(-1==this.stage)return-1;if(0==this.stage){if(!this.nextStage(rf(t,this.pos,this.start,!0)))return-1;if(58!=t.charCodeAt(this.pos))return this.stage=-1;this.elts.push(q$(r$.LinkMark,this.pos+this.start,this.pos+this.start+1)),this.pos++}else{if(1!=this.stage){if(2==this.stage){let e=O$(t,this.pos),i=0;if(e>this.pos){let n=nf(t,e,this.start);if(n){let e=y$(t,n.to-this.start);e>0&&(this.nextStage(n),i=e)}}return i||(i=y$(t,this.pos)),i>0&&i<t.length?i:-1}return y$(t,this.pos)}if(!this.nextStage(ef(t,O$(t,this.pos),this.start)))return-1}}}}function y$(t,e){for(;e<t.length;e++){let i=t.charCodeAt(e);if(10==i)break;if(!h$(i))return-1}return e}class P${nextLine(t,e,i){let n=e.depth<t.stack.length?-1:g$(e),r=e.next;if(n<0)return!1;let s=q$(r$.HeaderMark,t.lineStart+e.pos,t.lineStart+n);return t.nextLine(),t.addLeafElement(i,q$(61==r?r$.SetextHeading1:r$.SetextHeading2,i.start,t.prevLineEnd(),[...t.parser.parseInline(i.content,i.start),s])),!0}finish(){return!1}}const X$={LinkReference:(t,e)=>91==e.content.charCodeAt(0)?new w$(e):null,SetextHeading:()=>new P$},R$=[(t,e)=>m$(e)>=0,(t,e)=>u$(e)>=0,(t,e)=>d$(e)>=0,(t,e)=>_$(e,t,!0)>=0,(t,e)=>p$(e,t,!0)>=0,(t,e)=>$$(e,t,!0)>=0,(t,e)=>S$(e,0,!0)>=0],W$={text:"",end:0};class Y${constructor(t,e,i,n){this.parser=t,this.input=e,this.ranges=n,this.line=new o$,this.atEnd=!1,this.dontInject=new Set,this.stoppedAt=null,this.rangeI=0,this.to=n[n.length-1].to,this.lineStart=this.absoluteLineStart=this.absoluteLineEnd=n[0].from,this.block=n$.create(r$.Document,0,this.lineStart,0,0),this.stack=[this.block],this.fragments=i.length?new lf(i,e):null,this.readLine()}get parsedPos(){return this.absoluteLineStart}advance(){if(null!=this.stoppedAt&&this.absoluteLineStart>this.stoppedAt)return this.finish();let{line:t}=this;for(;;){for(;t.depth<this.stack.length;)this.finishContext();for(let e of t.markers)this.addNode(e.type,e.from,e.to);if(t.pos<t.text.length)break;if(!this.nextLine())return this.finish()}if(this.fragments&&this.reuseFragment(t.basePos))return null;t:for(;;){for(let e of this.parser.blockParsers)if(e){let i=e(this,t);if(0!=i){if(1==i)return null;t.forward();continue t}}break}let e=new s$(this.lineStart+t.pos,t.text.slice(t.pos));for(let t of this.parser.leafBlockParsers)if(t){let i=t(this,e);i&&e.parsers.push(i)}t:for(;this.nextLine()&&t.pos!=t.text.length;){if(t.indent<t.baseIndent+4)for(let i of this.parser.endLeafBlock)if(i(this,t,e))break t;for(let i of e.parsers)if(i.nextLine(this,t,e))return null;e.content+="\n"+t.scrub();for(let i of t.markers)e.marks.push(i)}return this.finishLeaf(e),null}stopAt(t){if(null!=this.stoppedAt&&this.stoppedAt<t)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=t}reuseFragment(t){if(!this.fragments.moveTo(this.absoluteLineStart+t,this.absoluteLineStart)||!this.fragments.matches(this.block.hash))return!1;let e=this.fragments.takeNodes(this);if(!e)return!1;let i=e,n=this.absoluteLineStart+e;for(let t=1;t<this.ranges.length;t++){let e=this.ranges[t-1].to,r=this.ranges[t].from;e>=this.lineStart&&r<n&&(i-=r-e)}return this.lineStart+=i,this.absoluteLineStart+=e,this.moveRangeI(),this.absoluteLineStart<this.to?(this.lineStart++,this.absoluteLineStart++,this.readLine()):(this.atEnd=!0,this.readLine()),!0}get depth(){return this.stack.length}parentType(t=this.depth-1){return this.parser.nodeSet.types[this.stack[t].type]}nextLine(){return this.lineStart+=this.line.text.length,this.absoluteLineEnd>=this.to?(this.absoluteLineStart=this.absoluteLineEnd,this.atEnd=!0,this.readLine(),!1):(this.lineStart++,this.absoluteLineStart=this.absoluteLineEnd+1,this.moveRangeI(),this.readLine(),!0)}moveRangeI(){for(;this.rangeI<this.ranges.length-1&&this.absoluteLineStart>=this.ranges[this.rangeI].to;)this.rangeI++}scanLine(t){let e=W$;if(e.end=t,t>=this.to)e.text="";else if(e.text=this.lineChunkAt(e.end),e.end+=e.text.length,this.ranges.length>1){let t=this.absoluteLineStart,i=this.rangeI;for(;this.ranges[i].to<e.end;){i++;let n=this.ranges[i].from,r=this.lineChunkAt(n);e.end=n+r.length,e.text=e.text.slice(0,this.ranges[i-1].to-t)+r,t=e.end-e.text.length}}return e}readLine(){let{line:t}=this,{text:e,end:i}=this.scanLine(this.absoluteLineStart);for(this.absoluteLineEnd=i,t.reset(e);t.depth<this.stack.length;t.depth++){let e=this.stack[t.depth],i=this.parser.skipContextMarkup[e.type];if(!i)throw new Error("Unhandled block context "+r$[e.type]);if(!i(e,this,t))break;t.forward()}}lineChunkAt(t){let e,i=this.input.chunk(t);if(this.input.lineChunks)e="\n"==i?"":i;else{let t=i.indexOf("\n");e=t<0?i:i.slice(0,t)}return t+e.length>this.to?e.slice(0,this.to-t):e}prevLineEnd(){return this.atEnd?this.lineStart:this.lineStart-1}startContext(t,e,i=0){this.block=n$.create(t,i,this.lineStart+e,this.block.hash,this.lineStart+this.line.text.length),this.stack.push(this.block)}startComposite(t,e,i=0){this.startContext(this.parser.getNodeType(t),e,i)}addNode(t,e,i){"number"==typeof t&&(t=new so(this.parser.nodeSet.types[t],D$,D$,(null!=i?i:this.prevLineEnd())-e)),this.block.addChild(t,e-this.block.from)}addElement(t){this.block.addChild(t.toTree(this.parser.nodeSet),t.from-this.block.from)}addLeafElement(t,e){this.addNode(this.buffer.writeElements(of(e.children,t.marks),-e.from).finish(e.type,e.to-e.from),e.from)}finishContext(){let t=this.stack.pop(),e=this.stack[this.stack.length-1];e.addChild(t.toTree(this.parser.nodeSet),t.from-e.from),this.block=e}finish(){for(;this.stack.length>1;)this.finishContext();return this.addGaps(this.block.toTree(this.parser.nodeSet,this.lineStart))}addGaps(t){return this.ranges.length>1?C$(this.ranges,0,t.topNode,this.ranges[0].from,this.dontInject):t}finishLeaf(t){for(let e of t.parsers)if(e.finish(this,t))return;let e=of(this.parser.parseInline(t.content,t.start),t.marks);this.addNode(this.buffer.writeElements(e,-t.start).finish(r$.Paragraph,t.content.length),t.start)}elt(t,e,i,n){return"string"==typeof t?q$(this.parser.getNodeType(t),e,i,n):new I$(t,e)}get buffer(){return new M$(this.parser.nodeSet)}}function C$(t,e,i,n,r){if(r.has(i.tree))return i.tree;let s=t[e].to,o=[],a=[],l=i.from+n;function h(i,r){for(;r?i>=s:i>s;){let r=t[e+1].from-s;n+=r,i+=r,e++,s=t[e].to}}for(let O=i.firstChild;O;O=O.nextSibling){h(O.from+n,!0);let i,c=O.from+n;O.to+n>s?(i=C$(t,e,O,n,r),h(O.to+n,!1)):i=O.toTree(),o.push(i),a.push(c-l)}return h(i.to+n,!1),new so(i.type,o,a,i.to+n-l,i.tree?i.tree.propValues:void 0)}class V$ extends Qo{constructor(t,e,i,n,r,s,o,a,l){super(),this.nodeSet=t,this.blockParsers=e,this.leafBlockParsers=i,this.blockNames=n,this.endLeafBlock=r,this.skipContextMarkup=s,this.inlineParsers=o,this.inlineNames=a,this.wrappers=l,this.nodeTypes=Object.create(null);for(let e of t.types)this.nodeTypes[e.name]=e.id}createParse(t,e,i){let n=new Y$(this,t,e,i);for(let r of this.wrappers)n=r(n,t,e,i);return n}configure(t){let e=U$(t);if(!e)return this;let{nodeSet:i,skipContextMarkup:n}=this,r=this.blockParsers.slice(),s=this.leafBlockParsers.slice(),o=this.blockNames.slice(),a=this.inlineParsers.slice(),l=this.inlineNames.slice(),h=this.endLeafBlock.slice(),O=this.wrappers;if(j$(e.defineNodes)){n=Object.assign({},n);let t=i.types.slice();for(let i of e.defineNodes){let{name:e,block:r,composite:s}="string"==typeof i?{name:i}:i;if(t.some((t=>t.name==e)))continue;s&&(n[t.length]=(t,e,i)=>s(e,i,t.value));let o=t.length,a=s?["Block","BlockContext"]:r?o>=r$.ATXHeading1&&o<=r$.SetextHeading2?["Block","LeafBlock","Heading"]:["Block","LeafBlock"]:void 0;t.push(eo.define({id:o,name:e,props:a&&[[Ks.group,a]]}))}i=new io(t)}if(j$(e.props)&&(i=i.extend(...e.props)),j$(e.remove))for(let t of e.remove){let e=this.blockNames.indexOf(t),i=this.inlineNames.indexOf(t);e>-1&&(r[e]=s[e]=void 0),i>-1&&(a[i]=void 0)}if(j$(e.parseBlock))for(let t of e.parseBlock){let e=o.indexOf(t.name);if(e>-1)r[e]=t.parse,s[e]=t.leaf;else{let e=t.before?J$(o,t.before):t.after?J$(o,t.after)+1:o.length-1;r.splice(e,0,t.parse),s.splice(e,0,t.leaf),o.splice(e,0,t.name)}t.endLeaf&&h.push(t.endLeaf)}if(j$(e.parseInline))for(let t of e.parseInline){let e=l.indexOf(t.name);if(e>-1)a[e]=t.parse;else{let e=t.before?J$(l,t.before):t.after?J$(l,t.after)+1:l.length-1;a.splice(e,0,t.parse),l.splice(e,0,t.name)}}return e.wrap&&(O=O.concat(e.wrap)),new V$(i,r,s,o,h,n,a,l,O)}getNodeType(t){let e=this.nodeTypes[t];if(null==e)throw new RangeError(`Unknown node type '${t}'`);return e}parseInline(t,e){let i=new sf(this,t,e);t:for(let t=e;t<i.end;){let e=i.char(t);for(let n of this.inlineParsers)if(n){let r=n(i,e,t);if(r>=0){t=r;continue t}}t++}return i.resolveMarkers(0)}}function j$(t){return null!=t&&t.length>0}function U$(t){if(!Array.isArray(t))return t;if(0==t.length)return null;let e=U$(t[0]);if(1==t.length)return e;let i=U$(t.slice(1));if(!i||!e)return e||i;let n=(t,e)=>(t||D$).concat(e||D$),r=e.wrap,s=i.wrap;return{props:n(e.props,i.props),defineNodes:n(e.defineNodes,i.defineNodes),parseBlock:n(e.parseBlock,i.parseBlock),parseInline:n(e.parseInline,i.parseInline),remove:n(e.remove,i.remove),wrap:r?s?(t,e,i,n)=>r(s(t,e,i,n),e,i,n):r:s}}function J$(t,e){let i=t.indexOf(e);if(i<0)throw new RangeError(`Position specified relative to unknown parser ${e}`);return i}let G$=[eo.none];for(let t,e=1;t=r$[e];e++)G$[e]=eo.define({id:e,name:t,props:e>=r$.Escape?[]:[[Ks.group,e in l$?["Block","BlockContext"]:["Block","LeafBlock"]]]});const D$=[];class M${constructor(t){this.nodeSet=t,this.content=[],this.nodes=[]}write(t,e,i,n=0){return this.content.push(t,e,i,4+4*n),this}writeElements(t,e=0){for(let i of t)i.writeTo(this,e);return this}finish(t,e){return so.build({buffer:this.content,nodeSet:this.nodeSet,reused:this.nodes,topID:t,length:e})}}class A${constructor(t,e,i,n=D$){this.type=t,this.from=e,this.to=i,this.children=n}writeTo(t,e){let i=t.content.length;t.writeElements(this.children,e),t.content.push(this.type,this.from+e,this.to+e,t.content.length+4-i)}toTree(t){return new M$(t).writeElements(this.children,-this.from).finish(this.type,this.to-this.from)}}class I${constructor(t,e){this.tree=t,this.from=e}get to(){return this.from+this.tree.length}get type(){return this.tree.type.id}get children(){return D$}writeTo(t,e){t.nodes.push(this.tree),t.content.push(t.nodes.length-1,this.from+e,this.to+e,-1)}toTree(){return this.tree}}function q$(t,e,i,n){return new A$(t,e,i,n)}const z$={resolve:"Emphasis",mark:"EmphasisMark"},E$={resolve:"Emphasis",mark:"EmphasisMark"},B$={},F$={};class N${constructor(t,e,i,n){this.type=t,this.from=e,this.to=i,this.side=n}}const L$="!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~";let K$=/[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~\xA1\u2010-\u2027]/;try{K$=new RegExp("[\\p{Pc}|\\p{Pd}|\\p{Pe}|\\p{Pf}|\\p{Pi}|\\p{Po}|\\p{Ps}]","u")}catch(t){}const H$={Escape(t,e,i){if(92!=e||i==t.end-1)return-1;let n=t.char(i+1);for(let e=0;e<L$.length;e++)if(L$.charCodeAt(e)==n)return t.append(q$(r$.Escape,i,i+2));return-1},Entity(t,e,i){if(38!=e)return-1;let n=/^(?:#\d+|#x[a-f\d]+|\w+);/i.exec(t.slice(i+1,i+31));return n?t.append(q$(r$.Entity,i,i+1+n[0].length)):-1},InlineCode(t,e,i){if(96!=e||i&&96==t.char(i-1))return-1;let n=i+1;for(;n<t.end&&96==t.char(n);)n++;let r=n-i,s=0;for(;n<t.end;n++)if(96==t.char(n)){if(s++,s==r&&96!=t.char(n+1))return t.append(q$(r$.InlineCode,i,n+1,[q$(r$.CodeMark,i,i+r),q$(r$.CodeMark,n+1-r,n+1)]))}else s=0;return-1},HTMLTag(t,e,i){if(60!=e||i==t.end-1)return-1;let n=t.slice(i+1,t.end),r=/^(?:[a-z][-\w+.]+:[^\s>]+|[a-z\d.!#$%&'*+/=?^_`{|}~-]+@[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?(?:\.[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?)*)>/i.exec(n);if(r)return t.append(q$(r$.URL,i,i+1+r[0].length));let s=/^!--[^>](?:-[^-]|[^-])*?-->/i.exec(n);if(s)return t.append(q$(r$.Comment,i,i+1+s[0].length));let o=/^\?[^]*?\?>/.exec(n);if(o)return t.append(q$(r$.ProcessingInstruction,i,i+1+o[0].length));let a=/^(?:![A-Z][^]*?>|!\[CDATA\[[^]*?\]\]>|\/\s*[a-zA-Z][\w-]*\s*>|\s*[a-zA-Z][\w-]*(\s+[a-zA-Z:_][\w-.:]*(?:\s*=\s*(?:[^\s"'=<>`]+|'[^']*'|"[^"]*"))?)*\s*(\/\s*)?>)/.exec(n);return a?t.append(q$(r$.HTMLTag,i,i+1+a[0].length)):-1},Emphasis(t,e,i){if(95!=e&&42!=e)return-1;let n=i+1;for(;t.char(n)==e;)n++;let r=t.slice(i-1,i),s=t.slice(n,n+1),o=K$.test(r),a=K$.test(s),l=/\s|^$/.test(r),h=/\s|^$/.test(s),O=!h&&(!a||l||o),c=!l&&(!o||h||a),u=O&&(42==e||!c||o),d=c&&(42==e||!O||a);return t.append(new N$(95==e?z$:E$,i,n,(u?1:0)|(d?2:0)))},HardBreak(t,e,i){if(92==e&&10==t.char(i+1))return t.append(q$(r$.HardBreak,i,i+2));if(32==e){let e=i+1;for(;32==t.char(e);)e++;if(10==t.char(e)&&e>=i+2)return t.append(q$(r$.HardBreak,i,e+1))}return-1},Link:(t,e,i)=>91==e?t.append(new N$(B$,i,i+1,1)):-1,Image:(t,e,i)=>33==e&&91==t.char(i+1)?t.append(new N$(F$,i,i+2,1)):-1,LinkEnd(t,e,i){if(93!=e)return-1;for(let e=t.parts.length-1;e>=0;e--){let n=t.parts[e];if(n instanceof N$&&(n.type==B$||n.type==F$)){if(!n.side||t.skipSpace(n.to)==i&&!/[(\[]/.test(t.slice(i+1,i+2)))return t.parts[e]=null,-1;let r=t.takeContent(e),s=t.parts[e]=tf(t,r,n.type==B$?r$.Link:r$.Image,n.from,i+1);if(n.type==B$)for(let i=0;i<e;i++){let e=t.parts[i];e instanceof N$&&e.type==B$&&(e.side=0)}return s.to}}return-1}};function tf(t,e,i,n,r){let{text:s}=t,o=t.char(r),a=r;if(e.unshift(q$(r$.LinkMark,n,n+(i==r$.Image?2:1))),e.push(q$(r$.LinkMark,r-1,r)),40==o){let i,n=t.skipSpace(r+1),o=ef(s,n-t.offset,t.offset);o&&(n=t.skipSpace(o.to),i=nf(s,n-t.offset,t.offset),i&&(n=t.skipSpace(i.to))),41==t.char(n)&&(e.push(q$(r$.LinkMark,r,r+1)),a=n+1,o&&e.push(o),i&&e.push(i),e.push(q$(r$.LinkMark,n,a)))}else if(91==o){let i=rf(s,r-t.offset,t.offset,!1);i&&(e.push(i),a=i.to)}return q$(i,n,a,e)}function ef(t,e,i){if(60==t.charCodeAt(e)){for(let n=e+1;n<t.length;n++){let r=t.charCodeAt(n);if(62==r)return q$(r$.URL,e+i,n+1+i);if(60==r||10==r)return!1}return null}{let n=0,r=e;for(let e=!1;r<t.length;r++){let i=t.charCodeAt(r);if(h$(i))break;if(e)e=!1;else if(40==i)n++;else if(41==i){if(!n)break;n--}else 92==i&&(e=!0)}return r>e?q$(r$.URL,e+i,r+i):r==t.length&&null}}function nf(t,e,i){let n=t.charCodeAt(e);if(39!=n&&34!=n&&40!=n)return!1;let r=40==n?41:n;for(let n=e+1,s=!1;n<t.length;n++){let o=t.charCodeAt(n);if(s)s=!1;else{if(o==r)return q$(r$.LinkTitle,e+i,n+1+i);92==o&&(s=!0)}}return null}function rf(t,e,i,n){for(let r=!1,s=e+1,o=Math.min(t.length,s+999);s<o;s++){let o=t.charCodeAt(s);if(r)r=!1;else{if(93==o)return!n&&q$(r$.LinkLabel,e+i,s+1+i);if(n&&!h$(o)&&(n=!1),91==o)return!1;92==o&&(r=!0)}}return null}class sf{constructor(t,e,i){this.parser=t,this.text=e,this.offset=i,this.parts=[]}char(t){return t>=this.end?-1:this.text.charCodeAt(t-this.offset)}get end(){return this.offset+this.text.length}slice(t,e){return this.text.slice(t-this.offset,e-this.offset)}append(t){return this.parts.push(t),t.to}addDelimiter(t,e,i,n,r){return this.append(new N$(t,e,i,(n?1:0)|(r?2:0)))}addElement(t){return this.append(t)}resolveMarkers(t){for(let e=t;e<this.parts.length;e++){let i=this.parts[e];if(!(i instanceof N$&&i.type.resolve&&2&i.side))continue;let n,r=i.type==z$||i.type==E$,s=i.to-i.from,o=e-1;for(;o>=t;o--){let t=this.parts[o];if(t instanceof N$&&1&t.side&&t.type==i.type&&!(r&&(1&i.side||2&t.side)&&(t.to-t.from+s)%3==0&&((t.to-t.from)%3||s%3))){n=t;break}}if(!n)continue;let a=i.type.resolve,l=[],h=n.from,O=i.to;if(r){let t=Math.min(2,n.to-n.from,s);h=n.to-t,O=i.from+t,a=1==t?"Emphasis":"StrongEmphasis"}n.type.mark&&l.push(this.elt(n.type.mark,h,n.to));for(let t=o+1;t<e;t++)this.parts[t]instanceof A$&&l.push(this.parts[t]),this.parts[t]=null;i.type.mark&&l.push(this.elt(i.type.mark,i.from,O));let c=this.elt(a,h,O,l);this.parts[o]=r&&n.from!=h?new N$(n.type,n.from,h,n.side):null,(this.parts[e]=r&&i.to!=O?new N$(i.type,O,i.to,i.side):null)?this.parts.splice(e,0,c):this.parts[e]=c}let e=[];for(let i=t;i<this.parts.length;i++){let t=this.parts[i];t instanceof A$&&e.push(t)}return e}findOpeningDelimiter(t){for(let e=this.parts.length-1;e>=0;e--){let i=this.parts[e];if(i instanceof N$&&i.type==t)return e}return null}takeContent(t){let e=this.resolveMarkers(t);return this.parts.length=t,e}skipSpace(t){return O$(this.text,t-this.offset)+this.offset}elt(t,e,i,n){return"string"==typeof t?q$(this.parser.getNodeType(t),e,i,n):new I$(t,e)}}function of(t,e){if(!e.length)return t;if(!t.length)return e;let i=t.slice(),n=0;for(let t of e){for(;n<i.length&&i[n].to<t.to;)n++;if(n<i.length&&i[n].from<t.from){let e=i[n];e instanceof A$&&(i[n]=new A$(e.type,e.from,e.to,of(e.children,[t])))}else i.splice(n++,0,t)}return i}const af=[r$.CodeBlock,r$.ListItem,r$.OrderedList,r$.BulletList];class lf{constructor(t,e){this.fragments=t,this.input=e,this.i=0,this.fragment=null,this.fragmentEnd=-1,this.cursor=null,t.length&&(this.fragment=t[this.i++])}nextFragment(){this.fragment=this.i<this.fragments.length?this.fragments[this.i++]:null,this.cursor=null,this.fragmentEnd=-1}moveTo(t,e){for(;this.fragment&&this.fragment.to<=t;)this.nextFragment();if(!this.fragment||this.fragment.from>(t?t-1:0))return!1;if(this.fragmentEnd<0){let t=this.fragment.to;for(;t>0&&"\n"!=this.input.read(t-1,t);)t--;this.fragmentEnd=t?t-1:0}let i=this.cursor;i||(i=this.cursor=this.fragment.tree.cursor(),i.firstChild());let n=t+this.fragment.offset;for(;i.to<=n;)if(!i.parent())return!1;for(;;){if(i.from>=n)return this.fragment.from<=e;if(!i.childAfter(n))return!1}}matches(t){let e=this.cursor.tree;return e&&e.prop(Ks.contextHash)==t}takeNodes(t){let e=this.cursor,i=this.fragment.offset,n=this.fragmentEnd-(this.fragment.openEnd?1:0),r=t.absoluteLineStart,s=r,o=t.block.children.length,a=s,l=o;for(;;){if(e.to-i>n){if(e.type.isAnonymous&&e.firstChild())continue;break}if(t.dontInject.add(e.tree),t.addNode(e.tree,e.from-i),e.type.is("Block")&&(af.indexOf(e.type.id)<0?(s=e.to-i,o=t.block.children.length):(s=a,o=l,a=e.to-i,l=t.block.children.length)),!e.nextSibling())break}for(;t.block.children.length>o;)t.block.children.pop(),t.block.positions.pop();return s-r}}const hf=new V$(new io(G$),Object.keys(k$).map((t=>k$[t])),Object.keys(k$).map((t=>X$[t])),Object.keys(k$),R$,l$,Object.keys(H$).map((t=>H$[t])),Object.keys(H$),[]);function Of(t,e,i){let n=[];for(let r=t.firstChild,s=e;;r=r.nextSibling){let t=r?r.from:i;if(t>s&&n.push({from:s,to:t}),!r)break;s=r.to}return n}const cf={resolve:"Strikethrough",mark:"StrikethroughMark"},uf={defineNodes:["Strikethrough","StrikethroughMark"],parseInline:[{name:"Strikethrough",parse:(t,e,i)=>126!=e||126!=t.char(i+1)?-1:t.addDelimiter(cf,i,i+2,!0,!0),after:"Emphasis"}]};function df(t,e,i=0,n,r=0){let s=0,o=!0,a=-1,l=-1,h=!1,O=()=>{n.push(t.elt("TableCell",r+a,r+l,t.parser.parseInline(e.slice(a,l),r+a)))};for(let c=i;c<e.length;c++){let i=e.charCodeAt(c);124!=i||h?(h||32!=i&&9!=i)&&(a<0&&(a=c),l=c+1):((!o||a>-1)&&s++,o=!1,n&&(a>-1&&O(),n.push(t.elt("TableDelimiter",c+r,c+r+1))),a=l=-1),h=!h&&92==i}return a>-1&&(s++,n&&O()),s}function $f(t,e){for(let i=e;i<t.length;i++){let e=t.charCodeAt(i);if(124==e)return!0;92==e&&i++}return!1}const ff=/^\|?(\s*:?-+:?\s*\|)+(\s*:?-+:?\s*)?$/;class _f{constructor(){this.rows=null}nextLine(t,e,i){if(null==this.rows){let n;if(this.rows=!1,(45==e.next||58==e.next||124==e.next)&&ff.test(n=e.text.slice(e.pos))){let r=[];df(t,i.content,0,r,i.start)==df(t,n,e.pos)&&(this.rows=[t.elt("TableHeader",i.start,i.start+i.content.length,r),t.elt("TableDelimiter",t.lineStart+e.pos,t.lineStart+e.text.length)])}}else if(this.rows){let i=[];df(t,e.text,e.pos,i,t.lineStart),this.rows.push(t.elt("TableRow",t.lineStart+e.pos,t.lineStart+e.text.length,i))}return!1}finish(t,e){return!!this.rows&&(t.addLeafElement(e,t.elt("Table",e.start,e.start+e.content.length,this.rows)),!0)}}const pf={defineNodes:[{name:"Table",block:!0},"TableHeader","TableRow","TableCell","TableDelimiter"],parseBlock:[{name:"Table",leaf:(t,e)=>$f(e.content,0)?new _f:null,endLeaf(t,e,i){if(i.parsers.some((t=>t instanceof _f))||!$f(e.text,e.basePos))return!1;let n=t.scanLine(t.absoluteLineEnd+1).text;return ff.test(n)&&df(t,e.text,e.basePos)==df(t,n,e.basePos)},before:"SetextHeading"}]};class mf{nextLine(){return!1}finish(t,e){return t.addLeafElement(e,t.elt("Task",e.start,e.start+e.content.length,[t.elt("TaskMarker",e.start,e.start+3),...t.parser.parseInline(e.content.slice(3),e.start+3)])),!0}}const gf=[pf,{defineNodes:[{name:"Task",block:!0},"TaskMarker"],parseBlock:[{name:"TaskList",leaf:(t,e)=>/^\[[ xX]\]/.test(e.content)&&"ListItem"==t.parentType().name?new mf:null,after:"SetextHeading"}]},uf];function Tf(t,e,i){return(n,r,s)=>{if(r!=t||n.char(s+1)==t)return-1;let o=[n.elt(i,s,s+1)];for(let r=s+1;r<n.end;r++){let a=n.char(r);if(a==t)return n.addElement(n.elt(e,s,r+1,o.concat(n.elt(i,r,r+1))));if(92==a&&o.push(n.elt("Escape",r,2+r++)),h$(a))break}return-1}}const bf={defineNodes:["Superscript","SuperscriptMark"],parseInline:[{name:"Superscript",parse:Tf(94,"Superscript","SuperscriptMark")}]},Qf={defineNodes:["Subscript","SubscriptMark"],parseInline:[{name:"Subscript",parse:Tf(126,"Subscript","SubscriptMark")}]},Zf={defineNodes:["Emoji"],parseInline:[{name:"Emoji",parse(t,e,i){let n;return 58==e&&(n=/^[a-zA-Z_0-9]+:/.exec(t.slice(i+1,t.end)))?t.addElement(t.elt("Emoji",i,i+1+n[0].length)):-1}}]},Sf={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,frame:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0,menuitem:!0},vf={dd:!0,li:!0,optgroup:!0,option:!0,p:!0,rp:!0,rt:!0,tbody:!0,td:!0,tfoot:!0,th:!0,tr:!0},xf={dd:{dd:!0,dt:!0},dt:{dd:!0,dt:!0},li:{li:!0},option:{option:!0,optgroup:!0},optgroup:{optgroup:!0},p:{address:!0,article:!0,aside:!0,blockquote:!0,dir:!0,div:!0,dl:!0,fieldset:!0,footer:!0,form:!0,h1:!0,h2:!0,h3:!0,h4:!0,h5:!0,h6:!0,header:!0,hgroup:!0,hr:!0,menu:!0,nav:!0,ol:!0,p:!0,pre:!0,section:!0,table:!0,ul:!0},rp:{rp:!0,rt:!0},rt:{rp:!0,rt:!0},tbody:{tbody:!0,tfoot:!0},td:{td:!0,th:!0},tfoot:{tbody:!0},th:{td:!0,th:!0},thead:{tbody:!0,tfoot:!0},tr:{tr:!0}};function kf(t){return 9==t||10==t||13==t||32==t}let wf=null,yf=null,Pf=0;function Xf(t,e){let i=t.pos+e;if(Pf==i&&yf==t)return wf;let n=t.peek(e);for(;kf(n);)n=t.peek(++e);let r="";for(;45==(s=n)||46==s||58==s||s>=65&&s<=90||95==s||s>=97&&s<=122||s>=161;)r+=String.fromCharCode(n),n=t.peek(++e);var s;return yf=t,Pf=i,wf=r?r.toLowerCase():n==Rf||n==Wf?void 0:null}const Rf=63,Wf=33;function Yf(t,e){this.name=t,this.parent=e,this.hash=e?e.hash:0;for(let e=0;e<t.length;e++)this.hash+=(this.hash<<4)+t.charCodeAt(e)+(t.charCodeAt(e)<<8)}const Cf=[4,8,5,6,7],Vf=new Wd({start:null,shift:(t,e,i,n)=>Cf.indexOf(e)>-1?new Yf(Xf(n,1)||"",t):t,reduce:(t,e)=>18==e&&t?t.parent:t,reuse(t,e,i,n){let r=e.type.id;return 4==r||35==r?new Yf(Xf(n,1)||"",t):t},hash:t=>t?t.hash:0,strict:!1}),jf=new Td(((t,e)=>{if(60!=t.next)return void(t.next<0&&e.context&&t.acceptToken(56));t.advance();let i=47==t.next;i&&t.advance();let n=Xf(t,0);if(void 0===n)return;if(!n)return t.acceptToken(i?12:4);let r=e.context?e.context.name:null;if(i){if(n==r)return t.acceptToken(9);if(r&&vf[r])return t.acceptToken(56,-2);if(e.dialectEnabled(0))return t.acceptToken(10);for(let t=e.context;t;t=t.parent)if(t.name==n)return;t.acceptToken(11)}else{if("script"==n)return t.acceptToken(5);if("style"==n)return t.acceptToken(6);if("textarea"==n)return t.acceptToken(7);if(Sf.hasOwnProperty(n))return t.acceptToken(8);r&&xf[r]&&xf[r][n]?t.acceptToken(56,-1):t.acceptToken(4)}}),{contextual:!0}),Uf=new Td((t=>{for(let e=0,i=0;;i++){if(t.next<0){i&&t.acceptToken(57);break}if(t.next=="--\x3e".charCodeAt(e)){if(e++,3==e){i>3&&t.acceptToken(57,-2);break}}else e=0;t.advance()}}));function Jf(t,e,i){let n=2+t.length;return new Td((r=>{for(let s=0,o=0,a=0;;a++){if(r.next<0){a&&r.acceptToken(e);break}if(0==s&&60==r.next||1==s&&47==r.next||s>=2&&s<n&&r.next==t.charCodeAt(s-2))s++,o++;else if(2!=s&&s!=n||!kf(r.next)){if(s==n&&62==r.next){a>o?r.acceptToken(e,-o):r.acceptToken(i,-(o-2));break}if((10==r.next||13==r.next)&&a){r.acceptToken(e,1);break}s=o=0}else o++;r.advance()}}))}const Gf=Jf("script",53,1),Df=Jf("style",54,2),Mf=Jf("textarea",55,3),Af=Yd.deserialize({version:13,states:",xOVOxOOO!WQ!bO'#CoO!]Q!bO'#CyO!bQ!bO'#C|O!gQ!bO'#DPO!lQ!bO'#DRO!qOXO'#CnO!|OYO'#CnO#XO[O'#CnO$eOxO'#CnOOOW'#Cn'#CnO$lO!rO'#DSO$tQ!bO'#DUO$yQ!bO'#DVOOOW'#Dj'#DjOOOW'#DX'#DXQVOxOOO%OQ#tO,59ZO%WQ#tO,59eO%`Q#tO,59hO%hQ#tO,59kO%pQ#tO,59mOOOX'#D]'#D]O%xOXO'#CwO&TOXO,59YOOOY'#D^'#D^O&]OYO'#CzO&hOYO,59YOOO['#D_'#D_O&pO[O'#C}O&{O[O,59YOOOW'#D`'#D`O'TOxO,59YO'[Q!bO'#DQOOOW,59Y,59YOOO`'#Da'#DaO'aO!rO,59nOOOW,59n,59nO'iQ!bO,59pO'nQ!bO,59qOOOW-E7V-E7VO'sQ#tO'#CqOOQO'#DY'#DYO(OQ#tO1G.uOOOX1G.u1G.uO(WQ#tO1G/POOOY1G/P1G/PO(`Q#tO1G/SOOO[1G/S1G/SO(hQ#tO1G/VOOOW1G/V1G/VO(pQ#tO1G/XOOOW1G/X1G/XOOOX-E7Z-E7ZO(xQ!bO'#CxOOOW1G.t1G.tOOOY-E7[-E7[O(}Q!bO'#C{OOO[-E7]-E7]O)SQ!bO'#DOOOOW-E7^-E7^O)XQ!bO,59lOOO`-E7_-E7_OOOW1G/Y1G/YOOOW1G/[1G/[OOOW1G/]1G/]O)^Q&jO,59]OOQO-E7W-E7WOOOX7+$a7+$aOOOY7+$k7+$kOOO[7+$n7+$nOOOW7+$q7+$qOOOW7+$s7+$sO)iQ!bO,59dO)nQ!bO,59gO)sQ!bO,59jOOOW1G/W1G/WO)xO,UO'#CtO*WO7[O'#CtOOQO1G.w1G.wOOOW1G/O1G/OOOOW1G/R1G/ROOOW1G/U1G/UOOOO'#DZ'#DZO*fO,UO,59`OOQO,59`,59`OOOO'#D['#D[O*tO7[O,59`OOOO-E7X-E7XOOQO1G.z1G.zOOOO-E7Y-E7Y",stateData:"+[~O!]OS~OSSOTPOUQOVROWTOY]OZ[O[^O^^O_^O`^Oa^Ow^Oz_O!cZO~OdaO~OdbO~OdcO~OddO~OdeO~O!VfOPkP!YkP~O!WiOQnP!YnP~O!XlORqP!YqP~OSSOTPOUQOVROWTOXqOY]OZ[O[^O^^O_^O`^Oa^Ow^O!cZO~O!YrO~P#dO!ZsO!duO~OdvO~OdwO~OfyOj|O~OfyOj!OO~OfyOj!QO~OfyOj!SO~OfyOj!UO~O!VfOPkX!YkX~OP!WO!Y!XO~O!WiOQnX!YnX~OQ!ZO!Y!XO~O!XlORqX!YqX~OR!]O!Y!XO~O!Y!XO~P#dOd!_O~O!ZsO!d!aO~Oj!bO~Oj!cO~Og!dOfeXjeX~OfyOj!fO~OfyOj!gO~OfyOj!hO~OfyOj!iO~OfyOj!jO~Od!kO~Od!lO~Od!mO~Oj!nO~Oi!qO!_!oO!a!pO~Oj!rO~Oj!sO~Oj!tO~O_!uO`!uO!_!wO!`!uO~O_!xO`!xO!a!wO!b!xO~O_!uO`!uO!_!{O!`!uO~O_!xO`!xO!a!{O!b!xO~O`_a!cwz!c~",goto:"%o!_PPPPPPPPPPPPPPPPPP!`!fP!lPP!xPP!{#O#R#X#[#_#e#h#k#q#w!`P!`!`P#}$T$k$q$w$}%T%Z%aPPPPPPPP%gX^OX`pXUOX`pezabcde{}!P!R!TR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!TeZ!e{}!P!R!TQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp",nodeNames:"\u26a0 StartCloseTag StartCloseTag StartCloseTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue EndTag ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl",maxTerm:66,context:Vf,nodeProps:[[Ks.closedBy,-11,1,2,3,4,5,6,7,8,9,10,11,"EndTag",-4,19,29,32,35,"CloseTag"],[Ks.group,-9,12,15,16,17,18,38,39,40,41,"Entity",14,"Entity TextContent",-3,27,30,33,"TextContent Entity"],[Ks.openedBy,26,"StartTag StartCloseTag",-4,28,31,34,36,"OpenTag"]],skippedNodes:[0],repeatNodeCount:9,tokenData:"!#b!aR!WOX$kXY)sYZ)sZ]$k]^)s^p$kpq)sqr$krs*zsv$kvw+dwx2yx}$k}!O3f!O!P$k!P!Q7_!Q![$k![!]8u!]!^$k!^!_>b!_!`!!p!`!a8T!a!c$k!c!}8u!}#R$k#R#S8u#S#T$k#T#o8u#o$f$k$f$g&R$g%W$k%W%o8u%o%p$k%p&a8u&a&b$k&b1p8u1p4U$k4U4d8u4d4e$k4e$IS8u$IS$I`$k$I`$Ib8u$Ib$Kh$k$Kh%#t8u%#t&/x$k&/x&Et8u&Et&FV$k&FV;'S8u;'S;:j<t;:j?&r$k?&r?Ah8u?Ah?BY$k?BY?Mn8u?Mn~$k!Z$vc^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g~$k!R&[V^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&Rq&xT^P!bpOv&qwx'Xx!^&q!^!_'g!_~&qP'^R^POv'Xw!^'X!_~'Xp'lQ!bpOv'gx~'ga'yU^P!``Or'rrs'Xsv'rw!^'r!^!_(]!_~'r`(bR!``Or(]sv(]w~(]!Q(rT!``!bpOr(krs'gsv(kwx(]x~(kW)WXiWOX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!a*O^^P!``!bp!]^OX&RXY)sYZ)sZ]&R]^)s^p&Rpq)sqr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!Z+TT!_h^P!bpOv&qwx'Xx!^&q!^!_'g!_~&q!Z+kbiWaPOX,sXZ.QZ],s]^.Q^p,sqr,srs.Qst/]tw,swx.Qx!P,s!P!Q.Q!Q!],s!]!^)R!^!a.Q!a$f,s$f$g.Q$g~,s!Z,xbiWOX,sXZ.QZ],s]^.Q^p,sqr,srs.Qst)Rtw,swx.Qx!P,s!P!Q.Q!Q!],s!]!^.i!^!a.Q!a$f,s$f$g.Q$g~,s!R.TTOp.Qqs.Qt!].Q!]!^.d!^~.Q!R.iO_!R!Z.pXiW_!ROX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!Z/baiWOX0gXZ1qZ]0g]^1q^p0gqr0grs1qsw0gwx1qx!P0g!P!Q1q!Q!]0g!]!^)R!^!a1q!a$f0g$f$g1q$g~0g!Z0laiWOX0gXZ1qZ]0g]^1q^p0gqr0grs1qsw0gwx1qx!P0g!P!Q1q!Q!]0g!]!^2V!^!a1q!a$f0g$f$g1q$g~0g!R1tSOp1qq!]1q!]!^2Q!^~1q!R2VO`!R!Z2^XiW`!ROX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!Z3SU!ax^P!``Or'rrs'Xsv'rw!^'r!^!_(]!_~'r!]3qe^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx}$k}!O5S!O!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g~$k!]5_d^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!`&R!`!a6m!a$f$k$f$g&R$g~$k!T6xV^P!``!bp!dQOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!X7hX^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_!`&R!`!a8T!a~&R!X8`VjU^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!a9U!YfSdQ^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx}$k}!O8u!O!P8u!P!Q&R!Q![8u![!]8u!]!^$k!^!_(k!_!a&R!a!c$k!c!}8u!}#R$k#R#S8u#S#T$k#T#o8u#o$f$k$f$g&R$g$}$k$}%O8u%O%W$k%W%o8u%o%p$k%p&a8u&a&b$k&b1p8u1p4U8u4U4d8u4d4e$k4e$IS8u$IS$I`$k$I`$Ib8u$Ib$Je$k$Je$Jg8u$Jg$Kh$k$Kh%#t8u%#t&/x$k&/x&Et8u&Et&FV$k&FV;'S8u;'S;:j<t;:j?&r$k?&r?Ah8u?Ah?BY$k?BY?Mn8u?Mn~$k!a=Pe^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g;=`$k;=`<%l8u<%l~$k!R>iW!``!bpOq(kqr?Rrs'gsv(kwx(]x!a(k!a!bKj!b~(k!R?YZ!``!bpOr(krs'gsv(kwx(]x}(k}!O?{!O!f(k!f!gAR!g#W(k#W#XGz#X~(k!R@SV!``!bpOr(krs'gsv(kwx(]x}(k}!O@i!O~(k!R@rT!``!bp!cPOr(krs'gsv(kwx(]x~(k!RAYV!``!bpOr(krs'gsv(kwx(]x!q(k!q!rAo!r~(k!RAvV!``!bpOr(krs'gsv(kwx(]x!e(k!e!fB]!f~(k!RBdV!``!bpOr(krs'gsv(kwx(]x!v(k!v!wBy!w~(k!RCQV!``!bpOr(krs'gsv(kwx(]x!{(k!{!|Cg!|~(k!RCnV!``!bpOr(krs'gsv(kwx(]x!r(k!r!sDT!s~(k!RD[V!``!bpOr(krs'gsv(kwx(]x!g(k!g!hDq!h~(k!RDxW!``!bpOrDqrsEbsvDqvwEvwxFfx!`Dq!`!aGb!a~DqqEgT!bpOvEbvxEvx!`Eb!`!aFX!a~EbPEyRO!`Ev!`!aFS!a~EvPFXOzPqF`Q!bpzPOv'gx~'gaFkV!``OrFfrsEvsvFfvwEvw!`Ff!`!aGQ!a~FfaGXR!``zPOr(]sv(]w~(]!RGkT!``!bpzPOr(krs'gsv(kwx(]x~(k!RHRV!``!bpOr(krs'gsv(kwx(]x#c(k#c#dHh#d~(k!RHoV!``!bpOr(krs'gsv(kwx(]x#V(k#V#WIU#W~(k!RI]V!``!bpOr(krs'gsv(kwx(]x#h(k#h#iIr#i~(k!RIyV!``!bpOr(krs'gsv(kwx(]x#m(k#m#nJ`#n~(k!RJgV!``!bpOr(krs'gsv(kwx(]x#d(k#d#eJ|#e~(k!RKTV!``!bpOr(krs'gsv(kwx(]x#X(k#X#YDq#Y~(k!RKqW!``!bpOrKjrsLZsvKjvwLowxNPx!aKj!a!b! g!b~KjqL`T!bpOvLZvxLox!aLZ!a!bM^!b~LZPLrRO!aLo!a!bL{!b~LoPMORO!`Lo!`!aMX!a~LoPM^OwPqMcT!bpOvLZvxLox!`LZ!`!aMr!a~LZqMyQ!bpwPOv'gx~'gaNUV!``OrNPrsLosvNPvwLow!aNP!a!bNk!b~NPaNpV!``OrNPrsLosvNPvwLow!`NP!`!a! V!a~NPa! ^R!``wPOr(]sv(]w~(]!R! nW!``!bpOrKjrsLZsvKjvwLowxNPx!`Kj!`!a!!W!a~Kj!R!!aT!``!bpwPOr(krs'gsv(kwx(]x~(k!V!!{VgS^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R",tokenizers:[Gf,Df,Mf,jf,Uf,0,1,2,3,4,5],topRules:{Document:[0,13]},dialects:{noMatch:0},tokenPrec:464});function If(t,e){let i=Object.create(null);for(let n of t.firstChild.getChildren("Attribute")){let t=n.getChild("AttributeName"),r=n.getChild("AttributeValue")||n.getChild("UnquotedAttributeValue");t&&(i[e.read(t.from,t.to)]=r?"AttributeValue"==r.name?e.read(r.from+1,r.to-1):e.read(r.from,r.to):"")}return i}function qf(t,e,i){let n;for(let r of i)if(!r.attrs||r.attrs(n||(n=If(t.node.parent,e))))return{parser:r.parser};return null}function zf(t){let e=[],i=[],n=[];for(let r of t){let t="script"==r.tag?e:"style"==r.tag?i:"textarea"==r.tag?n:null;if(!t)throw new RangeError("Only script, style, and textarea tags can host nested parsers");t.push(r)}return So(((t,r)=>{let s=t.type.id;return 27==s?qf(t,r,e):30==s?qf(t,r,i):33==s?qf(t,r,n):null}))}const Ef=[9,10,11,12,13,32,133,160,5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8232,8233,8239,8287,12288];function Bf(t){return t>=65&&t<=90||t>=97&&t<=122||t>=161}const Ff=new Td(((t,e)=>{for(let n=!1,r=0,s=0;;s++){let{next:o}=t;if(!(Bf(o)||45==o||95==o||n&&(i=o,i>=48&&i<=57))){n&&t.acceptToken(40==o?94:2==r&&e.canShift(2)?2:95);break}!n&&(45!=o||s>0)&&(n=!0),r===s&&45==o&&r++,t.advance()}var i})),Nf=new Td((t=>{if(Ef.includes(t.peek(-1))){let{next:e}=t;(Bf(e)||95==e||35==e||46==e||91==e||58==e||45==e)&&t.acceptToken(93)}})),Lf=new Td((t=>{if(!Ef.includes(t.peek(-1))){let{next:e}=t;if(37==e&&(t.advance(),t.acceptToken(1)),Bf(e)){do{t.advance()}while(Bf(t.next));t.acceptToken(1)}}})),Kf={__proto__:null,lang:32,"nth-child":32,"nth-last-child":32,"nth-of-type":32,dir:32,url:60,"url-prefix":60,domain:60,regexp:60,selector:134},Hf={__proto__:null,"@import":114,"@media":138,"@charset":142,"@namespace":146,"@keyframes":152,"@supports":164},t_={__proto__:null,not:128,only:128,from:158,to:160},e_=Yd.deserialize({version:13,states:"7WOYQ[OOOOQP'#Cd'#CdOOQP'#Cc'#CcO!ZQ[O'#CfO!}QXO'#CaO#UQ[O'#ChO#aQ[O'#DPO#fQ[O'#DTOOQP'#Ec'#EcO#kQdO'#DeO$VQ[O'#DrO#kQdO'#DtO$hQ[O'#DvO$sQ[O'#DyO$xQ[O'#EPO%WQ[O'#EROOQS'#Eb'#EbOOQS'#ES'#ESQYQ[OOOOQP'#Cg'#CgOOQP,59Q,59QO!ZQ[O,59QO%_Q[O'#EVO%yQWO,58{O&RQ[O,59SO#aQ[O,59kO#fQ[O,59oO%_Q[O,59sO%_Q[O,59uO%_Q[O,59vO'bQ[O'#D`OOQS,58{,58{OOQP'#Ck'#CkOOQO'#C}'#C}OOQP,59S,59SO'iQWO,59SO'nQWO,59SOOQP'#DR'#DROOQP,59k,59kOOQO'#DV'#DVO'sQ`O,59oOOQS'#Cp'#CpO#kQdO'#CqO'{QvO'#CsO)VQtO,5:POOQO'#Cx'#CxO'iQWO'#CwO)kQWO'#CyOOQS'#Ef'#EfOOQO'#Dh'#DhO)pQ[O'#DoO*OQWO'#EiO$xQ[O'#DmO*^QWO'#DpOOQO'#Ej'#EjO%|QWO,5:^O*cQpO,5:`OOQS'#Dx'#DxO*kQWO,5:bO*pQ[O,5:bOOQO'#D{'#D{O*xQWO,5:eO*}QWO,5:kO+VQWO,5:mOOQS-E8Q-E8QOOQP1G.l1G.lO+yQXO,5:qOOQO-E8T-E8TOOQS1G.g1G.gOOQP1G.n1G.nO'iQWO1G.nO'nQWO1G.nOOQP1G/V1G/VO,WQ`O1G/ZO,qQXO1G/_O-XQXO1G/aO-oQXO1G/bO.VQXO'#CdO.zQWO'#DaOOQS,59z,59zO/PQWO,59zO/XQ[O,59zO/`QdO'#CoO/gQ[O'#DOOOQP1G/Z1G/ZO#kQdO1G/ZO/nQpO,59]OOQS,59_,59_O#kQdO,59aO/vQWO1G/kOOQS,59c,59cO/{Q!bO,59eO0TQWO'#DhO0`QWO,5:TO0eQWO,5:ZO$xQ[O,5:VO$xQ[O'#EYO0mQWO,5;TO0xQWO,5:XO%_Q[O,5:[OOQS1G/x1G/xOOQS1G/z1G/zOOQS1G/|1G/|O1ZQWO1G/|O1`QdO'#D|OOQS1G0P1G0POOQS1G0V1G0VOOQS1G0X1G0XOOQP7+$Y7+$YOOQP7+$u7+$uO#kQdO7+$uO#kQdO,59{O1nQ[O'#EXO1xQWO1G/fOOQS1G/f1G/fO1xQWO1G/fO2QQtO'#ETO2uQdO'#EeO3PQWO,59ZO3UQXO'#EhO3]QWO,59jO3bQpO7+$uOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%V7+%VO3jQWO1G/PO#kQdO1G/oOOQO1G/u1G/uOOQO1G/q1G/qO3oQWO,5:tOOQO-E8W-E8WO3}QXO1G/vOOQS7+%h7+%hO4UQYO'#CsO%|QWO'#EZO4^QdO,5:hOOQS,5:h,5:hO4lQpO<<HaO4tQtO1G/gOOQO,5:s,5:sO5XQ[O,5:sOOQO-E8V-E8VOOQS7+%Q7+%QO5cQWO7+%QOOQS-E8R-E8RO#kQdO'#EUO5kQWO,5;POOQT1G.u1G.uO5sQWO,5;SOOQP1G/U1G/UOOQP<<Ha<<HaOOQS7+$k7+$kO5{QdO7+%ZOOQO7+%b7+%bOOQS,5:u,5:uOOQS-E8X-E8XOOQS1G0S1G0SOOQPAN={AN={O6SQtO'#EWO#kQdO'#EWO6}QdO7+%ROOQO7+%R7+%ROOQO1G0_1G0_OOQS<<Hl<<HlO7_QdO,5:pOOQO-E8S-E8SOOQO<<Hu<<HuO7iQtO,5:rOOQS-E8U-E8UOOQO<<Hm<<Hm",stateData:"8j~O#TOSROS~OUWOXWO]TO^TOtUOxVO!Y_O!ZXO!gYO!iZO!k[O!n]O!t^O#RPO#WRO~O#RcO~O]hO^hOpfOtiOxjO|kO!PmO#PlO#WeO~O!RnO~P!`O`sO#QqO#RpO~O#RuO~O#RwO~OQ!QObzOf!QOh!QOn!PO#Q}O#RyO#Z{O~Ob!SO!b!UO!e!VO#R!RO!R#]P~Oh![On!PO#R!ZO~O#R!^O~Ob!SO!b!UO!e!VO#R!RO~O!W#]P~P$VOUWOXWO]TO^TOtUOxVO#RPO#WRO~OpfO!RnO~O`!hO#QqO#RpO~OQ!pOUWOXWO]TO^TOtUOxVO!Y_O!ZXO!gYO!iZO!k[O!n]O!t^O#R!oO#WRO~O!Q!qO~P&^Ob!tO~Ob!uO~Ov!vOz!wO~OP!yObgXjgX!WgX!bgX!egX#RgXagXQgXfgXhgXngXpgX#QgX#ZgXvgX!QgX!VgX~Ob!SOj!zO!b!UO!e!VO#R!RO!W#]P~Ob!}O~Ob!SO!b!UO!e!VO#R#OO~Op#SO!`#RO!R#]X!W#]X~Ob#VO~Oj!zO!W#XO~O!W#YO~Oh#ZOn!PO~O!R#[O~O!RnO!`#RO~O!RnO!W#_O~O]hO^hOtiOxjO|kO!PmO#PlO#WeO~Op!ya!R!yaa!ya~P+_Ov#aOz#bO~O]hO^hOtiOxjO#WeO~Op{i|{i!P{i!R{i#P{ia{i~P,`Op}i|}i!P}i!R}i#P}ia}i~P,`Op!Oi|!Oi!P!Oi!R!Oi#P!Oia!Oi~P,`O]WX]!UX^WXpWXtWXxWX|WX!PWX!RWX#PWX#WWX~O]#cO~O!Q#fO!W#dO~O!Q#fO~P&^Oa#XP~P#kOa#[P~P%_Oa#nOj!zO~O!W#pO~Oh#qOo#qO~O]!^Xa![X!`![X~O]#rO~Oa#sO!`#RO~Op#SO!R#]a!W#]a~O!`#ROp!aa!R!aa!W!aaa!aa~O!W#xO~O!Q#|O!q#zO!r#zO#Z#yO~O!Q!{X!W!{X~P&^O!Q$SO!W#dO~Oj!zOQ!wXa!wXb!wXf!wXh!wXn!wXp!wX#Q!wX#R!wX#Z!wX~Op$VOa#XX~P#kOa$XO~Oa#[X~P!`Oa$ZO~Oj!zOv$[O~Oa$]O~O!`#ROp!|a!R!|a!W!|a~Oa$_O~P+_OP!yO!RgX~O!Q$bO!q#zO!r#zO#Z#yO~Oj!zOv$cO~Oj!zOp$eO!V$gO!Q!Ti!W!Ti~P#kO!Q!{a!W!{a~P&^O!Q$iO!W#dO~Op$VOa#Xa~OpfOa#[a~Oa$lO~P#kOj!zOQ!zXb!zXf!zXh!zXn!zXp!zX!Q!zX!V!zX!W!zX#Q!zX#R!zX#Z!zX~Op$eO!V$oO!Q!Tq!W!Tq~P#kOa!xap!xa~P#kOj!zOQ!zab!zaf!zah!zan!zap!za!Q!za!V!za!W!za#Q!za#R!za#Z!za~Oo#Zj!Pj~",goto:",O#_PPPPP#`P#h#vP#h$U#hPP$[PPP$b$k$kP$}P$kP$k%e%wPPP&a&g#hP&mP#hP&sP#hP#h#hPPP&y']'iPP#`PP'o'o'y'oP'oP'o'oP#`P#`P#`P'|#`P(P(SPP#`P#`(V(e(s(y)T)Z)e)kPPPPPP)q)yP*e*hP+^+a+j]`Obn!s#d$QiWObfklmn!s!u#V#d$QiQObfklmn!s!u#V#d$QQdRR!ceQrTR!ghQ!gsQ!|!OR#`!hq!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jp!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jT#z#[#{q!OXZz!t!w!z#b#c#i#r$O$V$^$e$f$jp!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jQ![[R#Z!]QtTR!ihQ!gtR#`!iQvUR!jiQxVR!kjQoSQ!fgQ#W!XQ#^!`Q#_!aR$`#zQ!rnQ#g!sQ$P#dR$h$QX!pn!s#d$Qa!WY^_|!S!U#R#SR#P!SR!][R!_]R#]!_QbOU!bb!s$QQ!snR$Q#dQ#i!tU$U#i$^$jQ$^#rR$j$VQ$W#iR$k$WQgSS!eg$YR$Y#kQ$f$OR$n$fQ#e!rS$R#e$TR$T#gQ#T!TR#v#TQ#{#[R$a#{]aObn!s#d$Q[SObn!s#d$QQ!dfQ!lkQ!mlQ!nmQ#k!uR#w#VR#j!tQ|XQ!YZQ!xz[#h!t#i#r$V$^$jQ#m!wQ#o!zQ#}#bQ$O#cS$d$O$fR$m$eR#l!uQ!XYQ!a_R!{|U!TY_|Q!`^Q#Q!SQ#U!UQ#t#RR#u#S",nodeNames:"\u26a0 Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent , PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList from to SupportsStatement supports AtRule",maxTerm:106,nodeProps:[[Ks.openedBy,17,"(",48,"{"],[Ks.closedBy,18,")",49,"}"]],skippedNodes:[0,3],repeatNodeCount:8,tokenData:"Ay~R![OX$wX^%]^p$wpq%]qr(crs+}st,otu2Uuv$wvw2rwx2}xy3jyz3uz{3z{|4_|}8U}!O8a!O!P8x!P!Q9Z!Q![;e![!]<Y!]!^<x!^!_$w!_!`=T!`!a=`!a!b$w!b!c>O!c!}$w!}#O?[#O#P$w#P#Q?g#Q#R2U#R#T$w#T#U?r#U#c$w#c#d@q#d#o$w#o#pAQ#p#q2U#q#rA]#r#sAh#s#y$w#y#z%]#z$f$w$f$g%]$g#BY$w#BY#BZ%]#BZ$IS$w$IS$I_%]$I_$I|$w$I|$JO%]$JO$JT$w$JT$JU%]$JU$KV$w$KV$KW%]$KW&FU$w&FU&FV%]&FV~$wW$zQOy%Qz~%QW%VQoWOy%Qz~%Q~%bf#T~OX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q~&}f#T~oWOX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q^(fSOy%Qz#]%Q#]#^(r#^~%Q^(wSoWOy%Qz#a%Q#a#b)T#b~%Q^)YSoWOy%Qz#d%Q#d#e)f#e~%Q^)kSoWOy%Qz#c%Q#c#d)w#d~%Q^)|SoWOy%Qz#f%Q#f#g*Y#g~%Q^*_SoWOy%Qz#h%Q#h#i*k#i~%Q^*pSoWOy%Qz#T%Q#T#U*|#U~%Q^+RSoWOy%Qz#b%Q#b#c+_#c~%Q^+dSoWOy%Qz#h%Q#h#i+p#i~%Q^+wQ!VUoWOy%Qz~%Q~,QUOY+}Zr+}rs,ds#O+}#O#P,i#P~+}~,iOh~~,lPO~+}_,tWtPOy%Qz!Q%Q!Q![-^![!c%Q!c!i-^!i#T%Q#T#Z-^#Z~%Q^-cWoWOy%Qz!Q%Q!Q![-{![!c%Q!c!i-{!i#T%Q#T#Z-{#Z~%Q^.QWoWOy%Qz!Q%Q!Q![.j![!c%Q!c!i.j!i#T%Q#T#Z.j#Z~%Q^.qWfUoWOy%Qz!Q%Q!Q![/Z![!c%Q!c!i/Z!i#T%Q#T#Z/Z#Z~%Q^/bWfUoWOy%Qz!Q%Q!Q![/z![!c%Q!c!i/z!i#T%Q#T#Z/z#Z~%Q^0PWoWOy%Qz!Q%Q!Q![0i![!c%Q!c!i0i!i#T%Q#T#Z0i#Z~%Q^0pWfUoWOy%Qz!Q%Q!Q![1Y![!c%Q!c!i1Y!i#T%Q#T#Z1Y#Z~%Q^1_WoWOy%Qz!Q%Q!Q![1w![!c%Q!c!i1w!i#T%Q#T#Z1w#Z~%Q^2OQfUoWOy%Qz~%QY2XSOy%Qz!_%Q!_!`2e!`~%QY2lQzQoWOy%Qz~%QX2wQXPOy%Qz~%Q~3QUOY2}Zw2}wx,dx#O2}#O#P3d#P~2}~3gPO~2}_3oQbVOy%Qz~%Q~3zOa~_4RSUPjSOy%Qz!_%Q!_!`2e!`~%Q_4fUjS!PPOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%Q^4}SoWOy%Qz!Q%Q!Q![5Z![~%Q^5bWoW#ZUOy%Qz!Q%Q!Q![5Z![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%Q^6PWoWOy%Qz{%Q{|6i|}%Q}!O6i!O!Q%Q!Q![6z![~%Q^6nSoWOy%Qz!Q%Q!Q![6z![~%Q^7RSoW#ZUOy%Qz!Q%Q!Q![6z![~%Q^7fYoW#ZUOy%Qz!O%Q!O!P5Z!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%Q_8ZQpVOy%Qz~%Q^8fUjSOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%Q_8}S#WPOy%Qz!Q%Q!Q![5Z![~%Q~9`RjSOy%Qz{9i{~%Q~9nSoWOy9iyz9zz{:o{~9i~9}ROz9zz{:W{~9z~:ZTOz9zz{:W{!P9z!P!Q:j!Q~9z~:oOR~~:tUoWOy9iyz9zz{:o{!P9i!P!Q;W!Q~9i~;_QR~oWOy%Qz~%Q^;jY#ZUOy%Qz!O%Q!O!P5Z!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QX<_S]POy%Qz![%Q![!]<k!]~%QX<rQ^PoWOy%Qz~%Q_<}Q!WVOy%Qz~%QY=YQzQOy%Qz~%QX=eS|POy%Qz!`%Q!`!a=q!a~%QX=xQ|PoWOy%Qz~%QX>RUOy%Qz!c%Q!c!}>e!}#T%Q#T#o>e#o~%QX>lY!YPoWOy%Qz}%Q}!O>e!O!Q%Q!Q![>e![!c%Q!c!}>e!}#T%Q#T#o>e#o~%QX?aQxPOy%Qz~%Q^?lQvUOy%Qz~%QX?uSOy%Qz#b%Q#b#c@R#c~%QX@WSoWOy%Qz#W%Q#W#X@d#X~%QX@kQ!`PoWOy%Qz~%QX@tSOy%Qz#f%Q#f#g@d#g~%QXAVQ!RPOy%Qz~%Q_AbQ!QVOy%Qz~%QZAmS!PPOy%Qz!_%Q!_!`2e!`~%Q",tokenizers:[Nf,Lf,Ff,0,1,2,3],topRules:{StyleSheet:[0,4]},specialized:[{term:94,get:t=>Kf[t]||-1},{term:56,get:t=>Hf[t]||-1},{term:95,get:t=>t_[t]||-1}],tokenPrec:1078});let i_=null;function n_(){if(!i_&&"object"==typeof document&&document.body){let t=[];for(let e in document.body.style)/[A-Z]|^-|^(item|length)$/.test(e)||t.push(e);i_=t.sort().map((t=>({type:"property",label:t})))}return i_||[]}const r_=["active","after","before","checked","default","disabled","empty","enabled","first-child","first-letter","first-line","first-of-type","focus","hover","in-range","indeterminate","invalid","lang","last-child","last-of-type","link","not","nth-child","nth-last-child","nth-last-of-type","nth-of-type","only-of-type","only-child","optional","out-of-range","placeholder","read-only","read-write","required","root","selection","target","valid","visited"].map((t=>({type:"class",label:t}))),s_=["above","absolute","activeborder","additive","activecaption","after-white-space","ahead","alias","all","all-scroll","alphabetic","alternate","always","antialiased","appworkspace","asterisks","attr","auto","auto-flow","avoid","avoid-column","avoid-page","avoid-region","axis-pan","background","backwards","baseline","below","bidi-override","blink","block","block-axis","bold","bolder","border","border-box","both","bottom","break","break-all","break-word","bullets","button","button-bevel","buttonface","buttonhighlight","buttonshadow","buttontext","calc","capitalize","caps-lock-indicator","caption","captiontext","caret","cell","center","checkbox","circle","cjk-decimal","clear","clip","close-quote","col-resize","collapse","color","color-burn","color-dodge","column","column-reverse","compact","condensed","contain","content","contents","content-box","context-menu","continuous","copy","counter","counters","cover","crop","cross","crosshair","currentcolor","cursive","cyclic","darken","dashed","decimal","decimal-leading-zero","default","default-button","dense","destination-atop","destination-in","destination-out","destination-over","difference","disc","discard","disclosure-closed","disclosure-open","document","dot-dash","dot-dot-dash","dotted","double","down","e-resize","ease","ease-in","ease-in-out","ease-out","element","ellipse","ellipsis","embed","end","ethiopic-abegede-gez","ethiopic-halehame-aa-er","ethiopic-halehame-gez","ew-resize","exclusion","expanded","extends","extra-condensed","extra-expanded","fantasy","fast","fill","fill-box","fixed","flat","flex","flex-end","flex-start","footnotes","forwards","from","geometricPrecision","graytext","grid","groove","hand","hard-light","help","hidden","hide","higher","highlight","highlighttext","horizontal","hsl","hsla","hue","icon","ignore","inactiveborder","inactivecaption","inactivecaptiontext","infinite","infobackground","infotext","inherit","initial","inline","inline-axis","inline-block","inline-flex","inline-grid","inline-table","inset","inside","intrinsic","invert","italic","justify","keep-all","landscape","large","larger","left","level","lighter","lighten","line-through","linear","linear-gradient","lines","list-item","listbox","listitem","local","logical","loud","lower","lower-hexadecimal","lower-latin","lower-norwegian","lowercase","ltr","luminosity","manipulation","match","matrix","matrix3d","medium","menu","menutext","message-box","middle","min-intrinsic","mix","monospace","move","multiple","multiple_mask_images","multiply","n-resize","narrower","ne-resize","nesw-resize","no-close-quote","no-drop","no-open-quote","no-repeat","none","normal","not-allowed","nowrap","ns-resize","numbers","numeric","nw-resize","nwse-resize","oblique","opacity","open-quote","optimizeLegibility","optimizeSpeed","outset","outside","outside-shape","overlay","overline","padding","padding-box","painted","page","paused","perspective","pinch-zoom","plus-darker","plus-lighter","pointer","polygon","portrait","pre","pre-line","pre-wrap","preserve-3d","progress","push-button","radial-gradient","radio","read-only","read-write","read-write-plaintext-only","rectangle","region","relative","repeat","repeating-linear-gradient","repeating-radial-gradient","repeat-x","repeat-y","reset","reverse","rgb","rgba","ridge","right","rotate","rotate3d","rotateX","rotateY","rotateZ","round","row","row-resize","row-reverse","rtl","run-in","running","s-resize","sans-serif","saturation","scale","scale3d","scaleX","scaleY","scaleZ","screen","scroll","scrollbar","scroll-position","se-resize","self-start","self-end","semi-condensed","semi-expanded","separate","serif","show","single","skew","skewX","skewY","skip-white-space","slide","slider-horizontal","slider-vertical","sliderthumb-horizontal","sliderthumb-vertical","slow","small","small-caps","small-caption","smaller","soft-light","solid","source-atop","source-in","source-out","source-over","space","space-around","space-between","space-evenly","spell-out","square","start","static","status-bar","stretch","stroke","stroke-box","sub","subpixel-antialiased","svg_masks","super","sw-resize","symbolic","symbols","system-ui","table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row","table-row-group","text","text-bottom","text-top","textarea","textfield","thick","thin","threeddarkshadow","threedface","threedhighlight","threedlightshadow","threedshadow","to","top","transform","translate","translate3d","translateX","translateY","translateZ","transparent","ultra-condensed","ultra-expanded","underline","unidirectional-pan","unset","up","upper-latin","uppercase","url","var","vertical","vertical-text","view-box","visible","visibleFill","visiblePainted","visibleStroke","visual","w-resize","wait","wave","wider","window","windowframe","windowtext","words","wrap","wrap-reverse","x-large","x-small","xor","xx-large","xx-small"].map((t=>({type:"keyword",label:t}))).concat(["aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"].map((t=>({type:"constant",label:t})))),o_=["a","abbr","address","article","aside","b","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","dd","del","details","dfn","dialog","div","dl","dt","em","figcaption","figure","footer","form","header","hgroup","h1","h2","h3","h4","h5","h6","hr","html","i","iframe","img","input","ins","kbd","label","legend","li","main","meter","nav","ol","output","p","pre","ruby","section","select","small","source","span","strong","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","tr","u","ul"].map((t=>({type:"type",label:t}))),a_=/^[\w-]*/,l_=Mo.define({parser:e_.configure({props:[aa.add({Declaration:fa()}),ma.add({Block:ga}),_u({"import charset namespace keyframes":Iu.definitionKeyword,"media supports":Iu.controlKeyword,"from to selector":Iu.keyword,NamespaceName:Iu.namespace,KeyframeName:Iu.labelName,TagName:Iu.tagName,ClassName:Iu.className,PseudoClassName:Iu.constant(Iu.className),IdName:Iu.labelName,"FeatureName PropertyName":Iu.propertyName,AttributeName:Iu.attributeName,NumberLiteral:Iu.number,KeywordQuery:Iu.keyword,UnaryQueryOp:Iu.operatorKeyword,"CallTag ValueName":Iu.atom,VariableName:Iu.variableName,Callee:Iu.operatorKeyword,Unit:Iu.unit,"UniversalSelector NestingSelector":Iu.definitionOperator,AtKeyword:Iu.keyword,MatchOp:Iu.compareOperator,"ChildOp SiblingOp, LogicOp":Iu.logicOperator,BinOp:Iu.arithmeticOperator,Important:Iu.modifier,Comment:Iu.blockComment,ParenthesizedContent:Iu.special(Iu.name),ColorLiteral:Iu.color,StringLiteral:Iu.string,":":Iu.punctuation,"PseudoOp #":Iu.derefOperator,"; ,":Iu.separator,"( )":Iu.paren,"[ ]":Iu.squareBracket,"{ }":Iu.brace})]}),languageData:{commentTokens:{block:{open:"/*",close:"*/"}},indentOnInput:/^\s*\}$/,wordChars:"-"}}),h_=l_.data.of({autocomplete:t=>{let{state:e,pos:i}=t,n=Ao(e).resolveInner(i,-1);if("PropertyName"==n.name)return{from:n.from,options:n_(),span:a_};if("ValueName"==n.name)return{from:n.from,options:s_,span:a_};if("PseudoClassName"==n.name)return{from:n.from,options:r_,span:a_};if("TagName"==n.name){for(let{parent:t}=n;t;t=t.parent)if("Block"==t.name)return{from:n.from,options:n_(),span:a_};return{from:n.from,options:o_,span:a_}}if(!t.explicit)return null;let r=n.resolve(i),s=r.childBefore(i);return s&&":"==s.name&&"PseudoClassSelector"==r.name?{from:i,options:r_,span:a_}:s&&":"==s.name&&"Declaration"==r.name||"ArgList"==r.name?{from:i,options:s_,span:a_}:"Block"==r.name?{from:i,options:n_(),span:a_}:null}});function O_(){return new Ho(l_,h_)}const c_=["_blank","_self","_top","_parent"],u_=["ascii","utf-8","utf-16","latin1","latin1"],d_=["get","post","put","delete"],$_=["application/x-www-form-urlencoded","multipart/form-data","text/plain"],f_=["true","false"],__={},p_={a:{attrs:{href:null,ping:null,type:null,media:null,target:c_,hreflang:null}},abbr:__,acronym:__,address:__,applet:__,area:{attrs:{alt:null,coords:null,href:null,target:null,ping:null,media:null,hreflang:null,type:null,shape:["default","rect","circle","poly"]}},article:__,aside:__,audio:{attrs:{src:null,mediagroup:null,crossorigin:["anonymous","use-credentials"],preload:["none","metadata","auto"],autoplay:["autoplay"],loop:["loop"],controls:["controls"]}},b:__,base:{attrs:{href:null,target:c_}},basefont:__,bdi:__,bdo:__,big:__,blockquote:{attrs:{cite:null}},body:__,br:__,button:{attrs:{form:null,formaction:null,name:null,value:null,autofocus:["autofocus"],disabled:["autofocus"],formenctype:$_,formmethod:d_,formnovalidate:["novalidate"],formtarget:c_,type:["submit","reset","button"]}},canvas:{attrs:{width:null,height:null}},caption:__,center:__,cite:__,code:__,col:{attrs:{span:null}},colgroup:{attrs:{span:null}},command:{attrs:{type:["command","checkbox","radio"],label:null,icon:null,radiogroup:null,command:null,title:null,disabled:["disabled"],checked:["checked"]}},data:{attrs:{value:null}},datagrid:{attrs:{disabled:["disabled"],multiple:["multiple"]}},datalist:{attrs:{data:null}},dd:__,del:{attrs:{cite:null,datetime:null}},details:{attrs:{open:["open"]}},dfn:__,dir:__,div:__,dl:__,dt:__,em:__,embed:{attrs:{src:null,type:null,width:null,height:null}},eventsource:{attrs:{src:null}},fieldset:{attrs:{disabled:["disabled"],form:null,name:null}},figcaption:__,figure:__,font:__,footer:__,form:{attrs:{action:null,name:null,"accept-charset":u_,autocomplete:["on","off"],enctype:$_,method:d_,novalidate:["novalidate"],target:c_}},frame:__,frameset:__,h1:__,h2:__,h3:__,h4:__,h5:__,h6:__,head:{children:["title","base","link","style","meta","script","noscript","command"]},header:__,hgroup:__,hr:__,html:{attrs:{manifest:null}},i:__,iframe:{attrs:{src:null,srcdoc:null,name:null,width:null,height:null,sandbox:["allow-top-navigation","allow-same-origin","allow-forms","allow-scripts"],seamless:["seamless"]}},img:{attrs:{alt:null,src:null,ismap:null,usemap:null,width:null,height:null,crossorigin:["anonymous","use-credentials"]}},input:{attrs:{alt:null,dirname:null,form:null,formaction:null,height:null,list:null,max:null,maxlength:null,min:null,name:null,pattern:null,placeholder:null,size:null,src:null,step:null,value:null,width:null,accept:["audio/*","video/*","image/*"],autocomplete:["on","off"],autofocus:["autofocus"],checked:["checked"],disabled:["disabled"],formenctype:$_,formmethod:d_,formnovalidate:["novalidate"],formtarget:c_,multiple:["multiple"],readonly:["readonly"],required:["required"],type:["hidden","text","search","tel","url","email","password","datetime","date","month","week","time","datetime-local","number","range","color","checkbox","radio","file","submit","image","reset","button"]}},ins:{attrs:{cite:null,datetime:null}},kbd:__,keygen:{attrs:{challenge:null,form:null,name:null,autofocus:["autofocus"],disabled:["disabled"],keytype:["RSA"]}},label:{attrs:{for:null,form:null}},legend:__,li:{attrs:{value:null}},link:{attrs:{href:null,type:null,hreflang:null,media:null,sizes:["all","16x16","16x16 32x32","16x16 32x32 64x64"]}},map:{attrs:{name:null}},mark:__,menu:{attrs:{label:null,type:["list","context","toolbar"]}},meta:{attrs:{content:null,charset:u_,name:["viewport","application-name","author","description","generator","keywords"],"http-equiv":["content-language","content-type","default-style","refresh"]}},meter:{attrs:{value:null,min:null,low:null,high:null,max:null,optimum:null}},nav:__,noframes:__,noscript:__,object:{attrs:{data:null,type:null,name:null,usemap:null,form:null,width:null,height:null,typemustmatch:["typemustmatch"]}},ol:{attrs:{reversed:["reversed"],start:null,type:["1","a","A","i","I"]},children:["li","script","template","ul","ol"]},optgroup:{attrs:{disabled:["disabled"],label:null}},option:{attrs:{disabled:["disabled"],label:null,selected:["selected"],value:null}},output:{attrs:{for:null,form:null,name:null}},p:__,param:{attrs:{name:null,value:null}},pre:__,progress:{attrs:{value:null,max:null}},q:{attrs:{cite:null}},rp:__,rt:__,ruby:__,s:__,samp:__,script:{attrs:{type:["text/javascript"],src:null,async:["async"],defer:["defer"],charset:u_}},section:__,select:{attrs:{form:null,name:null,size:null,autofocus:["autofocus"],disabled:["disabled"],multiple:["multiple"]}},small:__,source:{attrs:{src:null,type:null,media:null}},span:__,strike:__,strong:__,style:{attrs:{type:["text/css"],media:null,scoped:null}},sub:__,summary:__,sup:__,table:__,tbody:__,td:{attrs:{colspan:null,rowspan:null,headers:null}},textarea:{attrs:{dirname:null,form:null,maxlength:null,name:null,placeholder:null,rows:null,cols:null,autofocus:["autofocus"],disabled:["disabled"],readonly:["readonly"],required:["required"],wrap:["soft","hard"]}},tfoot:__,th:{attrs:{colspan:null,rowspan:null,headers:null,scope:["row","col","rowgroup","colgroup"]}},thead:__,time:{attrs:{datetime:null}},title:__,tr:__,track:{attrs:{src:null,label:null,default:null,kind:["subtitles","captions","descriptions","chapters","metadata"],srclang:null}},tt:__,u:__,ul:{children:["li","script","template","ul","ol"]},var:__,video:{attrs:{src:null,poster:null,width:null,height:null,crossorigin:["anonymous","use-credentials"],preload:["auto","metadata","none"],autoplay:["autoplay"],mediagroup:["movie"],muted:["muted"],controls:["controls"]}},wbr:__},m_={accesskey:null,class:null,contenteditable:f_,contextmenu:null,dir:["ltr","rtl","auto"],draggable:["true","false","auto"],dropzone:["copy","move","link","string:","file:"],hidden:["hidden"],id:null,inert:["inert"],itemid:null,itemprop:null,itemref:null,itemscope:["itemscope"],itemtype:null,lang:["ar","bn","de","en-GB","en-US","es","fr","hi","id","ja","pa","pt","ru","tr","zh"],spellcheck:f_,autocorrect:f_,autocapitalize:f_,style:null,tabindex:null,title:null,translate:["yes","no"],onclick:null,rel:["stylesheet","alternate","author","bookmark","help","license","next","nofollow","noreferrer","prefetch","prev","search","tag"],role:"alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer".split(" "),"aria-activedescendant":null,"aria-atomic":f_,"aria-autocomplete":["inline","list","both","none"],"aria-busy":f_,"aria-checked":["true","false","mixed","undefined"],"aria-controls":null,"aria-describedby":null,"aria-disabled":f_,"aria-dropeffect":null,"aria-expanded":["true","false","undefined"],"aria-flowto":null,"aria-grabbed":["true","false","undefined"],"aria-haspopup":f_,"aria-hidden":f_,"aria-invalid":["true","false","grammar","spelling"],"aria-label":null,"aria-labelledby":null,"aria-level":null,"aria-live":["off","polite","assertive"],"aria-multiline":f_,"aria-multiselectable":f_,"aria-owns":null,"aria-posinset":null,"aria-pressed":["true","false","mixed","undefined"],"aria-readonly":f_,"aria-relevant":null,"aria-required":f_,"aria-selected":["true","false","undefined"],"aria-setsize":null,"aria-sort":["ascending","descending","none","other"],"aria-valuemax":null,"aria-valuemin":null,"aria-valuenow":null,"aria-valuetext":null},g_=Object.keys(p_),T_=Object.keys(m_);function b_(t,e,i=t.length){if(!e)return"";let n=e.firstChild,r=n&&n.getChild("TagName");return r?t.sliceString(r.from,Math.min(r.to,i)):""}function Q_(t,e=!1){for(let i=t.parent;i;i=i.parent)if("Element"==i.name){if(!e)return i;e=!1}return null}function Z_(t,e){let i=p_[b_(t,Q_(e,!0))];return(null==i?void 0:i.children)||g_}function S_(t,e){let i=[];for(let n=e;n=Q_(n);){let r=b_(t,n);if(r&&"CloseTag"==n.lastChild.name)break;r&&i.indexOf(r)<0&&("EndTag"==e.name||e.from>=n.firstChild.to)&&i.push(r)}return i}const v_=/^[:\-\.\w\u00b7-\uffff]+$/;function x_(t,e,i,n){let r=/\s*>/.test(t.sliceDoc(n,n+5))?"":">";return{from:i,to:n,options:Z_(t.doc,e).map((t=>({label:t,type:"type"}))).concat(S_(t.doc,e).map(((t,e)=>({label:"/"+t,apply:"/"+t+r,type:"type",boost:99-e})))),span:/^\/?[:\-\.\w\u00b7-\uffff]*$/}}function k_(t,e,i,n){let r=/\s*>/.test(t.sliceDoc(n,n+5))?"":">";return{from:i,to:n,options:S_(t.doc,e).map(((t,e)=>({label:t,apply:t+r,type:"type",boost:99-e}))),span:v_}}const w_=Mo.define({parser:Af.configure({props:[aa.add({Element(t){let e=/^(\s*)(<\/)?/.exec(t.textAfter);return t.node.to<=t.pos+e[0].length?t.continue():t.lineIndent(t.node.from)+(e[2]?0:t.unit)},"OpenTag CloseTag SelfClosingTag":t=>t.column(t.node.from)+t.unit,Document(t){if(t.pos+/\s*/.exec(t.textAfter)[0].length<t.node.to)return t.continue();let e,i=null;for(let e=t.node;;){let t=e.lastChild;if(!t||"Element"!=t.name||t.to!=e.to)break;i=e=t}return i&&(!(e=i.lastChild)||"CloseTag"!=e.name&&"SelfClosingTag"!=e.name)?t.lineIndent(i.from)+t.unit:null}}),ma.add({Element(t){let e=t.firstChild,i=t.lastChild;return e&&"OpenTag"==e.name?{from:e.to,to:"CloseTag"==i.name?i.from:t.to}:null}}),_u({"Text RawText":Iu.content,"StartTag StartCloseTag SelfCloserEndTag EndTag SelfCloseEndTag":Iu.angleBracket,TagName:Iu.tagName,"MismatchedCloseTag/TagName":[Iu.tagName,Iu.invalid],AttributeName:Iu.attributeName,"AttributeValue UnquotedAttributeValue":Iu.attributeValue,Is:Iu.definitionOperator,"EntityReference CharacterReference":Iu.character,Comment:Iu.blockComment,ProcessingInst:Iu.processingInstruction,DoctypeDecl:Iu.documentMeta})],wrap:zf([{tag:"script",attrs:t=>!t.type||/^(?:text|application)\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(t.type),parser:Kd.parser},{tag:"style",attrs:t=>(!t.lang||"css"==t.lang)&&(!t.type||/^(text\/)?(x-)?(stylesheet|css)$/i.test(t.type)),parser:l_.parser}])}),languageData:{commentTokens:{block:{open:"\x3c!--",close:"--\x3e"}},indentOnInput:/^\s*<\/\w+\W$/,wordChars:"-._"}}),y_=w_.data.of({autocomplete:function(t){let{state:e,pos:i}=t,n=Ao(e).resolveInner(i),r=n.resolve(i,-1);for(let t,e=i;n==r&&(t=r.childBefore(e));){let i=t.lastChild;if(!i||!i.type.isError||i.from<i.to)break;n=r=t,e=i.from}return"TagName"==r.name?r.parent&&/CloseTag$/.test(r.parent.name)?k_(e,r,r.from,i):x_(e,r,r.from,i):"StartTag"==r.name?x_(e,r,i,i):"StartCloseTag"==r.name||"IncompleteCloseTag"==r.name?k_(e,r,i,i):t.explicit&&("OpenTag"==r.name||"SelfClosingTag"==r.name)||"AttributeName"==r.name?function(t,e,i,n){let r=Q_(e),s=r?p_[b_(t.doc,r)]:null;return{from:i,to:n,options:(s&&s.attrs?Object.keys(s.attrs).concat(T_):T_).map((t=>({label:t,type:"property"}))),span:v_}}(e,r,"AttributeName"==r.name?r.from:i,i):"Is"==r.name||"AttributeValue"==r.name||"UnquotedAttributeValue"==r.name?function(t,e,i,n){var r;let s,o=null===(r=e.parent)||void 0===r?void 0:r.getChild("AttributeName"),a=[];if(o){let r=t.sliceDoc(o.from,o.to),l=m_[r];if(!l){let i=Q_(e),n=i?p_[b_(t.doc,i)]:null;l=(null==n?void 0:n.attrs)&&n.attrs[r]}if(l){let e=t.sliceDoc(i,n).toLowerCase(),r='"',o='"';/^['"]/.test(e)?(s='"'==e[0]?/^[^"]*$/:/^[^']*$/,r="",o=t.sliceDoc(n,n+1)==e[0]?"":e[0],e=e.slice(1),i++):s=/^[^\s<>='"]*$/;for(let t of l)a.push({label:t,apply:r+t+o,type:"constant"})}}return{from:i,to:n,options:a,span:s}}(e,r,"Is"==r.name?i:r.from,i):!t.explicit||"Element"!=n.name&&"Text"!=n.name&&"Document"!=n.name?null:function(t,e,i){let n=[],r=0;for(let i of Z_(t.doc,e))n.push({label:"<"+i,type:"type"});for(let i of S_(t.doc,e))n.push({label:"</"+i+">",type:"type",boost:99-r++});return{from:i,to:i,options:n,span:/^<\/?[:\-\.\w\u00b7-\uffff]*$/}}(e,r,i)}});function P_(t={}){let e=w_;return!1===t.matchClosingTags&&(e=e.configure({dialect:"noMatch"})),new Ho(e,[y_,!1!==t.autoCloseTags?X_:[],i$().support,O_().support])}const X_=Jr.inputHandler.of(((t,e,i,n)=>{if(t.composing||t.state.readOnly||e!=i||">"!=n&&"/"!=n||!w_.isActiveAt(t.state,e,-1))return!1;let{state:r}=t,s=r.changeByRange((t=>{var e,i,s;let o,{head:a}=t,l=Ao(r).resolveInner(a,-1);if("TagName"!=l.name&&"StartTag"!=l.name||(l=l.parent),">"==n&&"OpenTag"==l.name){if("CloseTag"!=(null===(i=null===(e=l.parent)||void 0===e?void 0:e.lastChild)||void 0===i?void 0:i.name)&&(o=b_(r.doc,l.parent,a)))return{range:W.cursor(a+1),changes:{from:a,insert:`></${o}>`}}}else if("/"==n&&"OpenTag"==l.name){let t=l.parent,e=null==t?void 0:t.parent;if(t.from==a-1&&"CloseTag"!=(null===(s=e.lastChild)||void 0===s?void 0:s.name)&&(o=b_(r.doc,e,a))){let t=`/${o}>`;return{range:W.cursor(a+t.length),changes:{from:a,insert:t}}}}return{range:t}}));return!s.changes.empty&&(t.dispatch(s,{userEvent:"input.type",scrollIntoView:!0}),!0)})),R_=Jo({block:{open:"\x3c!--",close:"--\x3e"}}),W_=hf.configure({props:[_u({"Blockquote/...":Iu.quote,HorizontalRule:Iu.contentSeparator,"ATXHeading1/... SetextHeading1/...":Iu.heading1,"ATXHeading2/... SetextHeading2/...":Iu.heading2,"ATXHeading3/...":Iu.heading3,"ATXHeading4/...":Iu.heading4,"ATXHeading5/...":Iu.heading5,"ATXHeading6/...":Iu.heading6,"Comment CommentBlock":Iu.comment,Escape:Iu.escape,Entity:Iu.character,"Emphasis/...":Iu.emphasis,"StrongEmphasis/...":Iu.strong,"Link/... Image/...":Iu.link,"OrderedList/... BulletList/...":Iu.list,"BlockQuote/...":Iu.quote,"InlineCode CodeText":Iu.monospace,URL:Iu.url,"HeaderMark HardBreak QuoteMark ListMark LinkMark EmphasisMark CodeMark":Iu.processingInstruction,"CodeInfo LinkLabel":Iu.labelName,LinkTitle:Iu.string,Paragraph:Iu.content}),ma.add((t=>{if(t.is("Block")&&!t.is("Document"))return(t,e)=>({from:e.doc.lineAt(t.from).to,to:t.to})})),aa.add({Document:()=>null}),Uo.add({Document:R_})]});function Y_(t){return new Go(R_,t,t.nodeSet.types.find((t=>"Document"==t.name)))}const C_=Y_(W_),V_=Y_(W_.configure([gf,Qf,bf,Zf,{props:[_u({"TableDelimiter SubscriptMark SuperscriptMark StrikethroughMark":Iu.processingInstruction,"TableHeader/...":Iu.heading,"Strikethrough/...":Iu.strikethrough,TaskMarker:Iu.atom,Task:Iu.list,Emoji:Iu.character,"Subscript Superscript":Iu.special(Iu.content),TableCell:Iu.content})]}]));function j_(t,e){return e.sliceString(t.from,t.from+50)}class U_{constructor(t,e,i,n,r,s,o){this.node=t,this.from=e,this.to=i,this.spaceBefore=n,this.spaceAfter=r,this.type=s,this.item=o}blank(t=!0){let e=this.spaceBefore;if("Blockquote"==this.node.name)e+=">";else for(let t=this.to-this.from-e.length-this.spaceAfter.length;t>0;t--)e+=" ";return e+(t?this.spaceAfter:"")}marker(t,e){let i="OrderedList"==this.node.name?String(+G_(this.item,t)[2]+e):"";return this.spaceBefore+i+this.type+this.spaceAfter}}function J_(t,e,i){let n=[];for(let e=t;e&&"Document"!=e.name;e=e.parent)"ListItem"!=e.name&&"Blockquote"!=e.name||n.push(e);let r=[],s=0;for(let t=n.length-1;t>=0;t--){let o,a=n[t],l=s;if("Blockquote"==a.name&&(o=/^[ \t]*>( ?)/.exec(e.slice(s))))s+=o[0].length,r.push(new U_(a,l,s,"",o[1],">",null));else if("ListItem"==a.name&&"OrderedList"==a.parent.name&&(o=/^([ \t]*)\d+([.)])([ \t]*)/.exec(j_(a,i)))){let t=o[3],e=o[0].length;t.length>=4&&(t=t.slice(0,t.length-4),e-=4),s+=e,r.push(new U_(a.parent,l,s,o[1],t,o[2],a))}else if("ListItem"==a.name&&"BulletList"==a.parent.name&&(o=/^([ \t]*)([-+*])([ \t]+)/.exec(j_(a,i)))){let t=o[3],e=o[0].length;t.length>4&&(t=t.slice(0,t.length-4),e-=4),s+=e,r.push(new U_(a.parent,l,s,o[1],t,o[2],a))}}return r}function G_(t,e){return/^(\s*)(\d+)(?=[.)])/.exec(e.sliceString(t.from,t.from+10))}function D_(t,e,i,n=0){for(let r=-1,s=t;;){if("ListItem"==s.name){let t=G_(s,e),o=+t[2];if(r>=0){if(o!=r+1)return;i.push({from:s.from+t[1].length,to:s.from+t[0].length,insert:String(r+2+n)})}r=o}let t=s.nextSibling;if(!t)break;s=t}}function M_(t){return"QuoteMark"==t.name||"ListMark"==t.name}const A_=[{key:"Enter",run:({state:t,dispatch:e})=>{let i=Ao(t),{doc:n}=t,r=null,s=t.changeByRange((e=>{if(!e.empty||!V_.isActiveAt(t,e.from))return r={range:e};let s=e.from,o=n.lineAt(s),a=J_(i.resolveInner(s,-1),o.text,n);for(;a.length&&a[a.length-1].from>s-o.from;)a.pop();if(!a.length)return r={range:e};let l=a[a.length-1];if(l.to-l.spaceAfter.length>s-o.from)return r={range:e};let h=s>=l.to-l.spaceAfter.length&&!/\S/.test(o.text.slice(l.to));if(l.item&&h){if(l.node.firstChild.to>=s||o.from>0&&!/[^\s>]/.test(n.lineAt(o.from-1).text)){let t,e=a.length>1?a[a.length-2]:null,i="";e&&e.item?(t=o.from+e.from,i=e.marker(n,1)):t=o.from+(e?e.to:0);let r=[{from:t,to:s,insert:i}];return"OrderedList"==l.node.name&&D_(l.item,n,r,-2),e&&"OrderedList"==e.node.name&&D_(e.item,n,r),{range:W.cursor(t+i.length),changes:r}}{let e="";for(let t=0,i=a.length-2;t<=i;t++)e+=a[t].blank(t<i);return e+=t.lineBreak,{range:W.cursor(s+e.length),changes:{from:o.from,insert:e}}}}if("Blockquote"==l.node.name&&h&&o.from){let i=n.lineAt(o.from-1),r=/>\s*$/.exec(i.text);if(r&&r.index==l.from){let n=t.changes([{from:i.from+r.index,to:i.to},{from:o.from+l.from,to:o.to}]);return{range:e.map(n),changes:n}}}let O=[];"OrderedList"==l.node.name&&D_(l.item,n,O);let c=t.lineBreak,u=l.item&&l.item.from<o.from;if(!u||/^[\s\d.)\-+*>]*/.exec(o.text)[0].length>=l.to)for(let t=0,e=a.length-1;t<=e;t++)c+=t!=e||u?a[t].blank():a[t].marker(n,1);let d=s;for(;d>o.from&&/\s/.test(o.text.charAt(d-o.from-1));)d--;return O.push({from:d,to:s,insert:c}),{range:W.cursor(d+c.length),changes:O}}));return!r&&(e(t.update(s,{scrollIntoView:!0,userEvent:"input"})),!0)}},{key:"Backspace",run:({state:t,dispatch:e})=>{let i=Ao(t),n=null,r=t.changeByRange((e=>{let r=e.from,{doc:s}=t;if(e.empty&&V_.isActiveAt(t,e.from)){let t=s.lineAt(r),n=J_(function(t,e){let i,n=t.resolveInner(e,-1),r=e;for(M_(n)&&(r=n.from,n=n.parent);i=n.childBefore(r);)if(M_(i))r=i.from;else{if("OrderedList"!=i.name&&"BulletList"!=i.name)break;n=i.lastChild,r=n.to}return n}(i,r),t.text,s);if(n.length){let i=n[n.length-1],s=i.to-i.spaceAfter.length+(i.spaceAfter?1:0);if(r-t.from>s&&!/\S/.test(t.text.slice(s,r-t.from)))return{range:W.cursor(t.from+s),changes:{from:t.from+s,to:r}};if(r-t.from==s){let n=t.from+i.from;if(i.item&&i.node.from<i.item.from&&/\S/.test(t.text.slice(i.from,i.to)))return{range:e,changes:{from:n,to:t.from+i.to,insert:i.blank()}};if(n<r)return{range:W.cursor(n),changes:{from:n,to:r}}}}}return n={range:e}}));return!n&&(e(t.update(r,{scrollIntoView:!0,userEvent:"delete"})),!0)}}],I_=P_({matchClosingTags:!1});function q_(t={}){let{codeLanguages:e,defaultCodeLanguage:i,addKeymap:n=!0,base:{parser:r}=C_}=t;if(!(r instanceof V$))throw new RangeError("Base parser provided to `markdown` should be a Markdown parser");let s,o=t.extensions?[t.extensions]:[],a=[I_.support];i instanceof Ho?(a.push(i.support),s=i.language):i&&(s=i);let l=e||s?(h=e||[],O=s,t=>{let e=t&&ta.matchLanguageName(h,t,!0);return e?e.support?e.support.language.parser:zo.getSkippingParser(e.load()):O?O.parser:null}):void 0;var h,O;return o.push(function(t){let{codeParser:e,htmlParser:i}=t,n=So(((t,n)=>{let r=t.type.id;if(!e||r!=r$.CodeBlock&&r!=r$.FencedCode){if(i&&(r==r$.HTMLBlock||r==r$.HTMLTag))return{parser:i,overlay:Of(t.node,t.from,t.to)}}else{let i="";if(r==r$.FencedCode){let e=t.node.getChild(r$.CodeInfo);e&&(i=n.read(e.from,e.to))}let s=e(i);if(s)return{parser:s,overlay:t=>t.type.id==r$.CodeText}}return null}));return{wrap:n}}({codeParser:l,htmlParser:I_.language.parser})),n&&a.push(N.high(Br.of(A_))),new Ho(Y_(r.configure(o)),a)}function z_(t){return 45==t||46==t||58==t||t>=65&&t<=90||95==t||t>=97&&t<=122||t>=161}let E_=null,B_=null,F_=0;function N_(t,e){let i=t.pos+e;if(B_==t&&F_==i)return E_;for(;9==(n=t.peek(e))||10==n||13==n||32==n;)e++;var n;let r="";for(;;){let i=t.peek(e);if(!z_(i))break;r+=String.fromCharCode(i),e++}return B_=t,F_=i,E_=r||null}function L_(t,e){this.name=t,this.parent=e,this.hash=e?e.hash:0;for(let e=0;e<t.length;e++)this.hash+=(this.hash<<4)+t.charCodeAt(e)+(t.charCodeAt(e)<<8)}const K_=new Wd({start:null,shift:(t,e,i,n)=>1==e?new L_(N_(n,1)||"",t):t,reduce:(t,e)=>10==e&&t?t.parent:t,reuse(t,e,i,n){let r=e.type.id;return 1==r||12==r?new L_(N_(n,1)||"",t):t},hash:t=>t?t.hash:0,strict:!1}),H_=new Td(((t,e)=>{if(60==t.next)if(t.advance(),47==t.next){t.advance();let i=N_(t,0);if(!i)return t.acceptToken(5);if(e.context&&i==e.context.name)return t.acceptToken(2);for(let n=e.context;n;n=n.parent)if(n.name==i)return t.acceptToken(3,-2);t.acceptToken(4)}else if(33!=t.next&&63!=t.next)return t.acceptToken(1)}),{contextual:!0});function tp(t,e){return new Td((i=>{for(let n=0,r=0;;r++){if(i.next<0){r&&i.acceptToken(t);break}if(i.next==e.charCodeAt(n)){if(n++,n==e.length){r>e.length&&i.acceptToken(t,1-e.length);break}}else n=0;i.advance()}}))}const ep=tp(36,"--\x3e"),ip=tp(37,"?>"),np=tp(38,"]]>"),rp=Yd.deserialize({version:13,states:"-OOQOaOOOcObO'#CcOkOdO'#CdOOOP'#Cv'#CvOsOaO'#DTO!XOaOOOOOQ'#Cw'#CwO!aObO,58}OOOP,58},58}OOOS'#Cx'#CxO!iOdO,59OOOOP,59O,59OOOOP-E6t-E6tO!qO`O'#ChO#kOqO'#CfOOOP'#Cf'#CfO#rOaO'#CyQ$TOPOOO$YOaOOOOOQ-E6u-E6uOOOP1G.i1G.iOOOS-E6v-E6vOOOP1G.j1G.jOOOO'#Cz'#CzO$hO`O,59SO$pO!bO,59SO%OOhO'#CqO%WO`O'#CrOOOP'#D]'#D]OOOP'#C}'#C}O%`OqO,59QO%gO`O'#CsOOOP,59Q,59QOOOP,59e,59eOOOP-E6w-E6wO$TOPOOOOOO-E6x-E6xO%oO!bO1G.nO%oO!bO1G.nO%}O`O'#CjO&VO!bO'#C{O&eO!bO1G.nOOOP1G.n1G.nOOOP1G.{1G.{OOOW'#DO'#DOO&pOhO,59]OOOP,59],59]O&xO`O,59^O'QO`O,59^OOOP-E6{-E6{OOOP1G.l1G.lO'YO`O,59_O'bO`O,59_O'jO!bO7+$YO'xO!bO7+$YOOOP7+$Y7+$YOOOP7+$g7+$gO(TO`O,59UO(]O`O,59UO(eO!bO,59gOOOO-E6y-E6yOOOW-E6|-E6|OOOP1G.w1G.wO(sO`O1G.xO(sO`O1G.xOOOP1G.x1G.xO({O`O1G.yO({O`O1G.yOOOP1G.y1G.yO)TO!bO<<GtOOOP<<Gt<<GtOOOP<<HR<<HRO(]O`O1G.pO(]O`O1G.pO)`O#tO'#CmOOOO1G.p1G.pO)nO`O7+$dOOOP7+$d7+$dO)vO`O7+$eOOOP7+$e7+$eOOOPAN=`AN=`OOOPAN=mAN=mO(]O`O7+$[OOOO7+$[7+$[OOOO'#C|'#C|O*OO#tO,59XOOOO,59X,59XOOOP<<HO<<HOOOOP<<HP<<HPOOOO<<Gv<<GvOOOO-E6z-E6zOOOO1G.s1G.s",stateData:"*^~OyPOzRO|QOPwPXwP~OtUOxWO~OuXO{ZO~OyPOzRO|QOPwXXwXswX~OP]OXbO~OtUOxdO~OuXO{fO~O]iOzgO~OP]OQoOSkOTlOblOclOdlOyPO|QO!RjO~ORpO~P!yOyPOzRO|QOPwPswP~OP]O~OyPOzRO|QOPwP~O]uOzgO~OZzO_wOh{OzgO~Ov|O!Q!OO~O]!QOzgO~OR!SO~P!yO]!UOzgO~OZ!XO_wOh!YOzgO~O`![OzgO~OzgOZoX_oXhoX~OZ!XO_wOh!YO~Ov|O!Q!`O~O]!aOzgO~OZ!cOzgO~O]!dOzgO~OZ!fOzgO~OZ!hO_wOh!iOzgO~OZ!hO_wOh!iO~O`!jOzgO~OzgO}!lO~OzgOZoa_oahoa~OZ!oOzgO~OZ!qOzgO~OZ!rO_wOh!sO~Ob!vOc!vO}!xO!O!vO~OZ!yOzgO~OZ!zOzgO~Ob!vOc!vO}!}O!O!vO~O",goto:"&S!QPPPPPPP!R!RP!]P!fP!mPP!vPPP!X!X#QP#W#_#g#m#s#z%S%c%i%oPPPP%uPPPPPPP&OWROS`bTl^nU`TasTl^nZ^T^ans_xiuvy!V!W!gQ!m![S!u!j!kR!{!tQp^R!SnZ_T^ansUSO`bR[SQVPRcVQYQReYSaTsRraQh]jthv!P!T!V!Z!]!b!e!k!n!p!tQviQ!PkQ!ToQ!VuQ!ZwQ!]xQ!b!QQ!e!UQ!k![Q!n!aQ!p!dR!t!jQyiS!WuvU!^y!W!gR!g!VQ!w!lR!|!wQn^R!RnQ}jR!_}QTOQq`RsbTm^n",nodeNames:"\u26a0 StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Comment ProcessingInst DoctypeDecl Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue EntityReference CharacterReference Text Cdata MismatchedCloseTag CloseTag SelfCloseEndTag SelfClosingTag",maxTerm:49,context:K_,nodeProps:[[Ks.closedBy,1,"SelfCloseEndTag EndTag",12,"CloseTag MissingCloseTag"],[Ks.openedBy,11,"StartTag StartCloseTag",23,"OpenTag",24,"StartTag"]],skippedNodes:[0],repeatNodeCount:9,tokenData:"Az~R!WOX$kXY%rYZ%rZ]$k]^%r^p$kpq%rqr$krs&tsv$kvw'Uw}$k}!O(q!O!P$k!P!Q*n!Q![$k![!]+z!]!^$k!^!_/s!_!`=i!`!a>U!a!b>q!b!c$k!c!}+z!}#P$k#P#Q?}#Q#R$k#R#S+z#S#T$k#T#o+z#o%W$k%W%o+z%o%p$k%p&a+z&a&b$k&b1p+z1p4U$k4U4d+z4d4e$k4e$IS+z$IS$I`$k$I`$Ib+z$Ib$Kh$k$Kh%#t+z%#t&/x$k&/x&Et+z&Et&FV$k&FV;'S+z;'S;:j/S;:j?&r$k?&r?Ah+z?Ah?BY$k?BY?Mn+z?Mn~$kY$rUdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$kQ%ZRdQOv%Uw!^%U!_~%UW%iR!OWOr%dsv%dw~%d_%{]dQ!OWzTOX$kXY%rYZ%rZ]$k]^%r^p$kpq%rqr$krs%Usv$kw!^$k!^!_%d!_~$kZ&{R}XdQOv%Uw!^%U!_~%U~'XTOp'hqs'hst(Pt!]'h!^~'h~'kTOp'hqs'ht!]'h!]!^'z!^~'h~(POb~~(SROp(]q!](]!^~(]~(`SOp(]q!](]!]!^(l!^~(]~(qOc~Z(xWdQ!OWOr$krs%Usv$kw}$k}!O)b!O!^$k!^!_%d!_~$kZ)iWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a*R!a~$kZ*[UxPdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k^*uWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a+_!a~$k^+hUhSdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k_,V}_S]PdQ!OWOr$krs%Usv$kw}$k}!O+z!O!P+z!P!Q$k!Q![+z![!]+z!]!^$k!^!_%d!_!c$k!c!}+z!}#R$k#R#S+z#S#T$k#T#o+z#o$}$k$}%O+z%O%W$k%W%o+z%o%p$k%p&a+z&a&b$k&b1p+z1p4U+z4U4d+z4d4e$k4e$IS+z$IS$I`$k$I`$Ib+z$Ib$Je$k$Je$Jg+z$Jg$Kh$k$Kh%#t+z%#t&/x$k&/x&Et+z&Et&FV$k&FV;'S+z;'S;:j/S;:j?&r$k?&r?Ah+z?Ah?BY$k?BY?Mn+z?Mn~$k_/ZWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_;=`$k;=`<%l+z<%l~$kZ/xU!OWOq%dqr0[sv%dw!a%d!a!b=X!b~%dZ0aZ!OWOr%dsv%dw}%d}!O1S!O!f%d!f!g1x!g!}%d!}#O5s#O#W%d#W#X:k#X~%dZ1XT!OWOr%dsv%dw}%d}!O1h!O~%dZ1oRyR!OWOr%dsv%dw~%dX1}T!OWOr%dsv%dw!q%d!q!r2^!r~%dX2cT!OWOr%dsv%dw!e%d!e!f2r!f~%dX2wT!OWOr%dsv%dw!v%d!v!w3W!w~%dX3]T!OWOr%dsv%dw!{%d!{!|3l!|~%dX3qT!OWOr%dsv%dw!r%d!r!s4Q!s~%dX4VT!OWOr%dsv%dw!g%d!g!h4f!h~%dX4kV!OWOr4frs5Qsv4fvw5Qw!`4f!`!a5c!a~4fP5TRO!`5Q!`!a5^!a~5QP5cOXPX5jRXP!OWOr%dsv%dw~%dY5xV!OWOr%dsv%dw!e%d!e!f6_!f#V%d#V#W8w#W~%dY6dT!OWOr%dsv%dw!f%d!f!g6s!g~%dY6xT!OWOr%dsv%dw!c%d!c!d7X!d~%dY7^T!OWOr%dsv%dw!v%d!v!w7m!w~%dY7rT!OWOr%dsv%dw!c%d!c!d8R!d~%dY8WT!OWOr%dsv%dw!}%d!}#O8g#O~%dY8nR!OW!RQOr%dsv%dw~%dY8|T!OWOr%dsv%dw#W%d#W#X9]#X~%dY9bT!OWOr%dsv%dw#T%d#T#U9q#U~%dY9vT!OWOr%dsv%dw#h%d#h#i:V#i~%dY:[T!OWOr%dsv%dw#T%d#T#U8R#U~%dX:pT!OWOr%dsv%dw#c%d#c#d;P#d~%dX;UT!OWOr%dsv%dw#V%d#V#W;e#W~%dX;jT!OWOr%dsv%dw#h%d#h#i;y#i~%dX<OT!OWOr%dsv%dw#m%d#m#n<_#n~%dX<dT!OWOr%dsv%dw#d%d#d#e<s#e~%dX<xT!OWOr%dsv%dw#X%d#X#Y4f#Y~%dZ=`R|R!OWOr%dsv%dw~%dZ=rU`PdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k_>_UZTdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$kZ>xWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a?b!a~$kZ?kU{PdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$kZ@UWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_#P$k#P#Q@n#Q~$kZ@uWdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!aA_!a~$kZAhU!QPdQ!OWOr$krs%Usv$kw!^$k!^!_%d!_~$k",tokenizers:[H_,ep,ip,np,0,1,2,3],topRules:{Document:[0,6]},tokenPrec:0});function sp(t,e){let i=e&&e.getChild("TagName");return i?t.sliceString(i.from,i.to):""}function op(t,e){let i=e&&e.firstChild;return i&&"OpenTag"==i.name?sp(t,i):""}function ap(t){for(let e=t&&t.parent;e;e=e.parent)if("Element"==e.name)return e;return null}class lp{constructor(t,e,i){this.attrs=e,this.attrValues=i,this.children=[],this.name=t.name,this.completion=Object.assign(Object.assign({type:"type"},t.completion||{}),{label:this.name}),this.openCompletion=Object.assign(Object.assign({},this.completion),{label:"<"+this.name}),this.closeCompletion=Object.assign(Object.assign({},this.completion),{label:"</"+this.name+">",boost:2}),this.closeNameCompletion=Object.assign(Object.assign({},this.completion),{label:this.name+">"}),this.text=t.textContent?t.textContent.map((t=>({label:t,type:"text"}))):[]}}const hp=/^[:\-\.\w\u00b7-\uffff]*$/;function Op(t){return Object.assign(Object.assign({type:"property"},t.completion||{}),{label:t.name})}function cp(t){return"string"==typeof t?{label:`"${t}"`,type:"constant"}:/^"/.test(t.label)?t:Object.assign(Object.assign({},t),{label:`"${t.label}"`})}function up(t,e){let i=[],n=[],r=Object.create(null);for(let t of e){let e=Op(t);i.push(e),t.global&&n.push(e),t.values&&(r[t.name]=t.values.map(cp))}let s=[],o=[],a=Object.create(null);for(let e of t){let t=n,l=r;e.attributes&&(t=t.concat(e.attributes.map((t=>"string"==typeof t?i.find((e=>e.label==t))||{label:t,type:"property"}:(t.values&&(l==r&&(l=Object.create(l)),l[t.name]=t.values.map(cp)),Op(t))))));let h=new lp(e,t,l);a[h.name]=h,s.push(h),e.top&&o.push(h)}o.length||(o=s);for(let e=0;e<s.length;e++){let i=t[e],n=s[e];if(i.children)for(let t of i.children)a[t]&&n.children.push(a[t]);else n.children=s}return t=>{var e;let{doc:i}=t.state,l=function(t,e){var i;let n=Ao(t).resolveInner(e,-1),r=null;for(let t=n;!r&&t.parent;t=t.parent)"OpenTag"!=t.name&&"CloseTag"!=t.name&&"SelfClosingTag"!=t.name&&"MismatchedCloseTag"!=t.name||(r=t);if(r&&(r.to>e||r.lastChild.type.isError)){let t=r.parent;if("TagName"==n.name)return"CloseTag"==r.name||"MismatchedCloseTag"==r.name?{type:"closeTag",from:n.from,context:t}:{type:"openTag",from:n.from,context:ap(t)};if("AttributeName"==n.name)return{type:"attrName",from:n.from,context:r};if("AttributeValue"==n.name)return{type:"attrValue",from:n.from,context:r};let i=n==r||"Attribute"==n.name?n.childBefore(e):n;return"StartTag"==(null==i?void 0:i.name)?{type:"openTag",from:e,context:ap(t)}:"StartCloseTag"==(null==i?void 0:i.name)&&i.to<=e?{type:"closeTag",from:e,context:t}:"Is"==(null==i?void 0:i.name)?{type:"attrValue",from:e,context:r}:i?{type:"attrName",from:e,context:r}:null}if("StartCloseTag"==n.name)return{type:"closeTag",from:e,context:n.parent};for(;n.parent&&n.to==e&&!(null===(i=n.lastChild)||void 0===i?void 0:i.type.isError);)n=n.parent;return"Element"==n.name||"Text"==n.name||"Document"==n.name?{type:"tag",from:e,context:"Element"==n.name?n:ap(n)}:null}(t.state,t.pos);if(!l||"tag"==l.type&&!t.explicit)return null;let{type:h,from:O,context:c}=l;if("openTag"==h){let t=o,e=op(i,c);if(e){let i=a[e];t=(null==i?void 0:i.children)||s}return{from:O,options:t.map((t=>t.completion)),span:hp}}if("closeTag"==h){let n=op(i,c);return n?{from:O,to:t.pos+(">"==i.sliceString(t.pos,t.pos+1)?1:0),options:[(null===(e=a[n])||void 0===e?void 0:e.closeNameCompletion)||{label:n+">",type:"type"}],span:hp}:null}if("attrName"==h){let t=a[sp(i,c)];return{from:O,options:(null==t?void 0:t.attrs)||n,span:hp}}if("attrValue"==h){let e=function(t,e,i){let n=e&&e.getChildren("Attribute").find((t=>t.from<=i&&t.to>=i)),r=n&&n.getChild("AttributeName");return r?t.sliceString(r.from,r.to):""}(i,c,O);if(!e)return null;let n=a[sp(i,c)],s=((null==n?void 0:n.attrValues)||r)[e];return s&&s.length?{from:O,to:t.pos+('"'==i.sliceString(t.pos,t.pos+1)?1:0),options:s,span:/^"[^"]*"?$/}:null}if("tag"==h){let e=op(i,c),n=a[e],r=[],l=c&&c.lastChild;!e||l&&"CloseTag"==l.name&&sp(i,l)==e||r.push(n?n.closeCompletion:{label:"</"+e+">",type:"type",boost:2});let h=r.concat(((null==n?void 0:n.children)||(c?s:o)).map((t=>t.openCompletion)));if(c&&(null==n?void 0:n.text.length)){let e=c.firstChild;e.to>t.pos-20&&!/\S/.test(t.state.sliceDoc(e.to,t.pos))&&(h=h.concat(n.text))}return{from:O,options:h,span:/^<\/?[:\-\.\w\u00b7-\uffff]*$/}}return null}}const dp=Mo.define({parser:rp.configure({props:[aa.add({Element(t){let e=/^\s*<\//.test(t.textAfter);return t.lineIndent(t.node.from)+(e?0:t.unit)},"OpenTag CloseTag SelfClosingTag":t=>t.column(t.node.from)+t.unit}),ma.add({Element(t){let e=t.firstChild,i=t.lastChild;return e&&"OpenTag"==e.name?{from:e.to,to:"CloseTag"==i.name?i.from:t.to}:null}}),_u({Text:Iu.content,"StartTag StartCloseTag EndTag SelfCloseEndTag":Iu.angleBracket,TagName:Iu.tagName,"MismatchedCloseTag/Tagname":[Iu.tagName,Iu.invalid],AttributeName:Iu.attributeName,AttributeValue:Iu.attributeValue,Is:Iu.definitionOperator,"EntityReference CharacterReference":Iu.character,Comment:Iu.blockComment,ProcessingInst:Iu.processingInstruction,DoctypeDecl:Iu.documentMeta,Cdata:Iu.special(Iu.string)})]}),languageData:{commentTokens:{block:{open:"\x3c!--",close:"--\x3e"}},indentOnInput:/^\s*<\/$/}});function $p(t={}){return new Ho(dp,dp.data.of({autocomplete:up(t.elements||[],t.attributes||[])}))}const fp={__proto__:null,return:362},_p=Yd.deserialize({version:13,states:"!/nOVQPOOO%SQPO'#CeO&_QQO'#CiOOQO'#FT'#FTO(]QPO'#FOO$OQPO'#CqO+^QPO'#CsO.[QPO'#CrO1kQPO'#CuOOQO'#Cz'#CzOOQO'#Fw'#FwO4wQPO'#FQO7VQPO'#C}O7_QPO'#FQOOQO'#FQ'#FQO8cQPO'#C^O8mQPO'#D_O$}QPO'#DaO8cQPO'#DdO8rQPO'#DpO8rQPO'#DtO9SQPO'#DvOOQO'#GP'#GPO9XQPO'#DyO9^QPO'#DyO9xQPO'#EQO9}QPO'#EXO:VQPO'#EZO:[QPO'#E_O:aQPO'#EbO:fQPO'#EeOOQO'#GO'#GOO:kQPO'#EkOOQO'#FO'#FOOOQO'#El'#ElQVQPOOO<pQPO'#EmO=vQPO,59PO8cQPO,59POOQO,59P,59PO@sQQO'#EmO@zQQO,59TOARQPO,59TOOQO,59T,59TOBVQQO'#CrOBaQQO'#FQO$OQPO,59XO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YO$OQPO,59YOBkQPO,59gOEcQPO,59]OOQO,59_,59_OHiQSO,59^OOQO,59^,59^OJgQPO'#FuOJqQPO,59aOLvQPO'#CzOMWQPO,59oOMcQWO'#FQO!!mQPO'#FQO!!tQPO'#FxO!&YQPO'#FxOOQO'#Fx'#FxO!&hQPO,59jO!'qQWO,59iOOQO,59i,59iO!)oQWO,5;lO!+vQWO'#CrO!-}QWO'#FQO!.UQPO,58xO!.]QPO'#D[O!.dQPO,59yO!.iQQO,59{O!.nQPO,5:OO!.uQPO,5:[O$}QPO'#DmO!.|QPO,5:[O!.UQPO,5:`O8mQPO,5:`OOQO'#Dx'#DxOOQO,5:b,5:bOOQO'#EP'#EPO!/RQPO'#GSO!2aQPO'#GQOOQO,5:e,5:eO9XQPO,5:eO9xQPO,5:lO9}QPO,5:sO:VQPO,5:uO:[QPO,5:yO:aQPO,5:|O:fQPO,5;POOQO'#ES'#ESO9}QPO,5:lO!5iQWO'#ETOOQO'#ET'#ETO!5tQ`O'#GTO8mQPO,5:sOOQO'#E]'#E]O!5|QPO,5:uOOQO'#Ea'#EaO!6UQPO,5:yOOQO'#Ed'#EdO!6^QPO,5:|OOQO'#Eg'#EgO!6fQPO,5;PO!6nQPO,5;VOOQO-E8j-E8jOOQO,5;Y,5;YO<sQPO'#EmOOQO-E8k-E8kOOQO1G.k1G.kO!9oQPO1G.kOOQO-E8l-E8lOOQO,5;Z,5;ZO=}QQO'#EmOOQO1G.o1G.oO!;sQQO1G.oOOQO-E8m-E8mO!;zQQO,59]O!=oQPO1G.sO!FPQPO1G.tO!JzQPO1G.tO!KeQPO1G.tO#!lQPO1G.tO#!sQPO1G.tO#'kQPO1G.tO#'{QPO1G.tO#-VQPO1G.tO#-^QPO1G.tO#2_QPO1G.tO#2fQPO1G.tOOQO'#C|'#C|OOQO1G/R1G/ROOQO'#Ep'#EpO#2mQSO'#CtO#2wQSO'#FqO#3PQSO1G.xO#3UQPO'#EsO#3cQPO,5<aOOQO1G.{1G.{O#3kQPO1G/ZOOQO,5<d,5<dO#4PQWO'#CzO#4^QSO'#FzO#4fQSO,59pO#6bQWO'#FQO#6lQWO'#FxO#6wQWO'#FxO#7YQWO,59pOOQO1G/U1G/UO#7qQWO'#DYO#7{QWO'#CzO#:RQPO'#DYO#:WQSO'#F|O#:`QSO1G/TOOQO1G1W1G1WO#:eQWO,59]OOQO1G.d1G.dOOQO,59v,59vO#<bQPO,59vO$OQPO1G/eO8cQPO1G/gO#<zQPO'#DfOOQO1G/j1G/jO8mQPO'#DrOOQO1G/v1G/vO#=RQPO,5:XO#=ZQPO1G/zO$OQPO,5<mO#@cQPO'#ExO#@kQPO,5<nO#3kQPO,5<nO#@cQPO'#EwO#CsQPO,5<lOOQO1G0P1G0PO9}QPO1G0WO8mQPO1G0_O#F{QPO1G0aO#GTQPO1G0eO#G]QPO1G0hO#GeQPO1G0kO8mQPO1G0WO#GmQPO'#DZOOQO'#EW'#EWO#GuQSO'#GUO#G}QSO,5:oO#HSQPO'#EUO#HXQPO'#EUO#H^QPO,5<oOOQO1G0_1G0_OOQO1G0a1G0aO#HhQPO1G0aOOQO1G0e1G0eO#HhQPO1G0eOOQO1G0h1G0hO#HhQPO1G0hOOQO1G0k1G0kO#HhQPO1G0kOOQO7+$V7+$VP!9rQPO'#EnO#HmQQO1G.sO#LuQQO1G.tO$ lQQO1G.tO$ yQQO1G.tO$$|QQO1G.tO$%TQQO1G.tO$'wQQO1G.tO$(XQQO1G.tO$+_QQO1G.tO$+fQQO1G.tO$.cQQO1G.tO$.jQQO1G.tOOQO7+$Z7+$ZP!9yQQO'#EoOOQO-E8n-E8nO$.qQSO'#EqO$.xQSO,5<]OOQO7+$d7+$dO$/QQPO,5;_OOQO'#Er'#ErO#3UQPO,5;_OOQO-E8q-E8qOOQO'#DS'#DSO#3kQPO'#DOO$/[QPO7+$uO#7YQWO'#DUO$/aQPO'#DUO$/fQPO'#EtO$/}QSO,5<fO$0VQ`O1G/[O$0[QSO1G/[O7_QPO,59tO$0aQPO'#EuO$0hQSO,5<hOOQO7+$o7+$oO$0pQWO1G.sO$1dQWO1G.tO$3zQWO1G.tO$4XQWO1G.tO$6`QWO1G.tO$6gQWO1G.tO$8_QWO1G.tO$8oQWO1G.tO$:yQWO1G.tO$;QQWO1G.tO$=RQWO1G.tO$=YQWO1G.tOOQO1G/b1G/bO$=aQPO7+%PO!.UQPO7+%RO$@bQPO'#DiO8rQPO'#DkOOQO'#F}'#F}OOQO'#Ev'#EvO$@gQPO,5:QOOQO,5:Q,5:QOOQO,5:^,5:^O8cQPO1G/sO#3kQPO1G/sOOQO7+%f7+%fO$@nQPO1G2XO#@cQPO,5;dO$CrQPO,5;dOOQO-E8v-E8vO$F}QPO1G2YO#@cQPO,5;cO$JYQPO'#GROOQO,5;c,5;cOOQO-E8u-E8uO8mQPO7+%rOOQO7+%y7+%yOOQO7+%{7+%{O#HhQPO7+%{OOQO7+&P7+&PO#HhQPO7+&POOQO7+&S7+&SO#HhQPO7+&SOOQO7+&V7+&VO#HhQPO7+&VOOQO7+%r7+%rO$JbQPO'#EyO$JmQSO,5<pOOQO1G0Z1G0ZO$JuQPO,5:pOOQO'#DZ'#DZO$KZQPO,5:pOOQO'#DX'#DXOOQO'#DV'#DVOOQO1G2Z1G2ZOOQO'#E^'#E^O$K`QPO'#GWO8mQPO7+%{O8mQPO7+&PO8mQPO7+&SO8mQPO7+&VO$.qQSO,5;]OOQO,5;],5;]OOQO-E8o-E8oO$KhQPO1G0yOOQO-E8p-E8pOOQO<<Ha<<HaO$/fQPO,5;`OOQO,5;`,5;`OOQO-E8r-E8rO#H^QPO7+$vO$KrQ`O7+$vO$KwQWO1G/`O$0aQPO,5;aOOQO,5;a,5;aOOQO-E8s-E8sOOQO<<Hm<<HmO$LRQPO,5:TO$NTQPO,5:VO$N[QPO,5:VOOQO-E8t-E8tOOQO1G/l1G/lO$NaQPO7+%_O$NnQPO7+%_O$NsQPO1G1OO#3kQPO1G1OO%$OQPO7+'tO$OQPO7+'sOOQO1G0}1G0}O#3kQPO,5<mOOQO<<I^<<I^O8mQPO<<IgO8mQPO<<IkO8mQPO<<InO8mQPO<<IqO$JbQPO,5;eOOQO,5;e,5;eOOQO-E8w-E8wOOQO1G0[1G0[O$JuQPO1G0[O%'WQPO'#EzO%'`QPO,5<rOOQO<<Ig<<IgOOQO<<Ik<<IkOOQO<<In<<InOOQO<<Iq<<IqOOQO1G0w1G0wOOQO1G0z1G0zOOQO<<Hb<<HbO#H^QPO<<HbOOQO1G0{1G0{O%'hQPO1G/oO%)jQPO1G/qO8cQPO<<HyO#3kQPO7+&jOOQO7+&j7+&jO%+lQPO<<K_O%.pQPO1G2XOOQOAN?RAN?ROOQOAN?VAN?VOOQOAN?YAN?YOOQOAN?]AN?]OOQO1G1P1G1POOQO7+%v7+%vO%'WQPO,5;fOOQO,5;f,5;fOOQO-E8x-E8xOOQOAN=|AN=|O%.uQPO7+%]O%0wQPOAN>eOOQO<<JU<<JUOOQO1G1Q1G1QO%ZQPO'#CqO7_QPO'#CqO%1UQPO'#CrO%1lQPO'#FQO%4PQQO'#CrO%4ZQQO'#FQO%ZQPO,59XO8cQPO,59XO7_QPO,59XOARQPO,59XO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%ZQPO,59YO8cQPO,59YO7_QPO,59YOARQPO,59YO%4kQWO'#CrO%4uQPO1G.sO%5xQPO1G.tO%9UQPO1G.tO%9]QPO1G.tO%;dQPO1G.tO%;tQPO1G.tO%>_QPO1G.tO%>fQPO1G.tO%@vQPO1G.tO%@}QPO1G.tO%AvQPO1G.tO%CfQQO1G.sO%DYQQO1G.tO%D|QQO1G.tO%F]QQO1G.tO%GlQQO1G.tO%H{QQO1G.tO%J[QQO1G.tO%KkQQO1G.tO%LzQQO1G.tO%NZQQO1G.tO& jQQO1G.tO&!yQPO7+$vO&!yQPO<<HbO8cQPO'#CqO&#TQ`O1G/[O&#YQ`O7+$vOARQPO'#CqO&#_QSO,59pO#7YQWO'#DUO&#dQSO1G/[OMcQWO'#FQO#7YQWO,59pO&#iQPO'#DU",stateData:"&$k~O#qOS~OR_OSROTROUROVROWROYPO^QOjWOlZOmZO!S`O!UaO!XbO!ZqO![qO!bgO!cgO!ecO!idO!keO!nfO!ofO!pfO!qfO!rfO!uiO!|jO#OkO#SlO#VmO#YnO#[qO#]qO#^qO#sqO#u]O$RTO$STO$bTO$cUO$dXO${pO~OSROTROUROVROWROYPO^QOjWOlZOmZO#u]O$RTO$STO$bTO$cUO$dXO~OZwO~P$OOSROTROUROVROWROYPO^QOjWOl}Om}O#u]O$R)WO$S)WO$b)WO$cUO$dXO~O_{O~P%ZOc!POd!PO#x!OO#y!OO#z!OO#{!OO#|!OO#}!OO$O!QO$P!QO$Q!QO$R!RO$S!SO$T!TO$U!TO$V!TO$W!TO$X!UO$Y!UO$Z!UO$[!UO$]!VO$^!WO$_!XO$`!YO$a!ZO$j![O~OR#rXS#rXT#rXU#rXV#rXW#rXY#rX^#rXj#rXl#rXm#rX!S#rX!U#rX!X#rX!Z#rX![#rX!b#rX!c#rX!e#rX!i#rX!k#rX!n#rX!o#rX!p#rX!q#rX!r#rX!u#rX!|#rX#O#rX#S#rX#V#rX#Y#rX#[#rX#]#rX#^#rX#o#rX#s#rX#u#rX$b#rX$c#rX$d#rX${#rX!Q#rX!^#rX!`#rX~P&fO$d!^O~O#u!_O$h!`OSfXTfXUfXVfXWfXYfX^fXcfXdfXjfXlfXmfX#ufX#xfX#yfX#zfX#{fX#|fX#}fX$OfX$PfX$QfX$RfX$SfX$TfX$UfX$VfX$WfX$XfX$YfX$ZfX$[fX$]fX$^fX$_fX$`fX$afX$bfX$cfX$dfX$jfX~ORfX!SfX!UfX!XfX!ZfX![fX!bfX!cfX!efX!ifX!kfX!nfX!ofX!pfX!qfX!rfX!ufX!|fX#OfX#SfX#VfX#YfX#[fX#]fX#^fX#ofX#sfX${fXZfX[fXkfX$gfX!QfX!^fX!`fX~P+cOSROTROUROVROWROYPO^QOjWOl)ZOm)ZO$R*yO$S*yO$b*yO$cUO~Os!gOu!gO#u!eO$d!cOk$iP~P0mOS#tXT#tXU#tXV#tXW#tXY#tX^#tXc#tXd#tXj#tXl#tXm#tX#u#tX#u$kX#x#tX#y#tX#z#tX#{#tX#|#tX#}#tX$O#tX$P#tX$Q#tX$R#tX$S#tX$T#tX$U#tX$V#tX$W#tX$X#tX$Y#tX$Z#tX$[#tX$]#tX$^#tX$_#tX$`#tX$a#tX$b#tX$c#tX$d#tX$h$kX$j#tX~OR#tX!S#tX!U#tX!X#tX!Z#tX![#tX!b#tX!c#tX!e#tX!i#tX!k#tX!n#tX!o#tX!p#tX!q#tX!r#tX!u#tX!|#tX#O#tX#S#tX#V#tX#Y#tX#[#tX#]#tX#^#tX#o#tX#s#tX${#tXZ#tX[#tX!Q#tX$g#tX!^#tX!`#tX~P2OO#u!kO$h!lO~OSROTROUROVROWROYPO^QOjWOl!oOm!oO#u]O$R)XO$S)XO$b)XO$cUO$dXO~O#u]O$dXO~P0mO!P!qO~O!b!vO!c!vO#u]O$dXO~P0mO$d!zO~O$d!|O~O!b#QO!c#QO!u#RO!|#SO#O#TO#S#UO#V#VO#Y#WO~O$d#XO~O#u#ZO$h#[O~O$d#_O~O$d#aO~O$d#cO~O$d#eO~OR#_X!S#_X!U#_X!X#_X!Z#_X![#_X!b#_X!c#_X!e#_X!i#_X!k#_X!n#_X!o#_X!p#_X!q#_X!r#_X!u#_X!|#_X#O#_X#S#_X#V#_X#Y#_X#[#_X#]#_X#^#_X#o#_X#s#_X${#_X!Q#_X!^#_X!`#_X~P$OO[#iOS#aXT#aXU#aXV#aXW#aXY#aXZ#aX^#aXj#aXl#aXm#aX#u#aX$b#aX$c#aX$d#aX~P&fOZ#lO~P$OOc)bOd)bO#x)^O#y)^O#z)^O#{)^O#|)^O#})^O$O)fO$P)fO$Q)fO$R)jO$S)nO$T)rO$U)rO$V)rO$W)rO$X)vO$Y)vO$Z)vO$[)vO$])zO$^*OO$_*SO$`*WO$a*[O$j![OS#aXT#aXU#aXV#aXW#aXY#aX^#aX_#aXj#aXl#aXm#aX#u#aX$b#aX$c#aX$d#aX~O`#oO~P=}O_#qO~P%ZOSROTROUROVROWROYPO^QOjWOl)]Om)]O#u]O$R*|O$S*|O$b*|O$cUO$dXO~O_fX`fX~P+cO_#tX`#tX~P2OO$d$RO~O$j![OSeaTeaUeaVeaWeaYea^eaceadeajealeamea#uea#xea#yea#zea#{ea#|ea#}ea$Oea$Pea$Qea$Rea$Sea$Tea$Uea$Vea$Wea$Xea$Yea$Zea$[ea$]ea$^ea$_ea$`ea$aea$bea$cea$dea~ORea!Sea!Uea!Xea!Zea![ea!bea!cea!eea!iea!kea!nea!oea!pea!qea!rea!uea!|ea#Oea#Sea#Vea#Yea#[ea#]ea#^ea#oea#sea${eaZea[eakea$gea!Pea!gea!Qea$mea!^ea!`ea~PBpOSROTROUROVROWROYPO^QO$f$TO~O#v$eP~PG}Oc)cOd)cO#x)_O#y)_O#z)_O#{)_O#|)_O#})_O$O)gO$P)gO$Q)gO$R)kO$S)oO$T)sO$U)sO$V)sO$W)sO$X)wO$Y)wO$Z)wO$[)wO$]){O$^*PO$_*TO$`*XO$a*]O$j![O~O$g$XOk$iX~PHpOk$ZO~OcnXdnXtvX#unX#xnX#ynX#znX#{nX#|nX#}nX$OnX$PnX$QnX$RnX$SnX$TnX$UnX$VnX$WnX$XnX$YnX$ZnX$[nX$]nX$^nX$_nX$`nX$anX$hnX$jnX~OknXkvX$gnX$mvX~PJvOt$]O$m$[Ok$lX~OSROTROUROVROWROYPO^QOjWOl!oOm!oOs$bOu$bO#u+QO$R)XO$S)XO$b)XO$cUO$d$^O#v$nP~Oc#tXd#tXk#tX#x#tX#y#tX#z#tX#{#tX#|#tX#}#tX$O#tX$P#tX$Q#tX$R#tX$S#tX$T#tX$U#tX$V#tX$W#tX$X#tX$Y#tX$Z#tX$[#tX$]#tX$^#tX$_#tX$`#tX$a#tX$g#tX$j#tX~O#u$dO~PNpOt$]Ok$lXR$lXS$lXT$lXU$lXV$lXW$lXY$lX^$lXj$lXl$lXm$lX!S$lX!U$lX!X$lX!Z$lX![$lX!b$lX!c$lX!e$lX!i$lX!k$lX!n$lX!o$lX!p$lX!q$lX!r$lX!u$lX!|$lX#O$lX#S$lX#V$lX#Y$lX#[$lX#]$lX#^$lX#o$lX#s$lX#u$lX#x$lX$R$lX$S$lX$b$lX$c$lX$d$lX$g$lX${$lX!P$lX!Q$lX!^$lX!`$lX~Ot$]Ok$lX#u$kX$h$kX~Ok$eO~OSROTROUROVROWROYPO^QOjWOl!oOm!oO#u]O$R)XO$S)XO$b)XO$cUO$d$gO~O#v$pP~P!&mOc)dOd)dO#x)`O#y)`O#z)`O#{)`O#|)`O#})`O$O)hO$P)hO$Q)hO$R)lO$S)pO$T)tO$U)tO$V)tO$W)tO$X)xO$Y)xO$Z)xO$[)xO$])|O$^*QO$_*UO$`*YO$a*^O$j![O~O#v$kO~P!'xO#u!_O$h!`OcfXdfX#xfX#yfX#zfX#{fX#|fX#}fX$OfX$PfX$QfX$RfX$SfX$TfX$UfX$VfX$WfX$XfX$YfX$ZfX$[fX$]fX$^fX$_fX$`fX$afX$jfX$gfX~O#vfX~P!)vOc#tXd#tX#u$kX#x#tX#y#tX#z#tX#{#tX#|#tX#}#tX$O#tX$P#tX$Q#tX$R#tX$S#tX$T#tX$U#tX$V#tX$W#tX$X#tX$Y#tX$Z#tX$[#tX$]#tX$^#tX$_#tX$`#tX$a#tX$h$kX$j#tX$g#tX~O#v#tX~P!+}O!P!qO~PHpO!Q$nO~PVOR$pO~O!V$qO~O!P$rO~PHpO!g$tO~PHpO!g$tO~O#x$xO$g$yO$m${OR$vXS$vXT$vXU$vXV$vXW$vXY$vX^$vXj$vXl$vXm$vX!S$vX!U$vX!X$vX!Z$vX![$vX!b$vX!c$vX!e$vX!i$vX!k$vX!n$vX!o$vX!p$vX!q$vX!r$vX!u$vX!|$vX#O$vX#S$vX#V$vX#Y$vX#[$vX#]$vX#^$vX#o$vX#s$vX#u$vX$R$vX$S$vX$b$vX$c$vX$d$vX${$vX!Q$vX!^$vX!`$vX~O$g$|OR$tXS$tXT$tXU$tXV$tXW$tXY$tX^$tXj$tXl$tXm$tX!S$tX!U$tX!X$tX!Z$tX![$tX!b$tX!c$tX!e$tX!i$tX!k$tX!n$tX!o$tX!p$tX!q$tX!r$tX!u$tX!|$tX#O$tX#S$tX#V$tX#Y$tX#[$tX#]$tX#^$tX#o$tX#s$tX#u$tX$R$tX$S$tX$b$tX$c$tX$d$tX${$tX!Q$tX!^$tX!`$tX~O$d%WO$y%XO#v$xP~O$o%^O!P$wX~O!P!qO$m%aO~O!P!qO$m%cO~O!P!qO$m%eO~O!P!qO$m%gO~OR#_aS#_aT#_aU#_aV#_aW#_aY#_a^#_aj#_al#_am#_a!S#_a!U#_a!X#_a!Z#_a![#_a!b#_a!c#_a!e#_a!i#_a!k#_a!n#_a!o#_a!p#_a!q#_a!r#_a!u#_a!|#_a#O#_a#S#_a#V#_a#Y#_a#[#_a#]#_a#^#_a#o#_a#s#_a#u#_a$b#_a$c#_a$d#_a${#_a!Q#_a!^#_a!`#_a~P&fOZ%hO[#iO~PHpO`#oOc)eOd)eO#x)aO#y)aO#z)aO#{)aO#|)aO#})aO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO$X)yO$Y)yO$Z)yO$[)yO$])}O$^*RO$_*VO$`*ZO$a*_O$j![O~O_%vO~P!9yO_ea`ea~PBpO$j![OSaiTaiUaiVaiWaiYai^aicaidaijailaimai#uai#xai#yai#zai#{ai#|ai#}ai$bai$cai$dai~O$O!QO$P!QO$Q!QO$R!RO$S!SO$T!TO$U!TO$V!TO$W!TO$X!UO$Y!UO$Z!UO$[!UO$]!VO$^!WO$_!XO$`!YO$a!ZORai!Sai!Uai!Xai!Zai![ai!bai!cai!eai!iai!kai!nai!oai!pai!qai!rai!uai!|ai#Oai#Sai#Vai#Yai#[ai#]ai#^ai#oai#sai${aiZai[ai!Qai$gai!^ai!`ai~P!<UO$O!QO$P!QO$Q!QO$R!RO$S!SO$T!TO$U!TO$V!TO$W!TO$X!UO$Y!UO$Z!UO$[!UO$]!VO$^!WO$_!XO$`!YO$j![ORbiSbiTbiUbiVbiWbiYbi^bicbidbijbilbimbi!Sbi!Ubi!Xbi!Zbi![bi!bbi!cbi!ebi!ibi!kbi!nbi!obi!pbi!qbi!rbi!ubi!|bi#Obi#Sbi#Vbi#Ybi#[bi#]bi#^bi#obi#sbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$bbi$cbi$dbi${biZbi[bi!Qbi$gbi!^bi!`bi~O$a!ZO~P!AVO$j![ORbiSbiTbiUbiVbiWbiYbi^bicbidbijbilbimbi!Sbi!Ubi!Xbi!Zbi![bi!bbi!cbi!ebi!ibi!kbi!nbi!obi!pbi!qbi!rbi!ubi!|bi#Obi#Sbi#Vbi#Ybi#[bi#]bi#^bi#obi#sbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$Rbi$Sbi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$bbi$cbi$dbi${biZbi[bi$gbi!Qbi!^bi!`bi~O$Obi$Pbi$Qbikbi!Pbi!gbi$mbi~P!FWO$O!QO$P!QO$Q!QO~P!FWO$O!QO$P!QO$Q!QO$R!RO$j![ORbiSbiTbiUbiVbiWbiYbi^bicbidbijbilbimbi!Sbi!Ubi!Xbi!Zbi![bi!bbi!cbi!ebi!ibi!kbi!nbi!obi!pbi!qbi!rbi!ubi!|bi#Obi#Sbi#Vbi#Ybi#[bi#]bi#^bi#obi#sbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$bbi$cbi$dbi${biZbi[bi!Qbi$gbi!^bi!`bi~O$Sbi~P!KrO$S!SO~P!KrO$O!QO$P!QO$Q!QO$R!RO$S!SO$T!TO$U!TO$V!TO$W!TO$j![ORbiSbiTbiUbiVbiWbiYbi^bicbidbijbilbimbi!Sbi!Ubi!Xbi!Zbi![bi!bbi!cbi!ebi!ibi!kbi!nbi!obi!pbi!qbi!rbi!ubi!|bi#Obi#Sbi#Vbi#Ybi#[bi#]bi#^bi#obi#sbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$]bi$^bi$_bi$`bi$abi$bbi$cbi$dbi${biZbi[bi!Qbi$gbi!^bi!`bi~O$Xbi$Ybi$Zbi$[bi~P#!zO$X!UO$Y!UO$Z!UO$[!UO~P#!zO$O!QO$P!QO$Q!QO$R!RO$S!SO$T!TO$U!TO$V!TO$W!TO$X!UO$Y!UO$Z!UO$[!UO$]!VO$j![ORbiSbiTbiUbiVbiWbiYbi^bicbidbijbilbimbi!Sbi!Ubi!Xbi!Zbi![bi!bbi!cbi!ebi!ibi!kbi!nbi!obi!pbi!qbi!rbi!ubi!|bi#Obi#Sbi#Vbi#Ybi#[bi#]bi#^bi#obi#sbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$_bi$`bi$abi$bbi$cbi$dbi${biZbi[bi!Qbi$gbi!^bi!`bi~O$^bi~P#(]O$^!WO~P#(]O$O!QO$P!QO$Q!QO$R!RO$S!SO$T!TO$U!TO$V!TO$W!TO$X!UO$Y!UO$Z!UO$[!UO$]!VO$^!WO$_!XO$j![ORbiSbiTbiUbiVbiWbiYbi^bicbidbijbilbimbi!Sbi!Ubi!Xbi!Zbi![bi!bbi!cbi!ebi!ibi!kbi!nbi!obi!pbi!qbi!rbi!ubi!|bi#Obi#Sbi#Vbi#Ybi#[bi#]bi#^bi#obi#sbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$abi$bbi$cbi$dbi${biZbi[bi!Qbi$gbi!^bi!`bi~O$`bi~P#-eO$abi~P!AVO#vhX$ghX~PG}O$g%yO#v$eX~O#v%{O~O#s%}O#u]O$dXO~P0mO$g$XOk$ia~Oj&ROs!gOu!gO#u&TO$cUO$d&QO~O#vnX#vvX$gvX~PJvO$g&VO#v$nX~O#v&XO~Oc#tXd#tX#x#tX#y#tX#z#tX#{#tX#|#tX#}#tX$O#tX$P#tX$Q#tX$R#tX$S#tX$T#tX$U#tX$V#tX$W#tX$X#tX$Y#tX$Z#tX$[#tX$]#tX$^#tX$_#tX$`#tX$a#tX$j#tX~O#u+RO#v#tX~P#4kOt$]O#v$lX$g$lX~Ot$]O#u$kX#v$lX$g$lX$h$kX~Oj&ROs$bOu$bO#u+OO$cUO$d&QO#v$nP~O#v|X$g|X~P!'xOcnXdnX#unX#vnX#xnX#ynX#znX#{nX#|nX#}nX$OnX$PnX$QnX$RnX$SnX$TnX$UnX$VnX$WnX$XnX$YnX$ZnX$[nX$]nX$^nX$_nX$`nX$anX$gnX$hnX$jnX$m}X~O$m&ZO~O$g&[O#v$pX~O#v&^O~O$j![Oceadea#vea#xea#yea#zea#{ea#|ea#}ea$Oea$Pea$Qea$Rea$Sea$Tea$Uea$Vea$Wea$Xea$Yea$Zea$[ea$]ea$^ea$_ea$`ea$aea$gea~O!Q&kO~PVO!Z&pO![&pO!^&nO!`&oO#s&pO~O!Q&sO~P#<iO#x&uO$m&vO~O!g$tOR!hiS!hiT!hiU!hiV!hiW!hiY!hi^!hij!hil!him!hi!S!hi!U!hi!X!hi!Z!hi![!hi!b!hi!c!hi!e!hi!i!hi!k!hi!n!hi!o!hi!p!hi!q!hi!r!hi!u!hi!|!hi#O!hi#S!hi#V!hi#Y!hi#[!hi#]!hi#^!hi#o!hi#s!hi#u!hi$R!hi$S!hi$b!hi$c!hi$d!hi${!hi!Q!hi!^!hi!`!hi~O#s%}O$d!|O~O$g$yOR$vaS$vaT$vaU$vaV$vaW$vaY$va^$vaj$val$vam$va!S$va!U$va!X$va!Z$va![$va!b$va!c$va!e$va!i$va!k$va!n$va!o$va!p$va!q$va!r$va!u$va!|$va#O$va#S$va#V$va#Y$va#[$va#]$va#^$va#o$va#s$va#u$va$R$va$S$va$b$va$c$va$d$va${$va!Q$va!^$va!`$va~O$g$|OR$taS$taT$taU$taV$taW$taY$ta^$taj$tal$tam$ta!S$ta!U$ta!X$ta!Z$ta![$ta!b$ta!c$ta!e$ta!i$ta!k$ta!n$ta!o$ta!p$ta!q$ta!r$ta!u$ta!|$ta#O$ta#S$ta#V$ta#Y$ta#[$ta#]$ta#^$ta#o$ta#s$ta#u$ta$R$ta$S$ta$b$ta$c$ta$d$ta${$ta!Q$ta!^$ta!`$ta~O!P!qO$m'UO~O!P!qO$m'WO~O!P!qO$m'YO~O!P!qO$m'[O~O$d!yX$m}X~O$g'^O#v$xX~O#v'`O~O$m'aO~O$d'bO~Oz'eO$h'dO~P#3kO$d'gO~O$O)fO$P)fO$Q)fO$R)jO$S)nO$T)rO$U)rO$V)rO$W)rO$X)vO$Y)vO$Z)vO$[)vO$])zO$^*OO$_*SO$`*WO$a*[O_ai`ai~P!<UO$O)fO$P)fO$Q)fO$R)jO$S)nO$T)rO$U)rO$V)rO$W)rO$X)vO$Y)vO$Z)vO$[)vO$])zO$^*OO$_*SO$`*WO$j![OSbiTbiUbiVbiWbiYbi^bi_bi`bicbidbijbilbimbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$bbi$cbi$dbi~O$a*[O~P#JPO$j![OSbiTbiUbiVbiWbiYbi^bi_bi`bicbidbijbilbimbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$Rbi$Sbi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$bbi$cbi$dbi~O$Obi$Pbi$Qbi~P#L|O$O)fO$P)fO$Q)fO~P#L|O$O)fO$P)fO$Q)fO$R)jO$j![OSbiTbiUbiVbiWbiYbi^bi_bi`bicbidbijbilbimbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$bbi$cbi$dbi~O$Sbi~P$!WO$S)nO~P$!WO$O)fO$P)fO$Q)fO$R)jO$S)nO$T)rO$U)rO$V)rO$W)rO$j![OSbiTbiUbiVbiWbiYbi^bi_bi`bicbidbijbilbimbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$]bi$^bi$_bi$`bi$abi$bbi$cbi$dbi~O$Xbi$Ybi$Zbi$[bi~P$%[O$X)vO$Y)vO$Z)vO$[)vO~P$%[O$O)fO$P)fO$Q)fO$R)jO$S)nO$T)rO$U)rO$V)rO$W)rO$X)vO$Y)vO$Z)vO$[)vO$])zO$j![OSbiTbiUbiVbiWbiYbi^bi_bi`bicbidbijbilbimbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$_bi$`bi$abi$bbi$cbi$dbi~O$^bi~P$(iO$^*OO~P$(iO$O)fO$P)fO$Q)fO$R)jO$S)nO$T)rO$U)rO$V)rO$W)rO$X)vO$Y)vO$Z)vO$[)vO$])zO$^*OO$_*SO$j![OSbiTbiUbiVbiWbiYbi^bi_bi`bicbidbijbilbimbi#ubi#xbi#ybi#zbi#{bi#|bi#}bi$abi$bbi$cbi$dbi~O$`bi~P$+mO$abi~P#JPO#s%}O~PG}O$g%yO#v$ea~Ok#ga$g#ga~PHpOk'rO~O#u$dO~Oj&ROs$bOu$bO#s%}O#u+OO$cUO$d&QO~O$g&VO#v$na~O$o'vO~O#v'wO~O#s%}O~P!&mO$g&[O#v$pa~Ocaidai#vai#xai#yai#zai#{ai#|ai#}ai$gai~P!(bOcbidbi#vbi#xbi#ybi#zbi#{bi#|bi#}bi$gbi~P!(bO$j![Ocbidbi#vbi#xbi#ybi#zbi#{bi#|bi#}bi$Rbi$Sbi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$gbi~O$Obi$Pbi$Qbi~P$2WO$O)hO$P)hO$Q)hO~P$2WO$O)hO$P)hO$Q)hO$R)lO$j![Ocbidbi#vbi#xbi#ybi#zbi#{bi#|bi#}bi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$gbi~O$Sbi~P$4fO$S)pO~P$4fO$O)hO$P)hO$Q)hO$R)lO$S)pO$T)tO$U)tO$V)tO$W)tO$j![Ocbidbi#vbi#xbi#ybi#zbi#{bi#|bi#}bi$]bi$^bi$_bi$`bi$abi$gbi~O$Xbi$Ybi$Zbi$[bi~P$6nO$X)xO$Y)xO$Z)xO$[)xO~P$6nO$O)hO$P)hO$Q)hO$R)lO$S)pO$T)tO$U)tO$V)tO$W)tO$X)xO$Y)xO$Z)xO$[)xO$])|O$j![Ocbidbi#vbi#xbi#ybi#zbi#{bi#|bi#}bi$_bi$`bi$abi$gbi~O$^bi~P$9PO$^*QO~P$9PO$O)hO$P)hO$Q)hO$R)lO$S)pO$T)tO$U)tO$V)tO$W)tO$X)xO$Y)xO$Z)xO$[)xO$])|O$^*QO$_*UO$j![Ocbidbi#vbi#xbi#ybi#zbi#{bi#|bi#}bi$abi$gbi~O$`bi~P$;XO$`*YO~P$;XOR!RqS!RqT!RqU!RqV!RqW!RqY!Rq^!Rqj!Rql!Rqm!Rq!S!Rq!U!Rq!X!Rq!Z!Rq![!Rq!b!Rq!c!Rq!e!Rq!i!Rq!k!Rq!n!Rq!o!Rq!p!Rq!q!Rq!r!Rq!u!Rq!|!Rq#O!Rq#S!Rq#V!Rq#Y!Rq#[!Rq#]!Rq#^!Rq#o!Rq#s!Rq#u!Rq$b!Rq$c!Rq$d!Rq${!Rq!Q!Rq!^!Rq!`!Rq~P&fO$m'}O~O!Q(RO~P#<iOR$uiS$uiT$uiU$uiV$uiW$uiY$ui^$uij$uil$uim$ui!S$ui!U$ui!X$ui!Z$ui![$ui!b$ui!c$ui!e$ui!i$ui!k$ui!n$ui!o$ui!p$ui!q$ui!r$ui!u$ui!|$ui#O$ui#S$ui#V$ui#Y$ui#[$ui#]$ui#^$ui#o$ui#s$ui#u$ui$b$ui$c$ui$d$ui$g$ui${$ui!Q$ui!^$ui!`$ui~P&fO$m(VOR#laS#laT#laU#laV#laW#laY#la^#laj#lal#lam#la!S#la!U#la!X#la!Z#la![#la!b#la!c#la!e#la!i#la!k#la!n#la!o#la!p#la!q#la!r#la!u#la!|#la#O#la#S#la#V#la#Y#la#[#la#]#la#^#la#o#la#s#la#u#la$R#la$S#la$b#la$c#la$d#la$g#la${#la!Q#la!^#la!`#la~O#x(XO$g$yOR$viS$viT$viU$viV$viW$viY$vi^$vij$vil$vim$vi!S$vi!U$vi!X$vi!Z$vi![$vi!b$vi!c$vi!e$vi!i$vi!k$vi!n$vi!o$vi!p$vi!q$vi!r$vi!u$vi!|$vi#O$vi#S$vi#V$vi#Y$vi#[$vi#]$vi#^$vi#o$vi#s$vi#u$vi$R$vi$S$vi$b$vi$c$vi$d$vi${$vi!Q$vi!^$vi!`$vi~O#x$xO$m(ZO~O#s%}O$d%WO$y%XO~O$g'^O#v$xa~Oj&ROs$bOu$bO#u+OO$cUO$d&QO~O$m(eO~O$g(fO!P$zX~Ok#gi$g#gi~PHpO$o(oO~O#v|i$g|i~P!'xOR_O!S`O!UaO!XbO!bgO!cgO!ecO!idO!keO!nfO!ofO!pfO!qfO!rfO!uiO!|jO#OkO#SlO#VmO#YnO#[qO#]qO#^qO${pO!Q!]a!Z!]a![!]a!^!]a!`!]a#s!]a~P$OO$m(rO~PHpO$m(rO~O!g!aq!P!aq$m!aq~PHpO#x(sO~O$m(tOR#liS#liT#liU#liV#liW#liY#li^#lij#lil#lim#li!S#li!U#li!X#li!Z#li![#li!b#li!c#li!e#li!i#li!k#li!n#li!o#li!p#li!q#li!r#li!u#li!|#li#O#li#S#li#V#li#Y#li#[#li#]#li#^#li#o#li#s#li#u#li$R#li$S#li$b#li$c#li$d#li$g#li${#li!Q#li!^#li!`#li~O$g$yOR$vqS$vqT$vqU$vqV$vqW$vqY$vq^$vqj$vql$vqm$vq!S$vq!U$vq!X$vq!Z$vq![$vq!b$vq!c$vq!e$vq!i$vq!k$vq!n$vq!o$vq!p$vq!q$vq!r$vq!u$vq!|$vq#O$vq#S$vq#V$vq#Y$vq#[$vq#]$vq#^$vq#o$vq#s$vq#u$vq$R$vq$S$vq$b$vq$c$vq$d$vq${$vq!Q$vq!^$vq!`$vq~O#s%}O$d'gO~O$g(fO!P$za~OR_O!S`O!UaO!XbO!bgO!cgO!ecO!idO!keO!nfO!ofO!pfO!qfO!rfO!uiO!|jO#OkO#SlO#VmO#YnO#[qO#]qO#^qO${pO!Q!]i!Z!]i![!]i!^!]i!`!]i#s!]i~P$OOR_O!S`O!UaO!XbO!bgO!cgO!ecO!idO!keO!nfO!ofO!pfO!qfO!rfO!uiO!|jO#OkO#SlO#VmO#YnO#[qO#]qO#^qO${pO!Q!_i!Z!_i![!_i!^!_i!`!_i#s!_i~P$OOR$uyS$uyT$uyU$uyV$uyW$uyY$uy^$uyj$uyl$uym$uy!S$uy!U$uy!X$uy!Z$uy![$uy!b$uy!c$uy!e$uy!i$uy!k$uy!n$uy!o$uy!p$uy!q$uy!r$uy!u$uy!|$uy#O$uy#S$uy#V$uy#Y$uy#[$uy#]$uy#^$uy#o$uy#s$uy#u$uy$b$uy$c$uy$d$uy$g$uy${$uy!Q$uy!^$uy!`$uy~P&fO#x(XO~OR_O!S`O!UaO!XbO!bgO!cgO!ecO!idO!keO!nfO!ofO!pfO!qfO!rfO!uiO!|jO#OkO#SlO#VmO#YnO#[qO#]qO#^qO${pO!Q!_q!Z!_q![!_q!^!_q!`!_q#s!_q~P$OO!g!a!R!P!a!R$m!a!R~PHpO!PfX!gfXZfX[fXkfX$mfX~P!)vOk#tX!P#tX!g#tXZ#tX[#tX$m#tX~P!+}O#u!_O$h!`OcfXdfX#xfX#yfX#zfX#{fX#|fX#}fX$OfX$PfX$QfX$RfX$SfX$TfX$UfX$VfX$WfX$XfX$YfX$ZfX$[fX$]fX$^fX$_fX$`fX$afX$jfX~O_fX`fX~P%2SO_#tX`#tX#u$kX$h$kX~P#4kO#ufX#vfX~P%2SOcaidaikai#xai#yai#zai#{ai#|ai#}ai$gai!Pai!gaiZai[ai$mai~PIYOcbidbikbi#xbi#ybi#zbi#{bi#|bi#}bi$gbi!Pbi!gbiZbi[bi$mbi~PIYO$O)gO$P)gO$Q)gO$j![Ocbidbikbi#xbi#ybi#zbi#{bi#|bi#}bi$Sbi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$gbi!Pbi!gbiZbi[bi$mbi~O$Rbi~P%6{O$R)kO~P%6{O$O)gO$P)gO$Q)gO$R)kO$S)oO$j![Ocbidbikbi#xbi#ybi#zbi#{bi#|bi#}bi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi$abi$gbi!Pbi!gbiZbi[bi$mbi~O$Tbi$Ubi$Vbi$Wbi~P%9dO$T)sO$U)sO$V)sO$W)sO~P%9dO$O)gO$P)gO$Q)gO$R)kO$S)oO$T)sO$U)sO$V)sO$W)sO$X)wO$Y)wO$Z)wO$[)wO$j![Ocbidbikbi#xbi#ybi#zbi#{bi#|bi#}bi$^bi$_bi$`bi$abi$gbi!Pbi!gbiZbi[bi$mbi~O$]bi~P%<UO$]){O~P%<UO$O)gO$P)gO$Q)gO$R)kO$S)oO$T)sO$U)sO$V)sO$W)sO$X)wO$Y)wO$Z)wO$[)wO$]){O$^*PO$j![Ocbidbikbi#xbi#ybi#zbi#{bi#|bi#}bi$`bi$abi$gbi!Pbi!gbiZbi[bi$mbi~O$_bi~P%>mO$_*TO~P%>mO$j![Ocbidbi#xbi#ybi#zbi#{bi#|bi#}bi$abi~O$O)gO$P)gO$Q)gO$R)kO$S)oO$T)sO$U)sO$V)sO$W)sO$X)wO$Y)wO$Z)wO$[)wO$]){O$^*PO$_*TO$`*XOkbi$gbi!Pbi!gbiZbi[bi$mbi~P%AUO_ai`aicaidai#xai#yai#zai#{ai#|ai#}ai~P!:fO_bi`bicbidbi#xbi#ybi#zbi#{bi#|bi#}bi~P!:fO$O)iO$P)iO$Q)iO_bi`bi$Rbi$Sbi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO_bi`bi$Sbi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO_bi`bi$Tbi$Ubi$Vbi$Wbi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO_bi`bi$Xbi$Ybi$Zbi$[bi$]bi$^bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO$X)yO$Y)yO$Z)yO$[)yO_bi`bi$]bi$^bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO$X)yO$Y)yO$Z)yO$[)yO$])}O_bi`bi$^bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO$X)yO$Y)yO$Z)yO$[)yO$])}O$^*RO_bi`bi$_bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO$X)yO$Y)yO$Z)yO$[)yO$])}O$^*RO$_*VO_bi`bi$`bi~P%AUO$O)iO$P)iO$Q)iO$R)mO$S)qO$T)uO$U)uO$V)uO$W)uO$X)yO$Y)yO$Z)yO$[)yO$])}O$^*RO$_*VO$`*ZO_bi`bi~P%AUOz'eO$h'dO~P$JuO$o*wO~O$o*xO~O#v*zO~O#v*{O~O#u+RO~O$j$W$Y$Ul$X#xm$O!|!u$yzs!k!b!c!g!i!e!r!q!p!o!n!V!UR!S#^#]!^!`!X#O#V#S#Yu#[$f$d~",goto:"Nm${PP$|PPPPPP%WPPP%WPPP'g'gPP'g)r,k/f'gPPPP/o2Y4m2Y4pPPP7i4p8W8qP8|9T9^9kPP$|P$|PP$|P;ZPP;^P;^P;bPP$|P;kP$|P;rP;|;rPPPPP<P;rP<_<e<k<t<t;rP;rP<y=P;rP=a;rP=g;rP=mPPP$|=s>V>a>g>m>u>{?o?u?{@R@X@_@i@oPPP@uPAPPPF|PPPPPPPPPPPPPPPPPPPPPPPPPPPI_PPPIbPIeKpPLsPMRMU$|MYMdMjMdMtNQPNTaqOs!q$o'}(q(r)S%kROPQTW]_bcdpsuvyz!O!P!Q!R!S!T!U!V!W!X!Y!Z!_!e!k!q$U$X$o$p$q$x%y&O&Z&[&o&u'm'y'}(X(q(r(s)S)W)X)^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)}*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*]*^*_*y*|+Q%c^OPQTW]_bcdpsuvyz!O!P!Q!R!S!T!U!V!W!X!Y!Z!e!k!q$X$o$p$q$x&O&Z&[&o&u'y'}(X(q(r(s)S)W)X)^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)}*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*]*^*_*y*|+Q%[^OPQT]_bcdpsuvyz!O!P!Q!R!S!T!U!V!W!X!Y!Z!k!q$X$o$p$q$x&O&Z&[&o&u'y'}(X(q(r(s)S)W)X)^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)}*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*]*^*_*y*|Q!fWS$a!e+Qd&U$[${%^&R&v'v(V(Z(o(te+S$d&T&V'a's(e*w*x+O+R#SVOPTWpsu!O!P!Q!R!S!T!U!V!W!X!Y!Z!q$[$d$o$p$x${%^&R&T&V&v'a's'v'}(V(X(Z(e(o(q(r(t)S*w*x+O+Rn|Qy)W)^)b)f)j)n)r)v)z*O*S*W*[t!n]!k&Z&['y)X)`)d)h)l)p)t)x)|*Q*U*Y*^!Q)Y_bcdv$X$q&O&o&u(s)_)c)g)k)o)s)w){*P*T*X*]*yl)[z)a)e)i)m)q)u)y)}*R*V*Z*_*|T*`!e+QQ$V!_Q'n%yR(l'm!WZOPTpsu!O!P!Q!R!S!T!U!V!W!X!Y!Z!q$o$p$x'}(X(q(r)Sn}Qy)W)^)b)f)j)n)r)v)z*O*S*W*[x!o]!e!k&Z&['y)X)`)d)h)l)p)t)x)|*Q*U*Y*^+QQ!saQ$v!v!S)ZW_bcdv$X$q&O&o&u(s)_)c)g)k)o)s)w){*P*T*X*]*ym)]z)a)e)i)m)q)u)y)}*R*V*Z*_*|!WZOPTpsu!O!P!Q!R!S!T!U!V!W!X!Y!Z!q$o$p$x'}(X(q(r)Sn}Qy)W)^)b)f)j)n)r)v)z*O*S*W*[x!o]!e!k&Z&['y)X)`)d)h)l)p)t)x)|*Q*U*Y*^+Q!S)ZW_bcdv$X$q&O&o&u(s)_)c)g)k)o)s)w){*P*T*X*]*ym)]z)a)e)i)m)q)u)y)}*R*V*Z*_*|R$S![%[YOPQT]_bcdpsuvyz!O!P!Q!R!S!T!U!V!W!X!Y!Z!k!q$X$o$p$q$x&O&Z&[&o&u'y'}(X(q(r(s)S)W)X)^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)}*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*]*^*_*y*|d!g$[${%^&R&v'v(V(Z(o(tQ!hWd$b$d&T&V'a's(e*w*x+O+RT$c!e+QS!dW&Rb!g$[${%^&v'v(V(Z(o(ti$b!e$d&T&V'a's(e*w*x+O+Q+R!P!iW!e$[$d${%^&R&T&V&v'a's'v(V(Z(e(o(t*w*x+O+Q+RQ'f%^S(n'v*wT)R(o*xZ'e%^'v(o*w*xQ$i!kQ'z&[R(p'yU$h!k&['yU%[#Z'^(aR'c%]Q!r`Q$m!pS$w!x!yQ%_#^Q%`#`Q%b#bQ%d#dQ%f#fQ&t$tQ'S%QQ'T%RQ'V%SQ'X%TQ'Z%UQ']%VQ'|&mQ(['RQ(h'iQ(i'jQ(j'kQ(k'lQ(x(]Q(y(^Q(z(_R({(`R$s!tT&p$r&rQ!wcQ!ydR(P&oS$u!u!wR&w$waoOs!q$o'}(q(r)SR!{eS!}g#QQ&z$yS'O$|&}R(U&yQ#YiR%P#RX#]j#S#Y%PQ%Y#ZQ(b'^R(|(aV%]#Z'^(aQ#`kR%R#T`'h%a%c%e%g'U'W'Y'[Q)P(fR)V)OQ#blR%S#UQ#dmR%T#VQ#fnR%U#WQsOW#hs$o(q)SQ$o!qQ(q'}R)S(rQuPQyQT#kuyQvPR#nvQzQR#szU$U!_%y'mR%x$UQ%z$VR'o%zQ&O$XQ&y$yQ&}$|Q'm%y`'q&O&y&}'m's'y(a)OQ's&VQ'y&[Q(a'^R)O(fQ$Y!aR&P$YQ&W$_R'u&WQ&]$iR'{&]Q&r$rR(Q&rQ$}#OR'Q$}Q$z!}S&{$z(WR(W&|Q'_%YR(c'_Q(g'hR)Q(garOs!q$o'}(q(r)S`SOs!q$o'}(q(r)SQtPQxQS!]T*yQ!aWU!m]!e+QQ!p_Q!tbQ!ucQ!xdQ#gpQ#juQ#mvQ#pyQ#rzS#t)W*|Q#u!OQ#v!PS#w!Q)gQ#x!RQ#y!SQ#z!TQ#{!UQ#|!VQ#}!WQ$O!XQ$P!YQ$Q!ZU$f!k&['yQ$l)XQ%j)^Q%k)bS%l)f)iQ%m)jQ%n)nQ%o)rQ%p)vQ%q)zQ%r*OQ%s*SQ%t*WQ%u*[Q%|$XQ&_)`Q&`)dQ&a)hQ&b)lQ&c)pQ&d)tQ&e)xQ&f)|Q&g*QQ&h*UQ&i*YQ&j*^Q&l$pQ&m$qQ&x$xQ'p&OQ'x&ZQ(O&oQ(S&uQ(v(XQ)T(sQ*a)_Q*b)cQ*c)kQ*d)oQ*e)sQ*f)wQ*g){Q*h*PQ*i*TQ*j*XQ*k*]Q*l)aQ*m)eQ*n)mQ*o)qQ*p)uQ*q)yQ*r)}Q*s*RQ*t*VQ*u*ZR*v*_%b^OPQTW]_bcdpsuvyz!O!P!Q!R!S!T!U!V!W!X!Y!Z!e!k!q$X$o$p$q$x&O&Z&[&o&u'y'}(X(q(r(s)S)W)X)^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)}*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*]*^*_*y*|+QX$T!_$U%y'mR$W!_R!bW%c[OPQTW]_bcdpsuvyz!O!P!Q!R!S!T!U!V!W!X!Y!Z!e!k!q$X$o$p$q$x&O&Z&[&o&u'y'}(X(q(r(s)S)W)X)^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)}*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*]*^*_*y*|+QS!jW&R[$_!e$d&T+O+Q+RQ&S$[Q&|${Y'e%^'v(o*w*xQ't&VQ(T&vQ(d'aQ(m'sQ(u(VQ(w(ZQ(}(eR)U(tS$`!e&TQ&Y$dS*}+O+QR+P+RR$j!kT&q$r&rahOs!q$o'}(q(r)SQ#PgR%O#QS#Og#QQ'P$|R(Y&}Q#^jQ%Q#SQ%V#YR'R%PR%Z#ZQ'i%aQ'j%cQ'k%eQ'l%gQ(]'UQ(^'WQ(_'YR(`'[",nodeNames:"\u26a0 Swift WhileStatement While NumericLiteral BooleanLiteral NilLiteral StaticStringLiteral MultilineStaticStringLiteral InterpolatedStringLiteral InterpolatedStringLiteralStart InterpolatedStringLiteralEnd InterpolatedStringLiteralMiddle MultilineInterpolatedStringLiteral MultilineInterpolatedStringLiteralStart MultilineInterpolatedStringLiteralEnd MultilineInterpolatedStringLiteralMiddle AssignmentExpression BinaryExpression ClosedRange HalfOpenRange UnaryExpression AttributeExpression AttributeName AttributeArgument ArrayExpression braceStart braceEnd Super Self VariableName MemberExpression PropertyName CallExpression ArrayType SelfType Optional AnyType TypeName DictionaryType ClosureType ReturnType VoidType VoidType CallArgument ArgumentName Block bracketStart bracketEnd RepeatStatement Repeat ForStatement For In SwitchStatement Switch SwitchBlock Comment MultilineComment SwitchDefault Default SwitchCase Case VariableAssignmentExpression Var Let GuardStatement Guard ElseStatement Else IfStatement If ImportDeclaration Import ModuleName VariableDeclaration Public Open Internal Private FilePrivate VariableDeclaredName FunctionDeclaration Func FunctionName ArgumentList Argument ArgumentLabel AnyArgumentLabel InitDeclaration Init ExtensionDeclaration Extension ExtensionName ProtocolName ClassDeclaration Class ClassName StructDeclaration Struct StructName EnumDeclaration Enum EnumName DocComment Continue Break ReturnExpression",maxTerm:181,nodeProps:[[Ks.openedBy,26,"braceEnd",27,"braceStart",47,"bracketEnd",48,"bracketStart"]],skippedNodes:[0],repeatNodeCount:15,tokenData:"3:|~R#yOP)rXY)rYZ*WZ[)r[])r]^*Wpq*]qr*srs+[st@Rtu!>Ouv!>Tvw!>dwx!>Oxy!>syz!?Qz{#&b{|#&q|}#'Q}!O#'V!O!P#'n!P!Q#(]!Q!R#*b!R![#._![!]#.u!]!^!>O!^!_#.|!_!`#/]!`!a#/t!a!b#0T!b!c#0[!c!d#0c!d!u#5_!u!v#DT!v!x#5_!x!y$)o!y!}#5_!}#O$=Z#O#P!>O#P#Q$=b#Q#R$=i#R#S$=p#S#T!>O#T#U#5_#U#V$Bz#V#W%-_#W#X&Hy#X#Y'=U#Y#Z)*v#Z#[+1O#[#]#5_#]#^+Ic#^#`#5_#`#a-;}#a#b#5_#b#c-Jm#c#d.+]#d#e.>w#e#f#5_#f#g/Kp#g#h0;P#h#i27d#i#j#5_#j#k2A[#k#l3 w#l#o#5_#o#p3:_#p#q3:f#q#r3:u#r#s!>O$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?Cl?DR#5_?DT?Mn#5_~)wT#q~OP)rXY)rZ[)r[])rpq)r~*]O#s~~*dT#q~$fSOP)rXY)rZ[)r[])rpq)r_*zP$bZ$fS!_!`*}Z+SP$XZ!_!`+VZ+[O$ZZ~+aV$fSOY+vZ]+v^r+vrs5as#O+v#O#P,e#P~+v~+yVOY+vZ]+v^r+vrs,`s#O+v#O#P,e#P~+v~,eOV~~,hYrs+vst-Wwx+vxy5[!Q!R+v#O#P+v#b#c+v#f#g+v#h#i+v#i#j-s~-ZWrs+vwx+v!Q!R+v#O#P+v#b#c+v#f#g+v#h#i+v#i#j-s~-vP#o#p-y~-|[!Q!R.r!R!S.r!S!T.r!T!U.r!U!V.r!V!W.r!W!X.r!X!Y.r!Y!Z.r!Z![.r!c!i.r#T#Z.r~.u]!Q!R/n!R!S/n!S!T/n!T!U/n!U!V/n!V!W/n!W!X/n!X!Y/n!Y!Z/n!Z![/n!c!i/n#T#Z/n#q#r+v~/q]!Q!R0j!R!S0j!S!T0j!T!U0j!U!V0j!V!W0j!W!X0j!X!Y0j!Y!Z0j!Z![0j!c!i0j#T#Z0j#q#r+v~0m]!Q!R1f!R!S1f!S!T1f!T!U1f!U!V1f!V!W1f!W!X1f!X!Y1f!Y!Z1f!Z![1f!c!i1f#T#Z1f#q#r+v~1i]!Q!R2b!R!S2b!S!T2b!T!U2b!U!V2b!V!W2b!W!X2b!X!Y2b!Y!Z2b!Z![2b!c!i2b#T#Z2b#q#r+v~2e]!Q!R3^!R!S3^!S!T3^!T!U3^!U!V3^!V!W3^!W!X3^!X!Y3^!Y!Z3^!Z![3^!c!i3^#T#Z3^#q#r+v~3a]!Q!R4Y!R!S4Y!S!T4Y!T!U4Y!U!V4Y!V!W4Y!W!X4Y!X!Y4Y!Y!Z4Y!Z![4Y!c!i4Y#T#Z4Y#q#r+v~4]]!Q!R5U!R!S5U!S!T5U!T!U5U!U!V5U!V!W5U!W!X5U!X!Y5U!Y!Z5U!Z![5U!c!i5U#T#Z5U#q#r+v~5XP#q#r+v~5aOY~~5fPV~rs5i~5lTOr5irs5{s#O5i#O#P6^#P~5i~6OPrs6R~6UPrs6X~6^OW~~6a^XY7]YZ5i]^5ipq7]rs5ist7lwx5ixy?|!Q!R5i#O#P5i#b#c5i#f#g5i#h#i5i#i#j8e~7`SXY7]YZ5i]^5ipq7]~7o[XY7]YZ5i]^5ipq7]rs5iwx5i!Q!R5i#O#P5i#b#c5i#f#g5i#h#i5i#i#j8e~8hP#o#p8k~8n[!Q!R9d!R!S9d!S!T9d!T!U9d!U!V9d!V!W9d!W!X9d!X!Y9d!Y!Z9d!Z![9d!c!i9d#T#Z9d~9g]!Q!R:`!R!S:`!S!T:`!T!U:`!U!V:`!V!W:`!W!X:`!X!Y:`!Y!Z:`!Z![:`!c!i:`#T#Z:`#q#r5i~:c]!Q!R;[!R!S;[!S!T;[!T!U;[!U!V;[!V!W;[!W!X;[!X!Y;[!Y!Z;[!Z![;[!c!i;[#T#Z;[#q#r5i~;_]!Q!R<W!R!S<W!S!T<W!T!U<W!U!V<W!V!W<W!W!X<W!X!Y<W!Y!Z<W!Z![<W!c!i<W#T#Z<W#q#r5i~<Z]!Q!R=S!R!S=S!S!T=S!T!U=S!U!V=S!V!W=S!W!X=S!X!Y=S!Y!Z=S!Z![=S!c!i=S#T#Z=S#q#r5i~=V]!Q!R>O!R!S>O!S!T>O!T!U>O!U!V>O!V!W>O!W!X>O!X!Y>O!Y!Z>O!Z![>O!c!i>O#T#Z>O#q#r5i~>R]!Q!R>z!R!S>z!S!T>z!T!U>z!U!V>z!V!W>z!W!X>z!X!Y>z!Y!Z>z!Z![>z!c!i>z#T#Z>z#q#r5i~>}]!Q!R?v!R!S?v!S!T?v!T!U?v!U!V?v!V!W?v!W!X?v!X!Y?v!Y!Z?v!Z![?v!c!i?v#T#Z?v#q#r5i~?yP#q#r5i~@RO^~~@WQ$fSrs@^st!=u~@aVOY@vZ]@v^r@vrs!%_s#O@v#O#PBj#P~@v~@yVOY@vZ]@v^r@vrsA`s#O@v#O#PBj#P~@v~AcWOY@vZ]@v^r@vrsA`stA{t#O@v#O#PBj#P~@v~BQWV~OY@vZ]@v^r@vrsA`stA{t#O@v#O#PBj#P~@v~BmcOY@vZ]@v^r@vrsA`stCxtw@vwx@vx!Q@v!Q!R@v!R#O@v#O#PBj#P#b@v#b#c@v#c#f@v#f#g@v#g#h@v#h#i@v#i#jET#j~@v~C{bOY@vZ]@v^r@vrsA`sw@vwx@vx!Q@v!Q!R@v!R#O@v#O#PBj#P#b@v#b#c@v#c#f@v#f#g@v#g#h@v#h#i@v#i#jET#j~@v~EWXOY@vZ]@v^r@vrsA`s#O@v#O#PBj#P#o@v#o#pEs#p~@v~EvfOY@vZ]@v^r@vrsA`s!Q@v!Q!RG[!R!SG[!S!TG[!T!UG[!U!VG[!V!WG[!W!XG[!X!YG[!Y!ZG[!Z![G[![!c@v!c!iG[!i#O@v#O#PBj#P#T@v#T#ZG[#Z~@v~G_hOY@vZ]@v^r@vrsA`s!Q@v!Q!RHy!R!SHy!S!THy!T!UHy!U!VHy!V!WHy!W!XHy!X!YHy!Y!ZHy!Z![Hy![!c@v!c!iHy!i#O@v#O#PBj#P#T@v#T#ZHy#Z#q@v#q#r@v#r~@v~H|hOY@vZ]@v^r@vrsA`s!Q@v!Q!RJh!R!SJh!S!TJh!T!UJh!U!VJh!V!WJh!W!XJh!X!YJh!Y!ZJh!Z![Jh![!c@v!c!iJh!i#O@v#O#PBj#P#T@v#T#ZJh#Z#q@v#q#r@v#r~@v~JkhOY@vZ]@v^r@vrsA`s!Q@v!Q!RLV!R!SLV!S!TLV!T!ULV!U!VLV!V!WLV!W!XLV!X!YLV!Y!ZLV!Z![LV![!c@v!c!iLV!i#O@v#O#PBj#P#T@v#T#ZLV#Z#q@v#q#r@v#r~@v~LYhOY@vZ]@v^r@vrsA`s!Q@v!Q!RMt!R!SMt!S!TMt!T!UMt!U!VMt!V!WMt!W!XMt!X!YMt!Y!ZMt!Z![Mt![!c@v!c!iMt!i#O@v#O#PBj#P#T@v#T#ZMt#Z#q@v#q#r@v#r~@v~MwhOY@vZ]@v^r@vrsA`s!Q@v!Q!R! c!R!S! c!S!T! c!T!U! c!U!V! c!V!W! c!W!X! c!X!Y! c!Y!Z! c!Z![! c![!c@v!c!i! c!i#O@v#O#PBj#P#T@v#T#Z! c#Z#q@v#q#r@v#r~@v~! fhOY@vZ]@v^r@vrsA`s!Q@v!Q!R!#Q!R!S!#Q!S!T!#Q!T!U!#Q!U!V!#Q!V!W!#Q!W!X!#Q!X!Y!#Q!Y!Z!#Q!Z![!#Q![!c@v!c!i!#Q!i#O@v#O#PBj#P#T@v#T#Z!#Q#Z#q@v#q#r@v#r~@v~!#ThOY@vZ]@v^r@vrsA`s!Q@v!Q!R!$o!R!S!$o!S!T!$o!T!U!$o!U!V!$o!V!W!$o!W!X!$o!X!Y!$o!Y!Z!$o!Z![!$o![!c@v!c!i!$o!i#O@v#O#PBj#P#T@v#T#Z!$o#Z#q@v#q#r@v#r~@v~!$rXOY@vZ]@v^r@vrsA`s#O@v#O#PBj#P#q@v#q#r@v#r~@v~!%bWOY@vZ]@v^r@vrs!%zstA{t#O@v#O#PBj#P~@v~!%}YOY@vYZ!&mZ]@v]^!&m^r@vrsA`stA{t#O@v#O#PBj#P~@v~!&pVOY!'VZ]!'V^r!'Vrs!+as#O!'V#O#P!(a#P~!'V~!'YVOY!'VYZ!'oZ]!'V]^!'o^#O!'V#O#P!(a#P~!'V~!'rPrs!'u~!'xPrs!'{~!(OPrs!(R~!(UPst!(X~!(^PW~st!(X~!(dhOX!'VXY!*OYZ!*qZ]!'V]^!*q^p!'Vpq!*Oqr!'Vrs!'Vst!.Ptw!'Vwx!'Vx!Q!'V!Q!R!'V!R#O!'V#O#P!(a#P#b!'V#b#c!'V#c#f!'V#f#g!'V#g#h!'V#h#i!'V#i#j!/k#j~!'V~!*RYOX!'VXY!*OYZ!*qZ]!'V]^!*q^p!'Vpq!*Oq#O!'V#O#P!(a#P~!'V~!*tXOY!'VYZ!'oZ]!'V]^!'o^r!'Vrs!+as#O!'V#O#P!(a#P~!'V~!+dXOY!'VYZ!'oZ]!'V]^!'o^r!'Vrs!,Ps#O!'V#O#P!(a#P~!'V~!,SXOY!'VYZ!'oZ]!'V]^!'o^r!'Vrs!,os#O!'V#O#P!(a#P~!'V~!,rXOY!'VYZ!'oZ]!'V]^!'o^s!'Vst!-_t#O!'V#O#P!(a#P~!'V~!-dXW~OY!'VYZ!'oZ]!'V]^!'o^s!'Vst!-_t#O!'V#O#P!(a#P~!'V~!.SgOX!'VXY!*OYZ!*qZ]!'V]^!*q^p!'Vpq!*Oqr!'Vrs!'Vsw!'Vwx!'Vx!Q!'V!Q!R!'V!R#O!'V#O#P!(a#P#b!'V#b#c!'V#c#f!'V#f#g!'V#g#h!'V#h#i!'V#i#j!/k#j~!'V~!/nXOY!'VYZ!'oZ]!'V]^!'o^#O!'V#O#P!(a#P#o!'V#o#p!0Z#p~!'V~!0^fOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!1r!R!S!1r!S!T!1r!T!U!1r!U!V!1r!V!W!1r!W!X!1r!X!Y!1r!Y!Z!1r!Z![!1r![!c!'V!c!i!1r!i#O!'V#O#P!(a#P#T!'V#T#Z!1r#Z~!'V~!1uhOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!3a!R!S!3a!S!T!3a!T!U!3a!U!V!3a!V!W!3a!W!X!3a!X!Y!3a!Y!Z!3a!Z![!3a![!c!'V!c!i!3a!i#O!'V#O#P!(a#P#T!'V#T#Z!3a#Z#q!'V#q#r!'V#r~!'V~!3dhOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!5O!R!S!5O!S!T!5O!T!U!5O!U!V!5O!V!W!5O!W!X!5O!X!Y!5O!Y!Z!5O!Z![!5O![!c!'V!c!i!5O!i#O!'V#O#P!(a#P#T!'V#T#Z!5O#Z#q!'V#q#r!'V#r~!'V~!5RhOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!6m!R!S!6m!S!T!6m!T!U!6m!U!V!6m!V!W!6m!W!X!6m!X!Y!6m!Y!Z!6m!Z![!6m![!c!'V!c!i!6m!i#O!'V#O#P!(a#P#T!'V#T#Z!6m#Z#q!'V#q#r!'V#r~!'V~!6phOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!8[!R!S!8[!S!T!8[!T!U!8[!U!V!8[!V!W!8[!W!X!8[!X!Y!8[!Y!Z!8[!Z![!8[![!c!'V!c!i!8[!i#O!'V#O#P!(a#P#T!'V#T#Z!8[#Z#q!'V#q#r!'V#r~!'V~!8_hOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!9y!R!S!9y!S!T!9y!T!U!9y!U!V!9y!V!W!9y!W!X!9y!X!Y!9y!Y!Z!9y!Z![!9y![!c!'V!c!i!9y!i#O!'V#O#P!(a#P#T!'V#T#Z!9y#Z#q!'V#q#r!'V#r~!'V~!9|hOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!;h!R!S!;h!S!T!;h!T!U!;h!U!V!;h!V!W!;h!W!X!;h!X!Y!;h!Y!Z!;h!Z![!;h![!c!'V!c!i!;h!i#O!'V#O#P!(a#P#T!'V#T#Z!;h#Z#q!'V#q#r!'V#r~!'V~!;khOY!'VYZ!'oZ]!'V]^!'o^!Q!'V!Q!R!=V!R!S!=V!S!T!=V!T!U!=V!U!V!=V!V!W!=V!W!X!=V!X!Y!=V!Y!Z!=V!Z![!=V![!c!'V!c!i!=V!i#O!'V#O#P!(a#P#T!'V#T#Z!=V#Z#q!'V#q#r!'V#r~!'V~!=YXOY!'VYZ!'oZ]!'V]^!'o^#O!'V#O#P!(a#P#q!'V#q#r!'V#r~!'V~!=xQrs@^st!=uS!>TO$fS_!>[P$PZ$fS!_!`!>_Z!>dO#}Z_!>kP$_Z$fSvw!>nZ!>sO$`Z~!>xP#u~yz!>{~!?QO$h~_!?VX#v[OY!?rYZ!@bZ]!?r]^!@b^r!?rrs!Jrs#O!?r#O#P!Jz#P~!?rR!?uXOY!?rYZ!@bZ]!?r]^!@b^r!?rrs!Jrs#O!?r#O#P!Jz#P~!?rQ!@eTOr!@brs!@ts#O!@b#O#P!AV#P~!@bQ!@wPrs!@zQ!@}Prs!AQQ!AVO_QQ!AY]XY!BRYZ!@b]^!@bpq!BRrs!@bst!Bbwx!@b!Q!R!@b#O#P!@b#b#c!@b#f#g!@b#h#i!@b#i#j!CZQ!BUSXY!BRYZ!@b]^!@bpq!BRQ!Be[XY!BRYZ!@b]^!@bpq!BRrs!@bwx!@b!Q!R!@b#O#P!@b#b#c!@b#f#g!@b#h#i!@b#i#j!CZQ!C^P#o#p!CaQ!Cd[!Q!R!DY!R!S!DY!S!T!DY!T!U!DY!U!V!DY!V!W!DY!W!X!DY!X!Y!DY!Y!Z!DY!Z![!DY!c!i!DY#T#Z!DYQ!D]]!Q!R!EU!R!S!EU!S!T!EU!T!U!EU!U!V!EU!V!W!EU!W!X!EU!X!Y!EU!Y!Z!EU!Z![!EU!c!i!EU#T#Z!EU#q#r!@bQ!EX]!Q!R!FQ!R!S!FQ!S!T!FQ!T!U!FQ!U!V!FQ!V!W!FQ!W!X!FQ!X!Y!FQ!Y!Z!FQ!Z![!FQ!c!i!FQ#T#Z!FQ#q#r!@bQ!FT]!Q!R!F|!R!S!F|!S!T!F|!T!U!F|!U!V!F|!V!W!F|!W!X!F|!X!Y!F|!Y!Z!F|!Z![!F|!c!i!F|#T#Z!F|#q#r!@bQ!GP]!Q!R!Gx!R!S!Gx!S!T!Gx!T!U!Gx!U!V!Gx!V!W!Gx!W!X!Gx!X!Y!Gx!Y!Z!Gx!Z![!Gx!c!i!Gx#T#Z!Gx#q#r!@bQ!G{]!Q!R!Ht!R!S!Ht!S!T!Ht!T!U!Ht!U!V!Ht!V!W!Ht!W!X!Ht!X!Y!Ht!Y!Z!Ht!Z![!Ht!c!i!Ht#T#Z!Ht#q#r!@bQ!Hw]!Q!R!Ip!R!S!Ip!S!T!Ip!T!U!Ip!U!V!Ip!V!W!Ip!W!X!Ip!X!Y!Ip!Y!Z!Ip!Z![!Ip!c!i!Ip#T#Z!Ip#q#r!@bQ!Is]!Q!R!Jl!R!S!Jl!S!T!Jl!T!U!Jl!U!V!Jl!V!W!Jl!W!X!Jl!X!Y!Jl!Y!Z!Jl!Z![!Jl!c!i!Jl#T#Z!Jl#q#r!@bQ!JoP#q#r!@bR!JwPZPrs!@zR!J}^XY!BRYZ!@b]^!@bpq!BRrs!?rst!Kywx!?rxy#&Z!Q!R!?r#O#P!?r#b#c!?r#f#g!?r#h#i!?r#i#j!LrR!K|[XY!BRYZ!@b]^!@bpq!BRrs!?rwx!?r!Q!R!?r#O#P!?r#b#c!?r#f#g!?r#h#i!?r#i#j!LrR!LuP#o#p!LxR!L{[!Q!R!Mq!R!S!Mq!S!T!Mq!T!U!Mq!U!V!Mq!V!W!Mq!W!X!Mq!X!Y!Mq!Y!Z!Mq!Z![!Mq!c!i!Mq#T#Z!MqR!Mt]!Q!R!Nm!R!S!Nm!S!T!Nm!T!U!Nm!U!V!Nm!V!W!Nm!W!X!Nm!X!Y!Nm!Y!Z!Nm!Z![!Nm!c!i!Nm#T#Z!Nm#q#r!?rR!Np]!Q!R# i!R!S# i!S!T# i!T!U# i!U!V# i!V!W# i!W!X# i!X!Y# i!Y!Z# i!Z![# i!c!i# i#T#Z# i#q#r!?rR# l]!Q!R#!e!R!S#!e!S!T#!e!T!U#!e!U!V#!e!V!W#!e!W!X#!e!X!Y#!e!Y!Z#!e!Z![#!e!c!i#!e#T#Z#!e#q#r!?rR#!h]!Q!R##a!R!S##a!S!T##a!T!U##a!U!V##a!V!W##a!W!X##a!X!Y##a!Y!Z##a!Z![##a!c!i##a#T#Z##a#q#r!?rR##d]!Q!R#$]!R!S#$]!S!T#$]!T!U#$]!U!V#$]!V!W#$]!W!X#$]!X!Y#$]!Y!Z#$]!Z![#$]!c!i#$]#T#Z#$]#q#r!?rR#$`]!Q!R#%X!R!S#%X!S!T#%X!T!U#%X!U!V#%X!V!W#%X!W!X#%X!X!Y#%X!Y!Z#%X!Z![#%X!c!i#%X#T#Z#%X#q#r!?rR#%[]!Q!R#&T!R!S#&T!S!T#&T!T!U#&T!U!V#&T!V!W#&T!W!X#&T!X!Y#&T!Y!Z#&T!Z![#&T!c!i#&T#T#Z#&T#q#r!?rR#&WP#q#r!?rR#&bO[P`Q_#&iP$QZ$fS!_!`#&lZ#&qO#|Z_#&xP$RZ$fS!_!`#&{Z#'QO#zZ~#'VO$g~o#'^Q$SZ$fS!_!`#'d!`!a#'iZ#'iO#{Z`#'nO$o`_#'uP$jZ$fS!O!P#'xZ#'{Q!O!P#(R!^!_#(WZ#(WOcZZ#(]OdZ~#(dR$OZ$fSz{#(m!P!Q#)b!_!`#*]P#(pROz#(mz{#(y{~#(mP#(|TOz#(mz{#(y{!P#(m!P!Q#)]!Q~#(mP#)bO![P~#)gS!Z~OY#)sZ!P#)s!P!Q#*O!Q~#)s~#)xQ!Z~OY#)sZ~#)s~#*VQ#[P!Z~OY#*OZ~#*OZ#*bO#yZ~#*iWS~$fS!O!P#+R!Q![#,X!g!h#+j#R#S#,X#U#V#,m#X#Y#+j#c#d#-X#l#m#-m~#+UP!Q![#+X~#+^SS~!Q![#+X!g!h#+j#R#S#+X#X#Y#+j~#+mR{|#+v}!O#+v!Q![#+|~#+yP!Q![#+|~#,RQS~!Q![#+|#R#S#+|~#,^TS~!O!P#+R!Q![#,X!g!h#+j#R#S#,X#X#Y#+j~#,pR!Q!R#,y!R!S#,y#R#S#,y~#-ORS~!Q!R#,y!R!S#,y#R#S#,y~#-[Q!Q!Y#-b#R#S#-b~#-gQS~!Q!Y#-b#R#S#-b~#-pS!Q![#-|!c!i#-|#R#S#-|#T#Z#-|~#.RSS~!Q![#-|!c!i#-|#R#S#-|#T#Z#-|~#.fTS~$fS!O!P#+R!Q![#,X!g!h#+j#R#S#,X#X#Y#+j]#.|O$mX$fS_#/TP$TZ$fS!_!`#/WZ#/]O$UZ_#/dP#xZ$fS!_!`#/gZ#/lP$YZ!_!`#/oZ#/tO$[Z_#/{P$VZ$fS!_!`#0OZ#0TO$WZ]#0[OtX$fS_#0cO$cZ$fS_#0j!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c#:a#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__#5f!i$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__#:WP;=`<%l#5__#:^P;=`<%j#5__#:h!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#m#5_#m#n#?]#n#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__#?f!iuX$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__#D[!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y#IP#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__#IW!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a#M{#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__#NS!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#Y#5_#Y#Z$$w#Z#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$%Q!isX$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$)v!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#c#5_#c#d$.k#d#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$.r!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^$3g#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$3n!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#W#5_#W#X$8c#X#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$8l!izP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$=bOjZ$fST$=iOkP$fS_$=pO$^Z$fS_$=w!n$fS$dZOP$BuXY$BuZ[$Bu[]$Bupq$Bu!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_X$BzO$yX_$CR!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g$Gv#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$G}!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y$Lr#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__$Ly!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U%#k#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%#r!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#_#5_#_#`%(g#`#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%(p!i#^P$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%-f!n$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U%2d#U#`#5_#`#a%AS#a#c#5_#c#d&&k#d#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%2k!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#g#5_#g#h%7`#h#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%7g!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y%<[#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%<e!i!`P$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%AZ!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U%E{#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%FS!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#g#5_#g#h%Jw#h#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__%KO!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#g#5_#g#h& s#h#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__& |!i#SP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&&r!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c&+g#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&+n!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i&0c#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&0j!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^&5_#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&5f!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c&:Z#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&:b!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#i#5_#i#j&?V#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&?^!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y&DR#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&D[!i#]P$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&IQ!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y&Mu#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__&M|!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#Y#5_#Y#Z'$q#Z#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'$x!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U')j#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__')q!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#i#5_#i#j'.f#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'.m!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a'3b#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'3i!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i'8^#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'8g!i!^P$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'=]!o$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a'B^#a#b#5_#b#c(!|#c#l#5_#l#m(1l#m#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'Be!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#g#5_#g#h'GY#h#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'Ga!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y'LU#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__'L_!i!gP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(#T!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#i#5_#i#j('x#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__((P!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#a#5_#a#b(,t#b#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(,}!i#YP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(1s!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i(6h#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(6o!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y(;d#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(;k!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c(@`#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(@g!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#g#5_#g#h(E[#h#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(Ec!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^(JW#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__(J_!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#c#5_#c#d) S#d#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__) Z!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c)&O#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__)&X!i#OP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~)*}!p$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U)0R#U#]#5_#]#^)Cm#^#c#5_#c#d*Fl#d#i#5_#i#j+!`#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~)0Y!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a)4}#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~)5U!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#g#5_#g#h)9y#h#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~):Q!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y)>u#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~)?O!iT~$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__)Ct!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a)Hi#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__)Hp!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y)Me#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__)Ml!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#d#5_#d#e*$a#e#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*$h!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g*)]#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*)d!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^*.X#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*.`!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#j#5_#j#k*3T#k#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*3[!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U*7|#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*8T!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i*<x#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*=P!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y*At#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*A}!i!rP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*Fs!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g*Kh#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__*Kq!i!UP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+!g!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c+'[#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+'c!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#V#5_#V#W+,W#W#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+,a!i!uP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+1V!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#i#5_#i#j+5z#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+6R!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U+:s#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+:z!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g+?o#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+?v!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#W#5_#W#X+Dk#X#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+Dt!i!eP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+Ij!n$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#Y#5_#Y#Z+Nh#Z#a#5_#a#b,%`#b#c,=v#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__+Nq!i!iP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,%g!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#d#5_#d#e,*[#e#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,*c!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#c#5_#c#d,/W#d#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,/_!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g,4S#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,4Z!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i,9O#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,9X!i!kP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,>P!m!VQ$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^,Bz#^#h#5_#h#i,Ln#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,CR!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i,Gv#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,HP!i!|P$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__,Lu!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y-#j#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-#q!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g-(f#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-(m!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c--b#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__--i!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U-2Z#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-2b!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a-7V#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-7`!i!pP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-<U!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y-@y#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-AQ!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i-Eu#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__-FO!i!cP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~-Jt!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^. i#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~. p!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a.&e#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~.&n!iU~$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.+d!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#d#5_#d#e.0X#e#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.0`!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y.5T#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.5[!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#b#5_#b#c.:P#c#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.:Y!i!oP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.?O!m$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g.Cy#g#i#5_#i#j/3Y#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.DQ!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^.Hu#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.H|!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#j#5_#j#k.Mq#k#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__.Mx!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U/$j#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/$q!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i/)f#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/)m!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y/.b#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/.k!i!qP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/3a!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U#5_#U#V/8U#V#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/8]!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a/=Q#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/=X!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^/A|#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/BT!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#V#5_#V#W/Fx#W#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/GR!i!nP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__/Kw!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y0!l#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0!s!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#d#5_#d#e0'h#e#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0'o!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y0,d#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0,k!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U01]#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__01d!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i06X#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__06b!i!SP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0;W!p$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y0@[#Y#h#5_#h#i0Nz#i#j19b#j#k#5_#k#l1L|#l#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0@c!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a0EW#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0E_!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#Y#5_#Y#Z0JS#Z#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__0J]!imZ$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1 R!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g1%v#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1%}!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#i#5_#i#j1*r#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1*y!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#V#5_#V#W1/n#W#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1/u!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i14j#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__14s!i#VP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__19i!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#d#5_#d#e1>^#e#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1>e!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y1CY#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1Ca!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g1HU#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1H_!ilZ$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__1MT!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^2#x#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__2$P!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#h#5_#h#i2(t#i#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__2({!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#V#5_#V#W2-p#W#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__2-w!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#[#5_#[#]22l#]#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__22u!i!XP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~27k!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g2<`#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_~2<g!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#i#5_#i#j)9y#j#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__2Ac!j$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#U2FT#U#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__2F[!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#f#5_#f#g2KP#g#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__2KY!i!bP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__3!O!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#[#5_#[#]3&s#]#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__3&z!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#]#5_#]#^3+o#^#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__3+v!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#`#5_#`#a30k#a#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__30r!k$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#X#5_#X#Y35g#Y#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5__35p!iRP$fS$dZ!Q![#5_!c!}#5_#R#S#5_#T#o#5_$n$o#5_$p$q#5_$s$t#5_$u$v#5_$x$|#5_$}%R#5_%S%V#5_%W%o#5_%p&a#5_&b&j#5_&j1p#5_1p4U#5_4U#BY#5_#BZ#Jx#5_#Jy$<j#5_$<j$=|#5_$=|$IS#5_$I_$Ib#5_$JO$JT#5_$Je$Jg#5_$Jz$J{#5_$KW$Kh#5_$Kh$Ml#5_$Ml$Nn#5_$Nn%#t#5_%3d%6z#5_%Dl%E[#5_&/x&;O#5_&=t&FU#5_&FY&F^#5_&Fw&GW#5_&GX&Gh#5_&Gh;'S#5_;'S;(e#:T;(e;(f#:Z;(f;)w#:T;)w;)x#:Z;)x;+Z#:T;+Z;+[#:Z;+[;,m#:T;,m;,n#:Z;,n;.P#:T;.P;.Q#:Z;.Q;/c#:T;/c;/d#:Z;/d;0u#:T;0u;0v#:Z;0v;2X#:T;2X;2Y#:Z;2Y;3k#:T;3k;3l#:Z;3l;4}#:T;4};5O#:Z;5O;6a#:T;6a;6b#:Z;6b;7s#:T;7s;7t#:Z;7t;9V#:T;9V;9W#:Z;9W;:i#:T;:i;:j#:Z?&r?>`#5_?>b?Ah#5_?BY?C[#5_?C[?Cl#5_?Cl?DR#5_?DT?Mn#5_e3:fO!Pa$fS_3:mP$]Z$fS#p#q3:pZ3:uO$aZT3:|O!QP$fS",tokenizers:[0,1,2,3,4],topRules:{Swift:[0,1]},specialized:[{term:158,get:t=>fp[t]||-1}],tokenPrec:10702}),pp=Mo.define({parser:_p.configure({props:[_u({NilLiteral:Iu.null,BooleanLiteral:Iu.bool,NumericLiteral:Iu.number,StaticStringLiteral:Iu.string,MultilineStaticStringLiteral:Iu.special(Iu.string),InterpolatedStringLiteralStart:Iu.special(Iu.string),InterpolatedStringLiteralMiddle:Iu.special(Iu.string),InterpolatedStringLiteralEnd:Iu.special(Iu.string),MultilineInterpolatedStringLiteral:Iu.special(Iu.string),MultilineInterpolatedStringLiteralStart:Iu.special(Iu.string),MultilineInterpolatedStringLiteralMiddle:Iu.special(Iu.string),MultilineInterpolatedStringLiteralEnd:Iu.special(Iu.string),DocComment:Iu.docComment,Comment:Iu.lineComment,MultilineComment:Iu.blockComment,ReturnType:Iu.name,VariableName:Iu.variableName,VariableDeclaredName:Iu.definition(Iu.variableName),ArgumentName:Iu.name,ArgumentLabel:Iu.name,CallExpression:Iu.function(Iu.propertyName),MemberExpression:Iu.function(Iu.propertyName),PropertyName:Iu.function(Iu.propertyName),Super:Iu.self,Self:Iu.self,Class:Iu.definitionKeyword,Extension:Iu.definitionKeyword,Struct:Iu.definitionKeyword,Enum:Iu.definitionKeyword,SelfType:Iu.operatorKeyword,AnyType:Iu.operatorKeyword,VoidType:Iu.operatorKeyword,ProtocolName:Iu.typeName,TypeName:Iu.typeName,ReturnType:Iu.typeName,ReturnExpression:Iu.moduleKeyword,ModuleName:Iu.definition(Iu.variableName),AttributeName:Iu.annotation,Switch:Iu.controlKeyword,Case:Iu.controlKeyword,Default:Iu.controlKeyword,Break:Iu.controlKeyword,Continue:Iu.controlKeyword,Repeat:Iu.controlKeyword,While:Iu.controlKeyword,For:Iu.controlKeyword,Do:Iu.controlKeyword,In:Iu.controlKeyword,Public:Iu.moduleKeyword,Open:Iu.moduleKeyword,Internal:Iu.moduleKeyword,Private:Iu.moduleKeyword,FilePrivate:Iu.moduleKeyword,Guard:Iu.moduleKeyword,If:Iu.moduleKeyword,Else:Iu.moduleKeyword,Func:Iu.moduleKeyword,Import:Iu.moduleKeyword,Var:Iu.moduleKeyword,Let:Iu.moduleKeyword,"( )":Iu.paren,"[ ]":Iu.squareBracket,"{ }":Iu.brace,".":Iu.derefOperator,", ;":Iu.separator,ClosedRange:Iu.operator,HalfOpenRange:Iu.operator,divisionOperator:Iu.arithmeticOperator,addOperator:Iu.arithmeticOperator,subtractOperator:Iu.arithmeticOperator,multiplyOperator:Iu.arithmeticOperator,modulusOperator:Iu.arithmeticOperator,invertOperator:Iu.arithmeticOperator,divisionAssignmentOperator:Iu.updateOperator,addAssignmentOperator:Iu.updateOperator,subtractAssignmentOperator:Iu.updateOperator,multiplyAssignmentOperator:Iu.updateOperator,modulusAssignmentOperator:Iu.updateOperator,greatherThanOperator:Iu.compareOperator,greatherThanEqualToOperator:Iu.compareOperator,lessThanOperator:Iu.compareOperator,lessThanEqualToOperator:Iu.compareOperator,notEqualToOperator:Iu.compareOperator,equalToOperator:Iu.compareOperator,notEquivalentToOperator:Iu.compareOperator,equivalentToOperator:Iu.compareOperator,bitwiseOrOperator:Iu.bitwiseOperator,bitwiseXorOperator:Iu.bitwiseOperator,bitwiseAndOperator:Iu.bitwiseOperator,logicAndOperator:Iu.logicOperator,logicOrOperator:Iu.logicOperator,assignmentOperator:Iu.updateOperator}),aa.add({IfStatement:fa({except:/^\s*({|else\b)/}),Block:da({closing:"}"}),SwitchBlock:da({closing:"}"}),BlockComment:()=>-1}),ma.add({Block:ga,SwitchBlock:ga,ArrayExpression:ga})]}),languageData:{closeBrackets:{brackets:["(","[","{",'"']},indentOnInput:/^\s*(?:case |default:|\{|\}|<\/)$/,commentTokens:{block:{open:"/*",close:"*/"},line:"//",doc:"///"}}}),mp=pp.data.of({autocomplete:rc([{label:"var",type:"keyword"},{label:"let",type:"keyword"},{label:"func",type:"function"}])});function gp(){return new Ho(pp,[mp])}const Tp="#272727",bp="#f3f9ff",Qp="#f5f5f5",Zp="#272727",Sp=[Jr.theme({"&.cm-editor":{color:Tp,fontSize:"1rem",flex:"1 1 auto",alignSelf:"stretch",minHeight:"0px",overflow:"hidden"},".cm-scroller":{fontFamily:"Roboto Mono, Courier New, monospace",overflow:"auto"},"&":{color:Tp,backgroundColor:"#ffffff"},".cm-content":{caretColor:Zp},".cm-cursor, .cm-dropCursor":{borderLeftColor:Zp},"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:"#d9d9d9"},".cm-panels":{backgroundColor:"#f5f5f5",color:Tp},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"#72a1ff59",outline:"1px solid #457dff"},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:"#6199ff2f"},".cm-activeLine":{backgroundColor:bp},".cm-selectionMatch":{backgroundColor:"#aafe661a"},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bad0f847",outline:"1px solid #515a6b"},".cm-gutters":{backgroundColor:"#f5f5f5",color:"#999999",border:"none"},".cm-activeLineGutter":{backgroundColor:"#e5f1fe"},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:Qp},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:Qp,borderBottomColor:Qp},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:bp,color:Tp}}}),Qu.define([{tag:Iu.link,textDecoration:"underline"},{tag:Iu.heading,textDecoration:"underline",fontWeight:"bold"},{tag:Iu.emphasis,fontStyle:"italic"},{tag:Iu.strong,fontWeight:"bold"},{tag:Iu.strikethrough,textDecoration:"line-through"},{tag:Iu.keyword,color:"#708"},{tag:[Iu.atom,Iu.bool,Iu.url,Iu.contentSeparator,Iu.labelName],color:"#219"},{tag:[Iu.literal,Iu.inserted],color:"#164"},{tag:[Iu.string,Iu.deleted],color:"#a11"},{tag:[Iu.regexp,Iu.escape,Iu.special(Iu.string)],color:"#e40"},{tag:Iu.definition(Iu.variableName),color:"#619bd3"},{tag:Iu.local(Iu.variableName),color:"#30a"},{tag:[Iu.typeName,Iu.namespace],color:"#085"},{tag:Iu.className,color:"#167"},{tag:[Iu.special(Iu.variableName),Iu.macroName],color:"#256"},{tag:Iu.definition(Iu.propertyName),color:"#00c"},{tag:Iu.comment,color:"#737f8c"},{tag:Iu.meta,color:"#999999"},{tag:Iu.invalid,color:"#f00"}])],vp="#d9d9d9",xp="#3f4044",kp="#262626",wp="#d9d9d9",yp=[Jr.theme({"&.cm-editor":{color:vp,fontSize:"1rem",flex:"1 1 auto",alignSelf:"stretch",minHeight:"0px",overflow:"hidden"},".cm-scroller":{fontFamily:"Roboto Mono, Courier New, monospace",overflow:"auto"},"&":{color:vp,backgroundColor:"#292a2c"},".cm-content":{caretColor:wp},".cm-cursor, .cm-dropCursor":{borderLeftColor:wp},"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection":{backgroundColor:"#4b4b4b"},".cm-panels":{backgroundColor:"#0a0a0a",color:vp},".cm-panels.cm-panels-top":{borderBottom:"2px solid black"},".cm-panels.cm-panels-bottom":{borderTop:"2px solid black"},".cm-searchMatch":{backgroundColor:"#72a1ff59",outline:"1px solid #457dff"},".cm-searchMatch.cm-searchMatch-selected":{backgroundColor:"#6199ff2f"},".cm-activeLine":{backgroundColor:xp},".cm-selectionMatch":{backgroundColor:"#aafe661a"},"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket":{backgroundColor:"#bad0f847",outline:"1px solid #515a6b"},".cm-gutters":{backgroundColor:"#404040",color:"#999999",border:"none"},".cm-activeLineGutter":{backgroundColor:"#676c73"},".cm-foldPlaceholder":{backgroundColor:"transparent",border:"none",color:"#ddd"},".cm-tooltip":{border:"none",backgroundColor:kp},".cm-tooltip .cm-tooltip-arrow:before":{borderTopColor:"transparent",borderBottomColor:"transparent"},".cm-tooltip .cm-tooltip-arrow:after":{borderTopColor:kp,borderBottomColor:kp},".cm-tooltip-autocomplete":{"& > ul > li[aria-selected]":{backgroundColor:xp,color:vp}}}),Qu.define([{tag:Iu.link,textDecoration:"underline"},{tag:Iu.heading,textDecoration:"underline",fontWeight:"bold"},{tag:Iu.emphasis,fontStyle:"italic"},{tag:Iu.strong,fontWeight:"bold"},{tag:Iu.strikethrough,textDecoration:"line-through"},{tag:Iu.keyword,color:"#b800d2"},{tag:[Iu.atom,Iu.bool,Iu.url,Iu.contentSeparator,Iu.labelName],color:"#6859cf"},{tag:[Iu.literal,Iu.inserted],color:"#559e81"},{tag:[Iu.string,Iu.deleted],color:"#ca6666"},{tag:[Iu.regexp,Iu.escape,Iu.special(Iu.string)],color:"#f17d4e"},{tag:Iu.definition(Iu.variableName),color:"#94b9dc"},{tag:Iu.local(Iu.variableName),color:"#9579d7"},{tag:[Iu.typeName,Iu.namespace],color:"#6fc8a7"},{tag:Iu.className,color:"#69a3ae"},{tag:[Iu.special(Iu.variableName),Iu.macroName],color:"#639bad"},{tag:Iu.definition(Iu.propertyName),color:"#7171d6"},{tag:Iu.comment,color:"#929da9"},{tag:Iu.meta,color:"#929da9"},{tag:Iu.invalid,color:"#ff8888"}])],Pp=[{color:"var(--end-peer0-dark)",light:"var(--end-peer0-light)"},{color:"var(--end-peer1-dark)",light:"var(--end-peer1-light)"},{color:"var(--end-peer2-dark)",light:"var(--end-peer2-light)"},{color:"var(--end-peer3-dark)",light:"var(--end-peer3-light)"},{color:"var(--end-peer4-dark)",light:"var(--end-peer4-light)"},{color:"var(--end-peer5-dark)",light:"var(--end-peer5-light)"},{color:"var(--end-peer6-dark)",light:"var(--end-peer6-light)"},{color:"var(--end-peer7-dark)",light:"var(--end-peer7-light)"}],Xp=Jr.baseTheme({".cm-peerCaret":{position:"relative",borderLeft:"1px solid black",borderRight:"1px solid black",marginLeft:"-1px",marginRight:"-1px",boxSizing:"border-box",display:"inline"},".cm-peerInfo":{position:"absolute",top:"-1.05em",left:"-1px",fontSize:".75rem",fontFamily:"serif",fontStyle:"normal",fontWeight:"normal",lineHeight:"normal",userSelect:"none",paddingLeft:"0.3rem",paddingRight:"0.3rem",zIndex:101,transition:"opacity .3s ease-in-out",backgroundColor:"inherit",borderRadius:"0.3rem 0.3rem 0.3rem 0rem"}});class Rp extends hi{constructor(t){super(),this.peerInfo=t,this.color=Pp[t.peerIdx],this.name=t.name||t.clientID}toDOM(){const t=document.createElement("div");return t.innerHTML=`<span class="cm-peerCaret" style="color: ${this.color.light};background-color: ${this.color.color}; border-color: ${this.color.color}"><div class='cm-peerInfo'>${this.name}</div></span>`,t.firstElementChild}eq(t){return t.color===this.color}compare(t){return t.color===this.color}updateDOM(){return!1}get estimatedHeight(){return-1}ignoreEvent(){return!0}}let Wp={};window.cm=Wp,Wp.anyLanguageSetup=[bs(),Rs(),es(),ds(),vt.allowMultipleSelections.of(!0),_a(),qu.fallback,$l(),Zh(),function(t={}){return[Pc,dc.of(t),Wc,Hc,Yc]}(),function(t){let e=(null==t?void 0:t.eventFilter)||(t=>t.altKey&&0==t.button);return Jr.mouseSelectionStyle.of(((t,i)=>e(i)?Ou(t,i):null))}(),function(t){let e=[hO,lO];return t&&e.push(rO.of(t)),e}(),Br.of([...yh,..._h,...YO,...Bs,...Ha,...ru,...Kc,...nd]),ia.of("    "),Br.of([ph])],Wp.swiftSetup=Wp.anyLanguageSetup.concat([gp()]),Wp.javascriptSetup=Wp.anyLanguageSetup.concat([i$()]),Wp.markdownSetup=Wp.anyLanguageSetup.concat([q_()]),Wp.jsonSetup=Wp.anyLanguageSetup.concat([Jd()]),Wp.htmlSetup=Wp.anyLanguageSetup.concat([P_()]),Wp.cssSetup=Wp.anyLanguageSetup.concat([O_()]),Wp.xmlSetup=Wp.anyLanguageSetup.concat([$p()]),Wp.minimalSetup=[bs(),Rs(),es(),ds(),vt.allowMultipleSelections.of(!0),_a(),qu.fallback,$l(),Zh(),Br.of([...yh,..._h,...YO,...Bs,...ru,...Kc,...nd]),ia.of("    "),Br.of([ph])],Wp.swiftMinimalSetup=Wp.minimalSetup.concat([gp()]),Wp.javascriptMinimalSetup=Wp.minimalSetup.concat([i$()]),Wp.markdownMinimalSetup=Wp.minimalSetup.concat([q_()]),Wp.jsonMinimalSetup=Wp.minimalSetup.concat([Jd()]),Wp.htmlMinimalSetup=Wp.minimalSetup.concat([P_()]),Wp.cssMinimalSetup=Wp.minimalSetup.concat([O_()]),Wp.xmlMinimalSetup=Wp.minimalSetup.concat([$p()]),Wp.minimalSetup=Wp.jsonMinimalSetup,Wp.endeavourJsonParse=function(t){try{return JSON.parse(t)}catch(e){return t}},Wp.endeavourSendErrorCount=0,Wp.broadcastStatus=function(t,e,i){let n=[];null!=t&&n.push(t),null!=e.documentUUIDs&&(n=n.concat(e.documentUUIDs)),n.forEach((function(t){null!=Wp.endeavourDocuments[t]&&Wp.endeavourDocuments[t].didError(i)}))},Wp.endeavourSend=function(t,e){let i=new XMLHttpRequest;i.onreadystatechange=function(){if(4==this.readyState){let n;"pull"==t.command?Wp.endeavourIsPulling=!1:"push"==t.command&&(Wp.endeavourIsPushing=!1);let r=i.getResponseHeader("Service-Response"),s=Wp.endeavourJsonParse(r);if(null!=s&&(n=Wp.endeavourDocuments[s.documentUUID]),200!=this.status)Wp.endeavourSendErrorCount+=1,null!=n&&n.didError(i.responseText);else{Wp.endeavourSendErrorCount=0;let e=Wp.endeavourJsonParse(i.responseText);switch(t.command){case"pull":n.didPull(s,e,i.responseText);break;case"push":n.didPush(s,e,i.responseText)}}if(Wp.endeavourSendErrorCount>6)return Wp.broadcastStatus(e,t,"Disconnected from server"),void(Wp.endeavourIsPulling=!1);"pull"==t.command&&Wp.endeavourPullUpdates()}},i.open("POST","/");let n=sessionStorage.getItem("Session-Id");null!=n&&i.setRequestHeader("Session-Id",n),i.setRequestHeader("Pragma","no-cache"),i.setRequestHeader("Expires","-1"),i.setRequestHeader("Cache-Control","no-cache"),i.setRequestHeader("Content-Type","application/json;charset=UTF-8"),i.send(JSON.stringify(t))},Wp.endeavourDocuments={},Wp.endeavourIsPushing=!1,Wp.endeavourPushUpdates=function(t,e,i){if(0==Wp.endeavourIsPushing){let n={service:"EndeavourService",command:"push",documentUUID:t.documentUUID,clientID:t.clientID(),version:t.documentVersion()};e.length>0&&(n.updates=e),null!=i&&(n.cursors={clientID:t.clientID(),ranges:i}),(n.cursors||n.updates)&&(Wp.endeavourIsPushing=!0,Wp.endeavourSend(n,t.documentUUID))}},Wp.endeavourIsPulling=!1,Wp.endeavourPullUpdates=function(){if(0==Wp.endeavourIsPulling){var t=[],e=[];for(let i in Wp.endeavourDocuments){let n=Wp.endeavourDocuments[i];t.push(i),e.push(n.documentVersion())}let i={service:"EndeavourService",command:"pull",documentUUIDs:t,documentVersions:e};Wp.endeavourIsPulling=!0,Wp.endeavourSend(i)}},Wp.removeOne=function(t,e){var i=t.indexOf(e);return i>-1&&t.splice(i,1),t},Wp.endeavourExtension=function(t,e){let i=t.documentUUID,n=parseInt(t.version),r=Ji.fromClass(class{pushing=!1;constructor(n){Wp.endeavourPullUpdates(),this.statusCallback=e,this.documentUUID=i,this.view=n,this.peers=[],this.cursors=[],Wp.endeavourDocuments[this.documentUUID]=this,e(t,{documentUUID:this.documentUUID,version:this.documentVersion(),clientID:this.clientID(),peers:this.peers}),this.decorations=this.getDeco(n),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(t=>{this.decorations=this.getDeco(this.view)})),Wp.endeavourPushUpdates(this,[],[])}update(t){if(null==t||t.docChanged||t.selectionSet){let e,i=Wt(this.view.state).map((function(t){return{changes:t.changes.toJSON(),clientID:t.clientID}}));null!=t&&null!=t.state&&null!=t.state.selection&&(e=t.state.selection.ranges),Wp.endeavourPushUpdates(this,i,e)}}documentVersion(){return this.view.state.field(Xt).version||0}clientID(){return this.view.state.facet(yt).clientID}didPush(t,e,i){Wt(this.view.state).length&&setTimeout((()=>this.update(void 0)),100)}didPull(t,i,n){if("cursors"==t.command){let t=Wp.endeavourJsonParse(n);this.peers=t.peers,this.cursors=t.cursors,this.decorations=this.getDeco(this.view),this.peers.forEach((function(t){null==t.name&&(t.name=t.clientID),t.colors=Pp[t.peerIdx],null==t.colors&&(t.colors=Pp[0])})),this.view.dispatch({})}if("save"==t.command){Wp.endeavourIsPushing=!0,this.view.dispatch({changes:{from:0,to:this.view.state.doc.length,insert:n}});for(let t=0;t<this.view.state.values.length;t++){let e=this.view.state.values[t];null!=e&&null!=e.version&&null!=e.unconfirmed&&(e.version=0,e.unconfirmed.length=0)}Wp.endeavourIsPushing=!1}if("update"==t.command){let t=i.map((function(t){return{changes:v.fromJSON(t.changes),clientID:t.clientID}}));this.view.dispatch(function(t,e){let{version:i,unconfirmed:n}=t.field(Xt),{clientID:r}=t.facet(yt);i+=e.length;let s=0;for(;s<e.length&&e[s].clientID==r;)s++;if(s&&(n=n.slice(s),e=e.slice(s)),!e.length)return t.update({annotations:[Pt.of(new wt(i,n))]});let o=e[0].changes,a=e[0].effects||[];for(let t=1;t<e.length;t++){let i=e[t];a=dt.mapEffects(a,i.changes),i.effects&&(a=a.concat(i.effects)),o=o.compose(i.changes)}return n.length&&(n=n.map((t=>{let e=t.changes.map(o);return o=o.map(t.changes,!0),new kt(t.origin,e,dt.mapEffects(t.effects,o),r)})),a=dt.mapEffects(a,n.reduce(((t,e)=>t.compose(e.changes)),v.empty(n[0].changes.length)))),t.update({changes:o,effects:a,annotations:[$t.addToHistory.of(!1),$t.remote.of(!0),Pt.of(new wt(i,n))],filter:!1})}(this.view.state,t))}null!=e&&e(t,{documentUUID:this.documentUUID,version:this.documentVersion(),clientID:this.clientID(),peers:this.peers})}didError(i){null!=e&&e(t,{documentUUID:this.documentUUID,version:this.documentVersion(),clientID:this.clientID(),peers:this.peers,error:i})}getDeco(t){let e=[],i=this,n=function(t){let e=t.indexOf("#");e>=0&&(t=t.slice(e+1));var i=0;return 6==t.length&&(i=255+(parseInt(t,16)<<8)),8==t.length&&(i=parseInt(t,16)),[i>>24&255,i>>16&255,i>>8&255,i>>0&255]};this.cursors.forEach((function(t){let n;if(i.peers.forEach((function(e){e.clientID==t.clientID&&(n=e)})),null==n||n.clientID==i.clientID())return;let r=function(t){return ci.widget({widget:new Rp(t)})}(n);null!=t.ranges&&t.ranges.forEach((function(t){null==(t=R.fromJSON(t)).value&&(t.value={}),null==t.value.startSide&&(t.value.startSide=0),e.push({peerInfo:n,peer:r,range:t})}))})),e.sort((function(t,e){return t.range.from-e.range.from||t.range.value.startSide-e.range.value.startSide}));let r=[],s={},o=[],a=getComputedStyle(document.documentElement);for(let{from:i,to:l}of t.visibleRanges)for(let h=i;h<=l;){let i=t.state.doc.lineAt(h);e.forEach((function(t){let e=t.range.from,l=t.range.to;e>=i.from&&e<=i.to&&0==o.includes(t.peerInfo.peerIdx)&&(o.push(t.peerInfo.peerIdx),r.push({from:e,to:e,value:t.peer,label:"cursor",line:i.number}));let h=-1,O=-1;if(e>=i.from&&e<=i.to&&(h=e),l>=i.from&&l<=i.to&&(O=l),-1!=h&&-1!=O||-1==h&&-1!=O||-1!=h&&-1==O||e<i.from&&l>i.to){let e=t.peerInfo.peerIdx,r=i.from,o=a.getPropertyValue(`--end-peer${e}-light`),l=n(o),h=s[r];null==h?s[r]=[l[0],l[1],l[2],l[3],1]:(h[0]+=l[0],h[1]+=l[1],h[2]+=l[2],h[3]+=l[3],h[4]+=1)}})),h=i.to+1}for(const t in s){let e=parseInt(t),i=s[t];i[0]/=i[4],i[1]/=i[4],i[2]/=i[4];let n=ci.line({attributes:{style:`background-color: rgba(${i[0]},${i[1]},${i[2]},0.6)`}});r.push({from:e,to:e,value:n})}return ci.set(r,!0)}destroy(){Wp.endeavourDocuments[this.documentUUID]=void 0}},{decorations:t=>t.decorations});return[Rt({startVersion:n}),Xp,r]},Wp.CreateEditor=function(t,e,i="",n=!0,r=!1){let s=document.getElementById(t);n?(e.push(function(t={}){return[ja.of(t),ya(),Ga]}()),e.push(function(t={}){let e=Object.assign(Object.assign({},rl),t),i=new sl(e,!0),n=new sl(e,!1),r=Ji.fromClass(class{constructor(t){this.from=t.viewport.from,this.markers=this.buildMarkers(t)}update(t){(t.docChanged||t.viewportChanged||t.startState.facet(Ko)!=t.state.facet(Ko)||t.startState.field(Ba,!1)!=t.state.field(Ba,!1))&&(this.markers=this.buildMarkers(t.view))}buildMarkers(t){let e=new qt;for(let r of t.viewportLineBlocks){let s=Fa(t.state,r.from,r.to)?n:ba(t.state,r.from,r.to)?i:null;s&&e.add(r.from,r.from,s)}return e.finish()}}),{domEventHandlers:s}=e;return[r,xa({class:"cm-foldGutter",markers(t){var e;return(null===(e=t.plugin(r))||void 0===e?void 0:e.markers)||It.empty},initialSpacer:()=>new sl(e,!1),domEventHandlers:Object.assign(Object.assign({},s),{click:(t,e,i)=>{if(s.click&&s.click(t,e,i))return!0;let n=Fa(t.state,e.from,e.to);if(n)return t.dispatch({effects:za.of(n)}),!0;let r=ba(t.state,e.from,e.to);return!!r&&(t.dispatch({effects:qa.of(r)}),!0)}})}),il()]}()),e.push(Aa),e.push(xs)):(e.push(Jr.editable.of(!1)),e.push(vt.readOnly.of(!0)));var o=[].concat(e),a=[].concat(e);o.push(yp),a.push(Sp),e=isDarkMode()||r?o:a;let l=new Jr({state:vt.create({doc:d.of(i.split("\n")),extensions:e,tabSize:4}),parent:s});return print(r),0==r&&window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(t=>{t.matches?l.dispatch({effects:dt.reconfigure.of(o)}):l.dispatch({effects:dt.reconfigure.of(a)})})),l}}();

"""###
private let compressedEditorBundleJs = Data(base64Encoded:"")!

public extension EndeavourPamphlet.Public.Endeavour {
    #if DEBUG
    static func Robotomono400Woff() -> Data {
        let fileOnDiskPath = "/Users/rjbowli/Development/chimerasw/Endeavour/Resources/public/endeavour/robotomono_400.woff"
        if let contents = try? Data(contentsOf:URL(fileURLWithPath: fileOnDiskPath)) {
            return contents
        }
        return Data()
    }
    #else
    static func Robotomono400Woff() -> Data {
        return uncompressedRobotomono400Woff
    }
    #endif
}

private let uncompressedRobotomono400Woff = Data(base64Encoded:"")!

